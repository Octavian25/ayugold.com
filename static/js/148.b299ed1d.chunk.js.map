{"version":3,"sources":["TotalanMenu/Components/FormModalTimbangan.jsx","firebase.js","GetTimbangan.js"],"names":["currencyMask","createNumberMask","prefix","suffix","locale","renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","maxLength","server","process","FormModalTimbangan","props","handleChange","e","result_explode","target","value","split","setState","kodeJenis","kadarCetak","kadarJual","change","state","listBarang","listBarangPerhiasan","Axios","get","then","res","data","catch","err","console","log","getTimbanganGross","this","netto","onSubmit","handleSubmit","name","component","onChange","key","jenisBarang","map","list","namaJenis","setNetto","onLoad","noFaktur","Component","reduxForm","form","enableReinitialize","selector","formValueSelector","connect","gross","kadarTransaksi","pkg","parseFloat","toFixed","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","namaTimbangan","localStorage","getItem","enableTimbangan","getTimbangan","database","ref","on","snapshot","val","nilai","getTimbanganValidasi","coba","Object","keys"],"mappings":"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","file":"static/js/148.b299ed1d.chunk.js","sourcesContent":["import Axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport { getTimbanganGross } from \"../../GetTimbangan\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nclass FormModalTimbangan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listBarang: [],\r\n      listBarangPerhiasan: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Axios.get(server + \"subcategorys2?kodeKelompok=CIOK\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listBarang: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    Axios.get(server + \"subcategorys2?kodeKelompok=PERHIASAN\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listBarangPerhiasan: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    getTimbanganGross(this.props.change);\r\n  }\r\n\r\n  handleChange = (input) => (e) => {\r\n    var supp = e.target.value\r\n      ? e.target.value\r\n      : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n      kadarCetak: result_explode[1],\r\n      kadarJual: result_explode[2],\r\n    });\r\n    this.props.change(\"kadarTransaksi\", result_explode[2]);\r\n    this.props.change(\"keterangan\", result_explode[3]);\r\n  };\r\n  setNetto() {\r\n    this.props.change(\r\n      \"netto\",\r\n      this.props.netto === \"NaN\" ? 0 : this.props.netto\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-3\">\r\n              <label htmlFor=\"\">Kode barang</label>\r\n              <Field\r\n                name=\"kodeBarang\"\r\n                className=\"form-control\"\r\n                component=\"select\"\r\n                onChange={this.handleChange()}\r\n              >\r\n                <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                  SILAHKAN PILIH\r\n                </option>\r\n                {this.props.jenisBarang === \"RONGSOK\"\r\n                  ? this.state.listBarang.map((list) => (\r\n                      <option\r\n                        value={\r\n                          list.kodeJenis +\r\n                          \"|\" +\r\n                          list.kadarCetak +\r\n                          \"|\" +\r\n                          list.kadarJual +\r\n                          \"|\" +\r\n                          list.namaJenis\r\n                        }\r\n                        key={list.kodeJenis}\r\n                      >\r\n                        {list.namaJenis}\r\n                      </option>\r\n                    ))\r\n                  : this.state.listBarangPerhiasan.map((list) => (\r\n                      <option\r\n                        value={\r\n                          list.kodeJenis +\r\n                          \"|\" +\r\n                          list.kadarCetak +\r\n                          \"|\" +\r\n                          list.kadarJual +\r\n                          \"|\" +\r\n                          list.namaJenis\r\n                        }\r\n                        key={list.kodeJenis}\r\n                      >\r\n                        {list.namaJenis}\r\n                      </option>\r\n                    ))}\r\n              </Field>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <Field\r\n                name=\"keterangan\"\r\n                label=\"Keterangan\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-lg-3\">\r\n              <Field\r\n                name=\"kadarTransaksi\"\r\n                label=\"Kadar(%)\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                readOnly={true}\r\n                onChange={this.setNetto()}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <Field\r\n                name=\"gross\"\r\n                label=\"Gross(Gr)\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                onChange={this.setNetto()}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <Field\r\n                name=\"pkg\"\r\n                label=\"Package(Gr)\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                onChange={this.setNetto()}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <Field\r\n                name=\"netto\"\r\n                label=\"Netto\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-3 d-none\">\r\n              <Field\r\n                name=\"noFaktur\"\r\n                label=\"Netto\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                readOnly={true}\r\n                onLoad={() =>\r\n                  this.props.change(\"noFaktur\", this.props.noFaktur)\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <label htmlFor=\"\">Ongkos (Rp)</label>\r\n              <Field\r\n                name=\"rp\"\r\n                type=\"telp\"\r\n                className=\"form-control\"\r\n                component=\"input\"\r\n                {...currencyMask}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"text-right\">\r\n                <button className=\"btn btn-primary\" type=\"submit\">\r\n                  Simpan\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormModalTimbangan = reduxForm({\r\n  form: \"FormModalTimbangan\",\r\n  enableReinitialize: true,\r\n})(FormModalTimbangan);\r\nconst selector = formValueSelector(\"FormModalTimbangan\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { gross, kadarTransaksi, pkg } = selector(\r\n    state,\r\n    \"gross\",\r\n    \"kadarTransaksi\",\r\n    \"pkg\"\r\n  );\r\n  return {\r\n    netto: (\r\n      parseFloat(gross ? gross : 0) -\r\n      parseFloat(pkg ? pkg : 0) * (parseFloat(kadarTransaksi) / 100)\r\n    ).toFixed(3),\r\n  };\r\n})(FormModalTimbangan);\r\n","import firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDZH49wStpEG3wK8IdFwUpt9QHfbliYtdk\",\r\n  authDomain: \"timbangannagatech.firebaseapp.com\",\r\n  databaseURL: \"https://timbangannagatech-default-rtdb.firebaseio.com\",\r\n  projectId: \"timbangannagatech\",\r\n  storageBucket: \"timbangannagatech.appspot.com\",\r\n  messagingSenderId: \"266997300577\",\r\n  appId: \"1:266997300577:web:8f4d8441b9267ed6d3d920\",\r\n  measurementId: \"G-SXVC6P8KNE\",\r\n};\r\n\r\nexport default firebase.initializeApp(firebaseConfig);\r\n","import firebase from \"./firebase\";\r\n\r\nconst namaTimbangan = localStorage.getItem(\"namaTimbangan\");\r\nlet enableTimbangan = localStorage.getItem(\"enableTimbangan\");\r\nexport const getTimbangan = (props) => {\r\n  if (enableTimbangan) {\r\n    firebase\r\n      .database()\r\n      .ref(namaTimbangan)\r\n      .on(\"value\", (snapshot) => {\r\n        let data = snapshot.val();\r\n        props(\"bruto\", data.nilai);\r\n        console.log(data.nilai);\r\n      });\r\n  } else {\r\n    console.log(\"TIMBANGAN TIDAK AKTIF\");\r\n  }\r\n};\r\nexport const getTimbanganValidasi = (props) => {\r\n  if (enableTimbangan) {\r\n    firebase\r\n      .database()\r\n      .ref(namaTimbangan)\r\n      .on(\"value\", (snapshot) => {\r\n        let data = snapshot.val();\r\n        props(\"jumlah\", data.nilai);\r\n        console.log(data.nilai);\r\n        let coba = Object.keys(data).map((list) => data[list]);\r\n        console.log(coba);\r\n      });\r\n  } else {\r\n    console.log(\"TIMBANGAN TIDAK AKTIF\");\r\n  }\r\n};\r\nexport const getTimbanganGross = (props) => {\r\n  if (enableTimbangan) {\r\n    firebase\r\n      .database()\r\n      .ref(namaTimbangan)\r\n      .on(\"value\", (snapshot) => {\r\n        let data = snapshot.val();\r\n        props(\"gross\", data.nilai);\r\n        console.log(data.nilai);\r\n        let coba = Object.keys(data).map((list) => data[list]);\r\n        console.log(coba);\r\n      });\r\n  } else {\r\n    console.log(\"TIMBANGAN TIDAK AKTIF\");\r\n  }\r\n};\r\n"],"sourceRoot":""}