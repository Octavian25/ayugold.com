{"version":3,"sources":["Laporan/Component/formSupplier.jsx","Laporan/Component/LaporanHutangSupplier.jsx","Laporan/Component/LaporanHutangSupplierCard.jsx","Laporan/Component/LaporanHutangSupplierSummary.jsx","Laporan/Component/LaporanPembayaranSupplier.jsx","Laporan/Component/LaporanPrintPenerimaanSupplier.jsx","Laporan/Component/LaporanPrintPenerimaanSupplierRekap.jsx","Laporan/Component/LaporanPrintReturnSupplier.jsx","Laporan/LaporanSupplier.jsx","GlobalComponent/function.jsx","GlobalComponent/notification.jsx"],"names":["formSupplier","props","inputChange","input","e","setState","target","value","state","response","kode_perhiasan","tipeOmzet","this","dispatch","getsupplierList","from","onSubmit","handleSubmit","className","Field","name","component","ReanderSelect","options","listsupplier","map","list","kode_supplier","nama_supplier","type","label","placeholder","ReanderField","hasil","htmlFor","onChange","key","Component","reduxForm","form","enableReinitialize","connect","provinsi","supplier","LaporanHutangSupplier","data","doc","jsPDF","tableRows","setFontSize","text","forEach","item","index","rows","kode_ext","total_netto","parseFloat","total_rp","toLocaleString","push","autoTable","head","content","body","startY","theme","rowPageBreak","pageBreak","margin","top","bodyStyles","lineWidth","lineColor","headStyles","fillColor","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","autoPrint","embed","output","x","window","open","document","write","LaporanHutangSupplierCard","tableColumn","colSpan","detail","tanggal","awal_netto","awal_rp","in_netto","in_rp","out_netto","out_rp","akhir_netto","akhir_rp","keterangan","no_ref","no_ext","LaporanHutangSupplierSummary","footRows","barang","foot","LaporanPembayaranSupplier","console","log","no_bon","jumlah_hutang","total_putus_titip","total_denda","total_hutang","total_pembayaran","lebih_pembayaran","detail_bayar","bayar","bayar_cash","bayar_trf","bayar_giro","bayar_ciok","bayar_rongsok","LaporanPrintPenerimaanSupplier","row1isi","row2isi","username","validby","finalY","tanggal_invoice","detail_barang","no_urut","kode_jenis","kadar_cetak","kadar_beli","qty","plastik","kulit","pkg","gross","bruto","netto","ongkos_rp","footer","total_bruto","autoTableEndPosY","string","LaporanPrintPenerimaanSupplierRekap","total_netto_ext","LaporanPrintReturnSupplier","row1name","title","table","JSON","parse","localStorage","getItem","columTable","ticket","i","barangDetails","barangData","noFaktur","noBon","tanggalBarang","kodeJenis","kadarCetak","kadarTransaksi","rp","columnStyles","0","columnWidth","1","4","lastAutoTable","close","serverNonMaster","process","REACT_APP_BACKEND_URL_NON_MASTER","LaporanSupplier","listLaporan","AxiosMasterGet","tanggal_awal","tanggal_akhir","then","res","getUserData","user_name","getToday","catch","err","gagal","Axios","get","params","tglFrom","tglTo","kodeLokasiFrom","kodelokasiTo","setItem","stringify","type_faktur","type_bayar","href","data-toggle","aria-expanded","id","handlePenerimaan","handleReturn","handleHutang","handleKartuHutang","handleOmzet","handleTransaksi","handleTolakan","handleTitip","Date","getFullYear","getMonth","slice","getDate","SkeletonLoading","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","ToastError","Promise","resolve","reject","fire","icon","readOnly","autoFocus","ref","loading","meta","touched","error","warning","onKeyPress","event","preventDefault","getOptions","disabled","search"],"mappings":"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","file":"static/js/86.c58dafa0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { getsupplierList } from \"../../actions/supplierAction\";\r\nimport {\r\n  ReanderField,\r\n  ReanderSelect,\r\n} from \"../../GlobalComponent/notification\";\r\n\r\nclass formSupplier extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      response: \"\",\r\n      kode_perhiasan: \"\",\r\n      tipeOmzet: \"PERTAHUN\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getsupplierList());\r\n  }\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    switch (this.props.from) {\r\n      case \"penerimaan\":\r\n        return (\r\n          <form onSubmit={this.props.handleSubmit}>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"kode_supplier\"\r\n                  component={ReanderSelect}\r\n                  options={this.props.listsupplier.map((list) => {\r\n                    let data = {\r\n                      value: list.kode_supplier,\r\n                      name: list.nama_supplier,\r\n                    };\r\n                    return data;\r\n                  })}\r\n                  type=\"text\"\r\n                  label=\"Kode Supplier\"\r\n                  placeholder=\"Masukan Kode Supplier\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"type\"\r\n                  component={ReanderSelect}\r\n                  options={[\r\n                    {\r\n                      value: \"DETAIL\",\r\n                      name: \"DETAIL\",\r\n                    },\r\n                    {\r\n                      value: \"REKAP\",\r\n                      name: \"REKAP\",\r\n                    },\r\n                  ]}\r\n                  type=\"text\"\r\n                  label=\"Type Laporan\"\r\n                  placeholder=\"Masukan Type Laporan\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"tanggal_awal\"\r\n                  label=\"Mulai Tanggal\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"tanggal_akhir\"\r\n                  label=\"Sampai Dengan\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"text-right\">\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                    Print\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n\r\n      case \"hutang\":\r\n        return (\r\n          <form onSubmit={this.props.handleSubmit}>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"kode_supplier\"\r\n                  component={ReanderSelect}\r\n                  options={this.props.listsupplier.map((hasil) => {\r\n                    let data = {\r\n                      value: hasil.kode_supplier,\r\n                      name: hasil.nama_supplier,\r\n                    };\r\n                    return data;\r\n                  })}\r\n                  type=\"text\"\r\n                  label=\"Kode Supplier\"\r\n                  placeholder=\"Masukan Kode Supplier\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"type\"\r\n                  component={ReanderSelect}\r\n                  options={[\r\n                    {\r\n                      value: \"NORMAL\",\r\n                      name: \"NORMAL\",\r\n                    },\r\n                    {\r\n                      value: \"CARD\",\r\n                      name: \"CARD\",\r\n                    },\r\n                    {\r\n                      value: \"SUMMARY\",\r\n                      name: \"SUMMARY\",\r\n                    },\r\n                  ]}\r\n                  type=\"text\"\r\n                  label=\"Type Laporan\"\r\n                  placeholder=\"Masukan Type Laporan\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"tanggal_awal\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                  label=\"Tanggal Awal\"\r\n                  placeholder=\"Masukan Tanggal Awal\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"tanggal_akhir\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                  label=\"Tanggal Akhir\"\r\n                  placeholder=\"Masukan Tanggal Akhir\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"text-right\">\r\n                  <button className=\"btn btn-primary\">Print</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n\r\n      case \"omzet\":\r\n        return (\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-4\">\r\n              <label htmlFor=\"\">Tipe</label>\r\n              <Field\r\n                name=\"tipe\"\r\n                className=\"form-control\"\r\n                component=\"select\"\r\n                onChange={this.inputChange(\"tipeOmzet\")}\r\n              >\r\n                <option value=\"PERTAHUN\" key=\"PERTAHUN\">\r\n                  PERHATUN\r\n                </option>\r\n                <option value=\"PERBULAN\" key=\"PERBULAN\">\r\n                  PERBULAN\r\n                </option>\r\n                <option value=\"PERTANGGAL\" key=\"PERTANGGAL\">\r\n                  PERTANGGAL\r\n                </option>\r\n              </Field>\r\n            </div>\r\n            {this.state.tipeOmzet === \"PERTAHUN\" ? (\r\n              <>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"tahunAwal\"\r\n                    label=\"Tahun Awal\"\r\n                    className=\"form-control\"\r\n                    component={ReanderField}\r\n                    type=\"date\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"tahunAkhir\"\r\n                    label=\"Sampai Dengan\"\r\n                    className=\"form-control\"\r\n                    component={ReanderField}\r\n                    type=\"date\"\r\n                  />\r\n                </div>\r\n              </>\r\n            ) : this.state.tipeOmzet === \"PERBULAN\" ? (\r\n              <>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"bulanAwal\"\r\n                    label=\"Bulan Awal\"\r\n                    className=\"form-control\"\r\n                    component={ReanderField}\r\n                    type=\"date\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"bulanAkhir\"\r\n                    label=\"Sampai Dengan\"\r\n                    className=\"form-control\"\r\n                    component={ReanderField}\r\n                    type=\"date\"\r\n                  />\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"dateAwal\"\r\n                    label=\"Tanggal Awal\"\r\n                    className=\"form-control\"\r\n                    component={ReanderField}\r\n                    type=\"date\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"dateAkhir\"\r\n                    label=\"Sampai Dengan\"\r\n                    className=\"form-control\"\r\n                    component={ReanderField}\r\n                    type=\"date\"\r\n                  />\r\n                </div>\r\n              </>\r\n            )}\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"text-right\">\r\n                <button className=\"btn btn-primary\">Print</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case \"transaksi\":\r\n        return (\r\n          <form onSubmit={this.props.handleSubmit}>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"form-group\">\r\n                  <Field\r\n                    name=\"kode_supplier\"\r\n                    component={ReanderSelect}\r\n                    options={this.props.listsupplier.map((list) => {\r\n                      let data = {\r\n                        value: list.kode_supplier,\r\n                        name: list.nama_supplier,\r\n                      };\r\n                      return data;\r\n                    })}\r\n                    type=\"text\"\r\n                    label=\"Kode Supplier\"\r\n                    placeholder=\"Masukan Kode Supplier\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-lg-4\">\r\n                <Field\r\n                  name=\"tglFrom\"\r\n                  label=\"Mulai Tanggal\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <Field\r\n                  name=\"tglTo\"\r\n                  label=\"Sampai Dengan\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"text-right\">\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                    Print\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nformSupplier = reduxForm({\r\n  form: \"formSupplier\",\r\n  enableReinitialize: true,\r\n})(formSupplier);\r\nexport default connect((state) => {\r\n  return {\r\n    listsupplier: state.provinsi.supplier,\r\n  };\r\n})(formSupplier);\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanHutangSupplier = (data) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n\r\n  let tableColumn = [\r\n    [\r\n      {\r\n        content: `KODE SUPPLIER`,\r\n      },\r\n      {\r\n        content: `KODE EXT`,\r\n      },\r\n      {\r\n        content: `NAMA SUPPLIER`,\r\n      },\r\n      {\r\n        content: `TOTAL NETTO`,\r\n      },\r\n      {\r\n        content: `TOTAL RP`,\r\n      },\r\n    ],\r\n  ];\r\n\r\n  // let data = [\r\n  //   {\r\n  //     kode_supplier: \"SP001\",\r\n  //     nama_supplier: \"SUPPLIER\",\r\n  //     detail: [\r\n  //       {\r\n  //         tanggal_invoice: \"2021-03-01\",\r\n  //         no_bon: \"CB44C4-F832-031A-3026-EB855A3D777F\",\r\n  //         detail_barang: [\r\n  //           {\r\n  //             no_urut: 1,\r\n  //             kode_jenis: \"990PER107\",\r\n  //             keterangan: \"990 PER 107\",\r\n  //             kadar_cetak: 100,\r\n  //             kadar_beli: 99,\r\n  //             kode_barcode: \"-\",\r\n  //             qty: 2,\r\n  //             plastik: 2,\r\n  //             kulit: 0,\r\n  //             pkg: 5,\r\n  //             gross: 10,\r\n  //             bruto: 5,\r\n  //             netto: 4.95,\r\n  //             ongkos_rp: 100000,\r\n  //           },\r\n  //           {\r\n  //             no_urut: 2,\r\n  //             kode_jenis: \"GLKEPRAS78\",\r\n  //             keterangan: \"GLKEPRAS 78\",\r\n  //             kadar_cetak: 78,\r\n  //             kadar_beli: 100,\r\n  //             kode_barcode: \"-\",\r\n  //             qty: 5,\r\n  //             plastik: 5,\r\n  //             kulit: 0,\r\n  //             pkg: 5,\r\n  //             gross: 60,\r\n  //             bruto: 55,\r\n  //             netto: 55,\r\n  //             ongkos_rp: 100000,\r\n  //           },\r\n  //         ],\r\n  //         total_bruto: 60,\r\n  //         total_netto: 59.95,\r\n  //         total_netto_ext: 59.95,\r\n  //         total_rp: 200000,\r\n  //       },\r\n  //     ],\r\n  //   },\r\n  // ];\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN HUTANG SUPPLIER\", 14, 15);\r\n  doc.setFontSize(10);\r\n  //   //row 1\r\n  //   doc.text(`Supplier : ${row1isi}`, 14, 25);\r\n  //   //   row 2\r\n  //   doc.text(`Tanggal\t: ${row2isi}`, 120, 25);\r\n  data.forEach((item, index) => {\r\n    let rows = [\r\n      item.kode_supplier,\r\n      item.kode_ext,\r\n      item.nama_supplier,\r\n      item.total_netto,\r\n      parseFloat(item.total_rp).toLocaleString(\"id-ID\"),\r\n    ];\r\n    tableRows.push(rows);\r\n  });\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    startY: 30,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    pageBreak: \"avoid\",\r\n    margin: { top: 20 },\r\n    bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n    headStyles: {\r\n      lineWidth: 0.02,\r\n      lineColor: \"#000\",\r\n      fillColor: [212, 212, 211],\r\n    },\r\n  });\r\n\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanHutangSupplier;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanHutangSupplierCard = (data) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN HUTANG SUPPLIER \", 14, 15);\r\n  doc.setFontSize(10);\r\n  //   //row 1\r\n  //   doc.text(`Supplier : ${row1isi}`, 14, 25);\r\n  //   //   row 2\r\n  //   doc.text(`Tanggal\t: ${row2isi}`, 120, 25);\r\n  data.forEach((item, index) => {\r\n    let tableColumn = [\r\n      [\r\n        {\r\n          content: `KODE SUPPLIER : ${item.kode_supplier}`,\r\n          colSpan: 5,\r\n        },\r\n        {\r\n          content: `NAMA SUPPLIER : ${item.nama_supplier}`,\r\n          colSpan: 5,\r\n        },\r\n      ],\r\n      [\r\n        {\r\n          content: `TANGGAL`,\r\n        },\r\n        {\r\n          content: `AWAL\\nNETTO`,\r\n        },\r\n        {\r\n          content: `AWAL\\nRP`,\r\n        },\r\n        {\r\n          content: `IN\\nNETTO`,\r\n        },\r\n        {\r\n          content: `IN\\nRP`,\r\n        },\r\n        {\r\n          content: `OUT\\nNETTO`,\r\n        },\r\n        {\r\n          content: `OUT\\nRP`,\r\n        },\r\n        {\r\n          content: `AKHIR\\nNETTO`,\r\n        },\r\n        {\r\n          content: `AKHIR\\nRP`,\r\n        },\r\n        {\r\n          content: `KETERANGAN`,\r\n        },\r\n        {\r\n          content: `NO REF`,\r\n        },\r\n        {\r\n          content: `NO BON`,\r\n        },\r\n      ],\r\n    ];\r\n    item.detail.forEach((hasil) => {\r\n      let rows = [\r\n        hasil.tanggal,\r\n        hasil.awal_netto,\r\n        hasil.awal_rp,\r\n        hasil.in_netto,\r\n        hasil.in_rp,\r\n        hasil.out_netto,\r\n        hasil.out_rp,\r\n        hasil.akhir_netto,\r\n        hasil.akhir_rp,\r\n        hasil.keterangan,\r\n        hasil.no_ref,\r\n        hasil.no_ext,\r\n      ];\r\n      tableRows.push(rows);\r\n    });\r\n    doc.autoTable({\r\n      head: tableColumn,\r\n      body: tableRows,\r\n      startY: 30,\r\n      theme: \"plain\",\r\n      rowPageBreak: \"avoid\",\r\n      pageBreak: \"avoid\",\r\n      margin: { top: 20 },\r\n      bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n      headStyles: {\r\n        lineWidth: 0.02,\r\n        lineColor: \"#000\",\r\n        fillColor: [212, 212, 211],\r\n      },\r\n    });\r\n  });\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanHutangSupplierCard;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanHutangSupplierSummary = (data) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let tableColumn = [];\r\n\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `KODE SUPPLIER`,\r\n      },\r\n      {\r\n        content: `NAMA SUPPLIER`,\r\n      },\r\n      {\r\n        content: `AWAL NETTO`,\r\n      },\r\n      {\r\n        content: `AWAL RP`,\r\n      },\r\n      {\r\n        content: `IN NETTO`,\r\n      },\r\n      {\r\n        content: `IN RP`,\r\n      },\r\n      {\r\n        content: `OUT NETTO`,\r\n      },\r\n      {\r\n        content: `OUT RP`,\r\n      },\r\n      {\r\n        content: `AKHIR NETTO`,\r\n      },\r\n      {\r\n        content: `AKHIR RP`,\r\n      },\r\n    ],\r\n  ];\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN SUMMARY HUTANG SUPPLIER\", 14, 15);\r\n  doc.setFontSize(10);\r\n\r\n  data.forEach((barang, index) => {\r\n    let rows = [\r\n      barang.kode_supplier,\r\n      barang.nama_supplier,\r\n      barang.awal_netto,\r\n      parseFloat(barang.awal_rp).toLocaleString(\"id-ID\"),\r\n      barang.in_netto,\r\n      parseFloat(barang.in_rp).toLocaleString(\"id-ID\"),\r\n      barang.out_netto,\r\n      parseFloat(barang.out_rp).toLocaleString(\"id-ID\"),\r\n      barang.akhir_netto,\r\n      parseFloat(barang.akhir_rp).toLocaleString(\"id-ID\"),\r\n    ];\r\n    tableRows.push(rows);\r\n    footRows = [];\r\n  });\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    foot: footRows,\r\n    startY: 30,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    pageBreak: \"avoid\",\r\n    margin: { top: 20 },\r\n    bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n    headStyles: {\r\n      lineWidth: 0.02,\r\n      lineColor: \"#000\",\r\n      fillColor: [212, 212, 211],\r\n    },\r\n  });\r\n\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanHutangSupplierSummary;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanPembayaranSupplier = (data) => {\r\n  console.log(data);\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"landscape\");\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN PEMBAYARAN HUTANG SUPPLIER\", 14, 15);\r\n  doc.setFontSize(10);\r\n  //   //row 1\r\n  //   doc.text(`Supplier : ${row1isi}`, 14, 25);\r\n  //   //   row 2\r\n  //   doc.text(`Tanggal\t: ${row2isi}`, 120, 25);\r\n  data.forEach((item, index) => {\r\n    let tableColumn = [\r\n      [\r\n        {\r\n          content: `KODE SUPPLIER : ${item.kode_supplier}`,\r\n          colSpan: 4,\r\n        },\r\n        {\r\n          content: `NAMA SUPPLIER : ${item.nama_supplier}`,\r\n          colSpan: 4,\r\n        },\r\n      ],\r\n      [\r\n        {\r\n          content: `TANGGAL`,\r\n        },\r\n        {\r\n          content: `NO BON`,\r\n        },\r\n        {\r\n          content: `JUMLAH HUTANG`,\r\n        },\r\n        {\r\n          content: `PUTUS TITIP`,\r\n        },\r\n        {\r\n          content: `DENDA`,\r\n        },\r\n        {\r\n          content: `HUTANG`,\r\n        },\r\n        {\r\n          content: `PEMBAYARAN`,\r\n        },\r\n        {\r\n          content: `LEBIH PEMBAYARAN`,\r\n        },\r\n      ],\r\n    ];\r\n    item.detail.forEach((hasil) => {\r\n      let rows = [\r\n        hasil.tanggal,\r\n        hasil.no_bon,\r\n        hasil.jumlah_hutang,\r\n        hasil.total_putus_titip,\r\n        hasil.total_denda,\r\n        hasil.total_hutang,\r\n        hasil.total_pembayaran,\r\n        hasil.lebih_pembayaran,\r\n      ];\r\n      tableRows.push(rows);\r\n    });\r\n    item.detail_bayar.forEach((bayar) => {\r\n      let rows = [\r\n        `Bayar Cash : ${bayar.bayar_cash}`,\r\n        `Bayar Transfer : ${bayar.bayar_trf}`,\r\n        `Bayar Giro : ${bayar.bayar_giro}`,\r\n        `Bayar Ciok : ${bayar.bayar_ciok}`,\r\n        `Bayar Rongsok : ${bayar.bayar_rongsok}`,\r\n      ];\r\n      tableRows.push(rows);\r\n    });\r\n    doc.autoTable({\r\n      head: tableColumn,\r\n      body: tableRows,\r\n      startY: 30,\r\n      theme: \"plain\",\r\n      rowPageBreak: \"avoid\",\r\n      pageBreak: \"avoid\",\r\n      margin: { top: 20 },\r\n      bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n      headStyles: {\r\n        lineWidth: 0.02,\r\n        lineColor: \"#000\",\r\n        fillColor: [212, 212, 211],\r\n      },\r\n    });\r\n  });\r\n\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanPembayaranSupplier;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanPrintPenerimaanSupplier = (\r\n  row1isi = \"\",\r\n  row2isi = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n  validby = \"\",\r\n  data\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 40;\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN DETAIL PENERIMAAN SUPPLIER\", 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(`Supplier : ${row1isi}`, 14, 25);\r\n  //   row 2\r\n  doc.text(`Tanggal\t: ${row2isi}`, 120, 25);\r\n  data.forEach((item, index) => {\r\n    doc.text(`Kode Supplier : ${item.kode_supplier}`, 14, 35);\r\n    doc.text(`Nama Supplier : ${item.nama_supplier}`, 100, 35);\r\n    item.detail.forEach((list) => {\r\n      tableColumn = [\r\n        [\r\n          {\r\n            content: `TANGGAL INVOICE : ${list.tanggal_invoice}`,\r\n            colSpan: 12,\r\n          },\r\n        ],\r\n        [\r\n          {\r\n            content: `NO BON : ${list.no_bon}`,\r\n            colSpan: 12,\r\n          },\r\n        ],\r\n        [\r\n          {\r\n            content: `NO`,\r\n          },\r\n          {\r\n            content: `KODE JENIS`,\r\n          },\r\n          {\r\n            content: `KETERANGAN`,\r\n          },\r\n          {\r\n            content: `KADAR CETAK`,\r\n          },\r\n          {\r\n            content: `KADAR BELI`,\r\n          },\r\n          {\r\n            content: `QTY`,\r\n          },\r\n          {\r\n            content: `P`,\r\n          },\r\n          {\r\n            content: `K`,\r\n          },\r\n          {\r\n            content: `PKG`,\r\n          },\r\n          {\r\n            content: `GROSS`,\r\n          },\r\n          {\r\n            content: `BRUTO`,\r\n          },\r\n          {\r\n            content: `NETTO`,\r\n          },\r\n          {\r\n            content: `ONGKOS`,\r\n          },\r\n        ],\r\n      ];\r\n      list.detail_barang.forEach((barang, index) => {\r\n        let rows = [\r\n          barang.no_urut,\r\n          barang.kode_jenis,\r\n          barang.keterangan,\r\n          barang.kadar_cetak,\r\n          barang.kadar_beli,\r\n          barang.qty,\r\n          barang.plastik,\r\n          barang.kulit,\r\n          barang.pkg,\r\n          barang.gross,\r\n          barang.bruto,\r\n          barang.netto,\r\n          parseFloat(barang.ongkos_rp).toLocaleString(\"id-ID\"),\r\n        ];\r\n        tableRows.push(rows);\r\n        console.log(tableRows);\r\n      });\r\n      let footer = [\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        item.total_bruto,\r\n        item.total_netto,\r\n        parseFloat(item.total_rp).toLocaleString(\"id-ID\"),\r\n      ];\r\n      footRows.push(footer);\r\n    });\r\n    doc.autoTable({\r\n      head: tableColumn,\r\n      body: tableRows,\r\n      foot: footRows,\r\n      startY: index === 0 ? 40 : finalY + 5,\r\n      theme: \"plain\",\r\n      rowPageBreak: \"avoid\",\r\n      pageBreak: \"avoid\",\r\n      margin: { top: 20 },\r\n      bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n      headStyles: {\r\n        lineWidth: 0.02,\r\n        lineColor: \"#000\",\r\n        fillColor: [212, 212, 211],\r\n      },\r\n    });\r\n    finalY = doc.autoTableEndPosY() + 10;\r\n    tableRows = [];\r\n    footRows = [];\r\n  });\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n\r\n  doc.text(`User\t: ${username}`, 14, finalY + 10);\r\n  doc.text(`Cetak\t: ${tanggal}`, 14, finalY + 16);\r\n  doc.text(`Valid\t: ${validby}`, 14, finalY + 22);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanPrintPenerimaanSupplier;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanPrintPenerimaanSupplierRekap = (\r\n  row1isi = \"\",\r\n  row2isi = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n  validby = \"\",\r\n  data\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n\r\n  let tableColumn = [\r\n    [\r\n      {\r\n        content: `TANGGAL`,\r\n      },\r\n      {\r\n        content: `NO BON`,\r\n      },\r\n      {\r\n        content: `TOTAL BRUTO`,\r\n      },\r\n      {\r\n        content: `TOTAL NETTO`,\r\n      },\r\n      {\r\n        content: `TOTAL NETTO EXT`,\r\n      },\r\n      {\r\n        content: `TOTAL RP`,\r\n      },\r\n    ],\r\n  ];\r\n  let finalY = 40;\r\n  // let data = [\r\n  //   {\r\n  //     kode_supplier: \"SP001\",\r\n  //     nama_supplier: \"SUPPLIER\",\r\n  //     detail: [\r\n  //       {\r\n  //         tanggal_invoice: \"2021-03-01\",\r\n  //         no_bon: \"CB44C4-F832-031A-3026-EB855A3D777F\",\r\n  //         detail_barang: [\r\n  //           {\r\n  //             no_urut: 1,\r\n  //             kode_jenis: \"990PER107\",\r\n  //             keterangan: \"990 PER 107\",\r\n  //             kadar_cetak: 100,\r\n  //             kadar_beli: 99,\r\n  //             kode_barcode: \"-\",\r\n  //             qty: 2,\r\n  //             plastik: 2,\r\n  //             kulit: 0,\r\n  //             pkg: 5,\r\n  //             gross: 10,\r\n  //             bruto: 5,\r\n  //             netto: 4.95,\r\n  //             ongkos_rp: 100000,\r\n  //           },\r\n  //           {\r\n  //             no_urut: 2,\r\n  //             kode_jenis: \"GLKEPRAS78\",\r\n  //             keterangan: \"GLKEPRAS 78\",\r\n  //             kadar_cetak: 78,\r\n  //             kadar_beli: 100,\r\n  //             kode_barcode: \"-\",\r\n  //             qty: 5,\r\n  //             plastik: 5,\r\n  //             kulit: 0,\r\n  //             pkg: 5,\r\n  //             gross: 60,\r\n  //             bruto: 55,\r\n  //             netto: 55,\r\n  //             ongkos_rp: 100000,\r\n  //           },\r\n  //         ],\r\n  //         total_bruto: 60,\r\n  //         total_netto: 59.95,\r\n  //         total_netto_ext: 59.95,\r\n  //         total_rp: 200000,\r\n  //       },\r\n  //     ],\r\n  //   },\r\n  // ];\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN REKAP PENERIMAAN SUPPLIER\", 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(`Supplier : ${row1isi}`, 14, 25);\r\n  //   row 2\r\n  doc.text(`Tanggal\t: ${row2isi}`, 120, 25);\r\n  data.forEach((item, index) => {\r\n    doc.text(`Kode Supplier : ${item.kode_supplier}`, 14, 35);\r\n    doc.text(`Nama Supplier : ${item.nama_supplier}`, 100, 35);\r\n    item.detail.forEach((list) => {\r\n      let rows = [\r\n        list.tanggal_invoice,\r\n        list.no_bon,\r\n        list.total_bruto,\r\n        list.total_netto,\r\n        list.total_netto_ext,\r\n        list.total_rp,\r\n      ];\r\n      tableRows.push(rows);\r\n    });\r\n    doc.autoTable({\r\n      head: tableColumn,\r\n      body: tableRows,\r\n      startY: index === 0 ? 40 : finalY + 5,\r\n      theme: \"plain\",\r\n      rowPageBreak: \"avoid\",\r\n      pageBreak: \"avoid\",\r\n      margin: { top: 20 },\r\n      bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n      headStyles: {\r\n        lineWidth: 0.02,\r\n        lineColor: \"#000\",\r\n        fillColor: [212, 212, 211],\r\n      },\r\n    });\r\n    finalY = doc.autoTableEndPosY() + 10;\r\n    tableRows = [];\r\n  });\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n\r\n  doc.text(`User\t: ${username}`, 14, finalY + 10);\r\n  doc.text(`Cetak\t: ${tanggal}`, 14, finalY + 16);\r\n  doc.text(`Valid\t: ${validby}`, 14, finalY + 22);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanPrintPenerimaanSupplierRekap;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanPrintReturnSupplier = (\r\n  row1name = \"\",\r\n  row1isi = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n  validby = \"\",\r\n  title = \"\"\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  let table = JSON.parse(localStorage.getItem(\"LaporanReturnSupplier\")) || [];\r\n  var tableRows = [];\r\n  var columTable = [\r\n    \"No Faktur\",\r\n    \"No Bon\",\r\n    \"Tanggal\",\r\n    \"Tanggal Balik\",\r\n    \"Kode Jenis\",\r\n    \"Keterangan\",\r\n    \"Kadar\",\r\n    \"Bruto (Gr)\",\r\n    \"Harga (%)\",\r\n    \"Netto (Gr)\",\r\n    \"Ongkos (Rp)\",\r\n  ];\r\n  table.forEach((ticket, i) => {\r\n    ticket.barangDetails.forEach((barang, i) => {\r\n      const barangData = [\r\n        ticket.noFaktur,\r\n        ticket.noBon,\r\n        ticket.tanggal,\r\n        ticket.tanggalBarang,\r\n        barang.kodeJenis,\r\n        barang.keterangan,\r\n        barang.kadarCetak,\r\n        barang.bruto,\r\n        barang.kadarTransaksi,\r\n        barang.netto,\r\n        parseFloat(barang.rp).toLocaleString(\"id-ID\"),\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(barangData);\r\n    });\r\n  });\r\n  // startY is basically margin-top\r\n  doc.autoTable(columTable, tableRows, {\r\n    startY: 40,\r\n    columnStyles: {\r\n      0: {\r\n        columnWidth: 18,\r\n      },\r\n      1: {\r\n        columnWidth: 18,\r\n      },\r\n      4: { columnWidth: 18 },\r\n    },\r\n  });\r\n  let finalY = doc.lastAutoTable.finalY + 10;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(title, 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(row1name, 14, 25);\r\n  doc.text(\":\", 37, 25);\r\n  doc.text(row1isi, 40, 25);\r\n\r\n  //Stamp\r\n  doc.text(\"User\", 160, finalY + 10);\r\n  doc.text(\":\", 168, finalY + 10);\r\n  doc.text(username, 170, finalY + 10);\r\n  doc.text(\"Cetak\", 160, finalY + 15);\r\n  doc.text(\":\", 168, finalY + 15);\r\n  doc.text(tanggal, 170, finalY + 15);\r\n  doc.text(\"Valid\", 160, finalY + 20);\r\n  doc.text(\":\", 168, finalY + 20);\r\n  doc.text(validby, 170, finalY + 20);\r\n  // doc.autoPrint();\r\n  // doc.save(`${title}_${dateStr}.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  x.document.close();\r\n};\r\n\r\nexport default LaporanPrintReturnSupplier;\r\n","import Axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { gagal } from \"../Alert\";\r\nimport { AxiosMasterGet } from \"../Axios\";\r\nimport { getToday } from \"../GlobalComponent/function\";\r\nimport { getUserData } from \"../GlobalComponent/notification\";\r\nimport FormSupplier from \"./Component/formSupplier\";\r\nimport LaporanHutangSupplier from \"./Component/LaporanHutangSupplier\";\r\nimport LaporanHutangSupplierCard from \"./Component/LaporanHutangSupplierCard\";\r\nimport LaporanHutangSupplierSummary from \"./Component/LaporanHutangSupplierSummary\";\r\nimport LaporanPembayaranSupplier from \"./Component/LaporanPembayaranSupplier\";\r\nimport LaporanPrintPenerimaanSupplier from \"./Component/LaporanPrintPenerimaanSupplier\";\r\nimport LaporanPrintPenerimaanSupplierRekap from \"./Component/LaporanPrintPenerimaanSupplierRekap\";\r\nimport LaporanPrintReturnSupplier from \"./Component/LaporanPrintReturnSupplier\";\r\n\r\nconst serverNonMaster = process.env.REACT_APP_BACKEND_URL_NON_MASTER;\r\nclass LaporanSupplier extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listLaporan: [],\r\n    };\r\n  }\r\n\r\n  handlePenerimaan(data) {\r\n    AxiosMasterGet(\r\n      \"report/terima-barang-supplier/\" +\r\n        `${data.type}&${data.kode_supplier}&${data.tanggal_awal}&${data.tanggal_akhir}`\r\n    )\r\n      .then((res) =>\r\n        this.setState({\r\n          listLaporan: res && res.data,\r\n        })\r\n      )\r\n      .then(() => {\r\n        data.type === \"DETAIL\"\r\n          ? LaporanPrintPenerimaanSupplier(\r\n              data.tanggal_awal,\r\n              data.tanggal_akhir,\r\n              getUserData().user_name,\r\n              getToday(),\r\n              getUserData().user_name,\r\n              this.state.listLaporan\r\n            )\r\n          : LaporanPrintPenerimaanSupplierRekap(\r\n              data.tanggal_awal,\r\n              data.tanggal_akhir,\r\n              getUserData().user_name,\r\n              getToday(),\r\n              getUserData().user_name,\r\n              this.state.listLaporan\r\n            );\r\n      })\r\n      .catch((err) =>\r\n        gagal(\r\n          `Gagal Mengambil data, Mohon periksa koneksi anda, Detail :${err.response.data}`\r\n        )\r\n      );\r\n  }\r\n  handleHutang(data) {\r\n    switch (data.type) {\r\n      case \"NORMAL\":\r\n        AxiosMasterGet(\"report/hutang-supplier\")\r\n          .then((res) =>\r\n            this.setState({\r\n              listLaporan: res && res.data,\r\n            })\r\n          )\r\n          .then(() => LaporanHutangSupplier(this.state.listLaporan));\r\n        break;\r\n      case \"CARD\":\r\n        AxiosMasterGet(\r\n          \"report/hutang-supplier-card/\" +\r\n            `${data.kode_supplier}&${data.tanggal_awal}&${data.tanggal_akhir}`\r\n        )\r\n          .then((res) =>\r\n            this.setState({\r\n              listLaporan: res && res.data,\r\n            })\r\n          )\r\n          .then(() => LaporanHutangSupplierCard(this.state.listLaporan));\r\n        break;\r\n      case \"SUMMARY\":\r\n        AxiosMasterGet(\r\n          \"report/hutang-supplier-summary/\" +\r\n            `${data.kode_supplier}&${data.tanggal_awal}&${data.tanggal_akhir}`\r\n        )\r\n          .then((res) =>\r\n            this.setState({\r\n              listLaporan: res && res.data,\r\n            })\r\n          )\r\n          .then(() => LaporanHutangSupplierSummary(this.state.listLaporan));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  handleKartuHutang(data) {\r\n    console.log(data);\r\n  }\r\n  handleOmzet(data) {}\r\n  handleReturn(data) {\r\n    Axios.get(serverNonMaster + \"spp/dc/rtr/details\", {\r\n      params: {\r\n        tglFrom: data.tglFrom,\r\n        tglTo: data.tglTo,\r\n        kodeLokasiFrom: data.kodeLokasiFrom,\r\n        kodelokasiTo: data.kodelokasiTo,\r\n      },\r\n    })\r\n      .then((res) =>\r\n        localStorage.setItem(\"LaporanReturnSupplier\", JSON.stringify(res.data))\r\n      )\r\n      .catch((err) => gagal(\"Gagal Mengambil data, Mohon periksa koneksi anda\"))\r\n      .then(() =>\r\n        LaporanPrintReturnSupplier(\r\n          \"Tanggal\",\r\n          `${data.tglFrom} - ${data.tglTo}`,\r\n          \"ADMIN\",\r\n          \"2020-12-16\",\r\n          \"ADMIN\",\r\n          \"LAPORAN RETURN SUPPLIER\"\r\n        )\r\n      );\r\n  }\r\n  handleTitip(data) {\r\n    Axios.get(serverNonMaster + \"spp/dc/ttp/details\", {\r\n      params: {\r\n        tglFrom: data.tglFrom,\r\n        tglTo: data.tglTo,\r\n        kodeLokasiFrom: data.kodeLokasiFrom,\r\n        kodelokasiTo: data.kodelokasiTo,\r\n      },\r\n    })\r\n      .then((res) =>\r\n        localStorage.setItem(\"LaporanTitipSupplier\", JSON.stringify(res.data))\r\n      )\r\n      .catch((err) =>\r\n        gagal(\"Gagal Mengambil data, Mohon periksa koneksi anda\")\r\n      );\r\n  }\r\n  handleTolakan(data) {\r\n    AxiosMasterGet(\r\n      `report/bayar-hutang-supplier/${data.kode_supplier}&${data.tglFrom}&${data.tglTo}&${data.type_faktur}&${data.type_bayar}`\r\n    )\r\n      .then((res) =>\r\n        localStorage.setItem(\r\n          \"LaporanTolakReturSupplier\",\r\n          JSON.stringify(res.data)\r\n        )\r\n      )\r\n      .catch((err) =>\r\n        gagal(\"Gagal Mengambil data, Mohon periksa koneksi anda\")\r\n      );\r\n  }\r\n  handleTransaksi(data) {\r\n    AxiosMasterGet(\r\n      `report/bayar-hutang-supplier/${data.kode_supplier}&${data.tglFrom}&${data.tglTo}&REKAP&REKAP`\r\n    )\r\n      .then((res) => LaporanPembayaranSupplier(res.data))\r\n      .catch((err) => gagal(err));\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"col-lg-12\">\r\n                <ul className=\"nav nav-tabs nav-justified nav-bordered mb-3\">\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#penerimaan-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link active\"\r\n                    >\r\n                      <i className=\"mdi mdi-home-variant d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">Penerimaan</span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#return-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"true\"\r\n                      className=\"nav-link \"\r\n                    >\r\n                      <i className=\"mdi mdi-account-circle d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">Return</span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#hutang-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">Hutang</span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#kartu-hutang-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">Kartu Hutang</span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#omzet-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">Omzet</span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#transaksi-pembayaran-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">\r\n                        Transaksi Pembayaran\r\n                      </span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#tolakan-return-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">Tolakan Return</span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#titip-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">Titip</span>\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n                <div className=\"tab-content\">\r\n                  <div className=\"tab-pane show active\" id=\"penerimaan-tab\">\r\n                    <FormSupplier\r\n                      from=\"penerimaan\"\r\n                      onSubmit={(data) => this.handlePenerimaan(data)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"return-tab\">\r\n                    <FormSupplier\r\n                      from=\"penerimaan\"\r\n                      onSubmit={(data) => this.handleReturn(data)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"hutang-tab\">\r\n                    <FormSupplier\r\n                      from=\"hutang\"\r\n                      onSubmit={(data) => this.handleHutang(data)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"kartu-hutang-tab\">\r\n                    <FormSupplier\r\n                      from=\"penerimaan\"\r\n                      onSubmit={(data) => this.handleKartuHutang(data)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"omzet-tab\">\r\n                    <FormSupplier\r\n                      from=\"omzet\"\r\n                      onSubmit={(data) => this.handleOmzet(data)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"transaksi-pembayaran-tab\">\r\n                    <FormSupplier\r\n                      from=\"transaksi\"\r\n                      onSubmit={(data) => this.handleTransaksi(data)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"tolakan-return-tab\">\r\n                    <FormSupplier\r\n                      from=\"penerimaan\"\r\n                      onSubmit={(data) => this.handleTolakan(data)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"titip-tab\">\r\n                    <FormSupplier\r\n                      from=\"penerimaan\"\r\n                      onSubmit={(data) => this.handleTitip(data)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LaporanSupplier;\r\n","import React from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nexport const getToday = () => {\r\n  return (\r\n    new Date().getFullYear() +\r\n    \"-\" +\r\n    (\"0\" + (new Date().getMonth() + 1)).slice(-2) +\r\n    \"-\" +\r\n    (\"0\" + new Date().getDate()).slice(-2)\r\n  );\r\n};\r\n\r\nexport const encryptascii = (str) => {\r\n  let key = process.env.REACT_APP_ENCKEY;\r\n  let dataKey = {};\r\n  for (let i = 0; i < key.length; i++) {\r\n    dataKey[i] = key.substr(`${i}`, 1);\r\n  }\r\n\r\n  let strEnc = \"\";\r\n  let nkey = 0;\r\n  let jml = str.length;\r\n\r\n  for (let i = 0; i < parseInt(jml); i++) {\r\n    strEnc =\r\n      strEnc + hexEncode(str[i].charCodeAt(0) + dataKey[nkey].charCodeAt(0));\r\n\r\n    if (nkey === Object.keys(dataKey).length - 1) {\r\n      nkey = 0;\r\n    }\r\n    nkey = nkey + 1;\r\n  }\r\n  return strEnc.toUpperCase();\r\n};\r\n\r\nexport const decryptascii = (str) => {\r\n  if (str !== null) {\r\n    let key = process.env.REACT_APP_ENCKEY;\r\n    let dataKey = {};\r\n    for (let i = 0; i < key.length; i++) {\r\n      dataKey[i] = key.substr(`${i}`, 1);\r\n    }\r\n\r\n    let strDec = \"\";\r\n    let nkey = 0;\r\n    let jml = str.length;\r\n    let i = 0;\r\n    while (i < parseInt(jml)) {\r\n      strDec =\r\n        strDec + chr(hexdec(str.substr(i, 2)) - dataKey[nkey].charCodeAt(0));\r\n      if (nkey === Object.keys(dataKey).length - 1) {\r\n        nkey = 0;\r\n      }\r\n      nkey = nkey + 1;\r\n      i = i + 2;\r\n    }\r\n    return strDec;\r\n  }\r\n};\r\nexport const hexEncode = (str) => {\r\n  var result = \"\";\r\n  result = str.toString(16);\r\n  return result;\r\n};\r\n\r\nexport const hexdec = (hex) => {\r\n  var str = \"\";\r\n  str = parseInt(hex, 16);\r\n  return str;\r\n};\r\nexport const chr = (asci) => {\r\n  var str = \"\";\r\n  str = String.fromCharCode(asci);\r\n  return str;\r\n};\r\n\r\nexport const formatDate = (date) => {\r\n  var d = new Date(date),\r\n    month = \"\" + (d.getMonth() + 1),\r\n    day = \"\" + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = \"0\" + month;\r\n  if (day.length < 2) day = \"0\" + day;\r\n\r\n  return [year, month, day].join(\"-\");\r\n};\r\n\r\nexport const parseIsoDatetime = (dtstr) => {\r\n  let hasil = dtstr.substr(0, 10);\r\n  return hasil;\r\n};\r\n\r\nexport const multipleDeleteLocal = (data = []) => {\r\n  data.forEach((k) => {\r\n    if (localStorage.getItem(k) !== null) {\r\n      localStorage.removeItem(k);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  });\r\n};\r\n\r\nexport const formatDateISO = (value) => {\r\n  let pattern = \"####-##-##\";\r\n  var i = 0,\r\n    date = value.toString();\r\n  return pattern.replace(/#/g, (_) => date[i++]);\r\n};\r\n\r\nexport const SkeletonLoading = ({ label }) => (\r\n  <div className=\"form-group\">\r\n    <label> {label} </label>\r\n    <Skeleton className=\"form-control\" />\r\n  </div>\r\n);\r\n","import Swal from \"sweetalert2\";\r\nimport React from \"react\";\r\nimport SelectSearch from \"react-select-search\";\r\nimport DateTime from \"react-datetime\";\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport { AxiosMasterPut } from \"../Axios\";\r\nimport { SkeletonLoading } from \"./function\";\r\n// import Select from \"react-select\";\r\n\r\nconst Toast = Swal.mixin({\r\n  toast: true,\r\n  position: \"top-end\",\r\n  showConfirmButton: false,\r\n  timer: 3000,\r\n  timerProgressBar: true,\r\n  didOpen: (toast) => {\r\n    toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n    toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n  },\r\n});\r\n\r\nexport function NotifSucces(text) {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      // title: 'Good Job',\r\n      text: text,\r\n      icon: \"success\",\r\n      position: \"top-right\",\r\n      timer: 2000,\r\n      width: \"300px\",\r\n      height: \"100px\",\r\n      showConfirmButton: false,\r\n    })\r\n      .then(resolve(\"berhasil\"))\r\n      .catch(reject(\"error\"));\r\n  });\r\n}\r\nexport function ToastSucces(text) {\r\n  return new Promise((resolve, reject) => {\r\n    Toast.fire({\r\n      icon: \"success\",\r\n      title: text,\r\n    })\r\n      .then(resolve(\"berhasil\"))\r\n      .catch(reject(\"error\"));\r\n  });\r\n}\r\n\r\nexport function NotifError(text) {\r\n  if (text.includes(\"Invalid token\")) {\r\n    Swal.fire({\r\n      title: \"Ooopss\",\r\n      text: \"Sepertinya ada masalah keamanan, Silahkan Login Kembali..\",\r\n      icon: \"info\",\r\n      position: \"center\",\r\n      showConfirmButton: true,\r\n      confirmButtonText: \"Login\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        localStorage.setItem(\"isLogin\", false);\r\n        window.location.reload();\r\n      }\r\n    });\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      Swal.fire({\r\n        title: \"Oopss!!\",\r\n        text: text,\r\n        icon: \"error\",\r\n        position: \"top-right\",\r\n        timer: 2000,\r\n        showConfirmButton: false,\r\n      })\r\n        .then(resolve(\"berhasil\"))\r\n        .catch(reject(\"error\"));\r\n    });\r\n  }\r\n}\r\n\r\nexport function ToastError(text) {\r\n  return new Promise((resolve, reject) => {\r\n    Toast.fire({\r\n      icon: \"error\",\r\n      title: text,\r\n    })\r\n      .then(resolve(\"berhasil\"))\r\n      .catch(reject(\"error\"));\r\n  });\r\n}\r\nexport function NotifWarning(text) {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      title: \"Warning !!!\",\r\n      text: text,\r\n      icon: \"warning\",\r\n      position: \"top-right\",\r\n      timer: 2000,\r\n      showConfirmButton: false,\r\n    })\r\n      .then(resolve(\"berhasil\"))\r\n      .catch(reject(\"error\"));\r\n  });\r\n}\r\nexport function ToastWarning(text) {\r\n  return new Promise((resolve, reject) => {\r\n    Toast.fire({\r\n      icon: \"warning\",\r\n      title: text,\r\n    })\r\n      .then(resolve(\"berhasil\"))\r\n      .catch(reject(\"error\"));\r\n  });\r\n}\r\n\r\nexport function NotifInfo(text) {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      title: \"Informasi !!!\",\r\n      text: text,\r\n      icon: \"info\",\r\n      position: \"top-right\",\r\n      timer: 2000,\r\n      showConfirmButton: false,\r\n    })\r\n      .then(resolve(\"berhasil\"))\r\n      .catch(reject(\"error\"));\r\n  });\r\n}\r\nexport function ToastInfo(text) {\r\n  return new Promise((resolve, reject) => {\r\n    Toast.fire({\r\n      icon: \"info\",\r\n      title: text,\r\n    })\r\n      .then(resolve(\"berhasil\"))\r\n      .catch(reject(\"error\"));\r\n  });\r\n}\r\n\r\nexport const reactive = (err, kode, endpoint, data, endpointUpdate) => {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      title: \"Oopps..\",\r\n      text: err.response.data,\r\n      icon: \"info\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Re-Activate\",\r\n      cancelButtonText: \"Cancel\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        AxiosMasterPut(endpoint + kode, data)\r\n          .then(() =>\r\n            AxiosMasterPut(endpointUpdate + kode, data)\r\n              .then(() => resolve(\"Berhasil\"))\r\n              .then(() =>\r\n                NotifSucces(\"Data Berhasil Dikembalikan\").catch((err) =>\r\n                  reject(err)\r\n                )\r\n              )\r\n          )\r\n          .then(() => NotifSucces(\"Data Berhasil Dikembalikan\"))\r\n          .then(() => resolve(\"Berhasil\"))\r\n          .catch((err) => reject(err));\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexport const ReanderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  readOnly,\r\n  placeholder,\r\n  autoFocus,\r\n  ref,\r\n  loading,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    {loading ? (\r\n      <SkeletonLoading />\r\n    ) : (\r\n      <input\r\n        {...input}\r\n        type={type}\r\n        ref={ref}\r\n        autoFocus={autoFocus}\r\n        className=\"form-control\"\r\n        readOnly={readOnly}\r\n        placeholder={placeholder}\r\n        onKeyPress={(event) => {\r\n          if (event.key === \"Enter\") {\r\n            event.preventDefault(); //<===== This stops the form from being submitted\r\n          } else {\r\n          }\r\n        }}\r\n      />\r\n    )}\r\n    {touched &&\r\n      ((error && (\r\n        <ul className=\"parsley-errors-list filled\">\r\n          <li className=\"parsley-required\"> {error}.</li>\r\n        </ul>\r\n      )) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nexport const ReanderFieldInline = ({\r\n  input,\r\n  label,\r\n  type,\r\n  readOnly,\r\n  placeholder,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group row\">\r\n    <label htmlFor=\"\" className=\"text-black col-form-label col-md-3\">\r\n      {label}\r\n    </label>\r\n    <div className=\"col-lg-9\">\r\n      <input\r\n        {...input}\r\n        type={type}\r\n        className=\"form-control\"\r\n        readOnly={readOnly}\r\n        placeholder={placeholder}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n      />\r\n      {touched &&\r\n        ((error && (\r\n          <ul className=\"parsley-errors-list filled\">\r\n            <li className=\"parsley-required\"> {error}.</li>\r\n          </ul>\r\n        )) ||\r\n          (warning && <p>{warning}</p>))}\r\n    </div>\r\n  </div>\r\n);\r\nexport const ReanderSelectInline = ({\r\n  input,\r\n  label,\r\n  readOnly,\r\n  placeholder,\r\n  options,\r\n  getOptions,\r\n  value,\r\n  disabled,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group row\">\r\n    <label htmlFor=\"\" className=\"text-black col-form-label col-md-3\">\r\n      {label}\r\n    </label>\r\n    <div className=\"col-lg-9\">\r\n      <SelectSearch\r\n        {...input}\r\n        search\r\n        disabled={readOnly}\r\n        placeholder={placeholder}\r\n        options={options}\r\n        getOptions={getOptions}\r\n      />\r\n      {touched &&\r\n        ((error && (\r\n          <ul className=\"parsley-errors-list filled\">\r\n            <li className=\"parsley-required\"> {error}.</li>\r\n          </ul>\r\n        )) ||\r\n          (warning && <p>{warning}</p>))}\r\n    </div>\r\n  </div>\r\n);\r\nexport const RenderCheckBox = ({\r\n  input,\r\n  label,\r\n  type,\r\n  readOnly,\r\n  placeholder,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\"></label>\r\n    <div className=\"checkbox checkbox-css mt-3\">\r\n      <input\r\n        type=\"checkbox\"\r\n        id={label}\r\n        {...input}\r\n        readOnly={readOnly}\r\n        placeholder={placeholder}\r\n      />\r\n      <label style={{ fontSize: 20 }} htmlFor={label}>\r\n        {label}\r\n      </label>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport const RenderFieldGroup = ({\r\n  input,\r\n  label,\r\n  type,\r\n  readOnly,\r\n  placeholder,\r\n  handleClick,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <div class=\"input-group\">\r\n      <input\r\n        {...input}\r\n        type={type}\r\n        className=\"form-control\"\r\n        readOnly={readOnly}\r\n        placeholder={placeholder}\r\n        aria-label=\"Recipient's username\"\r\n        aria-describedby=\"basic-addon2\"\r\n        onKeyPress={(event) => {\r\n          if (event.key === \"Enter\") {\r\n            event.preventDefault(); //<===== This stops the form from being submitted\r\n          } else {\r\n          }\r\n        }}\r\n      />\r\n      <div class=\"input-group-append\">\r\n        <button class=\"btn btn-primary\" type=\"button\" onClick={handleClick}>\r\n          <i className=\"fa fa-search mr-1\"></i>\r\n          Cari\r\n        </button>\r\n      </div>\r\n    </div>\r\n    {touched &&\r\n      ((error && (\r\n        <ul className=\"parsley-errors-list filled\">\r\n          <li className=\"parsley-required\"> {error}.</li>\r\n        </ul>\r\n      )) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\n\r\nexport const ReanderSelect = ({\r\n  input,\r\n  label,\r\n  readOnly,\r\n  placeholder,\r\n  options,\r\n  getOptions,\r\n  value,\r\n  disabled,\r\n  loading,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    {loading ? (\r\n      <SkeletonLoading />\r\n    ) : (\r\n      <SelectSearch\r\n        {...input}\r\n        search\r\n        disabled={readOnly}\r\n        placeholder={placeholder}\r\n        options={options}\r\n        getOptions={getOptions}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n      />\r\n    )}\r\n\r\n    {touched &&\r\n      ((error && (\r\n        <ul className=\"parsley-errors-list filled\">\r\n          <li className=\"parsley-required\"> {error}.</li>\r\n        </ul>\r\n      )) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nexport const ReanderSelectMultiple = ({\r\n  input,\r\n  label,\r\n  placeholder,\r\n  options,\r\n  disabled,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <SelectSearch\r\n      {...input}\r\n      search\r\n      multiple\r\n      closeOnSelect={false}\r\n      printOptions=\"on-focus\"\r\n      disabled={disabled}\r\n      placeholder={placeholder}\r\n      options={options}\r\n    />\r\n\r\n    {touched &&\r\n      ((error && (\r\n        <ul className=\"parsley-errors-list filled\">\r\n          <li className=\"parsley-required\"> {error}.</li>\r\n        </ul>\r\n      )) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nexport const RenderTime = ({\r\n  input,\r\n  label,\r\n  placeholder,\r\n  options,\r\n  disabled,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <DateTime dateFormat={false} inputProps={{ placeholder: placeholder }} />\r\n\r\n    {touched &&\r\n      ((error && (\r\n        <ul className=\"parsley-errors-list filled\">\r\n          <li className=\"parsley-required\"> {error}.</li>\r\n        </ul>\r\n      )) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\n\r\nexport const deleteLocalItemBarcode = (nama, kode_barcode) => {\r\n  let data = JSON.parse(localStorage.getItem(nama)) || [];\r\n  let hasil = data.findIndex((item) => item.kode_barcode === kode_barcode);\r\n  data.splice(hasil, 1);\r\n  localStorage.setItem(nama, JSON.stringify(data) || []);\r\n};\r\n\r\nexport const getUserData = () => {\r\n  let data = JSON.parse(localStorage.getItem(\"userdata\")) || [];\r\n  return data;\r\n};\r\n"],"sourceRoot":""}