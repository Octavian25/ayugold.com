{"version":3,"sources":["Validations/validationCustomer.js","DataMaster/Component/FormCustomer.jsx","DataMaster/Component/FormCustomerEdit.jsx","DataMaster/Customer.jsx","Images/500.svg","DataMaster/Component/ModalMasterData.jsx","TourGuide.jsx","../node_modules/react-stepper-horizontal/lib/index.js"],"names":["validationCustomer","value","errors","kodeSupplier","kodeExt","namaToko","namaCustomer","tanggalDaftar","kodeArea","kodeKota","FormCustomer","props","nextStep","step","state","setState","step2","step1","step3","prevStep","inputProvinsi","input","e","kotaPilihan","listKota","filter","list","kode_provinsi","target","pilihanKota","inputKota","areaPilihan","listArea","kode_kota","pilihanArea","inputArea","result_explode","split","namaArea","listProvinsi","today","Date","getFullYear","getMonth","slice","getDate","AxiosMasterGet","then","res","data","catch","err","console","log","this","change","getToday","className","onSubmit","handleSubmit","steps","title","activeStep","Field","name","type","normalize","toUpperCase","component","renderField","label","id","onClick","htmlFor","onChange","map","kota","key","nama_provinsi","nama_kota","area","kode_kecamatan","nama_kecamatan","disabled","onSend","aria-hidden","Component","reduxForm","form","validate","enableReinitialize","connect","FormCustomerEdit","namaKota","initialValues","alamat","provinsi","editCustomer","email","handPhone","kodeCustomer","kodePos","status","telepon","fax","contactPerson","SearchBar","Search","ExportCSVButton","CSVExport","rowExpand","renderer","row","kode_pos","no_telp","no_hp","kode_ext","Customer","updateStatus","response","dispatch","getcustomerList","columns","dataField","text","csvExport","formatter","rowContent","kode","kode_customer","Swal","fire","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","AxiosMasterDelete","berhasil","LogData","gagal","data-tut","editcustomer","nama_customer","nama_toko","contact_person","editModal","hasil","tanggal_daftar","kodeProvinsi","kodeKecamatan","dataEdit","progressSend","AxiosMasterPost","finishSend","hideModal","reset","handleReactive","AxiosMasterPut","showModal","isEdit","includes","reactive","style","color","alert","role","data-dismiss","aria-label","TourGuide","tourConfig","ModalMasterData","content","handleEdit","HeaderCard","action","tambahModal","customerList","keyField","search","searchProps","placeholder","margin","top","baseProps","striped","hover","condensed","bordered","headerClasses","expandRow","pagination","paginationFactory","csvProps","error","src","notrespond","width","alt","height","customer","module","exports","ModalGlobal","show","onHide","dialogClassName","backdrop","keyboard","Header","closeButton","backgroundColor","Title","Body","modal","disableBody","disableBodyScroll","enableBody","enableBodyScroll","index","selector","onRequestClose","hideGuide","isOpen","showTourGuide","maskClassName","rounded","accentColor","onAfterOpen","onBeforeClose","Object","defineProperty","obj","_Stepper","require","_Stepper2","__esModule","default"],"mappings":"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","file":"static/js/33.3bc467c7.chunk.js","sourcesContent":["const validationCustomer = (value) => {\r\n    const errors = {}\r\n    if (!value.kodeSupplier) {\r\n        errors.kodeSupplier = \"Tidak Boleh kosong\"\r\n    }\r\n    if (!value.kodeExt) {\r\n        errors.kodeExt = \"Tidak Boleh kosong\"\r\n    }\r\n    if (!value.namaToko) {\r\n        errors.namaToko = \"Tidak Boleh kosong\"\r\n    }\r\n    if (!value.namaCustomer) {\r\n        errors.namaCustomer = \"Tidak Boleh kosong\"\r\n    }\r\n    if (!value.tanggalDaftar) {\r\n        errors.tanggalDaftar = \"Tidak Boleh kosong\"\r\n    }\r\n    if (!value.kodeArea) {\r\n        errors.kodeArea = \"Tidak Boleh kosong\"\r\n    }\r\n    if (!value.kodeKota) {\r\n        errors.kodeKota = \"Tidak Boleh kosong\"\r\n    }\r\n    return errors\r\n}\r\n\r\nexport default validationCustomer;","import React, { Component } from \"react\";\r\nimport Stepper from \"react-stepper-horizontal\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport validationCustomer from \"../../Validations/validationCustomer\";\r\nimport { renderField } from \"../../renderField\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport { getToday } from \"../../getDate\";\r\n\r\nclass FormCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      step: 0,\r\n      step1: \"row\",\r\n      step2: \"row d-none\",\r\n      step3: \"row d-none\",\r\n      listKota: [],\r\n      listArea: [],\r\n      listProvinsi: [],\r\n      pilihanArea: [],\r\n      pilihanKota: [],\r\n      today:\r\n        new Date().getFullYear() +\r\n        \"-\" +\r\n        (\"0\" + (new Date().getMonth() + 1)).slice(-2) +\r\n        \"-\" +\r\n        (\"0\" + new Date().getDate()).slice(-2),\r\n    };\r\n  }\r\n\r\n  nextStep = () => {\r\n    const { step } = this.state;\r\n    if (step === 0) {\r\n      this.setState({ step: step + 1, step2: \"row\", step1: \"row d-none\" });\r\n    } else if (step === 1) {\r\n      this.setState({ step: step + 1, step2: \"row d-none\", step3: \"row\" });\r\n    }\r\n  };\r\n\r\n  prevStep = () => {\r\n    const { step } = this.state;\r\n    if (step === 1) {\r\n      this.setState({ step: step - 1, step2: \"row d-none\", step1: \"row\" });\r\n    } else if (step === 2) {\r\n      this.setState({ step: step - 1, step3: \"row d-none\", step2: \"row\" });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"kota/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listKota: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n\r\n    AxiosMasterGet(\"kecamatan/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listArea: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    AxiosMasterGet(\"provinsi/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listProvinsi: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    this.props.change(\"tanggalDaftar\", getToday);\r\n  }\r\n\r\n  inputProvinsi = (input) => (e) => {\r\n    var kotaPilihan = this.state.listKota.filter(\r\n      (list) => list.kode_provinsi === e.target.value\r\n    );\r\n    this.setState({\r\n      pilihanKota: kotaPilihan,\r\n    });\r\n  };\r\n  inputKota = (input) => (e) => {\r\n    var areaPilihan = this.state.listArea.filter(\r\n      (list) => list.kode_kota === e.target.value\r\n    );\r\n    this.setState({\r\n      pilihanArea: areaPilihan,\r\n    });\r\n  };\r\n  inputArea = (input) => (e) => {\r\n    var result_explode = e.target.value.split(\"|\");\r\n    this.setState({\r\n      kodeArea: result_explode[0],\r\n      namaArea: result_explode[1],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { step } = this.state;\r\n    return (\r\n      <div className=\"col-lg-12 col-md-12\">\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <Stepper\r\n                steps={[\r\n                  { title: \"Data Diri\" },\r\n                  { title: \"Data Lokasi\" },\r\n                  { title: \"Data Nomor\" },\r\n                  // { title: \"Data Rekening\" },\r\n                ]}\r\n                activeStep={step}\r\n              />\r\n            </div>\r\n            <div className={this.state.step1}>\r\n              <div className=\"col-md-4 col-lg-4\">\r\n                <Field\r\n                  name=\"kodeCustomer\"\r\n                  type=\"text\"\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  component={renderField}\r\n                  label=\"Kode Customer\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 col-lg-4\">\r\n                <Field\r\n                  name=\"kodeExt\"\r\n                  type=\"text\"\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  component={renderField}\r\n                  label=\"Kode Ext\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 col-lg-4\">\r\n                <Field\r\n                  name=\"namaToko\"\r\n                  type=\"text\"\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  component={renderField}\r\n                  label=\"Nama Toko\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 col-lg-4\">\r\n                <Field\r\n                  name=\"namaCustomer\"\r\n                  type=\"text\"\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  component={renderField}\r\n                  label=\"Nama Customer\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"col-md-4 col-lg-4\">\r\n                <Field\r\n                  name=\"tanggalDaftar\"\r\n                  type=\"date\"\r\n                  component={renderField}\r\n                  label=\"Tanggal Daftar\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12 col-md-12\">\r\n                <div className=\"text-right\">\r\n                  <button\r\n                    id=\"next_1\"\r\n                    name=\"next_1\"\r\n                    className=\"btn btn-primary\"\r\n                    type=\"button\"\r\n                    onClick={() => this.nextStep()}\r\n                  >\r\n                    Next\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={this.state.step2}>\r\n              <div className=\"col-md-4 col-lg-4\">\r\n                <label htmlFor=\"\">Provinsi</label>\r\n                <Field\r\n                  name=\"kodeProvinsi\"\r\n                  type=\"text\"\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  className=\"form-control\"\r\n                  component=\"select\"\r\n                  label=\"Nama Customer\"\r\n                  onChange={this.inputProvinsi()}\r\n                >\r\n                  <option value=\"DEFAULT | DEFAULT\">SILAHKAN PILIH</option>\r\n                  {this.state.listProvinsi.map((kota) => (\r\n                    <option value={kota.kode_provinsi} key={kota.kode_provinsi}>\r\n                      {kota.nama_provinsi}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n              </div>\r\n              <div className=\"col-md-4 col-lg-4\">\r\n                <label htmlFor=\"\">Kota</label>\r\n                <Field\r\n                  name=\"kodeKota\"\r\n                  type=\"text\"\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  className=\"form-control\"\r\n                  component=\"select\"\r\n                  label=\"Nama Customer\"\r\n                  onChange={this.inputKota()}\r\n                >\r\n                  <option value=\"DEFAULT | DEFAULT\">SILAHKAN PILIH</option>\r\n                  {this.state.pilihanKota.map((kota) => (\r\n                    <option value={kota.kode_kota} key={kota.kode_kota}>\r\n                      {kota.nama_kota}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n              </div>\r\n              <div className=\"col-md-4 col-lg-4\">\r\n                <label htmlFor=\"\">Area</label>\r\n                <Field\r\n                  name=\"kodeKecamatan\"\r\n                  type=\"text\"\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  className=\"form-control\"\r\n                  component=\"select\"\r\n                  label=\"Nama Customer\"\r\n                  onChange={this.inputArea()}\r\n                >\r\n                  <option value=\"DEFAULT | DEFAULT\">SILAHKAN PILIH</option>\r\n                  {this.state.pilihanArea.map((area) => (\r\n                    <option\r\n                      value={area.kode_kecamatan}\r\n                      key={area.kode_kecamatan}\r\n                    >\r\n                      {area.nama_kecamatan}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n              </div>\r\n              <div className=\"col-md-4 col-lg-4\">\r\n                <Field\r\n                  name=\"kodePos\"\r\n                  type=\"number\"\r\n                  component={renderField}\r\n                  label=\"Kode Pos\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6 col-lg-6\">\r\n                <Field\r\n                  name=\"alamat\"\r\n                  type=\"text\"\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  component={renderField}\r\n                  label=\"Alamat\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12 col-md-12\">\r\n                <div className=\"row\">\r\n                  <div className=\"text-left col-md-6\">\r\n                    <button\r\n                      id=\"back_1\"\r\n                      name=\"back_1\"\r\n                      className=\"btn btn-primary\"\r\n                      type=\"button\"\r\n                      onClick={() => this.prevStep()}\r\n                    >\r\n                      Back\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"text-right col-md-6\">\r\n                    <button\r\n                      id=\"next_2\"\r\n                      name=\"next_2\"\r\n                      className=\"btn btn-primary\"\r\n                      type=\"button\"\r\n                      onClick={() => this.nextStep()}\r\n                    >\r\n                      Next\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={this.state.step3}>\r\n              <div className=\"col-md-4 col-lg-4\">\r\n                <Field\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  component={renderField}\r\n                  label=\"Email\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 col-lg-4\">\r\n                <Field\r\n                  name=\"telepon\"\r\n                  type=\"number\"\r\n                  component={renderField}\r\n                  label=\"Nomor Telepon\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 col-lg-4\">\r\n                <Field\r\n                  name=\"contactPerson\"\r\n                  type=\"number\"\r\n                  component={renderField}\r\n                  label=\"Contact Person\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 col-lg-4\">\r\n                <Field\r\n                  name=\"fax\"\r\n                  type=\"number\"\r\n                  component={renderField}\r\n                  label=\"Fax\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 col-lg-4\">\r\n                <Field\r\n                  name=\"handPhone\"\r\n                  type=\"number\"\r\n                  component={renderField}\r\n                  label=\"Handphone\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12 col-md-12\">\r\n                <div className=\"row\">\r\n                  <div className=\"text-left col-md-6\">\r\n                    <button\r\n                      id=\"back_2\"\r\n                      name=\"back_2\"\r\n                      className=\"btn btn-primary\"\r\n                      type=\"button\"\r\n                      onClick={() => this.prevStep()}\r\n                    >\r\n                      Back\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"text-right col-md-6\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={this.props.onSend}\r\n                      className=\"btn btn-primary\"\r\n                      onClick={() =>\r\n                        this.setState({\r\n                          step: 0,\r\n                          step1: \"row\",\r\n                          step2: \"row d-none\",\r\n                          step3: \"row d-none\",\r\n                        })\r\n                      }\r\n                    >\r\n                      {this.props.onSend ? (\r\n                        <span\r\n                          className=\"spinner-border spinner-border-sm mr-3\"\r\n                          aria-hidden=\"true\"\r\n                        ></span>\r\n                      ) : null}\r\n                      Simpan\r\n                      <i className=\"fa fa-paper-plane ml-3\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormCustomer = reduxForm({\r\n  form: \"Customer\",\r\n  validate: validationCustomer,\r\n  enableReinitialize: true,\r\n})(FormCustomer);\r\nexport default connect()(FormCustomer);\r\n","import React, { Component } from \"react\";\r\nimport Stepper from \"react-stepper-horizontal\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport validationCustomer from \"../../Validations/validationCustomer\";\r\nimport { renderField } from \"../../renderField\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport { getToday } from \"../../getDate\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    initialValues: {\r\n      alamat: state.provinsi.editCustomer.alamat,\r\n      email: state.provinsi.editCustomer.email,\r\n      handPhone: state.provinsi.editCustomer.handPhone,\r\n      kodeArea: state.provinsi.editCustomer.kodeArea,\r\n      kodeCustomer: state.provinsi.editCustomer.kodeCustomer,\r\n      kodeExt: state.provinsi.editCustomer.kodeExt,\r\n      kodeKota: state.provinsi.editCustomer.kodeKota,\r\n      kodePos: state.provinsi.editCustomer.kodePos,\r\n      namaCustomer: state.provinsi.editCustomer.namaCustomer,\r\n      namaToko: state.provinsi.editCustomer.namaToko,\r\n      status: state.provinsi.editCustomer.status,\r\n      tanggalDaftar: state.provinsi.editCustomer.tanggalDaftar,\r\n      telepon: state.provinsi.editCustomer.telepon,\r\n      fax: state.provinsi.editCustomer.fax,\r\n      contactPerson: state.provinsi.editCustomer.contactPerson,\r\n    },\r\n  };\r\n};\r\n\r\nclass FormCustomerEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      step: 0,\r\n      step1: \"row\",\r\n      step2: \"row d-none\",\r\n      step3: \"row d-none\",\r\n      listKota: [],\r\n      listArea: [],\r\n      listProvinsi: [],\r\n      pilihanArea: [],\r\n      pilihanKota: [],\r\n    };\r\n  }\r\n\r\n  nextStep = () => {\r\n    const { step } = this.state;\r\n    if (step === 0) {\r\n      this.setState({ step: step + 1, step2: \"row\", step1: \"row d-none\" });\r\n    } else if (step === 1) {\r\n      this.setState({ step: step + 1, step2: \"row d-none\", step3: \"row\" });\r\n    }\r\n  };\r\n\r\n  prevStep = () => {\r\n    const { step } = this.state;\r\n    if (step === 1) {\r\n      this.setState({ step: step - 1, step2: \"row d-none\", step1: \"row\" });\r\n    } else if (step === 2) {\r\n      this.setState({ step: step - 1, step3: \"row d-none\", step2: \"row\" });\r\n    }\r\n  };\r\n\r\n  inputKota = (input) => (e) => {\r\n    var result_explode = e.target.value.split(\"|\");\r\n    this.setState({\r\n      kodeKota: result_explode[0],\r\n      namaKota: result_explode[1],\r\n    });\r\n  };\r\n  inputArea = (input) => (e) => {\r\n    var result_explode = e.target.value.split(\"|\");\r\n    this.setState({\r\n      kodeArea: result_explode[0],\r\n      namaArea: result_explode[1],\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"kota/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listKota: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n\r\n    AxiosMasterGet(\"kecamatan/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listArea: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    AxiosMasterGet(\"provinsi/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listProvinsi: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    this.props.change(\"tanggalDaftar\", getToday);\r\n  }\r\n\r\n  inputProvinsi = (input) => (e) => {\r\n    var kotaPilihan = this.state.listKota.filter(\r\n      (list) => list.kode_provinsi === e.target.value\r\n    );\r\n    this.setState({\r\n      pilihanKota: kotaPilihan,\r\n    });\r\n  };\r\n  inputKota = (input) => (e) => {\r\n    var areaPilihan = this.state.listArea.filter(\r\n      (list) => list.kode_kota === e.target.value\r\n    );\r\n    this.setState({\r\n      pilihanArea: areaPilihan,\r\n    });\r\n  };\r\n  render() {\r\n    const { step } = this.state;\r\n    return (\r\n      <div className=\"col-lg-12 col-md-12\">\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <Stepper\r\n                steps={[\r\n                  { title: \"Data Diri\" },\r\n                  { title: \"Data Lokasi\" },\r\n                  { title: \"Data Nomor\" },\r\n                  // { title: \"Data Rekening\" },\r\n                ]}\r\n                activeStep={step}\r\n              />\r\n            </div>\r\n            <div className={this.state.step1}>\r\n              <div className=\"col-md-4 col-lg-4\">\r\n                <Field\r\n                  name=\"kodeExt\"\r\n                  type=\"text\"\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  component={renderField}\r\n                  label=\"Kode Ext\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 col-lg-4\">\r\n                <Field\r\n                  name=\"namaToko\"\r\n                  type=\"text\"\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  component={renderField}\r\n                  label=\"Nama Toko\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 col-lg-4\">\r\n                <Field\r\n                  name=\"namaCustomer\"\r\n                  type=\"text\"\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  component={renderField}\r\n                  label=\"Nama Customer\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 col-lg-4\">\r\n                <Field\r\n                  name=\"tanggalDaftar\"\r\n                  type=\"date\"\r\n                  component={renderField}\r\n                  label=\"Tanggal Daftar\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12 col-md-12\">\r\n                <div className=\"text-right\">\r\n                  <button\r\n                    id=\"next_1\"\r\n                    name=\"next_1\"\r\n                    className=\"btn btn-primary\"\r\n                    type=\"button\"\r\n                    onClick={() => this.nextStep()}\r\n                  >\r\n                    Next\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={this.state.step2}>\r\n              <div className=\"col-md-4 col-lg-4\">\r\n                <label htmlFor=\"\">Provinsi</label>\r\n                <Field\r\n                  name=\"kodeProvinsi\"\r\n                  type=\"text\"\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  className=\"form-control\"\r\n                  component=\"select\"\r\n                  label=\"Nama Customer\"\r\n                  onChange={this.inputProvinsi()}\r\n                >\r\n                  <option value=\"DEFAULT | DEFAULT\">SILAHKAN PILIH</option>\r\n                  {this.state.listProvinsi.map((kota) => (\r\n                    <option value={kota.kode_provinsi} key={kota.kode_provinsi}>\r\n                      {kota.nama_provinsi}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n              </div>\r\n              <div className=\"col-md-4 col-lg-4\">\r\n                <label htmlFor=\"\">Kota</label>\r\n                <Field\r\n                  name=\"kodeKota\"\r\n                  type=\"text\"\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  className=\"form-control\"\r\n                  component=\"select\"\r\n                  label=\"Nama Customer\"\r\n                  onChange={this.inputKota()}\r\n                >\r\n                  <option value=\"DEFAULT | DEFAULT\">SILAHKAN PILIH</option>\r\n                  {this.state.pilihanKota.map((kota) => (\r\n                    <option value={kota.kode_kota} key={kota.kode_kota}>\r\n                      {kota.nama_kota}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n              </div>\r\n              <div className=\"col-md-4 col-lg-4\">\r\n                <label htmlFor=\"\">Area</label>\r\n                <Field\r\n                  name=\"kodeKecamatan\"\r\n                  type=\"text\"\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  className=\"form-control\"\r\n                  component=\"select\"\r\n                  label=\"Nama Customer\"\r\n                  onChange={this.inputArea()}\r\n                >\r\n                  <option value=\"DEFAULT | DEFAULT\">SILAHKAN PILIH</option>\r\n                  {this.state.pilihanArea.map((area) => (\r\n                    <option\r\n                      value={area.kode_kecamatan}\r\n                      key={area.kode_kecamatan}\r\n                    >\r\n                      {area.nama_kecamatan}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n              </div>\r\n              <div className=\"col-md-4 col-lg-4\">\r\n                <Field\r\n                  name=\"kodePos\"\r\n                  type=\"number\"\r\n                  component={renderField}\r\n                  label=\"Kode Pos\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6 col-lg-6\">\r\n                <Field\r\n                  name=\"alamat\"\r\n                  type=\"text\"\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  component={renderField}\r\n                  label=\"Alamat\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12 col-md-12\">\r\n                <div className=\"row\">\r\n                  <div className=\"text-left col-md-6\">\r\n                    <button\r\n                      id=\"back_1\"\r\n                      name=\"back_1\"\r\n                      className=\"btn btn-primary\"\r\n                      type=\"button\"\r\n                      onClick={() => this.prevStep()}\r\n                    >\r\n                      Back\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"text-right col-md-6\">\r\n                    <button\r\n                      id=\"next_2\"\r\n                      name=\"next_2\"\r\n                      className=\"btn btn-primary\"\r\n                      type=\"button\"\r\n                      onClick={() => this.nextStep()}\r\n                    >\r\n                      Next\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={this.state.step3}>\r\n              <div className=\"col-md-4 col-lg-4\">\r\n                <Field\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  component={renderField}\r\n                  label=\"Email\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 col-lg-4\">\r\n                <Field\r\n                  name=\"telepon\"\r\n                  type=\"number\"\r\n                  component={renderField}\r\n                  label=\"Nomor Telepon\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 col-lg-4\">\r\n                <Field\r\n                  name=\"contactPerson\"\r\n                  type=\"number\"\r\n                  component={renderField}\r\n                  label=\"Contact Person\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 col-lg-4\">\r\n                <Field\r\n                  name=\"fax\"\r\n                  type=\"number\"\r\n                  component={renderField}\r\n                  label=\"Fax\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 col-lg-4\">\r\n                <Field\r\n                  name=\"handPhone\"\r\n                  type=\"number\"\r\n                  component={renderField}\r\n                  label=\"Handphone\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12 col-md-12\">\r\n                <div className=\"row\">\r\n                  <div className=\"text-left col-md-6\">\r\n                    <button\r\n                      id=\"back_2\"\r\n                      name=\"back_2\"\r\n                      className=\"btn btn-primary\"\r\n                      type=\"button\"\r\n                      onClick={() => this.prevStep()}\r\n                    >\r\n                      Back\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"text-right col-md-6\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-primary\"\r\n                      onSubmit={this.props.onSend}\r\n                      onClick={() =>\r\n                        this.setState({\r\n                          step: 0,\r\n                          step1: \"row\",\r\n                          step2: \"row d-none\",\r\n                          step3: \"row d-none\",\r\n                        })\r\n                      }\r\n                    >\r\n                      {this.props.onSend ? (\r\n                        <span\r\n                          className=\"spinner-border spinner-border-sm mr-3\"\r\n                          aria-hidden=\"true\"\r\n                        ></span>\r\n                      ) : null}\r\n                      Simpan\r\n                      <i className=\"fa fa-paper-plane ml-3\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormCustomerEdit = reduxForm({\r\n  form: \"CustomerEdit\",\r\n  validate: validationCustomer,\r\n  enableReinitialize: true,\r\n})(FormCustomerEdit);\r\nexport default connect(maptostate, null)(FormCustomerEdit);\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport,\r\n} from \"react-bootstrap-table2-toolkit\";\r\n\r\nimport FormCustomer from \"./Component/FormCustomer\";\r\nimport { connect } from \"react-redux\";\r\nimport { editcustomer, getcustomerList } from \"../actions/customerAction\";\r\nimport notrespond from \"../Images/500.svg\";\r\nimport Swal from \"sweetalert2\";\r\nimport FormCustomerEdit from \"./Component/FormCustomerEdit\";\r\nimport { reset } from \"redux-form\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { berhasil, gagal, LogData, reactive } from \"../Alert\";\r\nimport { AxiosMasterDelete, AxiosMasterPost, AxiosMasterPut } from \"../Axios\";\r\nimport { hideModal, showModal } from \"../actions/ModalAction\";\r\nimport ModalMasterData from \"./Component/ModalMasterData\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport TourGuide from \"../TourGuide\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\n\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\n\r\nfunction hapus(dispatch, kode) {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      let data = {\r\n        data: {\r\n          kodeCustomer: kode,\r\n        },\r\n      };\r\n      AxiosMasterDelete(\"customer/delete/\" + kode)\r\n        .then((res) =>\r\n          berhasil(\"Data Berhasil Dihapus!\")\r\n            .then(() => LogData(\"Data Berhasil Dihapus Di Customer\", data))\r\n            .then(() => dispatch(getcustomerList()))\r\n        )\r\n        .catch((err) =>\r\n          gagal(\"Data Gagal Dihapus!\").then(() =>\r\n            LogData(\"Data Gagal Dihapus Di Customer\", data, err)\r\n          )\r\n        );\r\n    }\r\n  });\r\n}\r\n\r\nconst rowExpand = {\r\n  renderer: (row) => (\r\n    <div>\r\n      <p>{`Nama Kota: ${row.kode_kota}`}</p>\r\n      <p>{`Email: ${row.email == null ? \"-\" : row.email} | Alamat : ${\r\n        row.alamat == null ? \"-\" : row.alamat\r\n      } | Kode Pos : ${row.kode_pos == null ? \"-\" : row.kode_pos} | Telepon : ${\r\n        row.no_telp == null ? \"-\" : row.no_telp\r\n      }| Handphone: ${row.no_hp == null ? \"-\" : row.no_hp}`}</p>\r\n      <p>{`Kode Ext : ${row.kode_ext == null ? \"-\" : row.kode_ext}`}</p>\r\n    </div>\r\n  ),\r\n};\r\n\r\nconst maptoStae = (state) => {\r\n  return {\r\n    customerList: state.provinsi.customer,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n  };\r\n};\r\n\r\nclass Customer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Customer: [],\r\n      response: \"\",\r\n      columns: [\r\n        {\r\n          dataField: \"nama_customer\",\r\n          text: \"Nama Customer\",\r\n        },\r\n        {\r\n          dataField: \"tanggal_daftar\",\r\n          text: \"Tanggal Daftar\",\r\n        },\r\n        {\r\n          dataField: \"nama_toko\",\r\n          text: \"Nama Toko\",\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() => hapus(this.props.dispatch, row.kode_customer)}\r\n                  data-tut=\"reactour_3\"\r\n                >\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                  HAPUS\r\n                </button>\r\n                <button\r\n                  data-tut=\"reactour_4\"\r\n                  className=\"btn btn-warning\"\r\n                  onClick={() =>\r\n                    this.props.dispatch(\r\n                      editcustomer(\r\n                        row.alamat,\r\n                        row.email,\r\n                        row.no_hp,\r\n                        row.kode_kecamatan,\r\n                        row.kode_customer,\r\n                        row.kode_ext,\r\n                        row.kode_kota,\r\n                        row.kode_pos,\r\n                        row.nama_customer,\r\n                        row.nama_toko,\r\n                        row.tanggalDaftar,\r\n                        row.no_telp,\r\n                        row.kode_provinsi,\r\n                        row.fax,\r\n                        row.contact_person,\r\n                        this.editModal()\r\n                      )\r\n                    )\r\n                  }\r\n                >\r\n                  <i className=\"fa fa-edit mr-2\"></i>\r\n                  EDIT\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getcustomerList());\r\n  }\r\n\r\n  updateStatus = (input) => {\r\n    console.log(input);\r\n    this.setState({\r\n      response: input,\r\n    });\r\n    this.props.dispatch(getcustomerList());\r\n  };\r\n\r\n  handleSubmit(hasil) {\r\n    let data = {\r\n      tanggal_daftar: hasil.tanggalDaftar,\r\n      kode_customer: hasil.kodeCustomer,\r\n      nama_customer: hasil.namaCustomer,\r\n      nama_toko: hasil.namaToko,\r\n      kode_ext: hasil.kodeExt,\r\n      kode_provinsi: hasil.kodeProvinsi,\r\n      kode_kota: hasil.kodeKota,\r\n      kode_kecamatan: hasil.kodeKecamatan,\r\n      alamat: hasil.alamat,\r\n      kode_pos: hasil.kodePos,\r\n      contact_person: hasil.contactPerson,\r\n      no_telp: hasil.telepon,\r\n      no_hp: hasil.handPhone,\r\n      fax: hasil.fax,\r\n      email: hasil.email,\r\n    };\r\n    let dataEdit = {\r\n      tanggal_daftar: hasil.tanggalDaftar,\r\n      nama_customer: hasil.namaCustomer,\r\n      nama_toko: hasil.namaToko,\r\n      kode_ext: hasil.kodeExt,\r\n      kode_provinsi: hasil.kodeProvinsi,\r\n      kode_kota: hasil.kodeKota,\r\n      kode_kecamatan: hasil.kodeKecamatan,\r\n      alamat: hasil.alamat,\r\n      kode_pos: hasil.kodePos,\r\n      contact_person: hasil.contactPerson,\r\n      no_telp: hasil.telepon,\r\n      no_hp: hasil.handPhone,\r\n      fax: hasil.fax,\r\n      email: hasil.email,\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    AxiosMasterPost(\"customer/add\", data)\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) =>\r\n        berhasil(\"Data Berhasil Ditambah!\")\r\n          .then(() => LogData(\"Data Berhasil Ditambah Di Customer\", data))\r\n          .then(() => this.props.dispatch(getcustomerList()))\r\n          .then(() => this.props.dispatch(reset(\"Customer\")))\r\n      )\r\n      .catch((err) =>\r\n        this.handleReactive(\r\n          err,\r\n          hasil.kodeCustomer,\r\n          dataEdit,\r\n          this.props.dispatch(finishSend())\r\n        )\r\n      );\r\n  }\r\n\r\n  handleEdit(hasil) {\r\n    let data = {\r\n      tanggal_daftar: hasil.tanggalDaftar,\r\n      nama_customer: hasil.namaCustomer,\r\n      nama_toko: hasil.namaToko,\r\n      kode_ext: hasil.kodeExt,\r\n      kode_provinsi: hasil.kodeProvinsi,\r\n      kode_kota: hasil.kodeKota,\r\n      kode_kecamatan: hasil.kodeKecamatan,\r\n      alamat: hasil.alamat,\r\n      kode_pos: hasil.kodePos,\r\n      contact_person: hasil.contactPerson,\r\n      no_telp: hasil.telepon,\r\n      no_hp: hasil.handPhone,\r\n      fax: hasil.fax,\r\n      email: hasil.email,\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    AxiosMasterPut(\"customer/edit/\" + hasil.kodeCustomer, data)\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) =>\r\n        berhasil(\"Data Berhasil Diubah!\")\r\n          .then(() => LogData(\"Data Berhasil Diubah Di Customer\", data))\r\n          .then(() => this.props.dispatch(getcustomerList()))\r\n      )\r\n      .catch((err) =>\r\n        gagal(\"Data Gagal Diubah!\")\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => LogData(\"Data Gagal Diubah Di Customer\", data, err))\r\n          .then(() => this.props.dispatch(hideModal()))\r\n      );\r\n  }\r\n  tambahModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({ isEdit: false });\r\n  }\r\n  editModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n  handleReactive(err, kode, data) {\r\n    this.props.dispatch(hideModal());\r\n    let error = err.response.data;\r\n    let check = error.includes(\"deleted\");\r\n    check\r\n      ? reactive(\r\n          err,\r\n          kode,\r\n          \"customer/reactive/\",\r\n          data,\r\n          \"customer/edit/\"\r\n        ).then(() => this.props.dispatch(getcustomerList()))\r\n      : gagal(\"Data Gagal Ditambahkan\");\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div id=\"notif_alert\" className={this.props.alert} role=\"alert\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n          <strong>Error - </strong> Tidak Bisa Mengambil Data\r\n        </div>\r\n        <TourGuide\r\n          tourConfig={[\r\n            `Untuk Menambahkan Data Customer, Tekan Tombol ini Dan Isi kolom yang disediakan`,\r\n            `Ini adalah Data Customer yang sudah tersimpan`,\r\n            `Ini adalah tombol untuk menghapus data pada baris yang dipilih`,\r\n            `Ini adalah tombol untuk mengubah data pada baris yang dipilih`,\r\n          ]}\r\n        />\r\n        <ModalMasterData\r\n          content={\r\n            this.state.isEdit ? (\r\n              <FormCustomerEdit\r\n                onSubmit={(data) => this.handleEdit(data)}\r\n                onSend={this.props.onSend}\r\n              />\r\n            ) : (\r\n              <FormCustomer\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n                onSend={this.props.onSend}\r\n              />\r\n            )\r\n          }\r\n          title={\r\n            this.state.isEdit ? \"Edit Data Customer\" : \"Tambah Data Customer\"\r\n          }\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Data Customer\" />\r\n              <div className=\"card-body\">\r\n                <form action=\"#\">\r\n                  <div className=\"form-body\">\r\n                    <div className=\"col-lg-12 col-md-12\">\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          name=\"simpan\"\r\n                          id=\"simpan\"\r\n                          type=\"button\"\r\n                          className=\"btn btn-info\"\r\n                          onClick={() => this.tambahModal()}\r\n                          data-tut=\"reactour_1\"\r\n                        >\r\n                          Tambah Data Customer\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <div data-tut=\"reactour_2\">\r\n                  {this.props.customerList ? (\r\n                    <ToolkitProvider\r\n                      keyField=\"kode_customer\"\r\n                      data={this.props.customerList}\r\n                      columns={this.state.columns}\r\n                      search\r\n                    >\r\n                      {(props) => (\r\n                        <div className=\"text-left mt-5 mb-3\">\r\n                          <div className=\"text-right\">\r\n                            <SearchBar\r\n                              {...props.searchProps}\r\n                              className=\"form-control\"\r\n                              placeholder=\"Pencarian\"\r\n                              style={{ margin: 0, top: \"50%\" }}\r\n                            />\r\n                          </div>\r\n                          <hr />\r\n                          <BootstrapTable\r\n                            {...props.baseProps}\r\n                            striped\r\n                            hover\r\n                            condensed\r\n                            bordered={true}\r\n                            headerClasses=\"header-table\"\r\n                            expandRow={rowExpand}\r\n                            pagination={paginationFactory()}\r\n                          />\r\n                          <ExportCSVButton\r\n                            {...props.csvProps}\r\n                            className=\"btn btn-primary\"\r\n                          >\r\n                            Export CSV\r\n                          </ExportCSVButton>\r\n                        </div>\r\n                      )}\r\n                    </ToolkitProvider>\r\n                  ) : (\r\n                    <div>\r\n                      {this.props.error ? (\r\n                        <div className=\"text-center\">\r\n                          <img\r\n                            src={notrespond}\r\n                            style={{ width: \"30%\" }}\r\n                            alt=\"Not Respond\"\r\n                          />\r\n                          <br />\r\n                          <h4>Request API Gagal, Silahkan Refresh</h4>\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton width={\"100%\"} height={180} />\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoStae, null)(Customer);\r\n","module.exports = __webpack_public_path__ + \"static/media/500.c22f1e39.svg\";","import { Modal } from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { hideModal } from \"../../actions/ModalAction\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    show: state.modal.show,\r\n  };\r\n};\r\nclass ModalGlobal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <Modal\r\n        show={this.props.show}\r\n        onHide={() => this.props.dispatch(hideModal())}\r\n        dialogClassName=\"modal-xl\"\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header\r\n          closeButton\r\n          style={{ backgroundColor: \"#5F76E8\", color: \"#ffffff\" }}\r\n        >\r\n          <Modal.Title>{this.props.title || \"\"}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{this.props.content || \"\"}</Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoState, null)(ModalGlobal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { hideGuide } from \"./actions/ModalAction\";\r\nimport Tour from \"reactour\";\r\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\r\n\r\nconst mapToState = (state) => {\r\n  return {\r\n    showTourGuide: state.provinsi.showTourGuide,\r\n  };\r\n};\r\nclass TourGuide extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  disableBody = (target) => disableBodyScroll(target);\r\n  enableBody = (target) => enableBodyScroll(target);\r\n  render() {\r\n    let tourConfig = this.props.tourConfig.map((list, index) => {\r\n      let data = {\r\n        selector: '[data-tut=\"reactour_' + ++index + '\"]',\r\n        content: list,\r\n      };\r\n      return data;\r\n    });\r\n    console.log(tourConfig);\r\n    return (\r\n      <Tour\r\n        onRequestClose={() => this.props.dispatch(hideGuide())}\r\n        steps={tourConfig}\r\n        isOpen={this.props.showTourGuide}\r\n        maskClassName=\"mask\"\r\n        className=\"helper\"\r\n        rounded={5}\r\n        accentColor=\"#5cb7b7\"\r\n        onAfterOpen={this.disableBody}\r\n        onBeforeClose={this.enableBody}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapToState, null)(TourGuide);\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Stepper = require('./Stepper');\n\nvar _Stepper2 = _interopRequireDefault(_Stepper);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Stepper2.default;"],"sourceRoot":""}