{"version":3,"sources":["../node_modules/redux-form/es/index.js","DataMaster/Component/FormKotaEdit.jsx","DataMaster/Kota.jsx","Images/500.svg","DataMaster/Component/ModalMasterData.jsx","TourGuide.jsx","DataMaster/Component/Table.jsx","Validations/validationProvinsi.js","DataMaster/Component/AreaProvinsiKota.jsx"],"names":["reset","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","change","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors","FormKotaEdit","props","state","response","status","listProvinsi","AxiosMasterGet","then","res","setState","data","catch","err","console","log","kodenya","this","kode","namanya","nama","onSubmit","handleSubmit","className","Field","name","replace","type","normalize","value","toUpperCase","component","renderField","readOnly","label","renderFieldSelect","kode_ext","options","map","obj","kode_provinsi","nama_provinsi","id","disabled","onSend","aria-hidden","Component","reduxForm","form","validate","validationProvinsi","enableReinitialize","connect","initialValues","provinsi","editKota","KodeKota","kodeKota","NamaKota","namaKota","kodeProvinsi","defaultSorted","dataField","order","Kota","provinsi_array","columns","text","sort","headerStyle","width","csvExport","formatter","rowContent","row","onClick","dispatch","kode_kota","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","AxiosMasterDelete","hideModal","berhasil","getKotaList","gagal","data-tut","nama_kota","status_aktif","editModal","isi","progressSend","AxiosMasterPost","finishSend","LogData","handleReactive","statusAktif","AxiosMasterPut","includes","reactive","showModal","isEdit","style","color","alert","role","data-dismiss","aria-label","TourGuide","tourConfig","ModalMasterData","content","handlerEdit","from","AreaProvinsiKota","handlerSubmit","HeaderCard","tambahModal","KotaList","Table","namaKey","error","src","notrespond","alt","height","kota","module","exports","ModalGlobal","show","onHide","dialogClassName","backdrop","keyboard","Header","closeButton","backgroundColor","Title","Body","modal","disableBody","target","disableBodyScroll","enableBody","enableBodyScroll","list","index","selector","onRequestClose","hideGuide","steps","isOpen","showTourGuide","maskClassName","rounded","accentColor","onAfterOpen","onBeforeClose","SearchBar","Search","ExportCSVButton","CSVExport","rowStyle","rowIndex","borderTop","bootstrap4","keyField","search","searchProps","placeholder","margin","baseProps","headerClasses","striped","hover","bordered","pagination","paginationFactory","csvProps","values","errors","KodeProvinsi","length","NamaProvinsi","KodeArea","NamaArea","KodeLokasi","NamaLokasi","listKota","isiNama","isikode","limit","config","Error","editProvinsi"],"mappings":"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","file":"static/js/37.af534238.chunk.js","sourcesContent":["import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { validationProvinsi } from \"../../Validations/validationProvinsi\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    initialValues: {\r\n      status: state.provinsi.editKota.status,\r\n      KodeKota: state.provinsi.editKota.kodeKota,\r\n      NamaKota: state.provinsi.editKota.namaKota,\r\n      kodeProvinsi: state.provinsi.editKota.kodeProvinsi,\r\n    },\r\n  };\r\n};\r\nclass FormKotaEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      response: \"\",\r\n      status: \"AKTIF\",\r\n      listProvinsi: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"provinsi/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listProvinsi: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    var kodenya = this.props.kode;\r\n    var namanya = this.props.nama;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-2\">\r\n              <Field\r\n                name={kodenya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                readOnly={true}\r\n                label={this.props.kode}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div className=\"form-group\">\r\n                <Field\r\n                  component={renderFieldSelect}\r\n                  label={this.props.kode_ext}\r\n                  name=\"kodeProvinsi\"\r\n                  value={this.props.status}\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  className=\"form-control\"\r\n                  options={this.state.listProvinsi.map((obj) => {\r\n                    var payload = {\r\n                      value: obj.kode_provinsi,\r\n                      name: obj.nama_provinsi,\r\n                    };\r\n                    return payload;\r\n                  })}\r\n                ></Field>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <Field\r\n                name={namanya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                label={this.props.nama}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  type=\"submit\"\r\n                  id=\"simpan\"\r\n                  className=\"btn btn-primary\"\r\n                  disabled={this.props.onSend}\r\n                >\r\n                  {this.props.onSend ? (\r\n                    <span\r\n                      className=\"spinner-border spinner-border-sm mr-3\"\r\n                      aria-hidden=\"true\"\r\n                    ></span>\r\n                  ) : null}\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormKotaEdit = reduxForm({\r\n  form: \"KotaEdit\", // a unique identifier for this form\r\n  validate: validationProvinsi, // <--- validation function given to redux-form\r\n  enableReinitialize: true,\r\n})(FormKotaEdit);\r\nexport default connect(maptoState, null)(FormKotaEdit);\r\n","import React, { Component } from \"react\";\r\nimport AreaProvinsiKota from \"./Component/AreaProvinsiKota\";\r\nimport Table from \"./Component/Table\";\r\nimport { editKota, getKotaList } from \"../actions/kotaAction\";\r\nimport { connect } from \"react-redux\";\r\nimport notrespond from \"../Images/500.svg\";\r\nimport Swal from \"sweetalert2\";\r\nimport FormKotaEdit from \"./Component/FormKotaEdit\";\r\nimport { reset } from \"redux-form\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { AxiosMasterDelete, AxiosMasterPost, AxiosMasterPut } from \"../Axios\";\r\nimport { berhasil, gagal, LogData, reactive } from \"../Alert\";\r\nimport { hideModal, showModal } from \"../actions/ModalAction\";\r\nimport ModalMasterData from \"./Component/ModalMasterData\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport TourGuide from \"../TourGuide\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\n\r\nfunction hapus(dispatch, kode) {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      AxiosMasterDelete(\"kota/delete/\" + kode)\r\n        .then(() => dispatch(hideModal()))\r\n        .then((res) => berhasil(\"Data Berbasil Dihapus\"))\r\n        .then(() => dispatch(getKotaList()))\r\n        .catch((err) => gagal(\"Data Gagal Dihapus\"));\r\n    }\r\n  });\r\n}\r\n\r\nconst defaultSorted = [\r\n  {\r\n    dataField: \"kodeKota\",\r\n    order: \"asc\",\r\n  },\r\n];\r\nconst mapToState = (state) => {\r\n  return {\r\n    KotaList: state.provinsi.kota,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\n\r\nclass Kota extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      provinsi: [],\r\n      provinsi_array: [],\r\n      response: \"\",\r\n      columns: [\r\n        {\r\n          dataField: \"kode_kota\",\r\n          text: \"Kode Kota\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"15%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"nama_kota\",\r\n          text: \"Nama Kota\",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"kode_provinsi\",\r\n          text: \"Provinsi\",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() => hapus(this.props.dispatch, row.kode_kota)}\r\n                  data-tut=\"reactour_3\"\r\n                >\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                  HAPUS\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-warning mr-2\"\r\n                  data-tut=\"reactour_4\"\r\n                  onClick={() =>\r\n                    this.props.dispatch(\r\n                      editKota(\r\n                        row.kode_kota,\r\n                        row.nama_kota,\r\n                        row.kode_provinsi,\r\n                        row.status_aktif,\r\n                        this.editModal()\r\n                      )\r\n                    )\r\n                  }\r\n                >\r\n                  <i className=\"fa fa-edit mr-1\"></i>\r\n                  EDIT\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getKotaList());\r\n  }\r\n\r\n  handlerSubmit(data) {\r\n    const isi = {\r\n      nama_kota: data.NamaKota,\r\n      kode_kota: data.KodeKota,\r\n      kode_provinsi: data.kodeProvinsi,\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    console.log(isi);\r\n    AxiosMasterPost(\"kota/add\", isi)\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) =>\r\n        berhasil(\"Data Berasil Ditambahkan ke Kota\")\r\n          .then(() => LogData(\"Data Berhasil Ditambahkan ke Kota\", data))\r\n          .then(() => this.props.dispatch(getKotaList()))\r\n      )\r\n      .catch((err) =>\r\n        this.handleReactive(err, data.KodeKota, {\r\n          nama_kota: data.NamaKota,\r\n          kode_provinsi: data.kodeProvinsi,\r\n        })\r\n      );\r\n  }\r\n  handlerEdit(data) {\r\n    const isi = {\r\n      statusAktif: data.status ? data.status : \"AKTIF\",\r\n      namaKota: data.NamaKota,\r\n      kodeKota: data.KodeKota,\r\n      kodeProvinsi: data.kodeProvinsi,\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    console.log(isi);\r\n    AxiosMasterPut(\"kota/edit/\" + data.KodeKota, {\r\n      nama_kota: data.NamaKota,\r\n      kode_provinsi: data.kodeProvinsi,\r\n    })\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) =>\r\n        berhasil(\"Data Berhasil Dirubah\").then(() =>\r\n          this.props.dispatch(getKotaList())\r\n        )\r\n      )\r\n      .catch((err) =>\r\n        gagal(\"Data Gagal Ditambahkan ke Kota\")\r\n          .then(() => this.props.dispatch(getKotaList()))\r\n          .then(() => this.props.dispatch(reset(\"Provinsi\")))\r\n      );\r\n  }\r\n  handleReactive(err, kode, data) {\r\n    this.props.dispatch(hideModal());\r\n    let error = err.response.data;\r\n    let check = error.includes(\"deleted\");\r\n    check\r\n      ? reactive(err, kode, \"kota/reactive/\", data, \"kota/edit/\").then(() =>\r\n          this.props.dispatch(getKotaList())\r\n        )\r\n      : gagal(\"Data Gagal Ditambahkan\");\r\n  }\r\n  editModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({ isEdit: true });\r\n  }\r\n  tambahModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({ isEdit: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div id=\"notif_alert\" className={this.props.alert} role=\"alert\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n          <strong>Error - </strong> Tidak Bisa Mengambil Data\r\n        </div>\r\n        <TourGuide\r\n          tourConfig={[\r\n            `Untuk Menambahkan Data Kota, Tekan Tombol ini Dan Isi kolom yang disediakan`,\r\n            `Ini adalah data Kota yang sudah tersimpan`,\r\n            `Ini adalah tombol untuk menghapus data pada baris yang dipilih`,\r\n            `Ini adalah tombol untuk mengubah data pada baris yang dipilih`,\r\n          ]}\r\n        />\r\n        <ModalMasterData\r\n          content={\r\n            this.state.isEdit ? (\r\n              <FormKotaEdit\r\n                nama=\"Nama Kota\"\r\n                kode=\"Kode Kota\"\r\n                kode_ext=\"Nama Provinsi\"\r\n                onSubmit={(data) => this.handlerEdit(data)}\r\n                from=\"kota\"\r\n                onSend={this.props.onSend}\r\n              />\r\n            ) : (\r\n              <AreaProvinsiKota\r\n                nama=\"Nama Kota\"\r\n                kode=\"Kode Kota\"\r\n                kode_ext=\"Nama Provinsi\"\r\n                onSubmit={(data) => this.handlerSubmit(data)}\r\n                from=\"kota\"\r\n                onSend={this.props.onSend}\r\n              />\r\n            )\r\n          }\r\n          title={this.state.isEdit ? \"Edit Data Kota\" : \"Tambah Data Kota\"}\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Data Kota\" />\r\n              <div className=\"card-body\">\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"text-right\">\r\n                    <button\r\n                      name=\"simpan\"\r\n                      id=\"simpan\"\r\n                      type=\"button\"\r\n                      className=\"btn btn-info\"\r\n                      onClick={() => this.tambahModal()}\r\n                      data-tut=\"reactour_1\"\r\n                    >\r\n                      Tambah Data Kota\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-12\" data-tut=\"reactour_2\">\r\n                  {this.props.KotaList ? (\r\n                    <Table\r\n                      data={this.props.KotaList}\r\n                      columns={this.state.columns}\r\n                      defaultSorted={defaultSorted}\r\n                      namaKey=\"kodeKota\"\r\n                    />\r\n                  ) : (\r\n                    <div>\r\n                      {this.props.error ? (\r\n                        <div className=\"text-center\">\r\n                          <img\r\n                            src={notrespond}\r\n                            style={{ width: \"30%\" }}\r\n                            alt=\"ACTIVE\"\r\n                          />\r\n                          <br />\r\n                          <h4>Request API Gagal, Silahkan Refresh</h4>\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton width={\"100%\"} height={180} />\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapToState, null)(Kota);\r\n","module.exports = __webpack_public_path__ + \"static/media/500.c22f1e39.svg\";","import { Modal } from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { hideModal } from \"../../actions/ModalAction\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    show: state.modal.show,\r\n  };\r\n};\r\nclass ModalGlobal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <Modal\r\n        show={this.props.show}\r\n        onHide={() => this.props.dispatch(hideModal())}\r\n        dialogClassName=\"modal-xl\"\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header\r\n          closeButton\r\n          style={{ backgroundColor: \"#5F76E8\", color: \"#ffffff\" }}\r\n        >\r\n          <Modal.Title>{this.props.title || \"\"}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{this.props.content || \"\"}</Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoState, null)(ModalGlobal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { hideGuide } from \"./actions/ModalAction\";\r\nimport Tour from \"reactour\";\r\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\r\n\r\nconst mapToState = (state) => {\r\n  return {\r\n    showTourGuide: state.provinsi.showTourGuide,\r\n  };\r\n};\r\nclass TourGuide extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  disableBody = (target) => disableBodyScroll(target);\r\n  enableBody = (target) => enableBodyScroll(target);\r\n  render() {\r\n    let tourConfig = this.props.tourConfig.map((list, index) => {\r\n      let data = {\r\n        selector: '[data-tut=\"reactour_' + ++index + '\"]',\r\n        content: list,\r\n      };\r\n      return data;\r\n    });\r\n    console.log(tourConfig);\r\n    return (\r\n      <Tour\r\n        onRequestClose={() => this.props.dispatch(hideGuide())}\r\n        steps={tourConfig}\r\n        isOpen={this.props.showTourGuide}\r\n        maskClassName=\"mask\"\r\n        className=\"helper\"\r\n        rounded={5}\r\n        accentColor=\"#5cb7b7\"\r\n        onAfterOpen={this.disableBody}\r\n        onBeforeClose={this.enableBody}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapToState, null)(TourGuide);\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport,\r\n} from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  // ROW STYLE TABLE\r\n  rowStyle = (row, rowIndex) => {\r\n    row.index = rowIndex;\r\n    const style = {};\r\n    if (rowIndex % 2 === 0) {\r\n      style.backgroundColor = \"transparent\";\r\n    } else {\r\n      style.backgroundColor = \"#DEDEDE\";\r\n    }\r\n    style.borderTop = \"none\";\r\n\r\n    return style;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ToolkitProvider\r\n        bootstrap4\r\n        keyField={this.props.namaKey ? this.props.namaKey : \"kode\"}\r\n        data={this.props.data}\r\n        columns={this.props.columns}\r\n        defaultSorted={this.props.defaultSorted}\r\n        search\r\n      >\r\n        {(props) => (\r\n          <div className=\"col-lg-12 col-md-12 mt-5\">\r\n            <div className=\"text-right\">\r\n              <SearchBar\r\n                {...props.searchProps}\r\n                className=\"form-control\"\r\n                placeholder=\"Tuliskan Kode / Nama\"\r\n                style={{ margin: 0 }}\r\n              />\r\n            </div>\r\n            <BootstrapTable\r\n              {...props.baseProps}\r\n              headerClasses=\"header-table\"\r\n              striped\r\n              hover\r\n              bordered={true}\r\n              pagination={paginationFactory()}\r\n            />\r\n            <ExportCSVButton {...props.csvProps} className=\"btn btn-primary\">\r\n              Export CSV\r\n            </ExportCSVButton>\r\n          </div>\r\n        )}\r\n      </ToolkitProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(Table);\r\n","export const validationProvinsi = (values) => {\r\n  const errors = {}\r\n  // PROVINSI\r\n  if (!values.KodeProvinsi) {\r\n    errors.KodeProvinsi = 'Tidak Boleh kosong'\r\n  } else if (values.KodeProvinsi.length > 5) {\r\n    errors.KodeProvinsi = 'Tidak Boleh Lebih Dari 5 Karakter'\r\n  }\r\n  if (!values.NamaProvinsi) {\r\n    errors.NamaProvinsi = 'Tidak Boleh kosong'\r\n  }\r\n  // Kota\r\n  if (!values.KodeKota) {\r\n    errors.KodeKota = 'Tidak Boleh kosong'\r\n  } else if (values.KodeKota.length > 5) {\r\n    errors.KodeKota = 'Tidak Boleh Lebih Dari 5 Karakter'\r\n  }\r\n  if(!values.kodeProvinsi){\r\n    errors.kodeProvinsi = \"Tidak Boleh Kosong\"\r\n  } else if(values.kodeProvinsi === \"DEFAULT\"){\r\n    errors.kodeProvinsi = \"Silahkan Pilih Provinsi\"\r\n  }\r\n  if(!values.NamaKota){\r\n    errors.NamaKota = \"Tidak Boleh Kosong\"\r\n  }\r\n  // AREA\r\n  if (!values.KodeArea) {\r\n    errors.KodeArea = 'Tidak Boleh kosong'\r\n  } else if (values.KodeArea.length > 5) {\r\n    errors.KodeArea = 'Tidak Boleh Lebih Dari 5 Karakter'\r\n  }\r\n  if(!values.kodeKota){\r\n    errors.kodeKota = \"Tidak Boleh Kosong\"\r\n  } else if(values.kodeKota === \"DEFAULT\"){\r\n    errors.kodeKota = \"Silahkan Pilih Provinsi\"\r\n  }\r\n  if(!values.NamaArea){\r\n    errors.NamaArea = \"Tidak Boleh Kosong\"\r\n  }\r\n\r\n  //LOKASI\r\n  if (!values.KodeLokasi) {\r\n    errors.KodeLokasi = 'Tidak Boleh kosong'\r\n  } else if (values.KodeLokasi.length > 5) {\r\n    errors.KodeLokasi = 'Tidak Boleh Lebih Dari 5 Karakter'\r\n  }\r\n  if(!values.NamaLokasi){\r\n    errors.NamaLokasi = 'Tidak Boleh kosong'\r\n  }\r\n\r\n  return errors\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { validationProvinsi } from \"../../Validations/validationProvinsi\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport { LogData } from \"../../Alert\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    limit: state.config.limit,\r\n    error: state.alert.Error,\r\n    editProvinsi: state.provinsi.editProvinsi,\r\n  };\r\n};\r\n\r\nclass AreaProvinsiKota extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      response: \"\",\r\n      status: \"AKTIF\",\r\n      listProvinsi: [],\r\n      listKota: [],\r\n      isiNama: \"\",\r\n      isikode: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"provinsi/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listProvinsi: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    AxiosMasterGet(\"kota/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listKota: res.data,\r\n        })\r\n      )\r\n      .catch((err) => LogData(\"Error Get Data Kota\"));\r\n  }\r\n\r\n  render() {\r\n    var kodenya = this.props.kode;\r\n    var namanya = this.props.nama;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-2\">\r\n              <Field\r\n                name={kodenya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                limit={5}\r\n                label={this.props.kode}\r\n              />\r\n            </div>\r\n            {this.props.from === \"kota\" ? (\r\n              <div className=\"col-md-3\">\r\n                <div className=\"form-group\">\r\n                  <Field\r\n                    component={renderFieldSelect}\r\n                    label={this.props.kode_ext}\r\n                    name=\"kodeProvinsi\"\r\n                    value={this.props.status}\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    className=\"form-control\"\r\n                    options={this.state.listProvinsi.map((obj) => {\r\n                      var payload = {\r\n                        value: obj.kode_provinsi,\r\n                        name: obj.nama_provinsi,\r\n                      };\r\n                      return payload;\r\n                    })}\r\n                  ></Field>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            {/* AREA */}\r\n            {this.props.from === \"area\" ? (\r\n              <div className=\"col-md-3\">\r\n                <div className=\"form-group\">\r\n                  <Field\r\n                    component={renderFieldSelect}\r\n                    label={this.props.kode_ext}\r\n                    name={\r\n                      this.props.from === \"kota\" ? \"kodeProvinsi\" : \"kodeKota\"\r\n                    }\r\n                    value={this.props.status}\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    className=\"form-control\"\r\n                    options={this.state.listKota.map((obj) => {\r\n                      var payload = {\r\n                        value: obj.kode_kota,\r\n                        name: obj.nama_kota,\r\n                      };\r\n                      return payload;\r\n                    })}\r\n                  ></Field>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            {/* Lokasi */}\r\n            <div className=\"col-md-3\">\r\n              <Field\r\n                name={namanya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                label={this.props.nama}\r\n              />\r\n            </div>\r\n            {this.props.from === \"area\" ? (\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"kodePos\"\r\n                  component={renderField}\r\n                  type=\"number\"\r\n                  label=\"Kode Pos\"\r\n                  placeholder=\"Masukan Kode Pos\"\r\n                />\r\n              </div>\r\n            ) : null}\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  type=\"submit\"\r\n                  id=\"simpan\"\r\n                  className=\"btn btn-primary\"\r\n                  disabled={this.props.onSend}\r\n                >\r\n                  {this.props.onSend ? (\r\n                    <span\r\n                      className=\"spinner-border spinner-border-sm mr-3\"\r\n                      aria-hidden=\"true\"\r\n                    ></span>\r\n                  ) : null}\r\n                  Submit\r\n                  <i className=\"fa fa-paper-plane ml-3\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAreaProvinsiKota = reduxForm({\r\n  form: \"Provinsi\", // a unique identifier for this form\r\n  validate: validationProvinsi, // <--- validation function given to redux-form\r\n  enableReinitialize: true,\r\n})(AreaProvinsiKota);\r\nexport default connect(maptoState, null)(AreaProvinsiKota);\r\n"],"sourceRoot":""}