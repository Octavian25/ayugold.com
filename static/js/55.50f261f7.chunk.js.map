{"version":3,"sources":["DataMaster/Component/FormSaldoAwalStok.jsx","DataMaster/SaldoAwalStok.jsx","Validations/validasiSaldoAwalPiutang.js"],"names":["FormSaldoAwalStok","props","state","listSupplier","this","dispatch","getListBarang","data","split","target","value","change","onSubmit","handleSubmit","className","htmlFor","Field","name","component","onChange","setKodeBarang","key","KodeBarangList","filter","list","kode_kelompok","map","kode_jenis","nama_jenis","kadar_cetak","label","renderField","type","Component","reduxForm","form","enableReinitialize","validate","validasiSaldoAwalPiutang","connect","provinsi","kodeBarang","SaldoAwalStok","handleChange","input","e","setState","tipeTransksi","listSales","columns","dataField","text","tanggal","sales","loading","gagal","kode_lokasi","localStorage","getItem","progressSend","no_transaksi","noFaktur","jenis_trx","detail_saldo_awal","JSON","parse","AxiosMasterPost","then","finishSend","berhasil","removeItem","getUUID","getListDataSaldoAwalStok","catch","reset","getLokasi","isi","kode_supplier","kode_customer","kode_sales","no_bon","saldo_gr","saldo_rp","titip_gr","titip_rp","bruto","netto","console","log","stringify","hasil","push","setItem","style","width","height","color","to","aria-hidden","HeaderCard","title","renderFieldSelect","options","lokasi","nama_lokasi","placeholder","data-target","data-toggle","GlobalTabel","keyField","dataSaldoAwalStok","disabled","onSend","onClick","sendSaldoAwal","id","tabIndex","role","aria-labelledby","data-dismiss","handlerSimpan","tipe","username","errors"],"mappings":"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","file":"static/js/55.50f261f7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport validasiSaldoAwalPiutang from \"../../Validations/validasiSaldoAwalPiutang\";\r\nimport { renderField } from \"../../renderField\";\r\nimport { getListBarang } from \"../../actions/kodeBarangAction\";\r\n\r\nclass FormSaldoAwalStok extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listSupplier: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListBarang());\r\n  }\r\n  setKodeBarang(data) {\r\n    var barang = data.target.value || \"DEFAULT|DEFAULT|DEFAULT\";\r\n    var split = barang.split(\"|\");\r\n    this.props.change(\"kadar\", split[2]);\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3\">\r\n            <label htmlFor=\"\">Kode Barang</label>\r\n            <Field\r\n              name=\"kode_jenis\"\r\n              component=\"select\"\r\n              className=\"form-control\"\r\n              onChange={(data) => this.setKodeBarang(data)}\r\n            >\r\n              <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                SILAHKAN PILIH\r\n              </option>\r\n              {this.props.KodeBarangList.filter(\r\n                (list) => list.kode_kelompok === \"PERHIASAN\"\r\n              ).map((list) => (\r\n                <option\r\n                  value={\r\n                    list.kode_jenis +\r\n                    \"|\" +\r\n                    list.nama_jenis +\r\n                    \"|\" +\r\n                    list.kadar_cetak\r\n                  }\r\n                  key={list.kode_jenis}\r\n                >\r\n                  {list.nama_jenis}\r\n                </option>\r\n              ))}\r\n            </Field>\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              label=\"Kadar (%)\"\r\n              name=\"kadar\"\r\n              component={renderField}\r\n              type=\"number\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              label=\"Berat (Gr)\"\r\n              name=\"bruto\"\r\n              component={renderField}\r\n              type=\"number\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"text-right\">\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Simpan\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormSaldoAwalStok = reduxForm({\r\n  form: \"FormSaldoAwalStok\",\r\n  enableReinitialize: true,\r\n  validate: validasiSaldoAwalPiutang,\r\n})(FormSaldoAwalStok);\r\nexport default connect((state) => {\r\n  return {\r\n    KodeBarangList: state.provinsi.kodeBarang,\r\n  };\r\n})(FormSaldoAwalStok);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm, reset } from \"redux-form\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport { berhasil, gagal } from \"../Alert\";\r\nimport FormSaldoAwalStok from \"./Component/FormSaldoAwalStok\";\r\nimport { getListDataSaldoAwalStok } from \"../actions/transaksuPenjualanLMAction\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport { getLokasi } from \"../actions/lokasiAction\";\r\nimport { renderFieldSelect } from \"../renderField\";\r\nimport { getListBarang } from \"../actions/kodeBarangAction\";\r\nimport GlobalTabel from \"../GlobalComponent/GlobalTabel\";\r\nimport { AxiosMasterPost } from \"../Axios\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    noFaktur: state.provinsi.noFaktur,\r\n    username: state.provinsi.username,\r\n    dataSaldoAwalStok: state.provinsi.dataSaldoAwalStok,\r\n    lokasi: state.provinsi.lokasi,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\nclass SaldoAwalStok extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tipeTransksi: \"HUTANG\",\r\n      listSales: [],\r\n      columns: [\r\n        {\r\n          dataField: \"kode_jenis\",\r\n          text: \"Kode Jenis\",\r\n        },\r\n        {\r\n          dataField: \"kadar_cetak\",\r\n          text: \"Kadar \",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Berat\",\r\n        },\r\n      ],\r\n      tanggal: \"\",\r\n      sales: \"\",\r\n      loading: false,\r\n    };\r\n  }\r\n  sendSaldoAwal() {\r\n    if (this.state.tanggal === \"\") {\r\n      gagal(\"Mohon isi tanggal\");\r\n      return false;\r\n    } else if (this.state.kode_lokasi === \"\") {\r\n      gagal(\"Mohon isi Lokasi\");\r\n      return false;\r\n    } else if (localStorage.getItem(\"SaldoAwalStock\") === null) {\r\n      gagal(\"Data masih Kosong, Silahkan tambahkan dahulu\");\r\n      return false;\r\n    }\r\n    this.props.dispatch(progressSend());\r\n    let data = {\r\n      no_transaksi: this.props.noFaktur,\r\n      jenis_trx: \"STOCK\",\r\n      tanggal: this.state.tanggal,\r\n      kode_lokasi: this.state.kode_lokasi,\r\n      detail_saldo_awal: JSON.parse(localStorage.getItem(\"SaldoAwalStock\")),\r\n    };\r\n    AxiosMasterPost(\"saldo-awal/simpan\", data)\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => berhasil(\"Saldo Awal Berhasil Disimpan\"))\r\n      .then(() => localStorage.removeItem(\"noFaktur\"))\r\n      .then(() => localStorage.removeItem(\"SaldoAwalStock\"))\r\n      .then(() => this.props.dispatch(getUUID()))\r\n      .then(() => this.props.dispatch(getListDataSaldoAwalStok()))\r\n      .catch(() =>\r\n        gagal(\"Sepertinya ada gangguan, Mohon periksa koneksi anda\").then(() =>\r\n          this.props.dispatch(finishSend())\r\n        )\r\n      );\r\n  }\r\n\r\n  setTipe(e) {\r\n    this.setState({\r\n      tipeTransksi: e.target.value,\r\n    });\r\n    this.props.dispatch(reset(\"FormSaldoAwalPiutang\"));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getListDataSaldoAwalStok());\r\n    this.props.dispatch(getLokasi());\r\n    this.props.dispatch(getListBarang());\r\n  }\r\n  handleChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handlerSimpan(data) {\r\n    var isi = {\r\n      kode_supplier: \"-\",\r\n      kode_customer: \"-\",\r\n      kode_sales: \"-\",\r\n      no_bon: \"-\",\r\n      saldo_gr: 0,\r\n      saldo_rp: 0,\r\n      titip_gr: 0,\r\n      titip_rp: 0,\r\n      kode_jenis: data.kode_jenis.split(\"|\")[0],\r\n      kadar_cetak: data.kode_jenis.split(\"|\")[2],\r\n      bruto: data.bruto,\r\n      netto: 0,\r\n    };\r\n    console.log(JSON.stringify(isi));\r\n    var hasil = JSON.parse(localStorage.getItem(\"SaldoAwalStock\")) || [];\r\n    hasil.push(isi);\r\n    localStorage.setItem(\"SaldoAwalStock\", JSON.stringify(hasil));\r\n    berhasil(\"Data Tersimpan\");\r\n    this.props.dispatch(getListDataSaldoAwalStok());\r\n  }\r\n  render() {\r\n    if (this.state.loading === true) {\r\n      return (\r\n        <div\r\n          className=\"d-flex no-block justify-content-center align-items-center position-relative\"\r\n          style={{ width: \"100%\", height: \"90vh\" }}\r\n        >\r\n          <div>\r\n            <Loader type=\"Oval\" color=\"#00BFFF\" height={70} width={70} />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"container-fluid\">\r\n          <ol className=\"breadcrumb mb-2\">\r\n            <Link to=\"/saldoawal\">\r\n              <button type=\"button\" className=\"btn btn-secondary\">\r\n                <i className=\"fa fa-angle-left mr-3\" aria-hidden=\"true\"></i>{\" \"}\r\n                Back\r\n              </button>\r\n            </Link>\r\n          </ol>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"card\">\r\n                <HeaderCard title=\"Saldo Awal Piutang Customer\" />\r\n                <div className=\"card-body\">\r\n                  <div className=\"col-lg-12 mt-3\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-lg-4\">\r\n                        <label htmlFor=\"\">Tanggal</label>\r\n                        <input\r\n                          type=\"date\"\r\n                          className=\"form-control\"\r\n                          onChange={this.handleChange(\"tanggal\")}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-lg-4\">\r\n                        <Field\r\n                          name=\"kode_lokasi\"\r\n                          component={renderFieldSelect}\r\n                          options={this.props.lokasi.map((list) => {\r\n                            let data = {\r\n                              value: list.kode_lokasi,\r\n                              name: list.nama_lokasi,\r\n                            };\r\n                            return data;\r\n                          })}\r\n                          type=\"text\"\r\n                          label=\"Kode Lokasi\"\r\n                          placeholder=\"Masukan Kode Lokasi\"\r\n                          onChange={(data) =>\r\n                            this.setState({\r\n                              kode_lokasi: data,\r\n                            })\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-lg-12 mt-3\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-lg-6\"></div>\r\n                          <div className=\"col-lg-6\">\r\n                            <div className=\"text-right\">\r\n                              <button\r\n                                className=\"btn btn-primary\"\r\n                                data-target=\"#tambahBarang\"\r\n                                data-toggle=\"modal\"\r\n                              >\r\n                                Tambah Data\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-12 mt-3\">\r\n                            <GlobalTabel\r\n                              keyField=\"kode_jenis\"\r\n                              data={this.props.dataSaldoAwalStok}\r\n                              columns={this.state.columns}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-12\">\r\n                        <div className=\"text-right\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-info\"\r\n                            disabled={this.props.onSend}\r\n                            onClick={() => this.sendSaldoAwal()}\r\n                          >\r\n                            {this.props.onSend ? (\r\n                              <span\r\n                                className=\"spinner-border spinner-border-sm mr-3\"\r\n                                aria-hidden=\"true\"\r\n                              ></span>\r\n                            ) : null}\r\n                            Simpan\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            id=\"tambahBarang\"\r\n            className=\"modal fade\"\r\n            tabIndex=\"-1\"\r\n            role=\"dialog\"\r\n            aria-labelledby=\"primary-header-modalLabel\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            <div className=\"modal-dialog modal-lg\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header modal-colored-header bg-primary\">\r\n                  <h4 className=\"modal-title\" id=\"primary-header-modalLabel\">\r\n                    Tambah Data Transaksi\r\n                  </h4>\r\n                  <button\r\n                    id=\"dismiss_modal1\"\r\n                    name=\"dismiss_modal1\"\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    data-dismiss=\"modal\"\r\n                    aria-hidden=\"true\"\r\n                  >\r\n                    ×\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <FormSaldoAwalStok\r\n                    onSubmit={(data) => this.handlerSimpan(data)}\r\n                    tipe={this.state.tipeTransksi}\r\n                  />\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-light\"\r\n                    data-dismiss=\"modal\"\r\n                    id=\"close_modal\"\r\n                  >\r\n                    Close\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nSaldoAwalStok = reduxForm({\r\n  form: \"SaldoAwalStok\",\r\n  enableReinitialize: true,\r\n})(SaldoAwalStok);\r\nexport default connect(maptostate, null)(SaldoAwalStok);\r\n","const validasiSaldoAwalPiutang = (value) => {\r\n  const errors = {};\r\n  if (!value.kode_customer) {\r\n    errors.kode_customer = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.no_bon) {\r\n    errors.no_bon = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.bruto) {\r\n    errors.bruto = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.netto) {\r\n    errors.netto = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.saldo_gr) {\r\n    errors.saldo_gr = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.saldo_rp) {\r\n    errors.saldo_rp = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.titip_gr) {\r\n    errors.titip_gr = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.titip_rp) {\r\n    errors.titip_rp = \"Tidak Boleh kosong\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default validasiSaldoAwalPiutang;\r\n"],"sourceRoot":""}