{"version":3,"sources":["FICO/Component/FormRongsok.jsx"],"names":["FormRongsok","props","state","kodeBarang","kodeJenis","namaJenis","kadarCetak","kadarBeli","columns","dataField","text","tampungRongsok","AxiosMasterGet","then","res","setState","data","catch","err","console","log","result_explode","split","this","change","netto","filtered","filter","d","kodeKategori","className","onSubmit","handleSubmit","htmlFor","name","component","renderFieldSelect","onChange","pilihBarang","options","map","list","value","label","type","renderField","readOnly","setNetto","disabled","onSend","aria-hidden","keyField","search","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","Component","reduxForm","form","enableReinitialize","selector","formValueSelector","connect","bruto","kadarTransaksi","parseFloat","toFixed"],"mappings":"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","file":"static/js/31.d1ce5472.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\n\r\nclass FormRongsok extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      kodeBarang: [],\r\n      kodeJenis: \"\",\r\n      namaJenis: \"\",\r\n      kadarCetak: \"\",\r\n      kadarBeli: \"\",\r\n      columns: [\r\n        {\r\n          dataField: \"kodeBarang\",\r\n          text: \"Kode Barang\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Bruto\",\r\n        },\r\n        {\r\n          dataField: \"kadarTransaksi\",\r\n          text: \"Harga (%)\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Netto(Gr)\",\r\n        },\r\n      ],\r\n      tampungRongsok: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"subcategorys2?kodeKelompok=CIOK\")\r\n      .then((res) =>\r\n        this.setState({\r\n          kodeBarang: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }\r\n  pilihBarang(data) {\r\n    var supp = data ? data : \"DEFAULT | DEFAULT | DEFAULT | \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.props.change(\"kadar\", result_explode[1]);\r\n    this.props.change(\"kadarTransaksi\", result_explode[2]);\r\n  }\r\n\r\n  setNetto() {\r\n    this.props.change(\"netto\", this.props.netto);\r\n  }\r\n\r\n  render() {\r\n    var filtered = this.state.kodeBarang.filter(\r\n      (d) => d.kodeKategori === \"RSK\"\r\n    );\r\n    return (\r\n      <div className=\"col-lg-12\">\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-4 mb-3\">\r\n              <label htmlFor=\"\">Kode Barang</label>\r\n              <Field\r\n                name=\"kodeBarang\"\r\n                className=\"form-control\"\r\n                component={renderFieldSelect}\r\n                onChange={(data) => this.pilihBarang(data)}\r\n                options={filtered.map((list) => {\r\n                  let data = {\r\n                    value:\r\n                      list.kodeJenis +\r\n                      \"|\" +\r\n                      list.kadarCetak +\r\n                      \"|\" +\r\n                      list.kadarBeli,\r\n                    name: list.namaJenis,\r\n                  };\r\n                  return data;\r\n                })}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-8\"></div>\r\n            <div className=\"col-md-3 form-group\">\r\n              <Field\r\n                name=\"kadar\"\r\n                label=\"Kadar (%)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 form-group\">\r\n              <Field\r\n                name=\"bruto\"\r\n                label=\"Berat (Gr)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                onChange={this.setNetto()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 form-group\">\r\n              <Field\r\n                name=\"kadarTransaksi\"\r\n                label=\"Harga (%)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 form-group\">\r\n              <Field\r\n                name=\"netto\"\r\n                label=\"Murni (Gr)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-12 mb-3\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  type=\"submit\"\r\n                  disabled={this.props.onSend}\r\n                >\r\n                  {this.props.onSend ? (\r\n                    <span\r\n                      className=\"spinner-border spinner-border-sm mr-3\"\r\n                      aria-hidden=\"true\"\r\n                    ></span>\r\n                  ) : null}\r\n                  Simpan\r\n                  <i className=\"fa fa-paper-plane ml-3\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {this.props.data ? (\r\n              <ToolkitProvider\r\n                keyField=\"id\"\r\n                data={this.props.data}\r\n                columns={this.state.columns}\r\n                search\r\n              >\r\n                {(props) => (\r\n                  <div className=\"form-group\">\r\n                    <BootstrapTable\r\n                      {...props.baseProps}\r\n                      striped\r\n                      hover\r\n                      condensed\r\n                      bordered={true}\r\n                      headerClasses=\"header-table\"\r\n                      pagination={paginationFactory()}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </ToolkitProvider>\r\n            ) : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormRongsok = reduxForm({\r\n  form: \"FormRongsok\",\r\n  enableReinitialize: true,\r\n})(FormRongsok);\r\nconst selector = formValueSelector(\"FormRongsok\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi } = selector(state, \"bruto\", \"kadarTransaksi\");\r\n  return {\r\n    netto: ((parseFloat(bruto) * parseFloat(kadarTransaksi)) / 100).toFixed(3),\r\n  };\r\n})(FormRongsok);\r\n"],"sourceRoot":""}