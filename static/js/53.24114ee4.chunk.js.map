{"version":3,"sources":["Stocking/Component/FormMutasiBarang.jsx","Validations/validationMutasiBarang.js","Stocking/MutasiBarang.jsx","../node_modules/redux-form/es/index.js","Alert.jsx","Stocking/Component/PrintNota.jsx","deleteLocalStorage.js"],"names":["renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","min","step","maxLength","FormMutasiBarang","props","inputChange","e","setState","target","value","submit","console","log","JSON","stringify","state","handleChange","result_explode","split","kodeJenis","kadarCetak","kadarBeli","namaJenis","change","handleChangeTujuan","kodeJenisTujuan","kadarCetakTujuan","kadarBeliTujuan","namaJenisTujuan","setNetto","netto","nettoTujuan","setPkg","setBruto","listBarang","kode_asal","nama_asal","kadar_asal","pkg_asal","kotor_asal","harga_asal","murni_asal","kode_tujuan","nama_tujuan","kadar_tujuan","pkg_tujuan","kotor_tujuan","harga_tujuan","murni_tujuan","Axios","get","server","then","res","data","catch","this","onSubmit","handleSubmit","Field","name","component","onChange","onBlur","setKadar","key","map","list","kadarJual","style","transform","fontSize","onClick","Component","reduxForm","form","enableReinitialize","validate","errors","kadarTransaksiTujuan","kodeBarangTujuan","pkg","bruto","selector","formValueSelector","connect","kadarTransaksi","parseFloat","toFixed","expandRow","renderer","row","kodeJenis02","keteranganTujuan","kadarTransaksi02","kadarCetak02","pkg02","bruto02","netto02","MutasiBarang","lokasi","listKategori","nama","noMutasi","kodeLokasi","tanggal","keterangan","kategori","noBon","columns","dataField","isDummyField","text","formatter","csvExport","rowContent","rowIndex","data-tip","data-for","deleteIndex","dispatch","getListMutasiBarang","id","effect","axios","err","getUUID","getBruto","getNetto","getPkg","getQty","getGross","kodeBarang","result","barang1","parse","localStorage","getItem","simpan","noFaktur","toUpperCase","bruto01","brutoTujuan","kadarCetak01","kadar","kadarTujuan","kadarTransaksi01","netto01","pkg01","pkgTujuan","qty01","qty02","gross01","gross02","kodeJenis01","kodeKategori01","kodeKategori02","k01","k02","p01","p02","push","setItem","Swal","fire","position","icon","showConfirmButton","timer","reset","kategoriTransaksi","tipeFaktur","barangDetailList","footerItem","totalBruto","totalNetto","totalQty","totalGross","totalK","totalP","totalpkg","totalNettoExt","totalRp","footerDocument","inputBy","username","tableRows","forEach","ticket","i","ticketData","columTable","post","serverNonMaster","removeItem","PrintNota","forceUpdate","color","namaLokasi","submitMutasiBarang","data-toggle","disabled","data-target","keyField","bordered","headerClasses","noDataIndication","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","provinsi","mutasiBarang","sumBruto","perhitungan","sumNetto","sumPkg","sumQty","sumGross","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors","pesan","berhasil","gagal","row1name","row1isi","row2name","row2isi","row3name","row3isi","row4name","row4isi","validby","tableColumn","title","doc","jsPDF","autoTable","startY","finalY","lastAutoTable","setFontSize","string","output","embed","x","window","open","document","write","close","deleteLocalStorage","keyRemove","index","func","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","array","splice"],"mappings":"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","file":"static/js/53.24114ee4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport { validationMutasiBarang } from \"../../Validations/validationMutasiBarang\";\r\n\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nclass FormMutasiBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listBarang: [],\r\n      kode_asal: \"\",\r\n      nama_asal: \"\",\r\n      kadar_asal: \"\",\r\n      pkg_asal: \"\",\r\n      kotor_asal: \"\",\r\n      harga_asal: \"\",\r\n      murni_asal: \"\",\r\n      kode_tujuan: \"\",\r\n      nama_tujuan: \"\",\r\n      kadar_tujuan: \"\",\r\n      pkg_tujuan: \"\",\r\n      kotor_tujuan: \"\",\r\n      harga_tujuan: \"\",\r\n      murni_tujuan: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Axios.get(server + \"subcategorys2?kodeKelompok=PERHIASAN\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listBarang: res.data,\r\n        })\r\n      )\r\n      .catch((res) => console.log(\"ERROR GET DATA\"));\r\n  }\r\n\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  submit = () => {\r\n    console.log(JSON.stringify(this.state));\r\n  };\r\n\r\n  handleChange = (input) => (e) => {\r\n    var supp = e.target.value\r\n      ? e.target.value\r\n      : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n      kadarCetak: result_explode[1],\r\n      kadarBeli: result_explode[2],\r\n      namaJenis: result_explode[3],\r\n    });\r\n    this.props.change(\"kadar\", result_explode[1]);\r\n    this.props.change(\"kadarTransaksi\", result_explode[2]);\r\n    this.props.change(\"keterangan\", result_explode[3]);\r\n  };\r\n  handleChangeTujuan = (input) => (e) => {\r\n    var supp = e.target.value\r\n      ? e.target.value\r\n      : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenisTujuan: result_explode[0],\r\n      kadarCetakTujuan: result_explode[1],\r\n      kadarBeliTujuan: result_explode[2],\r\n      namaJenisTujuan: result_explode[3],\r\n    });\r\n    this.props.change(\"kadarTujuan\", result_explode[1]);\r\n    this.props.change(\"kadarTransaksiTujuan\", result_explode[2]);\r\n    this.props.change(\"keteranganTujuan\", result_explode[3]);\r\n  };\r\n  setKadar() {\r\n    this.props.change(\"kadar\", this.state.kadarCetak);\r\n    this.props.change(\"kadarTujuan\", this.state.kadarCetakTujuan);\r\n    this.props.change(\"kadarTransaksi\", this.state.kadarBeli);\r\n    this.props.change(\"kadarTransaksiTujuan\", this.state.kadarBeliTujuan);\r\n    this.props.change(\"keterangan\", this.state.namaJenis);\r\n    this.props.change(\"keteranganTujuan\", this.state.namaJenisTujuan);\r\n  }\r\n  setNetto = (e) => {\r\n    this.props.change(\r\n      \"netto\",\r\n      this.props.netto === \"NaN\" ? 0 : this.props.netto\r\n    );\r\n    this.props.change(\r\n      \"nettoTujuan\",\r\n      this.props.nettoTujuan === \"NaN\" ? 0 : this.props.nettoTujuan\r\n    );\r\n  };\r\n  setPkg = (input) => (e) => {\r\n    this.props.change(\"pkgTujuan\", e.target.value);\r\n  };\r\n  setBruto = (input) => (e) => {\r\n    this.props.change(\"brutoTujuan\", e.target.value);\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 form-group\">\r\n            <label htmlFor=\"\">Kode Asal</label>\r\n            <Field\r\n              name=\"kodeBarang\"\r\n              component=\"select\"\r\n              className=\"form-control\"\r\n              onChange={this.handleChange()}\r\n              onBlur={() => this.setKadar()}\r\n            >\r\n              <option value=\"DEFAULT|DEFAULT|DEFAULT\" key=\"DEFAULT\">\r\n                SILAHKAN PILIH\r\n              </option>\r\n              {this.state.listBarang.map((list) => (\r\n                <option\r\n                  value={\r\n                    list.kodeJenis +\r\n                    \"|\" +\r\n                    list.kadarCetak +\r\n                    \"|\" +\r\n                    list.kadarJual +\r\n                    \"|\" +\r\n                    list.namaJenis\r\n                  }\r\n                  key={list.kodeJenis}\r\n                >\r\n                  {list.namaJenis}\r\n                </option>\r\n              ))}\r\n            </Field>\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <Field\r\n              name=\"keterangan\"\r\n              label=\"Keterangan\"\r\n              component={renderField}\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\"></div>\r\n          <div className=\"col-md-3 mt-1\">\r\n            <Field\r\n              name=\"kadar\"\r\n              label=\"Kadar (%)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 mt-1\">\r\n            <Field\r\n              name=\"pkg\"\r\n              label=\"Pkg (Gr)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              onBlur={() => this.setNetto()}\r\n              onChange={this.setPkg()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 mt-1\">\r\n            <Field\r\n              name=\"bruto\"\r\n              label=\"Bruto (Gr)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              onBlur={() => this.setNetto()}\r\n              onChange={this.setBruto()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 mt-1\">\r\n            <Field\r\n              name=\"kadarTransaksi\"\r\n              label=\"Harga (Gr)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 mt-1\">\r\n            <Field\r\n              name=\"netto\"\r\n              label=\"Netto (Gr)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12 col-md-12 text-center mt-2 mb-2\">\r\n            <div style={{ transform: \"rotate(90deg)\", fontSize: 24 }}>\r\n              <i className=\"fa fa-exchange-alt\"></i>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <label htmlFor=\"\">Kode Tujuan</label>\r\n            <Field\r\n              name=\"kodeBarangTujuan\"\r\n              component=\"select\"\r\n              className=\"form-control\"\r\n              onChange={this.handleChangeTujuan()}\r\n              onBlur={() => this.setKadar()}\r\n            >\r\n              <option value=\"DEFAULT|DEFAULT|DEFAULT\" key=\"DEFAULT\">\r\n                SILAHKAN PILIH\r\n              </option>\r\n              {this.state.listBarang.map((list) => (\r\n                <option\r\n                  value={\r\n                    list.kodeJenis +\r\n                    \"|\" +\r\n                    list.kadarCetak +\r\n                    \"|\" +\r\n                    list.kadarBeli +\r\n                    \"|\" +\r\n                    list.namaJenis\r\n                  }\r\n                  key={list.kodeJenis}\r\n                >\r\n                  {list.namaJenis}\r\n                </option>\r\n              ))}\r\n            </Field>\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <Field\r\n              name=\"keteranganTujuan\"\r\n              label=\"Keterangan\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\"></div>\r\n          <div className=\"col-md-3 mt-1\">\r\n            <Field\r\n              name=\"kadarTujuan\"\r\n              label=\"Kadar (%)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 mt-1\">\r\n            <Field\r\n              name=\"pkgTujuan\"\r\n              label=\"Pkg (Gr)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              onBlur={() => this.setNetto()}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 mt-1\">\r\n            <Field\r\n              name=\"brutoTujuan\"\r\n              label=\"Bruto (Gr)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              onBlur={() => this.setNetto()}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 mt-1\">\r\n            <Field\r\n              name=\"kadarTransaksiTujuan\"\r\n              label=\"Harga (Gr)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              onBlur={this.setNetto()}\r\n              onChange={() => this.setNetto()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 mt-1\">\r\n            <Field\r\n              name=\"nettoTujuan\"\r\n              label=\"Netto (Gr)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12 col-md-12\">\r\n            <div className=\"text-right\">\r\n              <button className=\"btn btn-primary\" onClick={this.submit}>\r\n                Simpan\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormMutasiBarang = reduxForm({\r\n  form: \"FormMutasiBarang\",\r\n  enableReinitialize: true,\r\n  validate: validationMutasiBarang,\r\n})(FormMutasiBarang);\r\nconst selector = formValueSelector(\"FormMutasiBarang\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi, kadarTransaksiTujuan } = selector(\r\n    state,\r\n    \"bruto\",\r\n    \"kadarTransaksi\",\r\n    \"kadarTransaksiTujuan\"\r\n  );\r\n  return {\r\n    netto: (parseFloat(bruto) * (parseFloat(kadarTransaksi) / 100)).toFixed(3),\r\n    nettoTujuan: (\r\n      parseFloat(bruto) *\r\n      (parseFloat(kadarTransaksiTujuan) / 100)\r\n    ).toFixed(3),\r\n  };\r\n})(FormMutasiBarang);\r\n","export const validationMutasiBarang = (value) => {\r\n    const errors = {}\r\n    if (!value.kadarTransaksiTujuan) {\r\n        errors.kadarTransaksiTujuan = \"Tidak Boleh kosong\"\r\n    }\r\n    if (!value.kodeBarangTujuan) {\r\n        errors.kodeBarangTujuan = \"Tidak Boleh kosong\"\r\n    }\r\n    if (!value.pkg) {\r\n        errors.pkg = \"Tidak Boleh kosong\"\r\n    }\r\n    if (!value.bruto) {\r\n        errors.bruto = \"Tidak Boleh kosong\"\r\n    }\r\n    return errors\r\n}","import React, { Component } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport FormMutasiBarang from \"./Component/FormMutasiBarang\";\r\nimport axios from \"axios\";\r\nimport { getListMutasiBarang } from \"../actions/mutasiBarangAction\";\r\nimport Swal from \"sweetalert2\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset } from \"redux-form\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport {\r\n  getBruto,\r\n  getGross,\r\n  getNetto,\r\n  getPkg,\r\n  getQty,\r\n} from \"../actions/LogicAction\";\r\nimport Axios from \"axios\";\r\nimport PrintNota from \"./Component/PrintNota\";\r\nimport { warning } from \"../Alert\";\r\nimport { deleteIndex } from \"../deleteLocalStorage\";\r\n\r\nconst expandRow = {\r\n  renderer: (row) => (\r\n    <div>\r\n      <p>{`Tujuan`}</p>\r\n      <p>{`Kode Tujuan : ${row.kodeJenis02} | Keterangan : ${row.keteranganTujuan} | Kat Harga : ${row.kadarTransaksi02} | Kadar : ${row.kadarCetak02} | Pkg(Gr): ${row.pkg02}`}</p>\r\n      <p>{`Bruto(Gr) : ${row.bruto02} | Harga Tujuan : ${row.kadarTransaksi02} | Netto : ${row.netto02}`}</p>\r\n    </div>\r\n  ),\r\n};\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    listBarang: state.provinsi.mutasiBarang,\r\n    noFaktur: state.provinsi.noFaktur,\r\n    username: state.provinsi.username,\r\n    sumBruto: state.perhitungan.sumBruto,\r\n    sumNetto: state.perhitungan.sumBruto,\r\n    sumPkg: state.perhitungan.sumPkg,\r\n    sumQty: state.perhitungan.sumQty,\r\n    sumGross: state.perhitungan.sumGross,\r\n  };\r\n};\r\n\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nconst serverNonMaster = process.env.REACT_APP_BACKEND_URL_NON_MASTER;\r\nclass MutasiBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lokasi: [],\r\n      listKategori: [\r\n        {\r\n          nama: \"AMBIL BARANG\",\r\n        },\r\n        {\r\n          nama: \"KEMBALI STOK\",\r\n        },\r\n        {\r\n          nama: \"KOREKSI STOK\",\r\n        },\r\n        {\r\n          nama: \"MUTASI BAHAN\",\r\n        },\r\n        {\r\n          nama: \"PENGAMBILAN SALES\",\r\n        },\r\n        {\r\n          nama: \"PINDAH\",\r\n        },\r\n        {\r\n          nama: \"PINDAH GUDANG REPARASI\",\r\n        },\r\n        {\r\n          nama: \"RETURN SALES\",\r\n        },\r\n        {\r\n          nama: \"SALAH INPUT\",\r\n        },\r\n        {\r\n          nama: \"SALAH PINDAH\",\r\n        },\r\n        {\r\n          nama: \"STOK AWAL\",\r\n        },\r\n        {\r\n          nama: \"TAMBAH BARANG\",\r\n        },\r\n      ],\r\n      kodeJenis: \"\",\r\n      kodeJenisTujuan: \"\",\r\n      noMutasi: \"\",\r\n      kodeLokasi: \"\",\r\n      tanggal: \"\",\r\n      keterangan: \"\",\r\n      kategori: \"\",\r\n      noBon: \"\",\r\n      columns: [\r\n        {\r\n          dataField: \"Lihat Detail\",\r\n          isDummyField: true,\r\n          text: \"Lihat Detail\",\r\n          formatter: (row) => {\r\n            return (\r\n              <span>\r\n                <i className=\"fa fa-chevron-down\"></i>\r\n              </span>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          dataField: \"kodeJenis01\",\r\n          text: \"Kode Barang\",\r\n        },\r\n        {\r\n          dataField: \"keterangan\",\r\n          text: \"Keterangan\",\r\n        },\r\n        {\r\n          dataField: \"kadarTransaksi01\",\r\n          text: \"Kat Harga\",\r\n        },\r\n        {\r\n          dataField: \"kadarCetak01\",\r\n          text: \"Kadar\",\r\n        },\r\n        {\r\n          dataField: \"pkg01\",\r\n          text: \"Pkg (Gr)\",\r\n        },\r\n        {\r\n          dataField: \"bruto01\",\r\n          text: \"Bruto (Gr)\",\r\n        },\r\n        {\r\n          dataField: \"kadarTransaksi01\",\r\n          text: \"Harga\",\r\n        },\r\n        {\r\n          dataField: \"netto01\",\r\n          text: \"Netto (Gr)\",\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row, rowIndex) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  data-tip\r\n                  data-for=\"hapus\"\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() =>\r\n                    deleteIndex(\r\n                      \"mutasiBarang\",\r\n                      rowIndex,\r\n                      this.props.dispatch,\r\n                      getListMutasiBarang()\r\n                    )\r\n                  }\r\n                >\r\n                  <ReactTooltip id=\"hapus\" type=\"dark\" effect=\"solid\">\r\n                    <span>Hapus</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-trash\"></i>\r\n                </button>\r\n                <br />\r\n                {/* <button\r\n                  data-tip\r\n                  data-for=\"edit\"\r\n                  className=\"btn btn-warning mr-2\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#editModal\"\r\n                  onClick={() => console.log(\"EDIT\")}\r\n                >\r\n                  <ReactTooltip id=\"edit\" type=\"dark\" effect=\"solid\">\r\n                    <span>Edit</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-edit mr-1\"></i>\r\n                </button> */}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(server + \"storages2?tipeData=LOKASI\")\r\n      .then((res) =>\r\n        this.setState({\r\n          lokasi: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    this.props.dispatch(getListMutasiBarang());\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getBruto(\"mutasiBarang\"));\r\n    this.props.dispatch(getNetto(\"mutasiBarang\"));\r\n    this.props.dispatch(getPkg(\"mutasiBarang\"));\r\n    this.props.dispatch(getQty(\"mutasiBarang\"));\r\n    this.props.dispatch(getGross(\"mutasiBarang\"));\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    var supp = data.kodeBarang\r\n      ? data.kodeBarang\r\n      : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n    });\r\n    var supp1 = data.kodeBarangTujuan\r\n      ? data.kodeBarangTujuan\r\n      : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result = supp1.split(\"|\");\r\n    this.setState({\r\n      kodeJenisTujuan: result[0],\r\n    });\r\n    var barang1 = JSON.parse(localStorage.getItem(\"mutasiBarang\")) || [];\r\n    var simpan = {\r\n      noFaktur: this.props.noFaktur.toUpperCase(),\r\n      bruto01: parseFloat(data.bruto).toFixed(3),\r\n      bruto02: parseFloat(data.brutoTujuan).toFixed(3),\r\n      kadarCetak01: parseFloat(data.kadar).toFixed(3),\r\n      kadarCetak02: parseFloat(data.kadarTujuan).toFixed(3),\r\n      kadarTransaksi01: parseFloat(data.kadarTransaksi).toFixed(3),\r\n      kadarTransaksi02: parseFloat(data.kadarTransaksiTujuan).toFixed(3),\r\n      keterangan: data.keterangan,\r\n      keteranganTujuan: data.keteranganTujuan,\r\n      netto01: parseFloat(data.netto).toFixed(3),\r\n      netto02: parseFloat(data.nettoTujuan).toFixed(3),\r\n      pkg01: parseFloat(data.pkg).toFixed(3),\r\n      pkg02: parseFloat(data.pkgTujuan).toFixed(3),\r\n      qty01: 1,\r\n      qty02: 1,\r\n      gross01: (parseFloat(data.bruto) + parseFloat(data.pkg)).toFixed(3),\r\n      gross02: (\r\n        parseFloat(data.brutoTujuan) + parseFloat(data.pkgTujuan)\r\n      ).toFixed(3),\r\n      kodeJenis01: result_explode[0].toUpperCase(),\r\n      kodeJenis02: result[0].toUpperCase(),\r\n      kodeKategori01: \"-\",\r\n      kodeKategori02: \"-\",\r\n      k01: 0,\r\n      k02: 0,\r\n      p01: 0,\r\n      p02: 0,\r\n    };\r\n    barang1.push(simpan);\r\n    localStorage.setItem(\"mutasiBarang\", JSON.stringify(barang1));\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      text: \"Data Berhasil Ditambahkan!\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    })\r\n      .then(() => this.props.dispatch(reset(\"FormMutasiBarang\")))\r\n      .then(() => this.props.dispatch(getListMutasiBarang()));\r\n  }\r\n  onChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  submitMutasiBarang() {\r\n    if (this.state.kodeLokasi === \"\") {\r\n      warning(\"Mohon isi Lokasi\");\r\n      return false;\r\n    } else if (this.state.keterangan === \"\") {\r\n      warning(\"Mohon Isi Keterangan\");\r\n      return false;\r\n    } else if (this.state.kategori === \"\") {\r\n      warning(\"Mohon Isi Kategori\");\r\n      return false;\r\n    } else if (this.state.noBon === \"\") {\r\n      warning(\"Mohon Isi Nomor Bon\");\r\n      return false;\r\n    } else if (this.state.tanggal === \"\") {\r\n      warning(\"Mohon Isi Tanggal\");\r\n      return false;\r\n    } else if (localStorage.getItem(\"mutasiBarang\") === null) {\r\n      warning(\"Mohon Tambahkan Barang Yang akan dipindahkan\");\r\n      return false;\r\n    }\r\n    var simpan = {\r\n      tanggal: this.state.tanggal.toUpperCase(),\r\n      noFaktur: this.props.noFaktur.toUpperCase(),\r\n      noBon: this.state.noBon.toUpperCase(),\r\n      kategoriTransaksi: this.state.kategori.toUpperCase(),\r\n      keterangan: this.state.keterangan.toUpperCase(),\r\n      kodeLokasi: this.state.kodeLokasi.toUpperCase(),\r\n      tipeFaktur: \"-\",\r\n      barangDetailList: JSON.parse(localStorage.getItem(\"mutasiBarang\")),\r\n      footerItem: {\r\n        totalBruto: 0,\r\n        totalNetto: 0,\r\n        totalQty: 0,\r\n        totalGross: 0,\r\n        totalK: 0,\r\n        totalP: 0,\r\n        totalpkg: 0,\r\n        totalNettoExt: 0,\r\n        totalRp: 0,\r\n      },\r\n      footerDocument: {\r\n        inputBy: this.props.username, //INPUT BY DEFAULT\r\n      },\r\n    };\r\n    console.log(JSON.stringify(simpan));\r\n\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    var table = JSON.parse(localStorage.getItem(\"mutasiBarang\"));\r\n    // for each ticket pass all its data into an array\r\n    table.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        i++,\r\n        ticket.kodeJenis01,\r\n        ticket.bruto01,\r\n        ticket.kadarTransaksi01,\r\n        ticket.netto01,\r\n        ticket.kodeJenis02,\r\n        ticket.bruto02,\r\n        ticket.kadarTransaksi02,\r\n        ticket.netto02,\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    console.log(tableRows);\r\n    var columTable = [\r\n      \"No\",\r\n      \"Kode Awal\",\r\n      \"Bruto\",\r\n      \"Harga (%)\",\r\n      \"Netto Awal\",\r\n      \"Kode Tujuan\",\r\n      \"Harga (%)\",\r\n      \"Netto Akhir\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    Axios.post(serverNonMaster + \"item/dc/mutasibarang\", simpan)\r\n      .then(() =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Transaksi Berhasil\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() => localStorage.removeItem(\"noFaktur\"))\r\n          .then(() =>\r\n            PrintNota(\r\n              \"Tanggal\",\r\n              this.state.tanggal.toUpperCase(),\r\n              \"\",\r\n              \"\",\r\n              \"Nomor Bon\",\r\n              this.state.noBon.toUpperCase(),\r\n              \"\",\r\n              \"\",\r\n              \"ADMIN\",\r\n              this.state.tanggal.toUpperCase(),\r\n              \"\",\r\n              columTable,\r\n              \"MUTASI BARANG\",\r\n              tableRows\r\n            )\r\n          )\r\n          .then(() => localStorage.removeItem(\"mutasiBarang\"))\r\n          .then(() => this.props.dispatch(getListMutasiBarang()))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() =>\r\n            this.setState({\r\n              kodeJenis: \"\",\r\n              kodeJenisTujuan: \"\",\r\n              noMutasi: \"\",\r\n              kodeLokasi: \"\",\r\n              tanggal: \"\",\r\n              keterangan: \"\",\r\n              kategori: \"\",\r\n              noBon: \"\",\r\n            })\r\n          )\r\n          .then(() => this.forceUpdate())\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text: \"Sepertinya ada kendala, silahkan cek koneksi\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        }).then(() => console.log(err))\r\n      );\r\n    this.props.dispatch(getListMutasiBarang());\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title mb-3\" style={{ fontSize: 30 }}>\r\n                  Mutasi Barang\r\n                </h5>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-4 form-group\">\r\n                    <label>Nomor Mutasi</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"noMutasi\"\r\n                      name=\"noMutasi\"\r\n                      className=\"form-control\"\r\n                      readOnly\r\n                      onChange={this.onChange(\"noMutasi\")}\r\n                      value={this.props.noFaktur}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-4 form-group\">\r\n                    <label>Tanggal</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      id=\"tanggal\"\r\n                      name=\"tannggal\"\r\n                      className=\"form-control\"\r\n                      onChange={this.onChange(\"tanggal\")}\r\n                      value={this.state.tanggal}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-4 form-group\">\r\n                    <label>Bon Mutasi</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"bonMutasi\"\r\n                      name=\"bonMutasi\"\r\n                      className=\"form-control\"\r\n                      onChange={this.onChange(\"noBon\")}\r\n                      value={this.state.noBon}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-4 form-group\">\r\n                    <label>Kategori</label>\r\n                    <select\r\n                      id=\"kategori\"\r\n                      name=\"kategori\"\r\n                      className=\"form-control\"\r\n                      onChange={this.onChange(\"kategori\")}\r\n                      value={this.state.kategori}\r\n                    >\r\n                      <option value=\"DEFUALT\" key=\"DEFUALT\">\r\n                        SILAHKAN PILIH\r\n                      </option>\r\n                      {this.state.listKategori.map((list) => (\r\n                        <option value={list.nama} key={list.nama}>\r\n                          {list.nama}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"col-md-4 form-group\">\r\n                    <label>Keterangan</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"keterangan\"\r\n                      name=\"keterangan\"\r\n                      className=\"form-control\"\r\n                      onChange={this.onChange(\"keterangan\")}\r\n                      value={this.state.keterangan}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-4 form-group\">\r\n                    <label>Lokasi</label>\r\n                    <select\r\n                      type=\"text\"\r\n                      id=\"lokasi\"\r\n                      name=\"lokasi\"\r\n                      className=\"form-control\"\r\n                      onChange={this.onChange(\"kodeLokasi\")}\r\n                      value={this.state.kodeLokasi}\r\n                    >\r\n                      <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                        SILAHKAN PILIH\r\n                      </option>\r\n                      {this.state.lokasi.map((lokasi) => (\r\n                        <option\r\n                          value={lokasi.kodeLokasi}\r\n                          key={lokasi.kodeLokasi}\r\n                        >\r\n                          {lokasi.namaLokasi}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"col-lg-4 col-md-4 mb-3\">\r\n                    <div className=\"text-left\">\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        onClick={() => this.submitMutasiBarang()}\r\n                      >\r\n                        SIMPAN\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-4 col-md-4 mb-3\">\r\n                    <div className=\"text-center\">\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        disabled\r\n                      >\r\n                        BARCODE (+)\r\n                      </button>\r\n                      <button\r\n                        className=\"btn btn-primary ml-2\"\r\n                        data-toggle=\"modal\"\r\n                        disabled\r\n                      >\r\n                        BARCODE (-)\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-4 col-md-4 mb-3\">\r\n                    <div className=\"text-right\">\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#primary-header-modal\"\r\n                      >\r\n                        TAMBAH BARANG\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-12\">\r\n                    {this.props.listBarang ? (\r\n                      <BootstrapTable\r\n                        keyField=\"id\"\r\n                        data={this.props.listBarang}\r\n                        columns={this.state.columns}\r\n                        bordered={true}\r\n                        headerClasses=\"header-table\"\r\n                        expandRow={expandRow}\r\n                      />\r\n                    ) : (\r\n                      <BootstrapTable\r\n                        keyField=\"id\"\r\n                        data={[]}\r\n                        columns={this.state.columns}\r\n                        bordered={true}\r\n                        headerClasses=\"header-table\"\r\n                        expandRow={expandRow}\r\n                        noDataIndication=\"Tidak Ada Data\"\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          id=\"primary-header-modal\"\r\n          className=\"modal fade\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"primary-header-modalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header modal-colored-header bg-primary\">\r\n                <h4 className=\"modal-title\" id=\"primary-header-modalLabel\">\r\n                  Tambah Data Mutasi Barang\r\n                </h4>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <FormMutasiBarang\r\n                  onSubmit={(data) => this.handleSubmit(data)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(MutasiBarang);\r\n","import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;","import Swal from \"sweetalert2\";\r\n\r\nexport const warning = (pesan) => {\r\n  Swal.fire({\r\n    position: \"top-right\",\r\n    icon: \"warning\",\r\n    text: pesan,\r\n    timer: 2500,\r\n    showConfirmButton: false,\r\n  });\r\n};\r\n\r\nexport const berhasil = (pesan) => {\r\n  Swal.fire({\r\n    position: \"top-right\",\r\n    icon: \"success\",\r\n    text: pesan,\r\n    timer: 2500,\r\n    showConfirmButton: false,\r\n  })\r\n};\r\n\r\nexport const gagal = (pesan) => {\r\n  Swal.fire({\r\n    position: \"top-right\",\r\n    icon: \"error\",\r\n    text: pesan,\r\n    timer: 2500,\r\n    showConfirmButton: false,\r\n  })\r\n};\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst PrintNota = (\r\n  row1name = \"\",\r\n  row1isi = \"\",\r\n  row2name = \"\",\r\n  row2isi = \"\",\r\n  row3name = \"\",\r\n  row3isi = \"\",\r\n  row4name = \"\",\r\n  row4isi = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n  validby = \"\",\r\n  tableColumn = [],\r\n  title = \"\",\r\n  tableRows\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  // var tickets = JSON.parse(data);\r\n  // define the columns we want and their titles\r\n\r\n  // // define an empty array of rows\r\n  // const tableRows = [];\r\n\r\n  // // for each ticket pass all its data into an array\r\n  // tickets.forEach((ticket, i) => {\r\n  //   const ticketData = [\r\n  //     i++,\r\n  //     ticket.kodeJenis01,\r\n  //     ticket.bruto01,\r\n  //     ticket.kadarTransaksi01,\r\n  //     ticket.netto01,\r\n  //     ticket.kodeJenis02,\r\n  //     ticket.bruto02,\r\n  //     ticket.kadarTransaksi02,\r\n  //     ticket.netto02,\r\n  //   ];\r\n  //   // push each tickcet's info into a row\r\n  //   tableRows.push(ticketData);\r\n  // });\r\n\r\n  // startY is basically margin-top\r\n  doc.autoTable(tableColumn, tableRows, { startY: 40 });\r\n  let finalY = doc.lastAutoTable.finalY + 10;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(title, 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(row1name, 14, 25);\r\n  doc.text(\":\", 37, 25);\r\n  doc.text(row1isi, 40, 25);\r\n  doc.text(row2name, 120, 25);\r\n  doc.text(\":\", 141, 25);\r\n  doc.text(row2isi, 145, 25);\r\n  //row 2\r\n  doc.text(row3name, 14, 30);\r\n  doc.text(\":\", 37, 30);\r\n  doc.text(row3isi, 40, 30);\r\n  doc.text(row4name, 120, 30);\r\n  doc.text(\":\", 141, 30);\r\n  doc.text(row4isi, 145, 30);\r\n\r\n  //Stamp\r\n  doc.text(\"User\", 160, finalY + 10);\r\n  doc.text(\":\", 168, finalY + 10);\r\n  doc.text(username, 170, finalY + 10);\r\n  doc.text(\"Cetak\", 160, finalY + 15);\r\n  doc.text(\":\", 168, finalY + 15);\r\n  doc.text(tanggal, 170, finalY + 15);\r\n  doc.text(\"Valid\", 160, finalY + 20);\r\n  doc.text(\":\", 168, finalY + 20);\r\n  doc.text(validby, 170, finalY + 20);\r\n  // doc.autoPrint();\r\n  // doc.save(`${title}_${dateStr}.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  x.document.close();\r\n};\r\n\r\nexport default PrintNota;\r\n","import Swal from \"sweetalert2\";\r\n\r\nexport const deleteLocalStorage = (keyRemove) => {\r\n  keyRemove.forEach((e) => {\r\n    localStorage.removeItem(e);\r\n  });\r\n};\r\n\r\nexport const deleteIndex = (nama, index, dispatch, func) => {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      const array = JSON.parse(localStorage.getItem(nama)) || [];\r\n      array.splice(index, 1);\r\n      localStorage.setItem(nama, JSON.stringify(array));\r\n      Swal.fire({\r\n        text: \"Berhasil\",\r\n        timer: 2000,\r\n        showConfirmButton: false,\r\n        position: \"top-right\",\r\n        icon: \"success\",\r\n      }).then(() => dispatch(func));\r\n    }\r\n  });\r\n};\r\n"],"sourceRoot":""}