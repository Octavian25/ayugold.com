{"version":3,"sources":["FICO/KelolaUangBank.jsx","FICO/Component/FormKelolaUangBank.jsx"],"names":["KelolaUangBank","props","state","listKategori","this","dispatch","getUUID","data","undefined","tanggal","warning","rekening","jumlah","kategori","keperluan","isi","no_rek","nominal","parseFloat","keterangan","deskripsi","console","log","progressSend","tableRows","ticketData","toLocaleString","push","columTable","AxiosMasterPost","then","Swal","fire","position","icon","text","showConfirmButton","timer","finishSend","localStorage","removeItem","PrintNota","noFaktur","reset","catch","res","err","className","title","href","data-toggle","aria-expanded","id","onSubmit","handleSubmitTambah","from","onSend","handleSubmitAmbil","Component","connect","provinsi","username","currencyMask","createNumberMask","prefix","suffix","locale","FormKelolaUangBank","listRekening","getListParameter","getrekeningList","handleSubmit","name","label","type","component","renderField","htmlFor","value","map","list","no_rekening","key","atas_nama","parameter","kategori_transaksi","disabled","aria-hidden","reduxForm","form","enableReinitialize","parameterTransaksi"],"mappings":"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","file":"static/js/56.03e2ded0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport FormKelolaUangBank from \"./Component/FormKelolaUangBank\";\r\nimport { connect } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport PrintNota from \"../Stocking/Component/PrintNota\";\r\nimport { warning } from \"../Alert\";\r\nimport { reset } from \"redux-form\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport { AxiosMasterPost } from \"../Axios\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    noFaktur: state.provinsi.noFaktur,\r\n    username: state.provinsi.username,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\nclass KelolaUangBank extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listKategori: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getUUID());\r\n  }\r\n  handleSubmitTambah(data) {\r\n    if (data.tanggal === undefined) {\r\n      warning(\"Mohon isi tanggal\");\r\n      return false;\r\n    } else if (data.rekening === undefined) {\r\n      warning(\"Mohon isi Rekening\");\r\n      return false;\r\n    } else if (data.jumlah === undefined) {\r\n      warning(\"Mohon isi Jumlah\");\r\n      return false;\r\n    } else if (data.kategori === undefined) {\r\n      warning(\"Mohon isi Kategori\");\r\n      return false;\r\n    } else if (data.keperluan === undefined) {\r\n      warning(\"Mohon isi Keperluan\");\r\n      return false;\r\n    }\r\n    const isi = {\r\n      tanggal: data.tanggal,\r\n      no_rek: data.rekening,\r\n      nominal: parseFloat(data.jumlah),\r\n      keterangan: data.kategori,\r\n      deskripsi: data.keperluan,\r\n    };\r\n    console.log(isi);\r\n    this.props.dispatch(progressSend());\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    // for each ticket pass all its data into an array\r\n    const ticketData = [\r\n      \"1\",\r\n      data.tanggal,\r\n      parseFloat(data.jumlah).toLocaleString(\"id-ID\"),\r\n      data.rekening,\r\n      parseFloat(data.jumlah).toLocaleString(\"id-ID\"),\r\n      data.keperluan,\r\n    ];\r\n    // push each tickcet's info into a row\r\n    tableRows.push(ticketData);\r\n    console.log(tableRows);\r\n    var columTable = [\r\n      \"No\",\r\n      \"Tanggal Janji\",\r\n      \"Transfer nominal\",\r\n      \"Nomor Rekening\",\r\n      \"Transfer Netto\",\r\n      \"Keperluan\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    AxiosMasterPost(\"uang-bank/tambah\", isi)\r\n      .then(() =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Transaksi Berhasil\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => localStorage.removeItem(\"noFaktur\"))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() =>\r\n            PrintNota(\r\n              \"Tanggal\",\r\n              data.tanggal,\r\n              \"\",\r\n              \"\",\r\n              \"Nomor Bon\",\r\n              this.props.noFaktur,\r\n              \"\",\r\n              \"\",\r\n              \"ADMIN\",\r\n              data.tanggal,\r\n              \"\",\r\n              columTable,\r\n              \"TAMBAH UANG BANK\",\r\n              tableRows\r\n            )\r\n          )\r\n          .then(() => this.props.dispatch(reset(\"FormKelolaUangBank\")))\r\n      )\r\n      .catch(() =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text:\r\n            \"Sepertinya terjadi kesalahan, silahkan check koneksi anda dan ulangi lagi transaksi\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        }).then(() => this.props.dispatch(finishSend()))\r\n      );\r\n  }\r\n  handleSubmitAmbil(data) {\r\n    if (data.tanggal === undefined) {\r\n      warning(\"Mohon isi tanggal\");\r\n      return false;\r\n    } else if (data.rekening === undefined) {\r\n      warning(\"Mohon isi Rekening\");\r\n      return false;\r\n    } else if (data.jumlah === undefined) {\r\n      warning(\"Mohon isi Jumlah\");\r\n      return false;\r\n    } else if (data.kategori === undefined) {\r\n      warning(\"Mohon isi Kategori\");\r\n      return false;\r\n    } else if (data.keperluan === undefined) {\r\n      warning(\"Mohon isi Keperluan\");\r\n      return false;\r\n    }\r\n    const isi = {\r\n      tanggal: data.tanggal,\r\n      no_rek: data.rekening,\r\n      nominal: parseFloat(data.jumlah),\r\n      keterangan: data.kategori,\r\n      deskripsi: data.keperluan,\r\n    };\r\n    console.log(isi);\r\n    this.props.dispatch(progressSend());\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    // for each ticket pass all its data into an array\r\n    const ticketData = [\r\n      \"1\",\r\n      data.tanggal,\r\n      parseFloat(data.jumlah).toLocaleString(\"id-ID\"),\r\n      data.rekening,\r\n      parseFloat(data.jumlah).toLocaleString(\"id-ID\"),\r\n      data.keperluan,\r\n    ];\r\n    // push each tickcet's info into a row\r\n    tableRows.push(ticketData);\r\n    console.log(tableRows);\r\n    var columTable = [\r\n      \"No\",\r\n      \"Tanggal Janji\",\r\n      \"Transfer nominal\",\r\n      \"Nomor Rekening\",\r\n      \"Transfer Netto\",\r\n      \"Keperluan\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    AxiosMasterPost(\"uang-bank/ambil\", isi)\r\n      .then((res) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Transaksi Berhasil\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => localStorage.removeItem(\"noFaktur\"))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() =>\r\n            PrintNota(\r\n              \"Tanggal\",\r\n              data.tanggal,\r\n              \"\",\r\n              \"\",\r\n              \"Nomor Bon\",\r\n              this.props.noFaktur,\r\n              \"\",\r\n              \"\",\r\n              \"ADMIN\",\r\n              data.tanggal,\r\n              \"\",\r\n              columTable,\r\n              \"AMBIL UANG BANK\",\r\n              tableRows\r\n            )\r\n          )\r\n          .then(() => this.props.dispatch(reset(\"FormKelolaUangBank\")))\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text:\r\n            \"Sepertinya terjadi kesalahan, silahkan check koneksi anda dan ulangi lagi transaksi\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n      );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"col-lg-12 col-md-12\">\r\n          <div className=\"card\">\r\n            <HeaderCard title=\"Kelola Uang Bank\" />\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <ul className=\"nav nav-pills bg-nav-pills nav-justified mb-3\">\r\n                    <li className=\"nav-item\">\r\n                      <a\r\n                        href=\"#tambah-uang-bank\"\r\n                        data-toggle=\"tab\"\r\n                        aria-expanded=\"true\"\r\n                        className=\"nav-link active\"\r\n                      >\r\n                        <i className=\"mdi mdi-home-variant d-lg-none d-block mr-1\" />\r\n                        <span className=\"d-none d-lg-block\">\r\n                          Tambah Uang Bank\r\n                        </span>\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <a\r\n                        href=\"#ambil-uang-bank\"\r\n                        data-toggle=\"tab\"\r\n                        aria-expanded=\"false\"\r\n                        className=\"nav-link \"\r\n                      >\r\n                        <i className=\"mdi mdi-account-circle d-lg-none d-block mr-1\" />\r\n                        <span className=\"d-none d-lg-block\">\r\n                          Ambil Uang Bank\r\n                        </span>\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                  <div className=\"tab-content\">\r\n                    <div className=\"tab-pane show active\" id=\"tambah-uang-bank\">\r\n                      <FormKelolaUangBank\r\n                        onSubmit={(data) => this.handleSubmitTambah(data)}\r\n                        from=\"bank\"\r\n                        onSend={this.props.onSend}\r\n                      />\r\n                    </div>\r\n                    <div className=\"tab-pane \" id=\"ambil-uang-bank\">\r\n                      <FormKelolaUangBank\r\n                        onSubmit={(data) => this.handleSubmitAmbil(data)}\r\n                        from=\"bank\"\r\n                        onSend={this.props.onSend}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(KelolaUangBank);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport { getListParameter } from \"../../actions/parameterTransaksiAction\";\r\nimport { getrekeningList } from \"../../actions/rekeningAction\";\r\nimport { renderField } from \"../../renderField\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\n\r\nclass FormKelolaUangBank extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listKategori: [],\r\n      listRekening: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListParameter());\r\n    this.props.dispatch(getrekeningList());\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <Field\r\n              name=\"tanggal\"\r\n              label=\"Tanggal\"\r\n              type=\"date\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          {this.props.from === \"bank\" ? (\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              <label htmlFor=\"\">Rekening</label>\r\n              <Field\r\n                name=\"rekening\"\r\n                className=\"form-control\"\r\n                component=\"select\"\r\n              >\r\n                <option value=\"DEFAULT\">SILAHKAN PILIH</option>\r\n                {this.props.rekening.map((list) => (\r\n                  <option value={list.no_rekening} key={list.no_rekening}>\r\n                    {list.atas_nama}\r\n                  </option>\r\n                ))}\r\n              </Field>\r\n            </div>\r\n          ) : (\r\n            <div className=\"col-md-4 col-lg-4\"></div>\r\n          )}\r\n          <div className=\"col-md-4 col-lg-4\"></div>\r\n          <div className=\"col-lg-4 col-md-4\">\r\n            <label htmlFor=\"\">Jumlah</label>\r\n            <Field\r\n              name=\"jumlah\"\r\n              component=\"input\"\r\n              type=\"tel\"\r\n              className=\"form-control\"\r\n              {...currencyMask}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <label htmlFor=\"\">Kategori</label>\r\n            <Field name=\"kategori\" className=\"form-control\" component=\"select\">\r\n              <option value=\"DEFAULT\">SILAHKAN PILIH</option>\r\n              {this.props.parameter.map((list) => (\r\n                <option\r\n                  value={list.kategori_transaksi}\r\n                  key={list.kategori_transaksi}\r\n                >\r\n                  {list.kategori_transaksi}\r\n                </option>\r\n              ))}\r\n            </Field>\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <Field\r\n              name=\"keperluan\"\r\n              label=\"Untuk Keperluan\"\r\n              type=\"text\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12 col-md-12\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\"\r\n                disabled={this.props.onSend}\r\n              >\r\n                {this.props.onSend ? (\r\n                  <span\r\n                    className=\"spinner-border spinner-border-sm mr-3\"\r\n                    aria-hidden=\"true\"\r\n                  ></span>\r\n                ) : null}\r\n                Simpan\r\n                <i className=\"fa fa-paper-plane ml-3\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormKelolaUangBank = reduxForm({\r\n  form: \"FormKelolaUangBank\",\r\n  enableReinitialize: true,\r\n})(FormKelolaUangBank);\r\nexport default connect((state) => {\r\n  return {\r\n    parameter: state.provinsi.parameterTransaksi,\r\n    rekening: state.provinsi.rekening,\r\n  };\r\n})(FormKelolaUangBank);\r\n"],"sourceRoot":""}