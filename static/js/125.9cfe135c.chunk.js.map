{"version":3,"sources":["TotalanMenu/TotalanTimbangan.jsx"],"names":["FormModalTimbangan","lazy","ModalMasterData","SearchBar","Search","TotalanTimbangan","props","changeInput","input","e","setState","target","value","state","jenisBarang","listLokasi","mulai","tambahBarang","columns","dataField","text","sort","headerStyle","width","this","dispatch","getTableTotalanTimbangan","getStatusTotalan","getLokasi","getUUID","getBruto","getNetto","getPkg","getGross","getRp","getQty","localStorage","getItem","data","explode","kodeBarang","split","simpan","kode_kategori","kode_jenis","kadar_cetak","kadar_modal","kadar_jual","qty","plastik","kulit","pkg","parseFloat","gross","bruto","netto","array","JSON","parse","push","setItem","stringify","AxiosMasterPost","noFaktur","Swal","fire","position","icon","timer","showConfirmButton","reset","undefined","kode_kelompok","warning","tanggal","lokasiSelected","no_totalan","kode_lokasi","then","id_totalan","status_totalan","berhasil","removeItem","window","location","reload","className","title","name","component","renderFieldSelect","options","type","label","placeholder","renderField","lokasi","map","list","nama_lokasi","onClick","batalTotalan","startTotalan","onSubmit","handleSubmit","totalanTimbangan","keyField","search","searchProps","style","margin","top","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","noDataIndication","content","fallback","height","count","Component","reduxForm","form","enableReinitialize","selector","formValueSelector","connect","provinsi","listTotalanTimbangan","sumBruto","perhitungan","sumNetto","sumGross","sumPkg","sumQty","sumRp","onSend","initialValues"],"mappings":"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","file":"static/js/125.9cfe135c.chunk.js","sourcesContent":["import React, { Component, lazy, Suspense } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport { connect } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Field, formValueSelector, reduxForm, reset } from \"redux-form\";\r\nimport {\r\n  getBruto,\r\n  getGross,\r\n  getNetto,\r\n  getPkg,\r\n  getQty,\r\n  getRp,\r\n} from \"../actions/LogicAction\";\r\nimport {\r\n  getStatusTotalan,\r\n  getTableTotalanTimbangan,\r\n} from \"../actions/TotalanTimbanganAction\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { renderField, renderFieldSelect } from \"../renderField\";\r\nimport { getLokasi } from \"../actions/lokasiAction\";\r\nimport { AxiosMasterPost } from \"../Axios\";\r\nimport { berhasil, warning } from \"../Alert\";\r\n\r\nconst FormModalTimbangan = lazy(() =>\r\n  import(\"./Components/FormModalTimbangan\")\r\n);\r\nconst ModalMasterData = lazy(() =>\r\n  import(\"../DataMaster/Component/ModalMasterData\")\r\n);\r\n\r\nconst { SearchBar } = Search;\r\nclass TotalanTimbangan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jenisBarang: \"RONGSOK\",\r\n      listLokasi: [],\r\n      mulai: false,\r\n      tambahBarang: \"col-lg-12 d-none\",\r\n      columns: [\r\n        {\r\n          dataField: \"kode_jenis\",\r\n          text: \"Kode\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"kadar_cetak\",\r\n          text: \"Kadar\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"gross\",\r\n          text: \"Gross (Gr)\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Pkg (Gr)\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Berat (Gr)\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"kadar_modal\",\r\n          text: \"Harga\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Netto (Gr)\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getTableTotalanTimbangan());\r\n    this.props.dispatch(getStatusTotalan());\r\n    this.props.dispatch(getLokasi());\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getBruto(\"totalanTimbangan\"));\r\n    this.props.dispatch(getNetto(\"totalanTimbangan\"));\r\n    this.props.dispatch(getPkg(\"totalanTimbangan\"));\r\n    this.props.dispatch(getGross(\"totalanTimbangan\"));\r\n    this.props.dispatch(getRp(\"totalanTimbangan\"));\r\n    this.props.dispatch(getQty(\"totalanTimbangan\"));\r\n    if (localStorage.getItem(\"totalanTimbangan\") !== null) {\r\n      this.setState({\r\n        tambahBarang: \"col-lg-12\",\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    var isi = data.kodeBarang\r\n      ? data.kodeBarang\r\n      : \"DEFAULT|DEFUALT|DEFAULT|DEFAULT\";\r\n    var explode = isi.split(\"|\");\r\n    var simpan = {\r\n      kode_kategori: explode[4],\r\n      kode_jenis: explode[0],\r\n      kadar_cetak: explode[1],\r\n      kadar_modal: explode[3],\r\n      kadar_jual: explode[2],\r\n      qty: 1,\r\n      plastik: 0,\r\n      kulit: 0,\r\n      pkg: parseFloat(data.pkg),\r\n      gross: parseFloat(data.gross),\r\n      bruto: parseFloat(data.gross) - parseFloat(data.pkg),\r\n      netto: parseFloat(data.netto),\r\n    };\r\n    var array = JSON.parse(localStorage.getItem(\"totalanTimbangan\")) || [];\r\n    array.push(simpan);\r\n    localStorage.setItem(\"totalanTimbangan\", JSON.stringify(array));\r\n    AxiosMasterPost(\r\n      `totalan-barang/post-totalan-barang/${this.props.noFaktur}`,\r\n      simpan\r\n    );\r\n    Swal.fire({\r\n      position: \"top-right\",\r\n      icon: \"success\",\r\n      text: \"Transaksi Berhasil\",\r\n      timer: 1500,\r\n      showConfirmButton: false,\r\n    });\r\n    this.props.dispatch(reset(\"FormModalTimbangan\"));\r\n    this.props.dispatch(getTableTotalanTimbangan());\r\n    this.props.dispatch(getStatusTotalan());\r\n  }\r\n\r\n  changeInput = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n  startTotalan() {\r\n    if (this.props.kode_kelompok === undefined) {\r\n      warning(\"Mohon isi Kode Kelompok\");\r\n      return false;\r\n    } else if (this.props.tanggal === undefined) {\r\n      warning(\"Mohon Isi Tanggal\");\r\n      return false;\r\n    } else if (this.props.lokasiSelected === undefined) {\r\n      warning(\"Mohon isi Lokasi\");\r\n      return false;\r\n    }\r\n    this.setState({\r\n      mulai: true,\r\n    });\r\n    let data = {\r\n      no_totalan: this.props.noFaktur,\r\n      kode_kelompok: this.props.kode_kelompok,\r\n      tanggal: this.props.tanggal,\r\n      kode_lokasi: this.props.lokasiSelected,\r\n    };\r\n    AxiosMasterPost(\"totalan-barang/start-proses-totalan\", data).then(() =>\r\n      this.setState({\r\n        mulai: true,\r\n      })\r\n    );\r\n  }\r\n  batalTotalan() {\r\n    let id_totalan = \"\";\r\n    if (this.props.status_totalan.no_totalan !== undefined) {\r\n      id_totalan = this.props.status_totalan.no_totalan;\r\n    } else {\r\n      warning(\"Anda Belum Memulai Totalan\");\r\n    }\r\n\r\n    AxiosMasterPost(`totalan-barang/close-totalan/${id_totalan}`)\r\n      .then(() => berhasil(\"Batal Totalan Berhasil\"))\r\n      .then(() => localStorage.removeItem(\"noFaktur\"))\r\n      .then(() => localStorage.removeItem(\"totalanTimbangan\"))\r\n      .then(() => this.props.dispatch(getUUID()))\r\n      .then(() => window.location.reload());\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"card\">\r\n          <HeaderCard title=\"Totalan Timbangan\" />\r\n          <div className=\"card-body\">\r\n            <h3>Status Totalan : </h3>\r\n            <button className=\"btn btn-success mb-3\">\r\n              {this.props.status_totalan.no_totalan === undefined\r\n                ? \"TOTALAN KOSONG, ANDA BISA LAKUKAN TOTALAN SEKARANG\"\r\n                : \"TOTALAN SEDANG BERJALAN\"}\r\n            </button>\r\n            <br />\r\n            <div className=\"row\">\r\n              <div\r\n                className={\r\n                  this.state.mulai\r\n                    ? \"col-lg-12 d-none\"\r\n                    : this.props.status_totalan.no_totalan === undefined\r\n                    ? \"col-lg-12\"\r\n                    : \"col-lg-12 d-none\"\r\n                }\r\n              >\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-4\">\r\n                    <Field\r\n                      name=\"kode_kelompok\"\r\n                      component={renderFieldSelect}\r\n                      options={[\r\n                        {\r\n                          value: \"PERHIASAN\",\r\n                          name: \"PERHIASAN\",\r\n                        },\r\n                        {\r\n                          value: \"CIOK\",\r\n                          name: \"CIOK\",\r\n                        },\r\n                        {\r\n                          value: \"RONGSOK\",\r\n                          name: \"RONGSOK\",\r\n                        },\r\n                      ]}\r\n                      type=\"text\"\r\n                      label=\"Kode Kelompok\"\r\n                      placeholder=\"Masukan \"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-lg-4\">\r\n                    <Field\r\n                      name=\"tanggal\"\r\n                      component={renderField}\r\n                      type=\"date\"\r\n                      label=\"Tanggal\"\r\n                      placeholder=\"Masukan Tanggal\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-lg-4\">\r\n                    <Field\r\n                      name=\"lokasi\"\r\n                      component={renderFieldSelect}\r\n                      options={this.props.lokasi.map((list) => {\r\n                        let data = {\r\n                          value: list.kode_lokasi,\r\n                          name: list.nama_lokasi,\r\n                        };\r\n                        return data;\r\n                      })}\r\n                      type=\"text\"\r\n                      label=\"Lokasi\"\r\n                      placeholder=\"Masukan Lokasi\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-12 mt-3 mb-3\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-6\">\r\n                    <button\r\n                      className=\"btn btn-danger\"\r\n                      onClick={() => this.batalTotalan()}\r\n                    >\r\n                      Batal Totalan\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"col-lg-6\">\r\n                    <div\r\n                      className={\r\n                        this.state.mulai\r\n                          ? \"text-right d-none\"\r\n                          : this.props.status_totalan.no_totalan === undefined\r\n                          ? \"text-right\"\r\n                          : \"text-right d-none\"\r\n                      }\r\n                    >\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        onClick={() => this.startTotalan()}\r\n                      >\r\n                        Mulai Totalan\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className={\r\n                  this.state.mulai\r\n                    ? \"col-lg-12\"\r\n                    : this.props.status_totalan.no_totalan === undefined\r\n                    ? \"col-lg-12 d-none\"\r\n                    : \"col-lg-12\"\r\n                }\r\n              >\r\n                <FormModalTimbangan\r\n                  noFaktur={this.props.noFaktur}\r\n                  jenisBarang={this.props.kode_kelompok}\r\n                  onSubmit={(data) => this.handleSubmit(data)}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12 mt-2\">\r\n                {this.props.totalanTimbangan ? (\r\n                  <ToolkitProvider\r\n                    keyField=\"kodeKelompok\"\r\n                    data={this.props.totalanTimbangan}\r\n                    columns={this.state.columns}\r\n                    search\r\n                  >\r\n                    {(props) => (\r\n                      <div className=\"form-group\">\r\n                        <div className=\"text-right mt-5 mb-3\">\r\n                          <SearchBar\r\n                            {...props.searchProps}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Tuliskan Kode / Nama\"\r\n                            style={{ margin: 0, top: \"50%\" }}\r\n                          />\r\n                        </div>\r\n                        <BootstrapTable\r\n                          {...props.baseProps}\r\n                          striped\r\n                          hover\r\n                          condensed\r\n                          bordered={true}\r\n                          headerClasses=\"header-table\"\r\n                          pagination={paginationFactory()}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </ToolkitProvider>\r\n                ) : (\r\n                  <BootstrapTable\r\n                    keyField=\"kodeKelompok\"\r\n                    data={[]}\r\n                    columns={this.state.columns}\r\n                    bordered={true}\r\n                    headerClasses=\"header-table\"\r\n                    noDataIndication=\"Tidak Ada Data\"\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ModalMasterData\r\n          content={\r\n            <Suspense\r\n              fallback={<Skeleton width={\"100%\"} height={50} count={5} />}\r\n            >\r\n              <FormModalTimbangan\r\n                noFaktur={this.props.noFaktur}\r\n                jenisBarang={this.props.kode_kelompok}\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n              />\r\n            </Suspense>\r\n          }\r\n          title=\"\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTotalanTimbangan = reduxForm({\r\n  form: \"TotalanTimbangan\",\r\n  enableReinitialize: true,\r\n})(TotalanTimbangan);\r\nconst selector = formValueSelector(\"TotalanTimbangan\");\r\nexport default connect((state) => {\r\n  const { tanggal, kode_kelompok, lokasi } = selector(\r\n    state,\r\n    \"tanggal\",\r\n    \"kode_kelompok\",\r\n    \"lokasi\"\r\n  );\r\n  return {\r\n    totalanTimbangan: state.provinsi.totalanTimbangan,\r\n    noFaktur: state.provinsi.noFaktur,\r\n    listTotalanTimbangan: state.provinsi.listTotalanTimbangan,\r\n    sumBruto: state.perhitungan.sumBruto,\r\n    sumNetto: state.perhitungan.sumNetto,\r\n    sumGross: state.perhitungan.sumGross,\r\n    sumPkg: state.perhitungan.sumPkg,\r\n    sumQty: state.perhitungan.sumQty,\r\n    sumRp: state.perhitungan.sumRp,\r\n    onSend: state.provinsi.onSend,\r\n    status_totalan: state.provinsi.status_totalan,\r\n    lokasi: state.provinsi.lokasi,\r\n    tanggal: tanggal,\r\n    kode_kelompok: kode_kelompok,\r\n    lokasiSelected: lokasi,\r\n    initialValues: {\r\n      kode_kelompok: state.provinsi.status_totalan.kode_kelompok,\r\n      tanggal: state.provinsi.status_totalan.tanggal,\r\n    },\r\n  };\r\n})(TotalanTimbangan);\r\n"],"sourceRoot":""}