{"version":3,"sources":["Laporan/Component/FormCustomer.jsx","Laporan/Component/LaporanPembayaranCustomer.jsx","Laporan/Component/LaporanPenjualanCustomer.jsx","Laporan/Component/LaporanTitipCustomer.jsx","Laporan/Component/LaporanTitipCustomerCard.jsx","Laporan/Component/LaporanTitipCustomerSummary.jsx","Laporan/LaporanCustomer.jsx","GlobalComponent/function.jsx","GlobalComponent/notification.jsx"],"names":["FormCustomer","props","state","this","dispatch","getsalesmanList","getcustomerList","customer","value","name","map","list","data","kode_customer","nama_customer","push","from","onSubmit","handleSubmit","className","Field","label","component","ReanderField","type","htmlFor","StatusTitipan","ReanderSelect","options","salesman","kode_sales","nama_sales","placeholder","key","autoComplete","Component","reduxForm","form","enableReinitialize","selector","formValueSelector","connect","harga","cash","cashNetto","parseFloat","toFixed","cashNettoMurni","provinsi","LaporanPembayaranCustomer","console","log","doc","jsPDF","tableRows","setFontSize","text","forEach","item","index","tableColumn","content","colSpan","detail","hasil","rows","tanggal","no_bon","total_piutang","total_pembayaran","total_denda","total_putus_titip","jumlah_piutang","lebih_pembayaran","detail_bayar","bayar_cash","bayar_trf","bayar_ciok","bayar_rongsok","bayar_giro","styles","fillColor","autoTable","head","body","startY","theme","rowPageBreak","pageBreak","margin","top","bodyStyles","lineWidth","lineColor","headStyles","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","autoPrint","setProperties","title","string","output","x","window","open","document","write","LaporanPenjualanCustomer","finalY","nama_toko","ongkos_rp","dics_global","total_netto","total_netto_ext","detail_barang","kode_jenis","nama_jenis","kadar_cetak","kadar_jual","bruto","netto","disc","netto_disc","autoTableEndPosY","LaporanTitipCustomer","formatGram","titip_gr","formatRp","titip_rp","LaporanTitipCUstomerCard","awal_titip","in_titip","out_titip","akhir_titip","keterangan","no_ext","LaporanTitipCustomerSummary","footRows","jenis_titip","barang","foot","serverNonMaster","process","REACT_APP_BACKEND_URL_NON_MASTER","LaporanCustomer","AxiosMasterGet","tglFrom","tglTo","then","res","checkLaporan","catch","err","gagal","Axios","get","params","kodeLokasiFrom","kodelokasiTo","localStorage","setItem","JSON","stringify","kode_supplier","jenis_transkasi","tanggal_awal","tanggal_akhir","href","data-toggle","aria-expanded","id","handlePembayaran","handleSaldoPiutang","handleReturn","handleHistory","handleGabung","handleTitipanPerCustomer","getToday","Date","getFullYear","getMonth","slice","getDate","SkeletonLoading","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","ToastError","Promise","resolve","reject","fire","icon","input","readOnly","autoFocus","ref","loading","meta","touched","error","warning","onKeyPress","event","preventDefault","getOptions","disabled","search","e","getUserData","parse","getItem"],"mappings":"qQAUMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,gEAMjBC,KAAKF,MAAMG,SAASC,eACpBF,KAAKF,MAAMG,SAASE,iB,+BAGpB,IAAIC,EAAW,CACb,CACEC,MAAO,MACPC,KAAM,QAYV,OATAN,KAAKF,MAAMM,SAASG,KAAI,SAACC,GACvB,IAAIC,EAAO,CACTJ,MAAOG,EAAKE,cACZJ,KAAME,EAAKG,eAGb,OADAP,EAASQ,KAAKH,IACP,KAGDT,KAAKF,MAAMe,MACjB,IAAK,UACH,OACE,0BAAMC,SAAUd,KAAKF,MAAMiB,cACzB,yBAAKC,UAAU,OACb,yBAAKA,UAAU,YACb,kBAACC,EAAA,EAAD,CACEX,KAAK,YACLY,MAAM,YACNC,UAAWC,IACXC,KAAK,UAGT,yBAAKL,UAAU,YACb,yBAAKA,UAAU,cACb,2BAAOM,QAAQ,IAAf,UACA,yBAAKN,UAAU,4BACb,2BAAOA,UAAU,QACf,kBAACC,EAAA,EAAD,CACEX,KAAK,gBACLa,UAAU,QACVE,KAAK,QACLhB,MAAM,OACNW,UAAU,SANd,QAUA,+BACE,kBAACC,EAAA,EAAD,CACEX,KAAK,gBACLa,UAAU,QACVE,KAAK,QACLhB,MAAM,QACNW,UAAU,SANd,YAaN,yBACEA,UAC+B,SAA7BhB,KAAKF,MAAMyB,cACP,kBACA,YAGN,kBAACN,EAAA,EAAD,CACEX,KAAK,UACLY,MAAM,eACNF,UAAU,eACVG,UAAWC,IACXC,KAAK,UAGT,yBACEL,UAC+B,SAA7BhB,KAAKF,MAAMyB,cACP,kBACA,YAGN,kBAACN,EAAA,EAAD,CACEX,KAAK,QACLY,MAAM,gBACNF,UAAU,eACVG,UAAWC,IACXC,KAAK,UAGT,yBACEL,UAC+B,SAA7BhB,KAAKF,MAAMyB,cACP,WACA,mBAGN,kBAACN,EAAA,EAAD,CACEX,KAAK,MACLY,MAAM,gBACNF,UAAU,eACVG,UAAWC,IACXC,KAAK,UAGT,yBAAKL,UAAU,aACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAAkBK,KAAK,UAAzC,aAQZ,IAAK,aACH,OACE,0BAAMP,SAAUd,KAAKF,MAAMiB,cACzB,yBAAKC,UAAU,OACb,yBAAKA,UAAU,YACb,kBAACC,EAAA,EAAD,CACEX,KAAK,aACLa,UAAWK,IACXC,QAASzB,KAAKF,MAAM4B,SAASnB,KAAI,SAACC,GAKhC,MAJW,CACTH,MAAOG,EAAKmB,WACZrB,KAAME,EAAKoB,eAIfP,KAAK,OACLH,MAAM,aACNW,YAAY,wBAGhB,yBAAKb,UAAU,YACb,kBAACC,EAAA,EAAD,CACEX,KAAK,UACLY,MAAM,aACNF,UAAU,eACVG,UAAWC,IACXC,KAAK,UAGT,yBAAKL,UAAU,YACb,kBAACC,EAAA,EAAD,CACEX,KAAK,QACLY,MAAM,gBACNF,UAAU,eACVG,UAAWC,IACXC,KAAK,UAGT,yBAAKL,UAAU,aACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAAkBK,KAAK,UAAzC,aAQZ,IAAK,UACH,OACE,0BAAMP,SAAUd,KAAKF,MAAMiB,cACzB,yBAAKC,UAAU,OACb,yBAAKA,UAAU,YACb,2BAAOM,QAAQ,IAAf,gBACA,kBAACL,EAAA,EAAD,CAAOX,KAAK,QAAQa,UAAU,SAASH,UAAU,gBAC/C,4BAAQX,MAAM,WAAWyB,IAAI,YAA7B,aAGA,4BAAQzB,MAAM,QAAQyB,IAAI,SAA1B,eAKJ,yBAAKd,UAAU,YACb,kBAACC,EAAA,EAAD,CACEX,KAAK,WACLY,MAAM,YACNC,UAAWC,IACXC,KAAK,UAGT,yBAAKL,UAAU,YACb,kBAACC,EAAA,EAAD,CACEX,KAAK,QACLY,MAAM,YACNC,UAAWC,IACXC,KAAK,UAGT,yBAAKL,UAAU,YACb,yBAAKA,UAAU,cACb,2BAAOM,QAAQ,IAAf,KACA,yBAAKN,UAAU,4BACb,2BAAOA,UAAU,QACf,kBAACC,EAAA,EAAD,CACEX,KAAK,aACLa,UAAU,QACVE,KAAK,WACLL,UAAU,SALd,SASA,2BAAOA,UAAU,QACf,kBAACC,EAAA,EAAD,CACEX,KAAK,gBACLa,UAAU,QACVE,KAAK,WACLL,UAAU,SALd,mBAYN,yBAAKA,UAAU,YACb,kBAACC,EAAA,EAAD,CACEX,KAAK,UACLY,MAAM,eACNF,UAAU,eACVG,UAAWC,IACXC,KAAK,UAGT,yBAAKL,UAAU,YACb,kBAACC,EAAA,EAAD,CACEX,KAAK,QACLY,MAAM,eACNF,UAAU,eACVG,UAAWC,IACXC,KAAK,UAGT,yBAAKL,UAAU,aACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAAkBK,KAAK,UAAzC,aAQZ,IAAK,kBACH,OACE,0BAAMP,SAAUd,KAAKF,MAAMiB,cACzB,yBAAKC,UAAU,OACb,yBAAKA,UAAU,YACb,2BAAOM,QAAQ,IAAf,SACA,kBAACL,EAAA,EAAD,CAAOX,KAAK,QAAQa,UAAU,SAASH,UAAU,gBAC/C,4BAAQX,MAAM,QAAQyB,IAAI,SAA1B,WAKJ,yBAAKd,UAAU,YACb,2BAAOM,QAAQ,IAAf,SACA,kBAACL,EAAA,EAAD,CAAOX,KAAK,QAAQa,UAAU,SAASH,UAAU,gBAC/C,4BAAQX,MAAM,QAAQyB,IAAI,SAA1B,WAKJ,yBAAKd,UAAU,YACb,2BAAOM,QAAQ,IAAf,mBACA,kBAACL,EAAA,EAAD,CAAOX,KAAK,QAAQa,UAAU,SAASH,UAAU,gBAC/C,4BAAQX,MAAM,OAAOyB,IAAI,QAAzB,UAKJ,yBAAKd,UAAU,YACb,yBAAKA,UAAU,cACb,2BAAOM,QAAQ,IAAf,KACA,yBAAKN,UAAU,4BACb,2BAAOA,UAAU,QACf,kBAACC,EAAA,EAAD,CACEX,KAAK,eACLa,UAAU,QACVE,KAAK,QACLhB,MAAM,UACNW,UAAU,SANd,qBAUA,2BAAOA,UAAU,QACf,kBAACC,EAAA,EAAD,CACEX,KAAK,eACLa,UAAU,QACVE,KAAK,QACLhB,MAAM,eACNW,UAAU,SANd,oBAaN,yBAAKA,UAAU,YACb,kBAACC,EAAA,EAAD,CACEX,KAAK,UACLY,MAAM,eACNF,UAAU,eACVG,UAAWC,IACXC,KAAK,UAGT,yBAAKL,UAAU,YACb,kBAACC,EAAA,EAAD,CACEX,KAAK,QACLY,MAAM,eACNF,UAAU,eACVG,UAAWC,IACXC,KAAK,UAGT,yBAAKL,UAAU,aACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAAkBK,KAAK,UAAzC,aAQZ,IAAK,SACH,OACE,0BAAMP,SAAUd,KAAKF,MAAMiB,cACzB,yBAAKC,UAAU,OACb,yBAAKA,UAAU,YACb,2BAAOM,QAAQ,IAAf,iBACA,kBAACL,EAAA,EAAD,CAAOX,KAAK,QAAQa,UAAU,SAASH,UAAU,gBAC/C,4BAAQX,MAAM,WAAWyB,IAAI,YAA7B,aAGA,4BAAQzB,MAAM,QAAQyB,IAAI,SAA1B,WAKJ,yBAAKd,UAAU,YACb,kBAACC,EAAA,EAAD,CACEX,KAAK,WACLY,MAAM,YACNF,UAAU,eACVG,UAAWC,IACXC,KAAK,UAGT,yBAAKL,UAAU,YACb,kBAACC,EAAA,EAAD,CACEX,KAAK,UACLY,MAAM,eACNF,UAAU,eACVG,UAAWC,IACXC,KAAK,UAGT,yBAAKL,UAAU,YACb,kBAACC,EAAA,EAAD,CACEX,KAAK,QACLY,MAAM,eACNF,UAAU,eACVG,UAAWC,IACXC,KAAK,UAGT,yBAAKL,UAAU,aACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAAkBK,KAAK,UAAzC,aAQZ,IAAK,SACH,OACE,0BAAMP,SAAUd,KAAKF,MAAMiB,cACzB,yBAAKC,UAAU,OACb,yBAAKA,UAAU,YACb,kBAACC,EAAA,EAAD,CACEX,KAAK,OACLY,MAAM,OACNF,UAAU,eACVG,UAAWC,IACXC,KAAK,UAGT,yBAAKL,UAAU,YACb,kBAACC,EAAA,EAAD,CACEX,KAAK,MACLY,MAAM,MACNF,UAAU,eACVG,UAAWC,IACXC,KAAK,UAGT,yBAAKL,UAAU,YACb,kBAACC,EAAA,EAAD,CACEX,KAAK,OACLY,MAAM,OACNF,UAAU,eACVG,UAAWC,IACXC,KAAK,UAGT,yBAAKL,UAAU,aACf,yBAAKA,UAAU,YACb,kBAACC,EAAA,EAAD,CACEX,KAAK,UACLY,MAAM,UACNF,UAAU,eACVG,UAAWC,IACXC,KAAK,UAGT,yBAAKL,UAAU,aACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,mBAAlB,aAMZ,IAAK,eACH,OACE,0BAAMF,SAAUd,KAAKF,MAAMiB,aAAcgB,cAAc,GACrD,yBAAKf,UAAU,OACb,yBAAKA,UAAU,YACb,kBAACC,EAAA,EAAD,CACEX,KAAK,gBACLa,UAAWK,IACXC,QAASrB,EACTiB,KAAK,OACLH,MAAM,aACNW,YAAY,wBAGhB,yBAAKb,UAAU,YACb,kBAACC,EAAA,EAAD,CACEX,KAAK,UACLY,MAAM,aACNF,UAAU,eACVG,UAAWC,IACXC,KAAK,UAGT,yBAAKL,UAAU,YACb,kBAACC,EAAA,EAAD,CACEX,KAAK,QACLY,MAAM,gBACNF,UAAU,eACVG,UAAWC,IACXC,KAAK,UAGT,yBAAKL,UAAU,aACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAAkBK,KAAK,UAAzC,aAQZ,IAAK,kBACH,OACE,0BAAMP,SAAUd,KAAKF,MAAMiB,cACzB,yBAAKC,UAAU,OACb,yBAAKA,UAAU,YACb,kBAACC,EAAA,EAAD,CACEX,KAAK,gBACLa,UAAWK,IACXC,QAASrB,EACTiB,KAAK,OACLH,MAAM,aACNW,YAAY,wBAGhB,yBAAKb,UAAU,YACb,kBAACC,EAAA,EAAD,CACEX,KAAK,kBACLa,UAAWK,IACXC,QAAS,CACP,CACEpB,MAAO,OACPC,KAAM,QAER,CACED,MAAO,SACPC,KAAM,WAGVe,KAAK,OACLH,MAAM,eACNW,YAAY,0BAGhB,yBAAKb,UAAU,YACb,kBAACC,EAAA,EAAD,CACEX,KAAK,OACLa,UAAWK,IACXC,QAAS,CACP,CACEpB,MAAO,SACPC,KAAM,UAER,CACED,MAAO,OACPC,KAAM,QAER,CACED,MAAO,UACPC,KAAM,YAGVe,KAAK,OACLH,MAAM,eACNW,YAAY,0BAGhB,yBAAKb,UAAU,YACb,kBAACC,EAAA,EAAD,CACEX,KAAK,eACLY,MAAM,gBACNF,UAAU,eACVG,UAAWC,IACXC,KAAK,UAGT,yBAAKL,UAAU,YACb,kBAACC,EAAA,EAAD,CACEX,KAAK,gBACLY,MAAM,gBACNF,UAAU,eACVG,UAAWC,IACXC,KAAK,UAGT,yBAAKL,UAAU,aACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAAkBK,KAAK,UAAzC,kB,GA3iBSW,aAyjB3BnC,EAAeoC,YAAU,CACvBC,KAAM,eACNC,oBAAoB,GAFPF,CAGZpC,GACH,IAAMuC,EAAWC,YAAkB,gBACpBC,eAAQ,SAACvC,GAAW,IAAD,EACOqC,EACrCrC,EACA,QACA,OACA,iBAJMwC,EADwB,EACxBA,MAAOC,EADiB,EACjBA,KAAMjB,EADW,EACXA,cAMrB,MAAO,CACLkB,WAAYC,WAAWF,GAAQE,WAAWH,IAAQI,QAAQ,GAC1DC,eAAgBF,WAAWF,GAC3BjB,cAAeA,EACfG,SAAU3B,EAAM8C,SAASnB,SACzBtB,SAAUL,EAAM8C,SAASzC,YAZdkC,CAcZzC,G,SC9cYiD,G,OAnImB,SAACrC,GACjCsC,QAAQC,IAAIvC,GAEZ,IAAMwC,EAAM,IAAIC,UAAM,aAElBC,EAAY,GAEhBF,EAAIG,YAAY,IAChBH,EAAII,KAAK,sCAAuC,GAAI,IACpDJ,EAAIG,YAAY,IAKhB3C,EAAK6C,SAAQ,SAACC,EAAMC,GAClB,IAAIC,EAAc,CAChB,CACE,CACEC,QAAQ,mBAAD,OAAqBH,EAAK7C,eACjCiD,QAAS,GAEX,CACED,QAAQ,mBAAD,OAAqBH,EAAK5C,eACjCgD,QAAS,IAGb,CACE,CACED,QAAQ,WAEV,CACEA,QAAQ,UAEV,CACEA,QAAQ,WAEV,CACEA,QAAQ,SAEV,CACEA,QAAQ,SAEV,CACEA,QAAQ,eAEV,CACEA,QAAQ,eAEV,CACEA,QAAQ,eAIdH,EAAKK,OAAON,SAAQ,SAACO,EAAOL,GAC1B,IAAIM,EAAO,CACTD,EAAME,QACNF,EAAMG,OACNH,EAAMI,cACNJ,EAAMK,iBACNL,EAAMM,YACNN,EAAMO,kBACNP,EAAMQ,eACNR,EAAMS,kBAERnB,EAAUvC,KAAKkD,GACf,IAAIF,EAAS,CAAC,gBAAD,OACKL,EAAKgB,aAAaf,GAAOgB,YAD9B,2BAESjB,EAAKgB,aAAaf,GAAOiB,WAFlC,uBAGKlB,EAAKgB,aAAaf,GAAOkB,YAH9B,0BAIQnB,EAAKgB,aAAaf,GAAOmB,eAJjC,uBAKKpB,EAAKgB,aAAaf,GAAOoB,aAE3CzB,EAAUvC,KAAKgD,GACfT,EAAUvC,KAAK,CACb,CACE8C,QAAS,GACTC,QAAS,EACTkB,OAAQ,CACNC,UAAW,CAAC,IAAK,IAAK,YAM9B7B,EAAI8B,UAAU,CACZC,KAAMvB,EACNwB,KAAM9B,EACN+B,OAAQ,GACRC,MAAO,QACPC,aAAc,QACdC,UAAW,QACXC,OAAQ,CAAEC,IAAK,IACfC,WAAY,CAAEC,UAAW,IAAMC,UAAW,QAC1CC,WAAY,CACVF,UAAW,IACXC,UAAW,OACXZ,UAAW,CAAC,IAAK,IAAK,WAK5B,IAAMc,EAAQ3C,EAAI4C,SAASC,mBACrBC,EAAY9C,EAAI4C,SAASG,SAASC,MAClCC,EAAajD,EAAI4C,SAASG,SAASG,OACzClD,EAAIG,YAAY,IAChB,IAAK,IAAIgD,EAAI,EAAGA,EAAIR,EAAQ,EAAGQ,IAAK,CAClC,IAAIC,EAAgBN,EAAY,EAC5BO,EAAcJ,EAAa,GAC/BjD,EAAIsD,QAAQH,GACZnD,EAAII,KAAJ,UAAY+C,EAAZ,eAAoBR,GAASS,EAAeC,EAAa,CACvDE,MAAO,WAGXvD,EAAIwD,YACJxD,EAAIyD,cAAc,CAChBC,MAAO,wCAGT,IAAIC,EAAS3D,EAAI4D,OAAO,iBACpBC,EAAIC,OAAOC,OACfF,EAAEG,SAASD,OACXF,EAAEG,SAASC,MACT,iJACEN,EACA,6BCYSO,EAxIkB,SAAC1G,GAChCsC,QAAQC,IAAIvC,GAEZ,IAAMwC,EAAM,IAAIC,UAAM,aAElBC,EAAY,GACZiE,EAAS,GACbnE,EAAIG,YAAY,IAChBH,EAAII,KAAK,6BAA8B,GAAI,IAC3CJ,EAAIG,YAAY,IAKhB3C,EAAK6C,SAAQ,SAACC,EAAMC,GAClB,IAAIC,EAAc,CAChB,CACE,CACEC,QAAQ,aAAD,OAAeH,EAAKQ,SAC3BJ,QAAS,GAEX,CACED,QAAQ,YAAD,OAAcH,EAAKS,QAC1BL,QAAS,GAEX,CACED,QAAQ,eAAD,OAAiBH,EAAK8D,WAC7B1D,QAAS,IAGb,CACE,CACED,QAAQ,YAAD,OAAcH,EAAK+D,WAC1B3D,QAAS,GAEX,CACED,QAAQ,iBAAD,OAAmBH,EAAKgE,aAC/B5D,QAAS,GAEX,CACED,QAAQ,iBAAD,OAAmBH,EAAKiE,aAC/B7D,QAAS,GAEX,CACED,QAAQ,qBAAD,OAAuBH,EAAKkE,iBACnC9D,QAAS,IAGb,CACE,CACED,QAAQ,cAEV,CACEA,QAAQ,cAEV,CACEA,QAAQ,eAEV,CACEA,QAAQ,cAEV,CACEA,QAAQ,SAEV,CACEA,QAAQ,SAEV,CACEA,QAAQ,QAEV,CACEA,QAAQ,gBAIdH,EAAKmE,cAAcpE,SAAQ,SAACO,GAC1B,IAAIC,EAAO,CACTD,EAAM8D,WACN9D,EAAM+D,WACN/D,EAAMgE,YACNhE,EAAMiE,WACNjE,EAAMkE,MACNlE,EAAMmE,MACNnE,EAAMoE,KACNpE,EAAMqE,YAER/E,EAAUvC,KAAKkD,MAEjBb,EAAI8B,UAAU,CACZC,KAAMvB,EACNwB,KAAM9B,EACN+B,OAAkB,IAAV1B,EAAc,GAAK4D,EAAS,GACpCjC,MAAO,QACPC,aAAc,QACdE,OAAQ,CAAEC,IAAK,IACfC,WAAY,CAAEC,UAAW,IAAMC,UAAW,QAC1CC,WAAY,CACVF,UAAW,IACXC,UAAW,OACXZ,UAAW,CAAC,IAAK,IAAK,QAG1BsC,EAASnE,EAAIkF,mBAAqB,GAClChF,EAAY,MAGd,IAAMyC,EAAQ3C,EAAI4C,SAASC,mBACrBC,EAAY9C,EAAI4C,SAASG,SAASC,MAClCC,EAAajD,EAAI4C,SAASG,SAASG,OACzClD,EAAIG,YAAY,IAChB,IAAK,IAAIgD,EAAI,EAAGA,EAAIR,EAAQ,EAAGQ,IAAK,CAClC,IAAIC,EAAgBN,EAAY,EAC5BO,EAAcJ,EAAa,GAC/BjD,EAAIsD,QAAQH,GACZnD,EAAII,KAAJ,UAAY+C,EAAZ,eAAoBR,GAASS,EAAeC,EAAa,CACvDE,MAAO,WAGXvD,EAAIwD,YACJxD,EAAIyD,cAAc,CAChBC,MAAO,+BAGT,IAAIC,EAAS3D,EAAI4D,OAAO,iBACpBC,EAAIC,OAAOC,OACfF,EAAEG,SAASD,OACXF,EAAEG,SAASC,MACT,wIACEN,EACA,4BCvCSwB,EAzFc,SAAC3H,GAE5B,IAAMwC,EAAM,IAAIC,UAEZC,EAAY,GAmBhBF,EAAIG,YAAY,IAChBH,EAAII,KAAK,yBAA0B,GAAI,IACvCJ,EAAIG,YAAY,IAKhB3C,EAAK6C,SAAQ,SAACC,EAAMC,GAClB,IAAIM,EAAO,CACTP,EAAK7C,cACL6C,EAAK5C,cACL0H,YAAW9E,EAAK+E,UAChBC,YAAShF,EAAKiF,WAEhBrF,EAAUvC,KAAKkD,MAMjBb,EAAI8B,UAAU,CACZC,KAtCgB,CAChB,CACE,CACEtB,QAAQ,iBAGV,CACEA,QAAQ,iBAEV,CACEA,QAAQ,kBAEV,CACEA,QAAQ,oBA0BZuB,KAAM9B,EACN+B,OAAQ,GACRC,MAAO,QACPC,aAAc,QACdC,UAAW,QACXC,OAAQ,CAAEC,IAAK,IACfC,WAAY,CAAEC,UAAW,IAAMC,UAAW,QAC1CC,WAAY,CACVF,UAAW,IACXC,UAAW,OACXZ,UAAW,CAAC,IAAK,IAAK,QAI1B,IAAMc,EAAQ3C,EAAI4C,SAASC,mBACrBC,EAAY9C,EAAI4C,SAASG,SAASC,MAClCC,EAAajD,EAAI4C,SAASG,SAASG,OACzClD,EAAIG,YAAY,IAChB,IAAK,IAAIgD,EAAI,EAAGA,EAAIR,EAAQ,EAAGQ,IAAK,CAClC,IAAIC,EAAgBN,EAAY,EAC5BO,EAAcJ,EAAa,GAC/BjD,EAAIsD,QAAQH,GACZnD,EAAII,KAAJ,UAAY+C,EAAZ,eAAoBR,GAASS,EAAeC,EAAa,CACvDE,MAAO,WAGXvD,EAAIwD,YACJxD,EAAIyD,cAAc,CAChBC,MAAO,2BAGT,IAAIC,EAAS3D,EAAI4D,OAAO,iBACpBC,EAAIC,OAAOC,OACfF,EAAEG,SAASD,OACXF,EAAEG,SAASC,MACT,oIACEN,EACA,4BC8BS6B,EAjHkB,SAAChI,GAEhC,IAAMwC,EAAM,IAAIC,UAEZC,EAAY,GAEhBF,EAAIG,YAAY,IAChBH,EAAII,KAAK,0BAA2B,GAAI,IACxCJ,EAAIG,YAAY,IAKhB3C,EAAK6C,SAAQ,SAACC,EAAMC,GAClB,IAAIC,EAAc,CAChB,CACE,CACEC,QAAQ,mBAAD,OAAqBH,EAAK7C,eACjCiD,QAAS,GAEX,CACED,QAAQ,mBAAD,OAAqBH,EAAK5C,eACjCgD,QAAS,IAGb,CACE,CACED,QAAQ,WAEV,CACEA,QAAQ,eAEV,CACEA,QAAQ,aAEV,CACEA,QAAQ,cAEV,CACEA,QAAQ,gBAEV,CACEA,QAAQ,cAGV,CACEA,QAAQ,YAIdH,EAAKK,OAAON,SAAQ,SAACO,GACnB,IAAIC,EAAO,CACTD,EAAME,QACNF,EAAM6E,WACN7E,EAAM8E,SACN9E,EAAM+E,UACN/E,EAAMgF,YACNhF,EAAMiF,WACNjF,EAAMkF,QAER5F,EAAUvC,KAAKkD,MAEjBb,EAAI8B,UAAU,CACZC,KAAMvB,EACNwB,KAAM9B,EACN+B,OAAQ,GACRC,MAAO,QACPC,aAAc,QAEdE,OAAQ,CAAEC,IAAK,IACfC,WAAY,CAAEC,UAAW,IAAMC,UAAW,QAC1CC,WAAY,CACVF,UAAW,IACXC,UAAW,OACXZ,UAAW,CAAC,IAAK,IAAK,WAS5B,IAAMc,EAAQ3C,EAAI4C,SAASC,mBACrBC,EAAY9C,EAAI4C,SAASG,SAASC,MAClCC,EAAajD,EAAI4C,SAASG,SAASG,OACzClD,EAAIG,YAAY,IAChB,IAAK,IAAIgD,EAAI,EAAGA,EAAIR,EAAQ,EAAGQ,IAAK,CAClC,IAAIC,EAAgBN,EAAY,EAC5BO,EAAcJ,EAAa,GAC/BjD,EAAIsD,QAAQH,GACZnD,EAAII,KAAJ,UAAY+C,EAAZ,eAAoBR,GAASS,EAAeC,EAAa,CACvDE,MAAO,WAGXvD,EAAIwD,YACJxD,EAAIyD,cAAc,CAChBC,MAAO,kCAGT,IAAIC,EAAS3D,EAAI4D,OAAO,iBACpBC,EAAIC,OAAOC,OACfF,EAAEG,SAASD,OACXF,EAAEG,SAASC,MACT,2IACEN,EACA,4BCwBSoC,EAlIqB,SAACvI,GAEnC,IAAMwC,EAAM,IAAIC,UAEZC,EAAY,GACZ8F,EAAW,GACXxF,EAAc,GAElBA,EAAc,CACZ,CACE,CACEC,QAAQ,iBAEV,CACEA,QAAQ,iBAEV,CACEA,QAAQ,cAGV,CACEA,QAAQ,YAGV,CACEA,QAAQ,aAGV,CACEA,QAAQ,iBAKdT,EAAIG,YAAY,IAChBH,EAAII,KAAK,iCAAkC,GAAI,IAC/CJ,EAAIG,YAAY,IAEhB3C,EAAK6C,SAAQ,SAAC9C,EAAMgD,GAClBC,EAAc,CACZ,CACE,CACEC,QAAQ,iBAAD,OAAmBlD,EAAK0I,aAC/BvF,QAAS,IAGb,CACE,CACED,QAAQ,iBAEV,CACEA,QAAQ,cAGV,CACEA,QAAQ,YAGV,CACEA,QAAQ,aAGV,CACEA,QAAQ,iBAIdlD,EAAKoD,OAAON,SAAQ,SAAC6F,EAAQ3F,GAC3B,IAAIM,EAAO,CACTqF,EAAOzI,cACPyI,EAAOT,WACPS,EAAOR,SACPQ,EAAOP,UACPO,EAAON,aAET1F,EAAUvC,KAAKkD,GACfmF,EAAW,SAOfhG,EAAI8B,UAAU,CACZC,KAAMvB,EACNwB,KAAM9B,EACNiG,KAAMH,EACN/D,OAAQ,GACRC,MAAO,QACPC,aAAc,QACdC,UAAW,QACXC,OAAQ,CAAEC,IAAK,IACfC,WAAY,CAAEC,UAAW,IAAMC,UAAW,QAC1CC,WAAY,CACVF,UAAW,IACXC,UAAW,OACXZ,UAAW,CAAC,IAAK,IAAK,QAI1B,IAAMc,EAAQ3C,EAAI4C,SAASC,mBACrBC,EAAY9C,EAAI4C,SAASG,SAASC,MAClCC,EAAajD,EAAI4C,SAASG,SAASG,OACzClD,EAAIG,YAAY,IAChB,IAAK,IAAIgD,EAAI,EAAGA,EAAIR,EAAQ,EAAGQ,IAAK,CAClC,IAAIC,EAAgBN,EAAY,EAC5BO,EAAcJ,EAAa,GAC/BjD,EAAIsD,QAAQH,GACZnD,EAAII,KAAJ,UAAY+C,EAAZ,eAAoBR,GAASS,EAAeC,EAAa,CACvDE,MAAO,WAGXvD,EAAIwD,YACJxD,EAAIyD,cAAc,CAChBC,MAAO,qCAGT,IAAIC,EAAS3D,EAAI4D,OAAO,iBACpBC,EAAIC,OAAOC,OACfF,EAAEG,SAASD,OACXF,EAAEG,SAASC,MACT,8IACEN,EACA,4BCpHAyC,EAAkBC,0PAAYC,iCAC9BC,E,kDACJ,WAAY1J,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,yDAKNU,M,oCACCA,M,uCACGA,GACfgJ,YAAe,oBAAD,OACQhJ,EAAKkB,WADb,YAC2BlB,EAAKiJ,QADhC,YAC2CjJ,EAAKkJ,QAE3DC,MAAK,SAACC,GACDC,YAAaD,EAAIpJ,OACnB0G,EAAyB0C,EAAIpJ,SAGhCsJ,OAAM,SAACC,GAAD,OACLC,YAAM,yD,4CAGUxJ,GACpByJ,IAAMC,IAAId,EAAkB,qBAAsB,CAChDe,OAAQ,CACNV,QAASjJ,EAAKiJ,QACdC,MAAOlJ,EAAKkJ,MACZU,eAAgB5J,EAAK4J,eACrBC,aAAc7J,EAAK6J,gBAGpBV,MAAK,SAACC,GACDC,YAAaD,EAAIpJ,OACnB8J,aAAaC,QACX,iCACAC,KAAKC,UAAUb,EAAIpJ,UAIxBsJ,OAAM,SAACC,GAAD,OACLC,YAAM,yD,mCAGCxJ,GACXyJ,IAAMC,IAAId,EAAkB,qBAAsB,CAChDe,OAAQ,CACNV,QAASjJ,EAAKiJ,QACdC,MAAOlJ,EAAKkJ,MACZU,eAAgB5J,EAAK4J,eACrBC,aAAc7J,EAAK6J,gBAGpBV,MAAK,SAACC,GAAD,OACJU,aAAaC,QAAQ,wBAAyBC,KAAKC,UAAUb,EAAIpJ,UAElEsJ,OAAM,SAACC,GAAD,OACLC,YAAM,yD,yCAGOxJ,GACjBgJ,YAAe,iCAAD,OACqBhJ,EAAKC,cAD1B,YAC2CD,EAAKiJ,QADhD,YAC2DjJ,EAAKkJ,MADhE,iBAGXC,MAAK,SAACC,GACDC,YAAaD,EAAIpJ,OACnBqC,EAA0B+G,EAAIpJ,SAGjCsJ,OAAM,SAACC,GAAD,OACLC,YAAM,yD,oCAGExJ,GACZyJ,IAAMC,IAAId,EAAkB,qBAAsB,CAChDe,OAAQ,CACNV,QAASjJ,EAAKiJ,QACdC,MAAOlJ,EAAKkJ,MACZU,eAAgB5J,EAAK4J,eACrBC,aAAc7J,EAAK6J,gBAGpBV,MAAK,SAACC,GAAD,OACJU,aAAaC,QAAQ,yBAA0BC,KAAKC,UAAUb,EAAIpJ,UAEnEsJ,OAAM,SAACC,GAAD,OACLC,YAAM,yD,+CAGaxJ,GAEvB,OADAsC,QAAQC,IAAIvC,GACJA,EAAKY,MACX,IAAK,SACHoI,YAAe,yBAAD,OAA0BhJ,EAAKkK,gBAAiBf,MAC5D,SAACC,GACKC,YAAaD,EAAIpJ,OACnB2H,EAAqByB,EAAIpJ,SAK/B,MACF,IAAK,OACHgJ,YAAe,8BAAD,OACkBhJ,EAAKkK,cADvB,YACwClK,EAAKmK,gBAD7C,YACgEnK,EAAKoK,aADrE,YACqFpK,EAAKqK,gBACtGlB,MAAK,SAACC,GACFC,YAAaD,EAAIpJ,OACnBgI,EAAyBoB,EAAIpJ,SAIjC,MACF,IAAK,UACHgJ,YAAe,iCAAD,OACqBhJ,EAAKkK,cAD1B,YAC2ClK,EAAKmK,gBADhD,YACmEnK,EAAKoK,aADxE,YACwFpK,EAAKqK,gBACzGlB,MAAK,SAACC,GACFC,YAAaD,EAAIpJ,OACnBuI,EAA4Ba,EAAIpJ,Y,+BAQhC,IAAD,OACP,OACE,yBAAKO,UAAU,mBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,gDACZ,wBAAIA,UAAU,YACZ,uBACE+J,KAAK,kBACLC,cAAY,MACZC,gBAAc,OACdjK,UAAU,mBAEV,uBAAGA,UAAU,kDACb,0BAAMA,UAAU,qBAAhB,eAGJ,wBAAIA,UAAU,YACZ,uBACE+J,KAAK,uBACLC,cAAY,MACZC,gBAAc,QACdjK,UAAU,YAEV,uBAAGA,UAAU,oDACb,0BAAMA,UAAU,qBAAhB,wBAKJ,wBAAIA,UAAU,YACZ,uBACE+J,KAAK,cACLC,cAAY,MACZC,gBAAc,QACdjK,UAAU,YAEV,uBAAGA,UAAU,oDACb,0BAAMA,UAAU,qBAAhB,YAGJ,wBAAIA,UAAU,YACZ,uBACE+J,KAAK,eACLC,cAAY,MACZC,gBAAc,QACdjK,UAAU,YAEV,uBAAGA,UAAU,oDACb,0BAAMA,UAAU,qBAAhB,aAGJ,wBAAIA,UAAU,YACZ,uBACE+J,KAAK,cACLC,cAAY,MACZC,gBAAc,QACdjK,UAAU,YAEV,uBAAGA,UAAU,oDACb,0BAAMA,UAAU,qBAAhB,YAGJ,wBAAIA,UAAU,YACZ,uBACE+J,KAAK,oBACLC,cAAY,MACZC,gBAAc,QACdjK,UAAU,YAEV,uBAAGA,UAAU,oDACb,0BAAMA,UAAU,qBAAhB,+BAKJ,wBAAIA,UAAU,YACZ,uBACE+J,KAAK,0BACLC,cAAY,MACZC,gBAAc,QACdjK,UAAU,YAEV,uBAAGA,UAAU,oDACb,0BAAMA,UAAU,qBAAhB,2BAMN,yBAAKA,UAAU,eACb,yBAAKA,UAAU,kBAAkBkK,GAAG,kBAClC,kBAAC,EAAD,CACErK,KAAK,aACLC,SAAU,SAACL,GAAD,OAAU,EAAK0K,iBAAiB1K,OAG9C,yBAAKO,UAAU,WAAWkK,GAAG,uBAC3B,kBAAC,EAAD,CACErK,KAAK,eACLC,SAAU,SAACL,GAAD,OAAU,EAAK2K,mBAAmB3K,OAGhD,yBAAKO,UAAU,WAAWkK,GAAG,cAC3B,kBAAC,EAAD,CACErK,KAAK,SACLC,SAAU,SAACL,GAAD,OAAU,EAAK4K,aAAa5K,OAG1C,yBAAKO,UAAU,WAAWkK,GAAG,eAC3B,kBAAC,EAAD,CACErK,KAAK,UACLC,SAAU,SAACL,GAAD,OAAU,EAAK6K,cAAc7K,OAG3C,yBAAKO,UAAU,WAAWkK,GAAG,cAC3B,kBAAC,EAAD,CACErK,KAAK,SACLC,SAAU,SAACL,GAAD,OAAU,EAAK8K,aAAa9K,OAG1C,yBAAKO,UAAU,WAAWkK,GAAG,oBAC3B,kBAAC,EAAD,CACErK,KAAK,eACLC,SAAU,SAACL,GAAD,OAAU,EAAK2K,mBAAmB3K,OAGhD,yBAAKO,UAAU,WAAWkK,GAAG,0BAC3B,kBAAC,EAAD,CACErK,KAAK,kBACLC,SAAU,SAACL,GAAD,OAAU,EAAK+K,yBAAyB/K,iB,GA/P1CuB,aA4QfwH,a,iCCzRf,yGAGaiC,EAAW,WACtB,OACE,IAAIC,MAAOC,cACX,KACC,MAAO,IAAID,MAAOE,WAAa,IAAIC,OAAO,GAC3C,KACC,KAAM,IAAIH,MAAOI,WAAWD,OAAO,IAuG3BE,EAAkB,SAAC,GAAD,IAAG7K,EAAH,EAAGA,MAAH,OAC7B,yBAAKF,UAAU,cACb,mCAASE,EAAT,KACA,kBAAC,IAAD,CAAUF,UAAU,oB,iCCnHxB,kNASMgL,EAAQC,IAAKC,MAAM,CACvBC,OAAO,EACPC,SAAU,UACVC,mBAAmB,EACnBC,MAAO,IACPC,kBAAkB,EAClBC,QAAS,SAACL,GACRA,EAAMM,iBAAiB,aAAcR,IAAKS,WAC1CP,EAAMM,iBAAiB,aAAcR,IAAKU,gBA8DvC,SAASC,EAAWvJ,GACzB,OAAO,IAAIwJ,SAAQ,SAACC,EAASC,GAC3Bf,EAAMgB,KAAK,CACTC,KAAM,QACNtG,MAAOtD,IAENuG,KAAKkD,EAAQ,aACb/C,MAAMgD,EAAO,aAqDb,IA+BM3L,EAAe,SAAC,GAAD,IAC1B8L,EAD0B,EAC1BA,MACAhM,EAF0B,EAE1BA,MACAG,EAH0B,EAG1BA,KACA8L,EAJ0B,EAI1BA,SACAtL,EAL0B,EAK1BA,YACAuL,EAN0B,EAM1BA,UACAC,EAP0B,EAO1BA,IACAC,EAR0B,EAQ1BA,QAR0B,IAS1BC,KAAQC,EATkB,EASlBA,QAASC,EATS,EASTA,MAAOC,EATE,EASFA,QATE,OAW1B,yBAAK1M,UAAU,cACb,2BAAOM,QAAQ,GAAGN,UAAU,cACzBE,GAEFoM,EACC,kBAAC,IAAD,MAEA,2CACMJ,EADN,CAEE7L,KAAMA,EACNgM,IAAKA,EACLD,UAAWA,EACXpM,UAAU,eACVmM,SAAUA,EACVtL,YAAaA,EACb8L,WAAY,SAACC,GACO,UAAdA,EAAM9L,KACR8L,EAAMC,qBAMbL,IACGC,GACA,wBAAIzM,UAAU,8BACZ,wBAAIA,UAAU,oBAAd,IAAmCyM,EAAnC,OAGDC,GAAW,2BAAIA,MA6IXlM,EAAgB,SAAC,GAAD,IAC3B0L,EAD2B,EAC3BA,MACAhM,EAF2B,EAE3BA,MACAiM,EAH2B,EAG3BA,SACAtL,EAJ2B,EAI3BA,YACAJ,EAL2B,EAK3BA,QACAqM,EAN2B,EAM3BA,WAGAR,GAT2B,EAO3BjN,MAP2B,EAQ3B0N,SAR2B,EAS3BT,SAT2B,IAU3BC,KAAQC,EAVmB,EAUnBA,QAASC,EAVU,EAUVA,MAAOC,EAVG,EAUHA,QAVG,OAY3B,yBAAK1M,UAAU,cACb,2BAAOM,QAAQ,GAAGN,UAAU,cACzBE,GAEFoM,EACC,kBAAC,IAAD,MAEA,kBAAC,IAAD,iBACMJ,EADN,CAEEc,QAAM,EACND,SAAUZ,EACVtL,YAAaA,EACbJ,QAASA,EACTqM,WAAYA,EACZH,WAAY,SAACM,GACD,UAAVA,EAAEnM,KAAmBmM,EAAEJ,qBAK5BL,IACGC,GACA,wBAAIzM,UAAU,8BACZ,wBAAIA,UAAU,oBAAd,IAAmCyM,EAAnC,OAGDC,GAAW,2BAAIA,MAkEXQ,EAAc,WAEzB,OADWzD,KAAK0D,MAAM5D,aAAa6D,QAAQ,cAAgB","file":"static/js/89.8fe602e1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { getcustomerList } from \"../../actions/customerAction\";\r\nimport { getsalesmanList } from \"../../actions/salesmanAction\";\r\nimport {\r\n  ReanderField,\r\n  ReanderSelect,\r\n} from \"../../GlobalComponent/notification\";\r\n\r\nclass FormCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getsalesmanList());\r\n    this.props.dispatch(getcustomerList());\r\n  }\r\n  render() {\r\n    let customer = [\r\n      {\r\n        value: \"ALL\",\r\n        name: \"ALL\",\r\n      },\r\n    ];\r\n    this.props.customer.map((list) => {\r\n      let data = {\r\n        value: list.kode_customer,\r\n        name: list.nama_customer,\r\n      };\r\n      customer.push(data);\r\n      return true;\r\n    });\r\n\r\n    switch (this.props.from) {\r\n      case \"titipan\":\r\n        return (\r\n          <form onSubmit={this.props.handleSubmit}>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"langganan\"\r\n                  label=\"Langganan\"\r\n                  component={ReanderField}\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"\">Status</label>\r\n                  <div className=\"form-control-transparant\">\r\n                    <label className=\"mr-3\">\r\n                      <Field\r\n                        name=\"StatusTitipan\"\r\n                        component=\"input\"\r\n                        type=\"radio\"\r\n                        value=\"Open\"\r\n                        className=\"mr-2\"\r\n                      />\r\n                      Open\r\n                    </label>\r\n                    <label>\r\n                      <Field\r\n                        name=\"StatusTitipan\"\r\n                        component=\"input\"\r\n                        type=\"radio\"\r\n                        value=\"Semua\"\r\n                        className=\"mr-2\"\r\n                      />\r\n                      Semua\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className={\r\n                  this.props.StatusTitipan === \"Open\"\r\n                    ? \"col-lg-3 d-none\"\r\n                    : \"col-lg-3\"\r\n                }\r\n              >\r\n                <Field\r\n                  name=\"tglFrom\"\r\n                  label=\"Tanggal Awal\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div\r\n                className={\r\n                  this.props.StatusTitipan === \"Open\"\r\n                    ? \"col-lg-3 d-none\"\r\n                    : \"col-lg-3\"\r\n                }\r\n              >\r\n                <Field\r\n                  name=\"tglTo\"\r\n                  label=\"Tanggal Akhir\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div\r\n                className={\r\n                  this.props.StatusTitipan === \"Open\"\r\n                    ? \"col-lg-3\"\r\n                    : \"col-lg-3 d-none\"\r\n                }\r\n              >\r\n                <Field\r\n                  name=\"tgl\"\r\n                  label=\"Tanggal Akhir\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"text-right\">\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                    Print\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n      case \"pembayaran\":\r\n        return (\r\n          <form onSubmit={this.props.handleSubmit}>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-4\">\r\n                <Field\r\n                  name=\"kode_sales\"\r\n                  component={ReanderSelect}\r\n                  options={this.props.salesman.map((list) => {\r\n                    let data = {\r\n                      value: list.kode_sales,\r\n                      name: list.nama_sales,\r\n                    };\r\n                    return data;\r\n                  })}\r\n                  type=\"text\"\r\n                  label=\"Nama Sales\"\r\n                  placeholder=\"Masukan Nama Sales\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <Field\r\n                  name=\"tglFrom\"\r\n                  label=\"Mulai Dari\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <Field\r\n                  name=\"tglTo\"\r\n                  label=\"Sampai Dengan\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"text-right\">\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                    Print\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n      case \"history\":\r\n        return (\r\n          <form onSubmit={this.props.handleSubmit}>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3\">\r\n                <label htmlFor=\"\">Tipe Laporan</label>\r\n                <Field name=\"jenis\" component=\"select\" className=\"form-control\">\r\n                  <option value=\"NamaToko\" key=\"NamaToko\">\r\n                    Nama Toko\r\n                  </option>\r\n                  <option value=\"NoBon\" key=\"NoBon\">\r\n                    Nomor Bon\r\n                  </option>\r\n                </Field>\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"namaToko\"\r\n                  label=\"Nama Toko\"\r\n                  component={ReanderField}\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"noBon\"\r\n                  label=\"Nomor Bon\"\r\n                  component={ReanderField}\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"\">.</label>\r\n                  <div className=\"form-control-transparant\">\r\n                    <label className=\"mr-3\">\r\n                      <Field\r\n                        name=\"jenisRekap\"\r\n                        component=\"input\"\r\n                        type=\"checkbox\"\r\n                        className=\"mr-2\"\r\n                      />\r\n                      Rekap\r\n                    </label>\r\n                    <label className=\"mr-3\">\r\n                      <Field\r\n                        name=\"jenisJualBeli\"\r\n                        component=\"input\"\r\n                        type=\"checkbox\"\r\n                        className=\"mr-2\"\r\n                      />\r\n                      Jual/Beli LM\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <Field\r\n                  name=\"tglFrom\"\r\n                  label=\"Tanggal Awal\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <Field\r\n                  name=\"tglTo\"\r\n                  label=\"Sapai Dengan\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"text-right\">\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                    Print\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n      case \"pembayaranSales\":\r\n        return (\r\n          <form onSubmit={this.props.handleSubmit}>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-4\">\r\n                <label htmlFor=\"\">Sales</label>\r\n                <Field name=\"jenis\" component=\"select\" className=\"form-control\">\r\n                  <option value=\"SEMUA\" key=\"SEMUA\">\r\n                    SEMUA\r\n                  </option>\r\n                </Field>\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <label htmlFor=\"\">Jenis</label>\r\n                <Field name=\"jenis\" component=\"select\" className=\"form-control\">\r\n                  <option value=\"SEMUA\" key=\"SEMUA\">\r\n                    Jenis\r\n                  </option>\r\n                </Field>\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <label htmlFor=\"\">Status Validasi</label>\r\n                <Field name=\"jenis\" component=\"select\" className=\"form-control\">\r\n                  <option value=\"OPEN\" key=\"OPEN\">\r\n                    OPEN\r\n                  </option>\r\n                </Field>\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"\">.</label>\r\n                  <div className=\"form-control-transparant\">\r\n                    <label className=\"mr-3\">\r\n                      <Field\r\n                        name=\"jenisTanggal\"\r\n                        component=\"input\"\r\n                        type=\"radio\"\r\n                        value=\"tanggal\"\r\n                        className=\"mr-2\"\r\n                      />\r\n                      Tanggal Transaksi\r\n                    </label>\r\n                    <label className=\"mr-3\">\r\n                      <Field\r\n                        name=\"jenisTanggal\"\r\n                        component=\"input\"\r\n                        type=\"radio\"\r\n                        value=\"tanggalInput\"\r\n                        className=\"mr-2\"\r\n                      />\r\n                      Tanggal Input\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <Field\r\n                  name=\"tglFrom\"\r\n                  label=\"Tanggal Awal\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <Field\r\n                  name=\"tglTo\"\r\n                  label=\"Sapai Dengan\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"text-right\">\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                    Print\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n      case \"return\":\r\n        return (\r\n          <form onSubmit={this.props.handleSubmit}>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <label htmlFor=\"\">Jenis Laporan</label>\r\n                <Field name=\"jenis\" component=\"select\" className=\"form-control\">\r\n                  <option value=\"namaToko\" key=\"namaToko\">\r\n                    NAMA TOKO\r\n                  </option>\r\n                  <option value=\"SEMUA\" key=\"SEMUA\">\r\n                    SEMUA\r\n                  </option>\r\n                </Field>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <Field\r\n                  name=\"namaToko\"\r\n                  label=\"Nama Toko\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <Field\r\n                  name=\"tglFrom\"\r\n                  label=\"Tanggal Awal\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <Field\r\n                  name=\"tglTo\"\r\n                  label=\"Sapai Dengan\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"text-right\">\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                    Print\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n      case \"gabung\":\r\n        return (\r\n          <form onSubmit={this.props.handleSubmit}>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-4\">\r\n                <Field\r\n                  name=\"loco\"\r\n                  label=\"LOCO\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <Field\r\n                  name=\"usd\"\r\n                  label=\"USD\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <Field\r\n                  name=\"gold\"\r\n                  label=\"GOLD\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-4\"></div>\r\n              <div className=\"col-lg-4\">\r\n                <Field\r\n                  name=\"tanggal\"\r\n                  label=\"Tanggal\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"text-right\">\r\n                  <button className=\"btn btn-primary\">Print</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n      case \"saldoPiutang\":\r\n        return (\r\n          <form onSubmit={this.props.handleSubmit} autoComplete={true}>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-4\">\r\n                <Field\r\n                  name=\"kode_customer\"\r\n                  component={ReanderSelect}\r\n                  options={customer}\r\n                  type=\"text\"\r\n                  label=\"Nama Sales\"\r\n                  placeholder=\"Masukan Nama Sales\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <Field\r\n                  name=\"tglFrom\"\r\n                  label=\"Mulai Dari\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <Field\r\n                  name=\"tglTo\"\r\n                  label=\"Sampai Dengan\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"text-right\">\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                    Print\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n      case \"titipanCustomer\":\r\n        return (\r\n          <form onSubmit={this.props.handleSubmit}>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"kode_supplier\"\r\n                  component={ReanderSelect}\r\n                  options={customer}\r\n                  type=\"text\"\r\n                  label=\"Nama Sales\"\r\n                  placeholder=\"Masukan Nama Sales\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"jenis_transkasi\"\r\n                  component={ReanderSelect}\r\n                  options={[\r\n                    {\r\n                      value: \"GRAM\",\r\n                      name: \"GRAM\",\r\n                    },\r\n                    {\r\n                      value: \"RUPIAH\",\r\n                      name: \"RUPIAH\",\r\n                    },\r\n                  ]}\r\n                  type=\"text\"\r\n                  label=\"Type Laporan\"\r\n                  placeholder=\"Masukan Type Laporan\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"type\"\r\n                  component={ReanderSelect}\r\n                  options={[\r\n                    {\r\n                      value: \"NORMAL\",\r\n                      name: \"NORMAL\",\r\n                    },\r\n                    {\r\n                      value: \"CARD\",\r\n                      name: \"CARD\",\r\n                    },\r\n                    {\r\n                      value: \"SUMMARY\",\r\n                      name: \"SUMMARY\",\r\n                    },\r\n                  ]}\r\n                  type=\"text\"\r\n                  label=\"Type Laporan\"\r\n                  placeholder=\"Masukan Type Laporan\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"tanggal_awal\"\r\n                  label=\"Mulai Tanggal\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"tanggal_akhir\"\r\n                  label=\"Sampai Dengan\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"text-right\">\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                    Print\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nFormCustomer = reduxForm({\r\n  form: \"FormCustomer\",\r\n  enableReinitialize: true,\r\n})(FormCustomer);\r\nconst selector = formValueSelector(\"FormCustomer\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { harga, cash, StatusTitipan } = selector(\r\n    state,\r\n    \"harga\",\r\n    \"cash\",\r\n    \"StatusTitipan\"\r\n  );\r\n  return {\r\n    cashNetto: (parseFloat(cash) / parseFloat(harga)).toFixed(3),\r\n    cashNettoMurni: parseFloat(cash),\r\n    StatusTitipan: StatusTitipan,\r\n    salesman: state.provinsi.salesman,\r\n    customer: state.provinsi.customer,\r\n  };\r\n})(FormCustomer);\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanPembayaranCustomer = (data) => {\r\n  console.log(data);\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"landscape\");\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN PEMBAYARAN PIUTANG CUSTOMER\", 14, 15);\r\n  doc.setFontSize(10);\r\n  //   //row 1\r\n  //   doc.text(`Supplier : ${row1isi}`, 14, 25);\r\n  //   //   row 2\r\n  //   doc.text(`Tanggal\t: ${row2isi}`, 120, 25);\r\n  data.forEach((item, index) => {\r\n    let tableColumn = [\r\n      [\r\n        {\r\n          content: `KODE CUSTOMER : ${item.kode_customer}`,\r\n          colSpan: 2,\r\n        },\r\n        {\r\n          content: `NAMA CUSTOMER : ${item.nama_customer}`,\r\n          colSpan: 3,\r\n        },\r\n      ],\r\n      [\r\n        {\r\n          content: `TANGGAL`,\r\n        },\r\n        {\r\n          content: `NO BON`,\r\n        },\r\n        {\r\n          content: `PIUTANG`,\r\n        },\r\n        {\r\n          content: `BAYAR`,\r\n        },\r\n        {\r\n          content: `DENDA`,\r\n        },\r\n        {\r\n          content: `PUTUS TITIP`,\r\n        },\r\n        {\r\n          content: `JML PIUTANG`,\r\n        },\r\n        {\r\n          content: `LBH BAYAR`,\r\n        },\r\n      ],\r\n    ];\r\n    item.detail.forEach((hasil, index) => {\r\n      let rows = [\r\n        hasil.tanggal,\r\n        hasil.no_bon,\r\n        hasil.total_piutang,\r\n        hasil.total_pembayaran,\r\n        hasil.total_denda,\r\n        hasil.total_putus_titip,\r\n        hasil.jumlah_piutang,\r\n        hasil.lebih_pembayaran,\r\n      ];\r\n      tableRows.push(rows);\r\n      let detail = [\r\n        `BAYAR CASH : ${item.detail_bayar[index].bayar_cash}`,\r\n        `BAYAR TRANSFER : ${item.detail_bayar[index].bayar_trf}`,\r\n        `BAYAR CIOK : ${item.detail_bayar[index].bayar_ciok}`,\r\n        `BAYAR RONGSOK : ${item.detail_bayar[index].bayar_rongsok}`,\r\n        `BAYAR GIRO : ${item.detail_bayar[index].bayar_giro}`,\r\n      ];\r\n      tableRows.push(detail);\r\n      tableRows.push([\r\n        {\r\n          content: \"\",\r\n          colSpan: 8,\r\n          styles: {\r\n            fillColor: [212, 212, 211],\r\n          },\r\n        },\r\n      ]);\r\n    });\r\n\r\n    doc.autoTable({\r\n      head: tableColumn,\r\n      body: tableRows,\r\n      startY: 30,\r\n      theme: \"plain\",\r\n      rowPageBreak: \"avoid\",\r\n      pageBreak: \"avoid\",\r\n      margin: { top: 20 },\r\n      bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n      headStyles: {\r\n        lineWidth: 0.02,\r\n        lineColor: \"#000\",\r\n        fillColor: [212, 212, 211],\r\n      },\r\n    });\r\n  });\r\n\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  doc.setProperties({\r\n    title: \"LAPORAN PEMBAYARAN PIUTANG CUSTOMER\",\r\n  });\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN PEMBAYARAN PIUTANG CUSTOMER</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanPembayaranCustomer;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanPenjualanCustomer = (data) => {\r\n  console.log(data);\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"landscape\");\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let finalY = 30;\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN PENJUALAN CUSTOMER\", 14, 15);\r\n  doc.setFontSize(10);\r\n  //   //row 1\r\n  //   doc.text(`Supplier : ${row1isi}`, 14, 25);\r\n  //   //   row 2\r\n  //   doc.text(`Tanggal\t: ${row2isi}`, 120, 25);\r\n  data.forEach((item, index) => {\r\n    let tableColumn = [\r\n      [\r\n        {\r\n          content: `TANGGAL : ${item.tanggal}`,\r\n          colSpan: 2,\r\n        },\r\n        {\r\n          content: `NO BON : ${item.no_bon}`,\r\n          colSpan: 3,\r\n        },\r\n        {\r\n          content: `NAMA TOKO : ${item.nama_toko}`,\r\n          colSpan: 3,\r\n        },\r\n      ],\r\n      [\r\n        {\r\n          content: `ONGKOS : ${item.ongkos_rp}`,\r\n          colSpan: 2,\r\n        },\r\n        {\r\n          content: `DISC GLOBAL : ${item.dics_global}`,\r\n          colSpan: 2,\r\n        },\r\n        {\r\n          content: `TOTAL NETTO : ${item.total_netto}`,\r\n          colSpan: 2,\r\n        },\r\n        {\r\n          content: `TOTAL NETTO EXT : ${item.total_netto_ext}`,\r\n          colSpan: 2,\r\n        },\r\n      ],\r\n      [\r\n        {\r\n          content: `KODE JENIS`,\r\n        },\r\n        {\r\n          content: `NAMA JENIS`,\r\n        },\r\n        {\r\n          content: `KADAR CETAK`,\r\n        },\r\n        {\r\n          content: `KADAR JUAL`,\r\n        },\r\n        {\r\n          content: `BRUTO`,\r\n        },\r\n        {\r\n          content: `NETTO`,\r\n        },\r\n        {\r\n          content: `DISC`,\r\n        },\r\n        {\r\n          content: `NETTO DISC`,\r\n        },\r\n      ],\r\n    ];\r\n    item.detail_barang.forEach((hasil) => {\r\n      let rows = [\r\n        hasil.kode_jenis,\r\n        hasil.nama_jenis,\r\n        hasil.kadar_cetak,\r\n        hasil.kadar_jual,\r\n        hasil.bruto,\r\n        hasil.netto,\r\n        hasil.disc,\r\n        hasil.netto_disc,\r\n      ];\r\n      tableRows.push(rows);\r\n    });\r\n    doc.autoTable({\r\n      head: tableColumn,\r\n      body: tableRows,\r\n      startY: index === 0 ? 30 : finalY + 10,\r\n      theme: \"plain\",\r\n      rowPageBreak: \"avoid\",\r\n      margin: { top: 20 },\r\n      bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n      headStyles: {\r\n        lineWidth: 0.02,\r\n        lineColor: \"#000\",\r\n        fillColor: [212, 212, 211],\r\n      },\r\n    });\r\n    finalY = doc.autoTableEndPosY() + 10;\r\n    tableRows = [];\r\n  });\r\n\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  doc.setProperties({\r\n    title: \"LAPORAN PENJUALAN CUSTOMER\",\r\n  });\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN PENJUALAN CUSTOMER</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanPenjualanCustomer;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { formatGram, formatRp } from \"../../helper\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanTitipCustomer = (data) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n\r\n  let tableColumn = [\r\n    [\r\n      {\r\n        content: `KODE CUSTOMER`,\r\n      },\r\n\r\n      {\r\n        content: `NAMA CUSTOMER`,\r\n      },\r\n      {\r\n        content: `TOTAL TITIP GR`,\r\n      },\r\n      {\r\n        content: `TOTAL TITIP RP`,\r\n      },\r\n    ],\r\n  ];\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN TITIP CUSTOMER\", 14, 15);\r\n  doc.setFontSize(10);\r\n  //   //row 1\r\n  //   doc.text(`Supplier : ${row1isi}`, 14, 25);\r\n  //   //   row 2\r\n  //   doc.text(`Tanggal\t: ${row2isi}`, 120, 25);\r\n  data.forEach((item, index) => {\r\n    let rows = [\r\n      item.kode_customer,\r\n      item.nama_customer,\r\n      formatGram(item.titip_gr),\r\n      formatRp(item.titip_rp),\r\n    ];\r\n    tableRows.push(rows);\r\n  });\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    startY: 30,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    pageBreak: \"avoid\",\r\n    margin: { top: 20 },\r\n    bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n    headStyles: {\r\n      lineWidth: 0.02,\r\n      lineColor: \"#000\",\r\n      fillColor: [212, 212, 211],\r\n    },\r\n  });\r\n\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  doc.setProperties({\r\n    title: \"LAPORAN TITIP CUSTOMER\",\r\n  });\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN TITIP CUSTOMER</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanTitipCustomer;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanTitipCUstomerCard = (data) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN TITIP CUSTOMER \", 14, 15);\r\n  doc.setFontSize(10);\r\n  //   //row 1\r\n  //   doc.text(`Supplier : ${row1isi}`, 14, 25);\r\n  //   //   row 2\r\n  //   doc.text(`Tanggal\t: ${row2isi}`, 120, 25);\r\n  data.forEach((item, index) => {\r\n    let tableColumn = [\r\n      [\r\n        {\r\n          content: `KODE CUSTOMER : ${item.kode_customer}`,\r\n          colSpan: 4,\r\n        },\r\n        {\r\n          content: `NAMA CUSTOMER : ${item.nama_customer}`,\r\n          colSpan: 3,\r\n        },\r\n      ],\r\n      [\r\n        {\r\n          content: `TANGGAL`,\r\n        },\r\n        {\r\n          content: `AWAL\\nTITIP`,\r\n        },\r\n        {\r\n          content: `IN\\nTITIP`,\r\n        },\r\n        {\r\n          content: `OUT\\nTITIP`,\r\n        },\r\n        {\r\n          content: `AKHIR\\nTITIP`,\r\n        },\r\n        {\r\n          content: `KETERANGAN`,\r\n        },\r\n\r\n        {\r\n          content: `NO BON`,\r\n        },\r\n      ],\r\n    ];\r\n    item.detail.forEach((hasil) => {\r\n      let rows = [\r\n        hasil.tanggal,\r\n        hasil.awal_titip,\r\n        hasil.in_titip,\r\n        hasil.out_titip,\r\n        hasil.akhir_titip,\r\n        hasil.keterangan,\r\n        hasil.no_ext,\r\n      ];\r\n      tableRows.push(rows);\r\n    });\r\n    doc.autoTable({\r\n      head: tableColumn,\r\n      body: tableRows,\r\n      startY: 30,\r\n      theme: \"plain\",\r\n      rowPageBreak: \"avoid\",\r\n\r\n      margin: { top: 20 },\r\n      bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n      headStyles: {\r\n        lineWidth: 0.02,\r\n        lineColor: \"#000\",\r\n        fillColor: [212, 212, 211],\r\n      },\r\n    });\r\n  });\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  doc.setProperties({\r\n    title: \"LAPORAN TITIP CUSTOMER - CARD\",\r\n  });\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN TITIP CUSTOMER - CARD</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanTitipCUstomerCard;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanTitipCustomerSummary = (data) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let tableColumn = [];\r\n\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `KODE CUSTOMER`,\r\n      },\r\n      {\r\n        content: `NAMA CUSTOMER`,\r\n      },\r\n      {\r\n        content: `AWAL TITIP`,\r\n      },\r\n\r\n      {\r\n        content: `IN TITIP`,\r\n      },\r\n\r\n      {\r\n        content: `OUT TITIP`,\r\n      },\r\n\r\n      {\r\n        content: `AKHIR TITIP`,\r\n      },\r\n    ],\r\n  ];\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN SUMMARY TITIP CUSTOMER\", 14, 15);\r\n  doc.setFontSize(10);\r\n\r\n  data.forEach((list, index) => {\r\n    tableColumn = [\r\n      [\r\n        {\r\n          content: `JENIS TITIP : ${list.jenis_titip}`,\r\n          colSpan: 5,\r\n        },\r\n      ],\r\n      [\r\n        {\r\n          content: `KODE CUSTOMER`,\r\n        },\r\n        {\r\n          content: `AWAL TITIP`,\r\n        },\r\n\r\n        {\r\n          content: `IN TITIP`,\r\n        },\r\n\r\n        {\r\n          content: `OUT TITIP`,\r\n        },\r\n\r\n        {\r\n          content: `AKHIR TITIP`,\r\n        },\r\n      ],\r\n    ];\r\n    list.detail.forEach((barang, index) => {\r\n      let rows = [\r\n        barang.kode_customer,\r\n        barang.awal_titip,\r\n        barang.in_titip,\r\n        barang.out_titip,\r\n        barang.akhir_titip,\r\n      ];\r\n      tableRows.push(rows);\r\n      footRows = [];\r\n    });\r\n  });\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    foot: footRows,\r\n    startY: 30,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    pageBreak: \"avoid\",\r\n    margin: { top: 20 },\r\n    bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n    headStyles: {\r\n      lineWidth: 0.02,\r\n      lineColor: \"#000\",\r\n      fillColor: [212, 212, 211],\r\n    },\r\n  });\r\n\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  doc.setProperties({\r\n    title: \"LAPORAN TITIP CUSTOMER - SUMMARY\",\r\n  });\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN TITIP CUSTOMER - SUMMARY</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanTitipCustomerSummary;\r\n","import Axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { gagal } from \"../Alert\";\r\nimport { AxiosMasterGet } from \"../Axios\";\r\nimport { checkLaporan } from \"../helper\";\r\nimport FormCustomer from \"./Component/FormCustomer\";\r\nimport LaporanPembayaranCustomer from \"./Component/LaporanPembayaranCustomer\";\r\nimport LaporanPenjualanCustomer from \"./Component/LaporanPenjualanCustomer\";\r\nimport LaporanTitipCustomer from \"./Component/LaporanTitipCustomer\";\r\nimport LaporanTitipCUstomerCard from \"./Component/LaporanTitipCustomerCard\";\r\nimport LaporanTitipCustomerSummary from \"./Component/LaporanTitipCustomerSummary\";\r\n\r\nconst serverNonMaster = process.env.REACT_APP_BACKEND_URL_NON_MASTER;\r\nclass LaporanCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  handleGabung(data) {}\r\n  handleHistory(data) {}\r\n  handlePembayaran(data) {\r\n    AxiosMasterGet(\r\n      `report/penjualan/${data.kode_sales}&${data.tglFrom}&${data.tglTo}`\r\n    )\r\n      .then((res) => {\r\n        if (checkLaporan(res.data)) {\r\n          LaporanPenjualanCustomer(res.data);\r\n        }\r\n      })\r\n      .catch((err) =>\r\n        gagal(\"Gagal Mengambil data, Mohon periksa koneksi anda\")\r\n      );\r\n  }\r\n  handlePembayaranSales(data) {\r\n    Axios.get(serverNonMaster + \"cst/dc/pjl/details\", {\r\n      params: {\r\n        tglFrom: data.tglFrom,\r\n        tglTo: data.tglTo,\r\n        kodeLokasiFrom: data.kodeLokasiFrom,\r\n        kodelokasiTo: data.kodelokasiTo,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (checkLaporan(res.data)) {\r\n          localStorage.setItem(\r\n            \"LaporanPembayaranSalesCustomer\",\r\n            JSON.stringify(res.data)\r\n          );\r\n        }\r\n      })\r\n      .catch((err) =>\r\n        gagal(\"Gagal Mengambil data, Mohon periksa koneksi anda\")\r\n      );\r\n  }\r\n  handleReturn(data) {\r\n    Axios.get(serverNonMaster + \"cst/dc/rtr/details\", {\r\n      params: {\r\n        tglFrom: data.tglFrom,\r\n        tglTo: data.tglTo,\r\n        kodeLokasiFrom: data.kodeLokasiFrom,\r\n        kodelokasiTo: data.kodelokasiTo,\r\n      },\r\n    })\r\n      .then((res) =>\r\n        localStorage.setItem(\"LaporanReturnCustomer\", JSON.stringify(res.data))\r\n      )\r\n      .catch((err) =>\r\n        gagal(\"Gagal Mengambil data, Mohon periksa koneksi anda\")\r\n      );\r\n  }\r\n  handleSaldoPiutang(data) {\r\n    AxiosMasterGet(\r\n      `report/bayar-piutang-customer/${data.kode_customer}&${data.tglFrom}&${data.tglTo}&REKAP&REKAP`\r\n    )\r\n      .then((res) => {\r\n        if (checkLaporan(res.data)) {\r\n          LaporanPembayaranCustomer(res.data);\r\n        }\r\n      })\r\n      .catch((err) =>\r\n        gagal(\"Gagal Mengambil data, Mohon periksa koneksi anda\")\r\n      );\r\n  }\r\n  handleTitipGr(data) {\r\n    Axios.get(serverNonMaster + \"cst/dc/ttp/details\", {\r\n      params: {\r\n        tglFrom: data.tglFrom,\r\n        tglTo: data.tglTo,\r\n        kodeLokasiFrom: data.kodeLokasiFrom,\r\n        kodelokasiTo: data.kodelokasiTo,\r\n      },\r\n    })\r\n      .then((res) =>\r\n        localStorage.setItem(\"LaporanTitipGrCustomer\", JSON.stringify(res.data))\r\n      )\r\n      .catch((err) =>\r\n        gagal(\"Gagal Mengambil data, Mohon periksa koneksi anda\")\r\n      );\r\n  }\r\n  handleTitipanPerCustomer(data) {\r\n    console.log(data);\r\n    switch (data.type) {\r\n      case \"NORMAL\":\r\n        AxiosMasterGet(`report/titip-customer/${data.kode_supplier}`).then(\r\n          (res) => {\r\n            if (checkLaporan(res.data)) {\r\n              LaporanTitipCustomer(res.data);\r\n            }\r\n          }\r\n        );\r\n\r\n        break;\r\n      case \"CARD\":\r\n        AxiosMasterGet(\r\n          `report/titip-customer-card/${data.kode_supplier}&${data.jenis_transkasi}&${data.tanggal_awal}&${data.tanggal_akhir}`\r\n        ).then((res) => {\r\n          if (checkLaporan(res.data)) {\r\n            LaporanTitipCUstomerCard(res.data);\r\n          }\r\n        });\r\n\r\n        break;\r\n      case \"SUMMARY\":\r\n        AxiosMasterGet(\r\n          `report/titip-customer-summary/${data.kode_supplier}&${data.jenis_transkasi}&${data.tanggal_awal}&${data.tanggal_akhir}`\r\n        ).then((res) => {\r\n          if (checkLaporan(res.data)) {\r\n            LaporanTitipCustomerSummary(res.data);\r\n          }\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"col-lg-12\">\r\n                <ul className=\"nav nav-tabs nav-justified nav-bordered mb-3\">\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#pembayaran-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"true\"\r\n                      className=\"nav-link active\"\r\n                    >\r\n                      <i className=\"mdi mdi-account-circle d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">Penjualan</span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#pembayaranSales-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">\r\n                        Pembayaran Piutang\r\n                      </span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#return-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">Return</span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#history-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">history</span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#gabung-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">Gabung</span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#saldoPiutang-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">\r\n                        Saldo Piutang dan Titipan\r\n                      </span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#titipanPerCustomer-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">\r\n                        Titipan Per Customer\r\n                      </span>\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n                <div className=\"tab-content\">\r\n                  <div className=\"tab-pane active\" id=\"pembayaran-tab\">\r\n                    <FormCustomer\r\n                      from=\"pembayaran\"\r\n                      onSubmit={(data) => this.handlePembayaran(data)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"pembayaranSales-tab\">\r\n                    <FormCustomer\r\n                      from=\"saldoPiutang\"\r\n                      onSubmit={(data) => this.handleSaldoPiutang(data)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"return-tab\">\r\n                    <FormCustomer\r\n                      from=\"return\"\r\n                      onSubmit={(data) => this.handleReturn(data)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"history-tab\">\r\n                    <FormCustomer\r\n                      from=\"history\"\r\n                      onSubmit={(data) => this.handleHistory(data)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"gabung-tab\">\r\n                    <FormCustomer\r\n                      from=\"gabung\"\r\n                      onSubmit={(data) => this.handleGabung(data)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"saldoPiutang-tab\">\r\n                    <FormCustomer\r\n                      from=\"saldoPiutang\"\r\n                      onSubmit={(data) => this.handleSaldoPiutang(data)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"titipanPerCustomer-tab\">\r\n                    <FormCustomer\r\n                      from=\"titipanCustomer\"\r\n                      onSubmit={(data) => this.handleTitipanPerCustomer(data)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LaporanCustomer;\r\n","import React from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nexport const getToday = () => {\r\n  return (\r\n    new Date().getFullYear() +\r\n    \"-\" +\r\n    (\"0\" + (new Date().getMonth() + 1)).slice(-2) +\r\n    \"-\" +\r\n    (\"0\" + new Date().getDate()).slice(-2)\r\n  );\r\n};\r\n\r\nexport const encryptascii = (str) => {\r\n  let key = process.env.REACT_APP_ENCKEY;\r\n  let dataKey = {};\r\n  for (let i = 0; i < key.length; i++) {\r\n    dataKey[i] = key.substr(`${i}`, 1);\r\n  }\r\n\r\n  let strEnc = \"\";\r\n  let nkey = 0;\r\n  let jml = str.length;\r\n\r\n  for (let i = 0; i < parseInt(jml); i++) {\r\n    strEnc =\r\n      strEnc + hexEncode(str[i].charCodeAt(0) + dataKey[nkey].charCodeAt(0));\r\n\r\n    if (nkey === Object.keys(dataKey).length - 1) {\r\n      nkey = 0;\r\n    }\r\n    nkey = nkey + 1;\r\n  }\r\n  return strEnc.toUpperCase();\r\n};\r\n\r\nexport const decryptascii = (str) => {\r\n  if (str !== null) {\r\n    let key = process.env.REACT_APP_ENCKEY;\r\n    let dataKey = {};\r\n    for (let i = 0; i < key.length; i++) {\r\n      dataKey[i] = key.substr(`${i}`, 1);\r\n    }\r\n\r\n    let strDec = \"\";\r\n    let nkey = 0;\r\n    let jml = str.length;\r\n    let i = 0;\r\n    while (i < parseInt(jml)) {\r\n      strDec =\r\n        strDec + chr(hexdec(str.substr(i, 2)) - dataKey[nkey].charCodeAt(0));\r\n      if (nkey === Object.keys(dataKey).length - 1) {\r\n        nkey = 0;\r\n      }\r\n      nkey = nkey + 1;\r\n      i = i + 2;\r\n    }\r\n    return strDec;\r\n  }\r\n};\r\nexport const hexEncode = (str) => {\r\n  var result = \"\";\r\n  result = str.toString(16);\r\n  return result;\r\n};\r\n\r\nexport const hexdec = (hex) => {\r\n  var str = \"\";\r\n  str = parseInt(hex, 16);\r\n  return str;\r\n};\r\nexport const chr = (asci) => {\r\n  var str = \"\";\r\n  str = String.fromCharCode(asci);\r\n  return str;\r\n};\r\n\r\nexport const formatDate = (date) => {\r\n  var d = new Date(date),\r\n    month = \"\" + (d.getMonth() + 1),\r\n    day = \"\" + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = \"0\" + month;\r\n  if (day.length < 2) day = \"0\" + day;\r\n\r\n  return [year, month, day].join(\"-\");\r\n};\r\n\r\nexport const parseIsoDatetime = (dtstr) => {\r\n  let hasil = dtstr.substr(0, 10);\r\n  return hasil;\r\n};\r\n\r\nexport const multipleDeleteLocal = (data = []) => {\r\n  data.forEach((k) => {\r\n    if (localStorage.getItem(k) !== null) {\r\n      localStorage.removeItem(k);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  });\r\n};\r\n\r\nexport const formatDateISO = (value) => {\r\n  let pattern = \"####-##-##\";\r\n  var i = 0,\r\n    date = value.toString();\r\n  return pattern.replace(/#/g, (_) => date[i++]);\r\n};\r\n\r\nexport const SkeletonLoading = ({ label }) => (\r\n  <div className=\"form-group\">\r\n    <label> {label} </label>\r\n    <Skeleton className=\"form-control\" />\r\n  </div>\r\n);\r\n","import Swal from \"sweetalert2\";\r\nimport React from \"react\";\r\nimport SelectSearch from \"react-select-search\";\r\nimport DateTime from \"react-datetime\";\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport { AxiosMasterPut } from \"../Axios\";\r\nimport { SkeletonLoading } from \"./function\";\r\n// import Select from \"react-select\";\r\n\r\nconst Toast = Swal.mixin({\r\n  toast: true,\r\n  position: \"top-end\",\r\n  showConfirmButton: false,\r\n  timer: 3000,\r\n  timerProgressBar: true,\r\n  didOpen: (toast) => {\r\n    toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n    toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n  },\r\n});\r\n\r\nexport function NotifSucces(text) {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      // title: 'Good Job',\r\n      text: text,\r\n      icon: \"success\",\r\n      position: \"top-right\",\r\n      timer: 2000,\r\n      width: \"300px\",\r\n      height: \"100px\",\r\n      showConfirmButton: false,\r\n    })\r\n      .then(resolve(\"berhasil\"))\r\n      .catch(reject(\"error\"));\r\n  });\r\n}\r\nexport function ToastSucces(text) {\r\n  return new Promise((resolve, reject) => {\r\n    Toast.fire({\r\n      icon: \"success\",\r\n      title: text,\r\n    })\r\n      .then(resolve(\"berhasil\"))\r\n      .catch(reject(\"error\"));\r\n  });\r\n}\r\n\r\nexport function NotifError(text) {\r\n  if (text.includes(\"Invalid token\")) {\r\n    Swal.fire({\r\n      title: \"Ooopss\",\r\n      text: \"Sepertinya ada masalah keamanan, Silahkan Login Kembali..\",\r\n      icon: \"info\",\r\n      position: \"center\",\r\n      showConfirmButton: true,\r\n      confirmButtonText: \"Login\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        localStorage.setItem(\"isLogin\", false);\r\n        window.location.reload();\r\n      }\r\n    });\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      Swal.fire({\r\n        title: \"Oopss!!\",\r\n        text: text,\r\n        icon: \"error\",\r\n        position: \"top-right\",\r\n        timer: 2000,\r\n        showConfirmButton: false,\r\n      })\r\n        .then(resolve(\"berhasil\"))\r\n        .catch(reject(\"error\"));\r\n    });\r\n  }\r\n}\r\n\r\nexport function ToastError(text) {\r\n  return new Promise((resolve, reject) => {\r\n    Toast.fire({\r\n      icon: \"error\",\r\n      title: text,\r\n    })\r\n      .then(resolve(\"berhasil\"))\r\n      .catch(reject(\"error\"));\r\n  });\r\n}\r\nexport function NotifWarning(text) {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      title: \"Warning !!!\",\r\n      text: text,\r\n      icon: \"warning\",\r\n      position: \"top-right\",\r\n      timer: 2000,\r\n      showConfirmButton: false,\r\n    })\r\n      .then(resolve(\"berhasil\"))\r\n      .catch(reject(\"error\"));\r\n  });\r\n}\r\nexport function ToastWarning(text) {\r\n  return new Promise((resolve, reject) => {\r\n    Toast.fire({\r\n      icon: \"warning\",\r\n      title: text,\r\n    })\r\n      .then(resolve(\"berhasil\"))\r\n      .catch(reject(\"error\"));\r\n  });\r\n}\r\n\r\nexport function NotifInfo(text) {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      title: \"Informasi !!!\",\r\n      text: text,\r\n      icon: \"info\",\r\n      position: \"top-right\",\r\n      timer: 2000,\r\n      showConfirmButton: false,\r\n    })\r\n      .then(resolve(\"berhasil\"))\r\n      .catch(reject(\"error\"));\r\n  });\r\n}\r\nexport function ToastInfo(text) {\r\n  return new Promise((resolve, reject) => {\r\n    Toast.fire({\r\n      icon: \"info\",\r\n      title: text,\r\n    })\r\n      .then(resolve(\"berhasil\"))\r\n      .catch(reject(\"error\"));\r\n  });\r\n}\r\n\r\nexport const reactive = (err, kode, endpoint, data, endpointUpdate) => {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      title: \"Oopps..\",\r\n      text: err.response.data,\r\n      icon: \"info\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Re-Activate\",\r\n      cancelButtonText: \"Cancel\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        AxiosMasterPut(endpoint + kode, data)\r\n          .then(() =>\r\n            AxiosMasterPut(endpointUpdate + kode, data)\r\n              .then(() => resolve(\"Berhasil\"))\r\n              .then(() =>\r\n                NotifSucces(\"Data Berhasil Dikembalikan\").catch((err) =>\r\n                  reject(err)\r\n                )\r\n              )\r\n          )\r\n          .then(() => NotifSucces(\"Data Berhasil Dikembalikan\"))\r\n          .then(() => resolve(\"Berhasil\"))\r\n          .catch((err) => reject(err));\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexport const ReanderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  readOnly,\r\n  placeholder,\r\n  autoFocus,\r\n  ref,\r\n  loading,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    {loading ? (\r\n      <SkeletonLoading />\r\n    ) : (\r\n      <input\r\n        {...input}\r\n        type={type}\r\n        ref={ref}\r\n        autoFocus={autoFocus}\r\n        className=\"form-control\"\r\n        readOnly={readOnly}\r\n        placeholder={placeholder}\r\n        onKeyPress={(event) => {\r\n          if (event.key === \"Enter\") {\r\n            event.preventDefault(); //<===== This stops the form from being submitted\r\n          } else {\r\n          }\r\n        }}\r\n      />\r\n    )}\r\n    {touched &&\r\n      ((error && (\r\n        <ul className=\"parsley-errors-list filled\">\r\n          <li className=\"parsley-required\"> {error}.</li>\r\n        </ul>\r\n      )) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nexport const ReanderFieldInline = ({\r\n  input,\r\n  label,\r\n  type,\r\n  readOnly,\r\n  placeholder,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group row\">\r\n    <label htmlFor=\"\" className=\"text-black col-form-label col-md-3\">\r\n      {label}\r\n    </label>\r\n    <div className=\"col-lg-9\">\r\n      <input\r\n        {...input}\r\n        type={type}\r\n        className=\"form-control\"\r\n        readOnly={readOnly}\r\n        placeholder={placeholder}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n      />\r\n      {touched &&\r\n        ((error && (\r\n          <ul className=\"parsley-errors-list filled\">\r\n            <li className=\"parsley-required\"> {error}.</li>\r\n          </ul>\r\n        )) ||\r\n          (warning && <p>{warning}</p>))}\r\n    </div>\r\n  </div>\r\n);\r\nexport const ReanderSelectInline = ({\r\n  input,\r\n  label,\r\n  readOnly,\r\n  placeholder,\r\n  options,\r\n  getOptions,\r\n  value,\r\n  disabled,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group row\">\r\n    <label htmlFor=\"\" className=\"text-black col-form-label col-md-3\">\r\n      {label}\r\n    </label>\r\n    <div className=\"col-lg-9\">\r\n      <SelectSearch\r\n        {...input}\r\n        search\r\n        disabled={readOnly}\r\n        placeholder={placeholder}\r\n        options={options}\r\n        getOptions={getOptions}\r\n      />\r\n      {touched &&\r\n        ((error && (\r\n          <ul className=\"parsley-errors-list filled\">\r\n            <li className=\"parsley-required\"> {error}.</li>\r\n          </ul>\r\n        )) ||\r\n          (warning && <p>{warning}</p>))}\r\n    </div>\r\n  </div>\r\n);\r\nexport const RenderCheckBox = ({\r\n  input,\r\n  label,\r\n  type,\r\n  readOnly,\r\n  placeholder,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\"></label>\r\n    <div className=\"checkbox checkbox-css mt-3\">\r\n      <input\r\n        type=\"checkbox\"\r\n        id={label}\r\n        {...input}\r\n        readOnly={readOnly}\r\n        placeholder={placeholder}\r\n      />\r\n      <label style={{ fontSize: 20 }} htmlFor={label}>\r\n        {label}\r\n      </label>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport const RenderFieldGroup = ({\r\n  input,\r\n  label,\r\n  type,\r\n  readOnly,\r\n  placeholder,\r\n  handleClick,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <div class=\"input-group\">\r\n      <input\r\n        {...input}\r\n        type={type}\r\n        className=\"form-control\"\r\n        readOnly={readOnly}\r\n        placeholder={placeholder}\r\n        aria-label=\"Recipient's username\"\r\n        aria-describedby=\"basic-addon2\"\r\n        onKeyPress={(event) => {\r\n          if (event.key === \"Enter\") {\r\n            event.preventDefault(); //<===== This stops the form from being submitted\r\n          } else {\r\n          }\r\n        }}\r\n      />\r\n      <div class=\"input-group-append\">\r\n        <button class=\"btn btn-primary\" type=\"button\" onClick={handleClick}>\r\n          <i className=\"fa fa-search mr-1\"></i>\r\n          Cari\r\n        </button>\r\n      </div>\r\n    </div>\r\n    {touched &&\r\n      ((error && (\r\n        <ul className=\"parsley-errors-list filled\">\r\n          <li className=\"parsley-required\"> {error}.</li>\r\n        </ul>\r\n      )) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\n\r\nexport const ReanderSelect = ({\r\n  input,\r\n  label,\r\n  readOnly,\r\n  placeholder,\r\n  options,\r\n  getOptions,\r\n  value,\r\n  disabled,\r\n  loading,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    {loading ? (\r\n      <SkeletonLoading />\r\n    ) : (\r\n      <SelectSearch\r\n        {...input}\r\n        search\r\n        disabled={readOnly}\r\n        placeholder={placeholder}\r\n        options={options}\r\n        getOptions={getOptions}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n      />\r\n    )}\r\n\r\n    {touched &&\r\n      ((error && (\r\n        <ul className=\"parsley-errors-list filled\">\r\n          <li className=\"parsley-required\"> {error}.</li>\r\n        </ul>\r\n      )) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nexport const ReanderSelectMultiple = ({\r\n  input,\r\n  label,\r\n  placeholder,\r\n  options,\r\n  disabled,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <SelectSearch\r\n      {...input}\r\n      search\r\n      multiple\r\n      closeOnSelect={false}\r\n      printOptions=\"on-focus\"\r\n      disabled={disabled}\r\n      placeholder={placeholder}\r\n      options={options}\r\n    />\r\n\r\n    {touched &&\r\n      ((error && (\r\n        <ul className=\"parsley-errors-list filled\">\r\n          <li className=\"parsley-required\"> {error}.</li>\r\n        </ul>\r\n      )) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nexport const RenderTime = ({\r\n  input,\r\n  label,\r\n  placeholder,\r\n  options,\r\n  disabled,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <DateTime dateFormat={false} inputProps={{ placeholder: placeholder }} />\r\n\r\n    {touched &&\r\n      ((error && (\r\n        <ul className=\"parsley-errors-list filled\">\r\n          <li className=\"parsley-required\"> {error}.</li>\r\n        </ul>\r\n      )) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\n\r\nexport const deleteLocalItemBarcode = (nama, kode_barcode) => {\r\n  let data = JSON.parse(localStorage.getItem(nama)) || [];\r\n  let hasil = data.findIndex((item) => item.kode_barcode === kode_barcode);\r\n  data.splice(hasil, 1);\r\n  localStorage.setItem(nama, JSON.stringify(data) || []);\r\n};\r\n\r\nexport const getUserData = () => {\r\n  let data = JSON.parse(localStorage.getItem(\"userdata\")) || [];\r\n  return data;\r\n};\r\n"],"sourceRoot":""}