{"version":3,"sources":["../node_modules/redux-form/es/index.js","Validations/validationKategori.js","DataMaster/Component/FormKategori.jsx","DataMaster/Component/FormKategoriEdit.jsx","DataMaster/Kategori.jsx","Images/500.svg","DataMaster/Component/ModalMasterData.jsx","TourGuide.jsx"],"names":["reset","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","change","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors","validationKategori","value","errors","kodeKategori","FormKategori","props","state","listKelompok","AxiosMasterGet","then","res","setState","data","onSubmit","this","handleSubmit","className","Field","name","type","normalize","toUpperCase","component","renderField","label","limit","renderFieldSelect","options","map","obj","kode_group","disabled","onSend","aria-hidden","Component","reduxForm","form","validate","enableReinitialize","FormKategoriEdit","readOnly","nama_group","submitting","connect","initialValues","provinsi","editKategori","kodeGroup","keterangan","SearchBar","Search","ExportCSVButton","CSVExport","Kategori","columns","dataField","text","csvExport","formatter","rowContent","row","data-tut","onClick","dispatch","kode","kode_kategori","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","AxiosMasterDelete","berhasil","getkategoriList","catch","err","gagal","editkategoriList","nama_kategori","editModal","hasil","progressSend","AxiosMasterPost","finishSend","hideModal","handleReactive","AxiosMasterPut","response","includes","reactive","showModal","isEdit","style","color","to","TourGuide","tourConfig","HeaderCard","ModalMasterData","content","handleEdit","id","tambahModal","kategoriList","keyField","search","searchProps","placeholder","margin","top","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","csvProps","error","src","notrespond","width","alt","height","kategori","alert","module","exports","ModalGlobal","show","onHide","dialogClassName","backdrop","keyboard","Header","closeButton","backgroundColor","Title","Body","modal","disableBody","target","disableBodyScroll","enableBody","enableBodyScroll","list","index","selector","console","log","onRequestClose","hideGuide","steps","isOpen","showTourGuide","maskClassName","rounded","accentColor","onAfterOpen","onBeforeClose"],"mappings":"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","file":"static/js/47.3e371bf6.chunk.js","sourcesContent":["import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;","const validationKategori = (value) => {\r\n    const errors = {}\r\n    if (!value.kodeKategori) {\r\n        errors.kodeKategori = \"Tidak Boleh kosong\"\r\n    }\r\n    return errors\r\n}\r\n\r\nexport default validationKategori;","import React, { Component } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport validationKategori from \"../../Validations/validationKategori\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\n\r\nclass FormKategori extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listKelompok: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"group/get/all\").then((res) =>\r\n      this.setState({\r\n        listKelompok: res.data,\r\n      })\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <Field\r\n              name=\"kodeKategori\"\r\n              type=\"text\"\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              component={renderField}\r\n              label=\"Kode Kategori\"\r\n              limit={10}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <Field\r\n              component={renderFieldSelect}\r\n              label=\"Kode Group\"\r\n              name=\"kodeGroup\"\r\n              // value={this.props.kodeGroup}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              className=\"form-control\"\r\n              options={this.state.listKelompok.map((obj) => {\r\n                var payload = {\r\n                  value: obj.kode_group,\r\n                  name: obj.kode_group,\r\n                };\r\n                return payload;\r\n              })}\r\n            ></Field>\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4 d-none\">\r\n            <Field\r\n              name=\"kodeIntern\"\r\n              type=\"text\"\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              component={renderField}\r\n              label=\"Kode Intern\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <Field\r\n              name=\"keterangan\"\r\n              type=\"text\"\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              component={renderField}\r\n              label=\"Keterangan\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12 col-md-12\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                disabled={this.props.onSend}\r\n                type=\"submit\"\r\n              >\r\n                {this.props.onSend ? (\r\n                  <span\r\n                    className=\"spinner-border spinner-border-sm mr-3\"\r\n                    aria-hidden=\"true\"\r\n                  ></span>\r\n                ) : null}\r\n                Simpan\r\n                <i className=\"fa fa-paper-plane ml-3\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormKategori = reduxForm({\r\n  form: \"Kategori\",\r\n  validate: validationKategori,\r\n  enableReinitialize: true,\r\n})(FormKategori);\r\nexport default FormKategori;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport validationKategori from \"../../Validations/validationKategori\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    initialValues: {\r\n      kodeKategori: state.provinsi.editKategori.kodeKategori,\r\n      kodeGroup: state.provinsi.editKategori.kodeGroup,\r\n      keterangan: state.provinsi.editKategori.keterangan,\r\n    },\r\n  };\r\n};\r\n\r\nclass FormKategoriEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listKelompok: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"group/get/all\").then((res) =>\r\n      this.setState({\r\n        listKelompok: res.data,\r\n      })\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <Field\r\n              name=\"kodeKategori\"\r\n              type=\"text\"\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              component={renderField}\r\n              label=\"Kode Kategori\"\r\n              readOnly={true}\r\n              limit={10}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <Field\r\n              component={renderFieldSelect}\r\n              label=\"Kode Group\"\r\n              name=\"kodeGroup\"\r\n              // value={this.props.kodeGroup}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              className=\"form-control\"\r\n              options={this.state.listKelompok.map((obj) => {\r\n                var payload = {\r\n                  value: obj.kode_group,\r\n                  name: obj.nama_group,\r\n                };\r\n                return payload;\r\n              })}\r\n            ></Field>\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4 d-none\">\r\n            <Field\r\n              name=\"kodeIntern\"\r\n              type=\"text\"\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              component={renderField}\r\n              label=\"Kode Intern\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <Field\r\n              name=\"keterangan\"\r\n              type=\"text\"\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              component={renderField}\r\n              label=\"Keterangan\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12 col-md-12\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                disabled={this.props.submitting}\r\n                type=\"submit\"\r\n              >\r\n                {this.props.onSend ? (\r\n                  <span\r\n                    className=\"spinner-border spinner-border-sm mr-3\"\r\n                    aria-hidden=\"true\"\r\n                  ></span>\r\n                ) : null}\r\n                Simpan\r\n                <i className=\"fa fa-paper-plane ml-3\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormKategoriEdit = reduxForm({\r\n  form: \"KategoriEdit\",\r\n  validate: validationKategori,\r\n  enableReinitialize: true,\r\n})(FormKategoriEdit);\r\nexport default connect(maptoState, null)(FormKategoriEdit);\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport,\r\n} from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { connect } from \"react-redux\";\r\nimport { editkategoriList, getkategoriList } from \"../actions/kategoriAction\";\r\nimport notrespond from \"../Images/500.svg\";\r\nimport Swal from \"sweetalert2\";\r\nimport FormKategori from \"./Component/FormKategori\";\r\nimport FormKategoriEdit from \"./Component/FormKategoriEdit\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { reset } from \"redux-form\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { AxiosMasterDelete, AxiosMasterPost, AxiosMasterPut } from \"../Axios\";\r\nimport { berhasil, gagal, reactive } from \"../Alert\";\r\nimport { hideModal, showModal } from \"../actions/ModalAction\";\r\nimport ModalMasterData from \"./Component/ModalMasterData\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport TourGuide from \"../TourGuide\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\n\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\n\r\nfunction hapus(dispatch, kode) {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      AxiosMasterDelete(\"kategori/delete/\" + kode)\r\n        .then((res) =>\r\n          berhasil(\"Data Berhasil Dihapus!\").then(() =>\r\n            dispatch(getkategoriList())\r\n          )\r\n        )\r\n        .catch((err) => gagal(\"Data Gagal Dihapus!\"));\r\n    }\r\n  });\r\n}\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    kategoriList: state.provinsi.kategori,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\n\r\nclass Kategori extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [\r\n        {\r\n          dataField: \"kode_kategori\",\r\n          text: \"Kode Kategori\",\r\n        },\r\n        {\r\n          dataField: \"nama_kategori\",\r\n          text: \"Nama Kategori\",\r\n        },\r\n        {\r\n          dataField: \"kode_group\",\r\n          text: \"Kode Group\",\r\n        },\r\n        {\r\n          dataField: \"link\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-danger mr-2\"\r\n                  data-tut=\"reactour_3\"\r\n                  onClick={() => hapus(this.props.dispatch, row.kode_kategori)}\r\n                >\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                  HAPUS\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-warning mr-2\"\r\n                  onClick={() =>\r\n                    this.props.dispatch(\r\n                      editkategoriList(\r\n                        row.kode_kategori,\r\n                        row.nama_kategori,\r\n                        row.kode_group,\r\n                        this.editModal()\r\n                      )\r\n                    )\r\n                  }\r\n                >\r\n                  <i className=\"fa fa-edit mr-1\"></i>\r\n                  Edit\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getkategoriList());\r\n  }\r\n\r\n  handleSubmit(hasil) {\r\n    let data = {\r\n      kode_kategori: hasil.kodeKategori,\r\n      nama_kategori: hasil.keterangan,\r\n      kode_group: hasil.kodeGroup,\r\n    };\r\n\r\n    this.props.dispatch(progressSend());\r\n    AxiosMasterPost(\"kategori/add\", data)\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) =>\r\n        berhasil(\"Data Berhasil Ditambah!\")\r\n          .then(() => this.props.dispatch(getkategoriList()))\r\n          .then(() => this.props.dispatch(reset(\"Kategori\")))\r\n      )\r\n      .catch((err) =>\r\n        this.handleReactive(\r\n          err,\r\n          hasil.kodeKategori,\r\n          {\r\n            nama_kategori: hasil.keterangan,\r\n            kode_group: hasil.kodeGroup,\r\n          },\r\n          this.props.dispatch(finishSend())\r\n        )\r\n      );\r\n  }\r\n  handleEdit(hasil) {\r\n    let data = {\r\n      nama_kategori: hasil.keterangan,\r\n      kode_group: hasil.kodeGroup,\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    AxiosMasterPut(\r\n      \"kategori/update/by-kode-kategori/\" + hasil.kodeKategori,\r\n      data\r\n    )\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) =>\r\n        berhasil(\"Data Berhasil Diubah!\").then(() =>\r\n          this.props.dispatch(getkategoriList())\r\n        )\r\n      )\r\n      .catch((err) =>\r\n        gagal(\"Data Gagal Diubah!\")\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => this.props.dispatch(hideModal()))\r\n      );\r\n  }\r\n  handleReactive(err, kode, data) {\r\n    this.props.dispatch(hideModal());\r\n    let error = err.response.data;\r\n    let check = error.includes(\"hapus\");\r\n    check\r\n      ? reactive(\r\n          err,\r\n          kode,\r\n          \"kategori/reactive/\",\r\n          data,\r\n          \"kategori/update/by-kode-kategori/\"\r\n        ).then(() => this.props.dispatch(getkategoriList()))\r\n      : gagal(\"Data Gagal Ditambahkan\");\r\n  }\r\n  tambahModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({ isEdit: false });\r\n  }\r\n  editModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({ isEdit: true });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <ol className=\"breadcrumb mb-2\">\r\n          <Link to=\"/KlasifikasiBarang\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-tut=\"reactour_4\"\r\n            >\r\n              <i className=\"fa fa-angle-left mr-3\" aria-hidden=\"true\"></i> Back\r\n            </button>\r\n          </Link>\r\n        </ol>\r\n        <TourGuide\r\n          tourConfig={[\r\n            `Untuk Menambahkan Data Kategori, Tekan Tombol ini Dan Isi kolom yang disediakan`,\r\n            `Ini adalah Data Kategori yang sudah tersimpan`,\r\n            `Ini adalah tombol untuk menghapus data pada baris yang dipilih`,\r\n            `Ini adalah tombol navigasi untuk kembali`,\r\n          ]}\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Kategori\" />\r\n              <div className=\"card-body\">\r\n                <ModalMasterData\r\n                  content={\r\n                    this.state.isEdit ? (\r\n                      <FormKategoriEdit\r\n                        onSubmit={(data) => this.handleEdit(data)}\r\n                        onSend={this.props.onSend}\r\n                      />\r\n                    ) : (\r\n                      <FormKategori\r\n                        onSubmit={(data) => this.handleSubmit(data)}\r\n                        onSend={this.props.onSend}\r\n                      />\r\n                    )\r\n                  }\r\n                  title={\r\n                    this.state.isEdit\r\n                      ? \"Edit Data Kategori\"\r\n                      : \"Tambah Data Kategoris\"\r\n                  }\r\n                />\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"text-right\">\r\n                    <button\r\n                      name=\"simpan\"\r\n                      id=\"simpan\"\r\n                      type=\"button\"\r\n                      className=\"btn btn-info\"\r\n                      onClick={() => this.tambahModal()}\r\n                      data-tut=\"reactour_1\"\r\n                    >\r\n                      Tambah Data Kategori\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div data-tut=\"reactour_2\">\r\n                  {this.props.kategoriList ? (\r\n                    <ToolkitProvider\r\n                      keyField=\"kodeKategori\"\r\n                      data={this.props.kategoriList}\r\n                      columns={this.state.columns}\r\n                      search\r\n                    >\r\n                      {(props) => (\r\n                        <div className=\"form-group mt-5 mb-3\">\r\n                          <div className=\"text-right\">\r\n                            <SearchBar\r\n                              {...props.searchProps}\r\n                              className=\"form-control\"\r\n                              placeholder=\"Pencarian\"\r\n                              style={{ margin: 0, top: \"50%\" }}\r\n                            />\r\n                          </div>\r\n                          <BootstrapTable\r\n                            {...props.baseProps}\r\n                            striped\r\n                            hover\r\n                            condensed\r\n                            bordered={true}\r\n                            headerClasses=\"header-table\"\r\n                            pagination={paginationFactory()}\r\n                          />\r\n                          <ExportCSVButton\r\n                            {...props.csvProps}\r\n                            className=\"btn btn-primary\"\r\n                          >\r\n                            Export CSV\r\n                          </ExportCSVButton>\r\n                        </div>\r\n                      )}\r\n                    </ToolkitProvider>\r\n                  ) : (\r\n                    <div>\r\n                      {this.props.error ? (\r\n                        <div className=\"text-center\">\r\n                          <img\r\n                            src={notrespond}\r\n                            style={{ width: \"30%\" }}\r\n                            alt=\"ERROR GET DATA\"\r\n                          />\r\n                          <br />\r\n                          <h4>Request API Gagal, Silahkan Refresh</h4>\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton width={\"100%\"} height={180} />\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoState, null)(Kategori);\r\n","module.exports = __webpack_public_path__ + \"static/media/500.c22f1e39.svg\";","import { Modal } from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { hideModal } from \"../../actions/ModalAction\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    show: state.modal.show,\r\n  };\r\n};\r\nclass ModalGlobal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <Modal\r\n        show={this.props.show}\r\n        onHide={() => this.props.dispatch(hideModal())}\r\n        dialogClassName=\"modal-xl\"\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header\r\n          closeButton\r\n          style={{ backgroundColor: \"#5F76E8\", color: \"#ffffff\" }}\r\n        >\r\n          <Modal.Title>{this.props.title || \"\"}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{this.props.content || \"\"}</Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoState, null)(ModalGlobal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { hideGuide } from \"./actions/ModalAction\";\r\nimport Tour from \"reactour\";\r\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\r\n\r\nconst mapToState = (state) => {\r\n  return {\r\n    showTourGuide: state.provinsi.showTourGuide,\r\n  };\r\n};\r\nclass TourGuide extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  disableBody = (target) => disableBodyScroll(target);\r\n  enableBody = (target) => enableBodyScroll(target);\r\n  render() {\r\n    let tourConfig = this.props.tourConfig.map((list, index) => {\r\n      let data = {\r\n        selector: '[data-tut=\"reactour_' + ++index + '\"]',\r\n        content: list,\r\n      };\r\n      return data;\r\n    });\r\n    console.log(tourConfig);\r\n    return (\r\n      <Tour\r\n        onRequestClose={() => this.props.dispatch(hideGuide())}\r\n        steps={tourConfig}\r\n        isOpen={this.props.showTourGuide}\r\n        maskClassName=\"mask\"\r\n        className=\"helper\"\r\n        rounded={5}\r\n        accentColor=\"#5cb7b7\"\r\n        onAfterOpen={this.disableBody}\r\n        onBeforeClose={this.enableBody}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapToState, null)(TourGuide);\r\n"],"sourceRoot":""}