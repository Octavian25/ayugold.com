{"version":3,"sources":["FICO/TolakaHutangSupplier.jsx","FICO/Component/FormTolakanHutangSupplier.jsx"],"names":["ModalMasterData","lazy","TolakHutangSupplier","props","date","Date","formatedDate","getFullYear","getMonth","getDate","inputChange","input","e","setState","target","value","pilihSupplier","result_explode","split","kodeSupplier","namaSupplier","state","supplierList","DataSupplier","startDate","tanggal","noBon","status","tampungBarang","columns","dataField","text","footerClasses","formatter","cell","parseFloat","toLocaleString","csvExport","rowContent","row","rowIndex","className","data-tip","data-for","onClick","deleteIndex","dispatch","getListReturnSupplier","id","type","effect","this","getsupplierList","getUUID","getListTolakHutangSupplier","data","kodeJenis","simpan","kode_kategori","kode_jenis","kadar_cetak","kadar","kadar_beli","kadarTransaksi","no_barcode","qty","p","k","pkg","gross","bruto","netto","ongkos_rp","undefined","rp","array","JSON","parse","localStorage","getItem","push","setItem","stringify","Swal","fire","position","icon","showConfirmButton","timer","reset","warning","length","map","list","reduce","a","b","isi","no_tolak","noFaktur","no_bon","kode_supplier","jenis_trx","total_qty","total_p","total_k","total_pkg","total_bruto","total_netto","total_ongkos","detail_barang","console","log","progressSend","tableRows","table","forEach","ticket","i","ticketData","toFixed","footer","columTable","AxiosMasterPost","then","res","PrintNota","toUpperCase","multipleDeleteLocal","finishSend","document","getElementById","catch","err","style","color","to","aria-hidden","title","content","fallback","width","height","from","onSubmit","handleSubmit","name","component","renderFieldSelect","options","supplier","nama_supplier","label","placeholder","onChange","renderField","showModal","class","keyField","listTolakanHutangSupplier","disabled","onSend","returnSupplierSubmit","Component","connect","provinsi","username","alert","error","FormTolakanHutangSupplier","onclick1","bind","kodeBarang","kode_barang","keterangan","P","K","bungkus","berat","harga","murni","ongkos","kadarCetak","kadarBeli","namaJenis","AxiosMasterGet","filter","kode_kelompok","getTimbangan","change","kodeKategori","readOnly","defaultValue","normalize","nama_jenis","pilihBarang","onBlur","setKadar","visibility","submitting","reduxForm","form","validate","validationTerimaSupplier","enableReinitialize","selector","formValueSelector"],"mappings":"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","file":"static/js/58.95fa5865.chunk.js","sourcesContent":["import React, { Component, lazy, Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  getListReturnSupplier,\r\n  getListTolakHutangSupplier,\r\n} from \"../actions/returnSupplier\";\r\nimport { Field, reset } from \"redux-form\";\r\n\r\nimport PrintNota from \"../Stocking/Component/PrintNota\";\r\nimport { warning } from \"../Alert\";\r\nimport { deleteIndex } from \"../deleteLocalStorage\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\nimport { AxiosMasterPost } from \"../Axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { showModal } from \"../actions/ModalAction\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport { getsupplierList } from \"../actions/supplierAction\";\r\nimport { renderField, renderFieldSelect } from \"../renderField\";\r\nimport GlobalTabel from \"../GlobalComponent/GlobalTabel\";\r\nimport { multipleDeleteLocal } from \"../helper\";\r\nimport FormTolakanHutangSupplier from \"./Component/FormTolakanHutangSupplier\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ModalMasterData = lazy(() =>\r\n  import(\"../DataMaster/Component/ModalMasterData\")\r\n);\r\nconst maptostate = (state) => {\r\n  return {\r\n    noFaktur: state.provinsi.noFaktur,\r\n    username: state.provinsi.username,\r\n    listTolakanHutangSupplier: state.provinsi.listTolakanHutangSupplier,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n    onSend: state.provinsi.onSend,\r\n    supplier: state.provinsi.supplier,\r\n  };\r\n};\r\n\r\nclass TolakHutangSupplier extends Component {\r\n  constructor(props) {\r\n    var date = new Date();\r\n    var formatedDate = `${date.getFullYear()}-${\r\n      date.getMonth() + 1\r\n    }-${date.getDate()}`;\r\n    super(props);\r\n    this.state = {\r\n      supplierList: [],\r\n      DataSupplier: [],\r\n      startDate: formatedDate,\r\n      kodeSupplier: \"\",\r\n      namaSupplier: \"\",\r\n      tanggal: formatedDate,\r\n      noBon: \"\",\r\n      status: \"\",\r\n      tampungBarang: [],\r\n      columns: [\r\n        {\r\n          dataField: \"kode_jenis\",\r\n          text: \"Kode Barang\",\r\n        },\r\n        {\r\n          dataField: \"kadar_cetak\",\r\n          text: \"Kadar Cetak(%)\",\r\n        },\r\n        {\r\n          dataField: \"p\",\r\n          text: \"P\",\r\n        },\r\n        {\r\n          dataField: \"k\",\r\n          text: \"K\",\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Bungkus(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Berat(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"kadar_beli\",\r\n          text: \"Harga(%)\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Murni(Gr)\",\r\n\r\n          footerClasses: \"sum-netto-terima-supplier\",\r\n        },\r\n        {\r\n          dataField: \"ongkos_rp\",\r\n          text: \"Ongkos(RP)\",\r\n          formatter: (cell) => (\r\n            <span>Rp. {parseFloat(cell).toLocaleString(\"ID-id\")}</span>\r\n          ),\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row, rowIndex) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  data-tip\r\n                  data-for=\"hapus\"\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() =>\r\n                    deleteIndex(\r\n                      \"TolakHutangSupplier\",\r\n                      rowIndex,\r\n                      this.props.dispatch,\r\n                      getListReturnSupplier()\r\n                    )\r\n                  }\r\n                >\r\n                  <ReactTooltip id=\"hapus\" type=\"dark\" effect=\"solid\">\r\n                    <span>Hapus</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                </button>\r\n                <br />\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getsupplierList());\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getListTolakHutangSupplier());\r\n  }\r\n\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  pilihSupplier = (input) => (e) => {\r\n    var supp = e.target.value ? e.target.value : \"DEFALT | DEFAULT\";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeSupplier: result_explode[0],\r\n      namaSupplier: result_explode[1],\r\n    });\r\n  };\r\n\r\n  handleSubmit(data) {\r\n    var supp = data.kodeJenis\r\n      ? data.kodeJenis\r\n      : \"DEFAULT|DEFAULT|DEFAULT|DEFAULT\";\r\n    var split = supp.split(\"|\");\r\n    var simpan = {\r\n      kode_kategori: data.kode_kategori,\r\n      kode_jenis: split[0],\r\n      kadar_cetak: parseFloat(data.kadar),\r\n      kadar_beli: parseFloat(data.kadarTransaksi),\r\n      no_barcode: \"-\",\r\n      qty: 1,\r\n      p: parseFloat(data.p),\r\n      k: parseFloat(data.k),\r\n      pkg: parseFloat(data.pkg),\r\n      gross: parseFloat(data.gross),\r\n      bruto: parseFloat(data.bruto),\r\n      netto: parseFloat(data.netto),\r\n      ongkos_rp: parseFloat(data.rp === undefined ? 0 : data.rp),\r\n    };\r\n\r\n    var array = JSON.parse(localStorage.getItem(\"TolakHutangSupplier\")) || [];\r\n    array.push(simpan);\r\n    localStorage.setItem(\"TolakHutangSupplier\", JSON.stringify(array));\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      text: \"Data Berhasil Ditambahkan!\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n    this.props.dispatch(getListTolakHutangSupplier());\r\n    this.props.dispatch(reset(\"TerimaSupplier\"));\r\n  }\r\n\r\n  returnSupplierSubmit() {\r\n    if (this.state.noBon === \"\") {\r\n      warning(\"Mohon isi nomor bon\");\r\n      return false;\r\n    } else if (this.state.tanggal === \"\") {\r\n      warning(\"Mohon isi Tanggal\");\r\n      return false;\r\n    } else if (localStorage.getItem(\"TolakHutangSupplier\") === null) {\r\n      warning(\"Barang masih kosong, silahkan tambahkan barang\");\r\n      return false;\r\n    } else if (this.state.kodeSupplier === \"\") {\r\n      warning(\"Mohon pilih Supplier\");\r\n      return false;\r\n    }\r\n    let data = JSON.parse(localStorage.getItem(\"TolakHutangSupplier\"));\r\n    let qty = data.length;\r\n    let p = data.map((list) => parseFloat(list.p)).reduce((a, b) => a + b, 0);\r\n    let k = data.map((list) => parseFloat(list.k)).reduce((a, b) => a + b, 0);\r\n    let pkg = data\r\n      .map((list) => parseFloat(list.pkg))\r\n      .reduce((a, b) => a + b, 0);\r\n    let bruto = data\r\n      .map((list) => parseFloat(list.bruto))\r\n      .reduce((a, b) => a + b, 0);\r\n    let netto = data\r\n      .map((list) => parseFloat(list.netto))\r\n      .reduce((a, b) => a + b, 0);\r\n    let ongkos_rp = data\r\n      .map((list) => parseFloat(list.ongkos_rp))\r\n      .reduce((a, b) => a + b, 0);\r\n    let isi = {\r\n      no_tolak: this.props.noFaktur,\r\n      tanggal: this.state.tanggal,\r\n      no_bon: this.state.noBon,\r\n      kode_supplier: this.state.kodeSupplier,\r\n      jenis_trx: \"PEMBAYARAN\",\r\n      total_qty: qty,\r\n      total_p: p,\r\n      total_k: k,\r\n      total_pkg: pkg,\r\n      total_bruto: bruto,\r\n      total_netto: netto,\r\n      total_ongkos: ongkos_rp,\r\n      detail_barang: JSON.parse(localStorage.getItem(\"TolakHutangSupplier\")),\r\n    };\r\n    console.log(JSON.stringify(isi));\r\n    this.props.dispatch(progressSend());\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    var table = JSON.parse(localStorage.getItem(\"TolakHutangSupplier\"));\r\n    // for each ticket pass all its data into an array\r\n    table.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        ++i,\r\n        ticket.kode_jenis,\r\n        ticket.kadar_cetak,\r\n        ticket.p,\r\n        ticket.k,\r\n        ticket.pkg,\r\n        ticket.bruto,\r\n        ticket.kadar_beli,\r\n        parseFloat(ticket.netto).toFixed(3),\r\n        \"Rp. \" + parseFloat(ticket.ongkos_rp).toLocaleString(\"id-ID\"),\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    const footer = [\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      table.map((list) => list.pkg).reduce((a, b) => a + b, 0),\r\n      table.map((list) => list.bruto).reduce((a, b) => a + b, 0),\r\n      \"\",\r\n      table.map((list) => list.netto).reduce((a, b) => a + b, 0),\r\n      \"Rp. \" +\r\n        table\r\n          .map((list) => list.ongkos_rp)\r\n          .reduce((a, b) => a + b, 0)\r\n          .toLocaleString(\"id-ID\"),\r\n    ];\r\n    tableRows.push(footer);\r\n    console.log(JSON.stringify(tableRows));\r\n    var columTable = [\r\n      \"No\",\r\n      \"Kode Barang\",\r\n      \"Kadar Cetak (%)\",\r\n      \"P\",\r\n      \"K\",\r\n      \"Bungkus(Gr)\",\r\n      \"Berat(Gr)\",\r\n      \"Harga(Gr)\",\r\n      \"Murni(Gr)\",\r\n      \"Ongkos(Rp)\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    AxiosMasterPost(\"trx-tolakan-supplier/simpan\", isi)\r\n      .then((res) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Data Berhasil Ditambahkan!\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() =>\r\n            PrintNota(\r\n              \"No Bon\",\r\n              this.state.noBon.toUpperCase(),\r\n              \"Tanggal\",\r\n              this.state.tanggal,\r\n              \"Supplier\",\r\n              this.state.kodeSupplier.toUpperCase(),\r\n              \"\",\r\n              \"\",\r\n              \"ADMIN\",\r\n              this.state.tanggal,\r\n              \"\",\r\n              columTable,\r\n              \"Tolakan Return Barang Supplier\",\r\n              tableRows\r\n            )\r\n          )\r\n          .then(() => multipleDeleteLocal([\"TolakHutangSupplier\", \"noFaktur\"]))\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() => this.props.dispatch(getListTolakHutangSupplier()))\r\n          .then(() =>\r\n            this.setState({\r\n              noBon: \"\",\r\n              kodeSupplier: \"\",\r\n            })\r\n          )\r\n          .then(() => document.getElementById(\"myForm\").reset())\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text: \"Data Gagal Ditambahkan\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        }).then(() => this.props.dispatch(finishSend()))\r\n      );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <ol className=\"breadcrumb mb-2\">\r\n          <Link to=\"/KlasifikasiSupplier\">\r\n            <button type=\"button\" className=\"btn btn-secondary\">\r\n              <i className=\"fa fa-angle-left mr-3\" aria-hidden=\"true\"></i> Back\r\n            </button>\r\n          </Link>\r\n        </ol>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Tolakan Pembayaran Hutang Supplier\" />\r\n              <div className=\"card-body\">\r\n                <ModalMasterData\r\n                  content={\r\n                    <Suspense\r\n                      fallback={<Skeleton width={\"100%\"} height={400} />}\r\n                    >\r\n                      <FormTolakanHutangSupplier\r\n                        from=\"tolakan\"\r\n                        onSubmit={(data) => this.handleSubmit(data)}\r\n                        noFaktur={this.props.noFaktur}\r\n                      />\r\n                    </Suspense>\r\n                  }\r\n                  title=\"Tambah Data Barang\"\r\n                />\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                      <form id=\"myForm\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-lg-4\">\r\n                            <Field\r\n                              name=\"supplier\"\r\n                              component={renderFieldSelect}\r\n                              options={this.props.supplier.map((list) => {\r\n                                let data = {\r\n                                  value: list.kode_supplier,\r\n                                  name: list.nama_supplier,\r\n                                };\r\n                                return data;\r\n                              })}\r\n                              type=\"text\"\r\n                              label=\"Supplier\"\r\n                              placeholder=\"Masukan Supplier\"\r\n                              onChange={(data) => {\r\n                                this.setState({\r\n                                  kodeSupplier: data,\r\n                                });\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-lg-4\">\r\n                            <Field\r\n                              name=\"tanggal\"\r\n                              component={renderField}\r\n                              type=\"date\"\r\n                              label=\"Tanggal\"\r\n                              placeholder=\"Masukan Tanggal\"\r\n                              onChange={(e) => {\r\n                                this.setState({\r\n                                  tanggal: e.target.value,\r\n                                });\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-lg-4\">\r\n                            <Field\r\n                              name=\"no_bon\"\r\n                              component={renderField}\r\n                              type=\"text\"\r\n                              label=\"Nomor Bon\"\r\n                              placeholder=\"Masukan Nomor Bon\"\r\n                              onChange={(data) => {\r\n                                this.setState({\r\n                                  noBon: data.target.value,\r\n                                });\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                    <div className=\"col-md-12 col-lg-12 mt-3\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-6\"></div>\r\n                        <div className=\"col-lg-6\">\r\n                          <div className=\"text-right\">\r\n                            <button\r\n                              className=\"btn btn-primary\"\r\n                              onClick={() => this.props.dispatch(showModal())}\r\n                            >\r\n                              Tambah Data\r\n                              <i class=\"fa fa-plus ml-3\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-lg-12 mt-3\">\r\n                      <GlobalTabel\r\n                        keyField=\"id\"\r\n                        data={this.props.listTolakanHutangSupplier}\r\n                        columns={this.state.columns}\r\n                      />\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          disabled={this.props.onSend}\r\n                          onClick={() => this.returnSupplierSubmit()}\r\n                        >\r\n                          {this.props.onSend ? (\r\n                            <span\r\n                              className=\"spinner-border spinner-border-sm mr-3\"\r\n                              aria-hidden=\"true\"\r\n                            ></span>\r\n                          ) : null}\r\n                          Simpan\r\n                          <i\r\n                            class=\"fa fa-paper-plane ml-3\"\r\n                            aria-hidden=\"true\"\r\n                          ></i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(TolakHutangSupplier);\r\n","import React, { Component } from \"react\";\r\nimport { Field, reduxForm, formValueSelector } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport validationTerimaSupplier from \"../../Validations/validationTerimaSupplier\";\r\nimport { getTimbangan } from \"../../GetTimbangan\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\n\r\nclass FormTolakanHutangSupplier extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onclick1 = this.onclick1.bind(this);\r\n    this.state = {\r\n      kodeBarang: [],\r\n      DataSupplier: [],\r\n      kode_barang: \"\",\r\n      keterangan: \"INI KETERANGAN\",\r\n      kadar: \"\",\r\n      P: \"\",\r\n      K: \"\",\r\n      bungkus: \"\",\r\n      berat: \"\",\r\n      harga: \"\",\r\n      murni: \"\",\r\n      ongkos: \"\",\r\n      status: \"\",\r\n      kadarCetak: \"\",\r\n      kadarBeli: \"\",\r\n      namaJenis: \"\",\r\n      kodeJenis: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"jenis/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          kodeBarang: res.data.filter(\r\n            (list) => list.kode_kelompok !== \"PERHIASAN\"\r\n          ),\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    getTimbangan(this.props.change);\r\n  }\r\n\r\n  onclick1() {\r\n    this.props.change(\"netto\", this.props.netto);\r\n    this.props.change(\"noFaktur\", this.props.noFaktur);\r\n    this.props.change(\"gross\", this.props.gross);\r\n  }\r\n\r\n  pilihBarang(data) {\r\n    var supp = data ? data : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n      namaJenis: result_explode[1],\r\n      kadarCetak: result_explode[2],\r\n      kadarBeli: result_explode[3],\r\n      kodeKategori: result_explode[4],\r\n    });\r\n  }\r\n\r\n  setKadar() {\r\n    this.props.change(\"keterangan\", this.state.namaJenis);\r\n    this.props.change(\"kadar\", this.state.kadarCetak);\r\n    this.props.change(\"kadarTransaksi\", this.state.kadarBeli);\r\n    this.props.change(\"kode_kategori\", this.state.kodeKategori);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 col-lg-12 d-none\">\r\n            <Field\r\n              name=\"noFaktur\"\r\n              label={this.props.noFaktur}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              component={renderField}\r\n              defaultValue={this.props.noFaktur}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 form-group\">\r\n            <Field\r\n              label=\"Kode Barang\"\r\n              name=\"kodeJenis\"\r\n              component={renderFieldSelect}\r\n              options={this.state.kodeBarang.map((list) => {\r\n                let data = {\r\n                  value:\r\n                    list.kode_jenis +\r\n                    \"|\" +\r\n                    list.nama_jenis +\r\n                    \"|\" +\r\n                    list.kadar_cetak +\r\n                    \"|\" +\r\n                    list.kadar_beli +\r\n                    \"|\" +\r\n                    list.kode_kategori,\r\n                  name: list.nama_jenis,\r\n                };\r\n                return data;\r\n              })}\r\n              onChange={(data) => this.pilihBarang(data)}\r\n              onBlur={this.setKadar()}\r\n              placeholder=\"Silahkan Pilih\"\r\n            ></Field>\r\n          </div>\r\n          <div\r\n            className=\"col-md-8 form-group\"\r\n            style={\r\n              this.props.from === \"terima\" ? null : { visibility: \"hidden\" }\r\n            }\r\n          >\r\n            <Field\r\n              name=\"keterangan\"\r\n              label=\"Keterangan\"\r\n              type=\"text\"\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"kadar\"\r\n              label=\"Kadar (%)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field name=\"p\" label=\"P\" type=\"number\" component={renderField} />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field name=\"k\" label=\"K\" type=\"number\" component={renderField} />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"pkg\"\r\n              label=\"Bungkus (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"bruto\"\r\n              label=\"Berat (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"kadarTransaksi\"\r\n              label=\"Harga (%)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"gross\"\r\n              label=\"Gross (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"netto\"\r\n              label=\"Murni (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group d-none\">\r\n            <Field\r\n              name=\"kode_kategori\"\r\n              label=\"Kode Kategori\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 form-group mt-3\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\"\r\n                disabled={this.props.submitting}\r\n              >\r\n                Simpan\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormTolakanHutangSupplier = reduxForm({\r\n  form: \"TerimaSupplier\",\r\n  validate: validationTerimaSupplier,\r\n  enableReinitialize: true,\r\n})(FormTolakanHutangSupplier);\r\nconst selector = formValueSelector(\"TerimaSupplier\"); // <-- same as form name\r\n\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi, pkg } = selector(\r\n    state,\r\n    \"bruto\",\r\n    \"kadarTransaksi\",\r\n    \"pkg\"\r\n  );\r\n  return {\r\n    netto: (parseFloat(bruto) * (parseFloat(kadarTransaksi) / 100)).toFixed(3),\r\n    gross: parseFloat(bruto) + parseFloat(pkg),\r\n  };\r\n})(FormTolakanHutangSupplier);\r\n"],"sourceRoot":""}