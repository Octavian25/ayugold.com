{"version":3,"sources":["TotalanMenu/TotalanTimbangan.jsx","../node_modules/redux-form/es/index.js","HeaderCard.jsx","Stocking/Component/PrintNota.jsx"],"names":["FormModalTimbangan","lazy","ModalMasterData","SearchBar","Search","TotalanTimbangan","props","changeInput","input","e","setState","target","value","state","jenisBarang","listLokasi","columns","dataField","text","sort","headerStyle","width","data","tanggal","this","dispatch","getTableTotalanTimbangan","getUUID","getBruto","getNetto","getPkg","getGross","getRp","getQty","Axios","get","server","then","res","catch","err","console","log","explode","kodeBarang","split","simpan","nettoDiscGlobalExt","gross","parseFloat","kodeJenis","pkg","noBarcode","qty","k","kadarCetak","kodeKategori","p","nettoDiscGlobal","discGlobalPr","discGlobalGr","kadarTransaksi","noFaktur","bruto","netto","rp","keterangan","array","JSON","parse","localStorage","getItem","push","setItem","stringify","Swal","fire","position","icon","timer","showConfirmButton","reset","undefined","lokasi","tipeFaktur","noBon","noValid","kodeLokasi","barangDetails","footerItem","totalP","totalGross","sumGross","totalpkg","sumPkg","totalQty","sumQty","totalK","totalRp","sumRp","totalBruto","sumBruto","totalNetto","sumNetto","totalNettoExt","progressSend","tableRows","forEach","ticket","i","ticketData","columTable","post","serverNonMaster","finishSend","PrintNota","removeItem","className","title","htmlFor","name","id","onChange","key","type","label","map","list","namaLokasi","disabled","onSend","onClick","simpanTotalanTimbang","aria-hidden","showModal","totalanTimbangan","keyField","search","searchProps","placeholder","style","margin","top","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","noDataIndication","content","fallback","height","count","onSubmit","handleSubmit","Component","connect","provinsi","listTotalanTimbangan","perhitungan","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","change","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors","HeaderCard","fontSize","backgroundColor","borderTopLeftRadius","borderTopRightRadius","color","row1name","row1isi","row2name","row2isi","row3name","row3isi","row4name","row4isi","username","validby","tableColumn","doc","jsPDF","autoTable","startY","finalY","lastAutoTable","setFontSize","string","output","embed","x","window","open","document","write","close"],"mappings":"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","file":"static/js/122.2a992244.chunk.js","sourcesContent":["import React, { Component, lazy, Suspense } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport { connect } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { reset } from \"redux-form\";\r\nimport {\r\n  finishSend,\r\n  getBruto,\r\n  getGross,\r\n  getNetto,\r\n  getPkg,\r\n  getQty,\r\n  getRp,\r\n  progressSend,\r\n} from \"../actions/LogicAction\";\r\nimport { getTableTotalanTimbangan } from \"../actions/TotalanTimbanganAction\";\r\nimport Axios from \"axios\";\r\nimport PrintNota from \"../Stocking/Component/PrintNota\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { showModal } from \"../actions/ModalAction\";\r\n\r\nconst FormModalTimbangan = lazy(() =>\r\n  import(\"./Components/FormModalTimbangan\")\r\n);\r\nconst ModalMasterData = lazy(() =>\r\n  import(\"../DataMaster/Component/ModalMasterData\")\r\n);\r\nconst maptostate = (state) => {\r\n  return {\r\n    totalanTimbangan: state.provinsi.totalanTimbangan,\r\n    noFaktur: state.provinsi.noFaktur,\r\n    listTotalanTimbangan: state.provinsi.listTotalanTimbangan,\r\n    sumBruto: state.perhitungan.sumBruto,\r\n    sumNetto: state.perhitungan.sumNetto,\r\n    sumGross: state.perhitungan.sumGross,\r\n    sumPkg: state.perhitungan.sumPkg,\r\n    sumQty: state.perhitungan.sumQty,\r\n    sumRp: state.perhitungan.sumRp,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\nconst { SearchBar } = Search;\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nconst serverNonMaster = process.env.REACT_APP_BACKEND_URL_NON_MASTER;\r\nclass TotalanTimbangan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jenisBarang: \"RONGSOK\",\r\n      listLokasi: [],\r\n      columns: [\r\n        {\r\n          dataField: \"kodeJenis\",\r\n          text: \"Kode\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"kadarCetak\",\r\n          text: \"Kadar\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"gross\",\r\n          text: \"Gross (Gr)\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Pkg (Gr)\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Berat (Gr)\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"kadarTransaksi\",\r\n          text: \"Harga\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Netto (Gr)\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"rp\",\r\n          text: \"Ongkos (Rp)\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"25%\" };\r\n          },\r\n        },\r\n      ],\r\n      data: [\r\n        {\r\n          tanggal: \"2020-11-10\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getTableTotalanTimbangan());\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getBruto(\"totalanTimbangan\"));\r\n    this.props.dispatch(getNetto(\"totalanTimbangan\"));\r\n    this.props.dispatch(getPkg(\"totalanTimbangan\"));\r\n    this.props.dispatch(getGross(\"totalanTimbangan\"));\r\n    this.props.dispatch(getRp(\"totalanTimbangan\"));\r\n    this.props.dispatch(getQty(\"totalanTimbangan\"));\r\n    Axios.get(server + \"storages2?tipeData=LOKASI\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listLokasi: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    var isi = data.kodeBarang\r\n      ? data.kodeBarang\r\n      : \"DEFAULT|DEFUALT|DEFAULT|DEFAULT\";\r\n    var explode = isi.split(\"|\");\r\n    var simpan = {\r\n      nettoDiscGlobalExt: 0,\r\n      gross: parseFloat(data.gross),\r\n      kodeJenis: explode[0],\r\n      pkg: parseFloat(data.pkg),\r\n      noBarcode: \"-\",\r\n      qty: 1,\r\n      k: 0,\r\n      kadarCetak: explode[1],\r\n      kodeKategori: \"-\",\r\n      p: 0,\r\n      nettoDiscGlobal: 0,\r\n      discGlobalPr: 0,\r\n      discGlobalGr: 0,\r\n      kadarTransaksi: parseFloat(data.kadarTransaksi),\r\n      noFaktur: data.noFaktur,\r\n      bruto: parseFloat(data.gross) - parseFloat(data.pkg),\r\n      netto: parseFloat(data.netto),\r\n      rp: parseFloat(data.rp),\r\n      keterangan: data.keterangan,\r\n    };\r\n    var array = JSON.parse(localStorage.getItem(\"totalanTimbangan\")) || [];\r\n    array.push(simpan);\r\n    localStorage.setItem(\"totalanTimbangan\", JSON.stringify(array));\r\n    Swal.fire({\r\n      position: \"top-right\",\r\n      icon: \"success\",\r\n      text: \"Transaksi Berhasil\",\r\n      timer: 1500,\r\n      showConfirmButton: false,\r\n    });\r\n    this.props.dispatch(reset(\"FormModalTimbangan\"));\r\n    this.props.dispatch(getTableTotalanTimbangan());\r\n  }\r\n  simpanTotalanTimbang() {\r\n    if (this.state.tanggal === undefined) {\r\n      Swal.fire({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        text: \"Silahkan Isi Tanggal\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n      return false;\r\n    } else if (this.state.lokasi === undefined) {\r\n      Swal.fire({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        text: \"Silahkan Isi Lokasi\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n      return false;\r\n    } else if (localStorage.getItem(\"totalanTimbangan\") === null) {\r\n      Swal.fire({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        text: \"Data Masih Kosong, Silahkan tambah data\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n      return false;\r\n    }\r\n    var simpan = {\r\n      tipeFaktur: this.state.jenisBarang,\r\n      noFaktur: this.props.noFaktur,\r\n      noBon: this.props.noFaktur,\r\n      tanggal: this.state.tanggal,\r\n      noValid: \"-\",\r\n      kodeLokasi: this.state.kodeLokasi,\r\n      barangDetails: JSON.parse(localStorage.getItem(\"totalanTimbangan\")),\r\n      footerItem: {\r\n        totalP: 0,\r\n        totalGross: this.props.sumGross,\r\n        totalpkg: this.props.sumPkg,\r\n        totalQty: this.props.sumQty,\r\n        totalK: 0,\r\n        totalRp: this.props.sumRp,\r\n        totalBruto: this.props.sumBruto,\r\n        totalNetto: this.props.sumNetto,\r\n        totalNettoExt: 0,\r\n      },\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    var table = JSON.parse(localStorage.getItem(\"totalanTimbangan\")) || [];\r\n    // for each ticket pass all its data into an array\r\n    table.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        i++,\r\n        ticket.kodeJenis,\r\n        ticket.gross,\r\n        ticket.pkg,\r\n        ticket.bruto,\r\n        ticket.kadarTransaksi,\r\n        ticket.netto,\r\n        ticket.rp,\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    console.log(tableRows);\r\n    var columTable = [\r\n      \"No\",\r\n      \"Kode Barang\",\r\n      \"Gross (Gr)\",\r\n      \"Pkg (Gr)\",\r\n      \"Bruto (Gr)\",\r\n      \"Harga (%)\",\r\n      \"Netto (Gr)\",\r\n      \"Ongkos (Rp)\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n\r\n    Axios.post(serverNonMaster + \"item/dc/totalantimbang\", simpan)\r\n      .then(() =>\r\n        Swal.fire({\r\n          position: \"top-right\",\r\n          icon: \"success\",\r\n          text: \"Transaksi Berhasil\",\r\n          timer: 1500,\r\n          showConfirmButton: false,\r\n        })\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() =>\r\n            PrintNota(\r\n              \"Tanggal\",\r\n              this.state.tanggal,\r\n              \"Lokasi\",\r\n              this.state.tanggal,\r\n              \"No Timbang\",\r\n              this.props.noFaktur,\r\n              \"\",\r\n              \"\",\r\n              \"\",\r\n              \"\",\r\n              \"\",\r\n              columTable,\r\n              \"STOCK OPNAME TIMBANG SALES\",\r\n              tableRows\r\n            )\r\n          )\r\n          .then(() => localStorage.removeItem(\"totalanTimbangan\"))\r\n          .then(() => localStorage.removeItem(\"noFaktur\"))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() => this.props.dispatch(getTableTotalanTimbangan()))\r\n          .then(() =>\r\n            this.setState({\r\n              tanggal: \"\",\r\n              lokasi: \"\",\r\n            })\r\n          )\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-right\",\r\n          icon: \"error\",\r\n          text:\r\n            \"Sepertinya ada kesalahan di server, mohon periksa koneksi dan ulangi transaksi\",\r\n          timer: 1500,\r\n          showConfirmButton: false,\r\n        }).then(() => console.log(err))\r\n      );\r\n  }\r\n  changeInput = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"card\">\r\n          <HeaderCard title=\"Totalan Timbangan\" />\r\n          <div className=\"card-body\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-4 mb-3\">\r\n                <label htmlFor=\"\">Jenis Barang</label>\r\n                <select\r\n                  name=\"jenisBarang\"\r\n                  id=\"JenisBarang\"\r\n                  className=\"form-control\"\r\n                  onChange={(e) =>\r\n                    this.setState({\r\n                      jenisBarang: e.target.value,\r\n                    })\r\n                  }\r\n                >\r\n                  <option value=\"RONGSOK\" key=\"RONGSOK\">\r\n                    RONGSOK\r\n                  </option>\r\n                  <option value=\"PERHIASAN\" key=\"PERHIASAN\">\r\n                    PERHIASAN\r\n                  </option>\r\n                </select>\r\n              </div>\r\n              <div className=\"col-lg-8 mb-3\"></div>\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"\">Tanggal</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"tanggal\"\r\n                    label=\"tanggal\"\r\n                    className=\"form-control\"\r\n                    onChange={this.changeInput(\"tanggal\")}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"\">Lokasi</label>\r\n                  <select\r\n                    name=\"lokasi\"\r\n                    label=\"lokasi\"\r\n                    className=\"form-control\"\r\n                    onChange={this.changeInput(\"lokasi\")}\r\n                  >\r\n                    <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                      SILAHKAN PILIH\r\n                    </option>\r\n                    {this.state.listLokasi.map((list) => (\r\n                      <option value={list.kodeLokasi} key={list.kodeLokasi}>\r\n                        {list.namaLokasi}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-12 mt-3 mb-3\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-6\">\r\n                    <div className=\"text-left\">\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        disabled={this.props.onSend}\r\n                        onClick={() => this.simpanTotalanTimbang()}\r\n                      >\r\n                        {this.props.onSend ? (\r\n                          <span\r\n                            className=\"spinner-border spinner-border-sm mr-3\"\r\n                            aria-hidden=\"true\"\r\n                          ></span>\r\n                        ) : null}\r\n                        Simpan\r\n                        <i className=\"fa fa-paper-plane ml-3\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-6\">\r\n                    <div className=\"text-right\">\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        onClick={() => this.props.dispatch(showModal())}\r\n                      >\r\n                        Tambah Data\r\n                        <i className=\"fa fa-plus ml-3\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                {this.props.totalanTimbangan ? (\r\n                  <ToolkitProvider\r\n                    keyField=\"kodeKelompok\"\r\n                    data={this.props.totalanTimbangan}\r\n                    columns={this.state.columns}\r\n                    search\r\n                  >\r\n                    {(props) => (\r\n                      <div className=\"form-group\">\r\n                        <div className=\"text-right mt-5 mb-3\">\r\n                          <SearchBar\r\n                            {...props.searchProps}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Tuliskan Kode / Nama\"\r\n                            style={{ margin: 0, top: \"50%\" }}\r\n                          />\r\n                        </div>\r\n                        <BootstrapTable\r\n                          {...props.baseProps}\r\n                          striped\r\n                          hover\r\n                          condensed\r\n                          bordered={true}\r\n                          headerClasses=\"header-table\"\r\n                          pagination={paginationFactory()}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </ToolkitProvider>\r\n                ) : (\r\n                  <BootstrapTable\r\n                    keyField=\"kodeKelompok\"\r\n                    data={[]}\r\n                    columns={this.state.columns}\r\n                    bordered={true}\r\n                    headerClasses=\"header-table\"\r\n                    noDataIndication=\"Tidak Ada Data\"\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ModalMasterData\r\n          content={\r\n            <Suspense\r\n              fallback={<Skeleton width={\"100%\"} height={50} count={5} />}\r\n            >\r\n              <FormModalTimbangan\r\n                noFaktur={this.props.noFaktur}\r\n                jenisBarang={this.state.jenisBarang}\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n              />\r\n            </Suspense>\r\n          }\r\n          title=\"\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(TotalanTimbangan);\r\n","import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;","import React, { Component } from \"react\";\r\n\r\nclass HeaderCard extends Component {\r\n  render() {\r\n    return (\r\n      <h4\r\n        className=\"card-header mb-3\"\r\n        style={{\r\n          fontSize: 25,\r\n          backgroundColor: \"#394867\",\r\n          borderTopLeftRadius: 10,\r\n          borderTopRightRadius: 10,\r\n          height: 50,\r\n          color: \"#ffffff\",\r\n        }}\r\n      >\r\n        {this.props.title}\r\n      </h4>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderCard;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst PrintNota = (\r\n  row1name = \"\",\r\n  row1isi = \"\",\r\n  row2name = \"\",\r\n  row2isi = \"\",\r\n  row3name = \"\",\r\n  row3isi = \"\",\r\n  row4name = \"\",\r\n  row4isi = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n  validby = \"\",\r\n  tableColumn = [],\r\n  title = \"\",\r\n  tableRows\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  // var tickets = JSON.parse(data);\r\n  // define the columns we want and their titles\r\n\r\n  // // define an empty array of rows\r\n  // const tableRows = [];\r\n\r\n  // // for each ticket pass all its data into an array\r\n  // tickets.forEach((ticket, i) => {\r\n  //   const ticketData = [\r\n  //     i++,\r\n  //     ticket.kodeJenis01,\r\n  //     ticket.bruto01,\r\n  //     ticket.kadarTransaksi01,\r\n  //     ticket.netto01,\r\n  //     ticket.kodeJenis02,\r\n  //     ticket.bruto02,\r\n  //     ticket.kadarTransaksi02,\r\n  //     ticket.netto02,\r\n  //   ];\r\n  //   // push each tickcet's info into a row\r\n  //   tableRows.push(ticketData);\r\n  // });\r\n\r\n  // startY is basically margin-top\r\n  doc.autoTable(tableColumn, tableRows, { startY: 40 });\r\n  let finalY = doc.lastAutoTable.finalY + 10;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(title, 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(row1name, 14, 25);\r\n  doc.text(\":\", 37, 25);\r\n  doc.text(row1isi, 40, 25);\r\n  doc.text(row2name, 120, 25);\r\n  doc.text(\":\", 141, 25);\r\n  doc.text(row2isi, 145, 25);\r\n  //row 2\r\n  doc.text(row3name, 14, 30);\r\n  doc.text(\":\", 37, 30);\r\n  doc.text(row3isi, 40, 30);\r\n  doc.text(row4name, 120, 30);\r\n  doc.text(\":\", 141, 30);\r\n  doc.text(row4isi, 145, 30);\r\n\r\n  //Stamp\r\n  doc.text(\"User\", 160, finalY + 10);\r\n  doc.text(\":\", 168, finalY + 10);\r\n  doc.text(username, 170, finalY + 10);\r\n  doc.text(\"Cetak\", 160, finalY + 15);\r\n  doc.text(\":\", 168, finalY + 15);\r\n  doc.text(tanggal, 170, finalY + 15);\r\n  doc.text(\"Valid\", 160, finalY + 20);\r\n  doc.text(\":\", 168, finalY + 20);\r\n  doc.text(validby, 170, finalY + 20);\r\n  // doc.autoPrint();\r\n  // doc.save(`${title}_${dateStr}.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  x.document.close();\r\n};\r\n\r\nexport default PrintNota;\r\n"],"sourceRoot":""}