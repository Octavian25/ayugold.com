{"version":3,"sources":["DataMaster/Component/FormKotaEdit.jsx","DataMaster/Kota.jsx"],"names":["renderField","input","label","type","readOnly","meta","touched","error","warning","className","htmlFor","FormKotaEdit","props","state","response","status","listProvinsi","axios","get","server","then","res","setState","data","catch","err","console","log","kodenya","this","kode","namanya","nama","onSubmit","handleSubmit","Field","name","replace","normalize","value","toUpperCase","component","kode_ext","from","map","kodeProvinsi","key","namaProvinsi","id","disabled","submitting","Component","reduxForm","form","validate","validationProvinsi","enableReinitialize","connect","initialValues","provinsi","editKota","KodeKota","kodeKota","NamaKota","namaKota","cell","row","statusAktif","src","activelogo","style","width","height","alt","nonactive","process","defaultSorted","dataField","order","Kota","provinsi_array","columns","text","sort","headerStyle","formatter","csvExport","rowContent","onClick","dispatch","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","delete","position","showConfirmButton","timer","getKotaList","data-toggle","data-target","isi","post","document","getElementById","click","reset","put","color","alert","role","data-dismiss","aria-label","aria-hidden","fontSize","KotaList","Table","namaKey","notrespond","tabIndex","aria-labelledby","AreaProvinsiKota","handlerSubmit","handlerEdit","kota"],"mappings":"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","file":"static/js/131.eab7d668.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { validationProvinsi } from \"../../Validations/validationProvinsi\";\r\n\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nconst maptoState = (state) => {\r\n  return {\r\n    initialValues: {\r\n      status: state.provinsi.editKota.status,\r\n      KodeKota: state.provinsi.editKota.kodeKota,\r\n      NamaKota: state.provinsi.editKota.namaKota,\r\n      kodeProvinsi: state.provinsi.editKota.kodeProvinsi,\r\n    },\r\n  };\r\n};\r\nclass FormKotaEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      response: \"\",\r\n      status: \"AKTIF\",\r\n      listProvinsi: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(server + \"provinces\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listProvinsi: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    var kodenya = this.props.kode;\r\n    var namanya = this.props.nama;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-2\">\r\n              <Field\r\n                name={kodenya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                readOnly={true}\r\n                label={this.props.kode}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\" className=\"text-black\">\r\n                  {this.props.kode_ext}\r\n                </label>\r\n                <Field\r\n                  component=\"select\"\r\n                  name={\r\n                    this.props.from === \"kota\" ? \"kodeProvinsi\" : \"kodeKota\"\r\n                  }\r\n                  type=\"text\"\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option value=\"DEFAULT\">SILAHKAN PILIH</option>\r\n                  {this.state.listProvinsi.map((res) => (\r\n                    <option value={res.kodeProvinsi} key={res.kodeProvinsi}>\r\n                      {res.namaProvinsi}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <Field\r\n                name={namanya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                label={this.props.nama}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\" className=\"text-black\">\r\n                  Status\r\n                </label>\r\n                <Field\r\n                  component=\"select\"\r\n                  name=\"status\"\r\n                  type=\"text\"\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option value=\"AKTIF\" key=\"AKTIF\">\r\n                    Aktif\r\n                  </option>\r\n                  <option value=\"NON-AKTIF\" key=\"NON-AKTIF\">\r\n                    Non Aktif\r\n                  </option>\r\n                </Field>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  type=\"submit\"\r\n                  id=\"simpan\"\r\n                  className=\"btn btn-primary\"\r\n                  disabled={this.props.submitting}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormKotaEdit = reduxForm({\r\n  form: \"KotaEdit\", // a unique identifier for this form\r\n  validate: validationProvinsi, // <--- validation function given to redux-form\r\n  enableReinitialize: true,\r\n})(FormKotaEdit);\r\nexport default connect(maptoState, null)(FormKotaEdit);\r\n","import React, { Component } from \"react\";\r\nimport AreaProvinsiKota from \"./Component/AreaProvinsiKota\";\r\nimport Table from \"./Component/Table\";\r\nimport activelogo from \"../Images/active.png\";\r\nimport nonactive from \"../Images/nonactive.png\";\r\nimport { editKota, getKotaList } from \"../actions/kotaAction\";\r\nimport { connect } from \"react-redux\";\r\nimport notrespond from \"../Images/500.svg\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport FormKotaEdit from \"./Component/FormKotaEdit\";\r\nimport { reset } from \"redux-form\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nfunction status(cell, row) {\r\n  if (row.statusAktif === \"AKTIF\") {\r\n    return (\r\n      <div>\r\n        <img src={activelogo} style={{ width: 50, height: 50 }} alt=\"ACTIVE\" />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <img\r\n          src={nonactive}\r\n          alt=\"NON ACTIVE\"\r\n          style={{ width: 50, height: 50 }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nfunction hapus(dispatch, kode) {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      axios\r\n        .delete(server + \"city\", {\r\n          data: {\r\n            kodeKota: kode,\r\n          },\r\n        })\r\n        .then((res) =>\r\n          Swal.fire({\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            text: \"Data Berhasil Dihapus!\",\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n        )\r\n        .catch((err) =>\r\n          Swal.fire({\r\n            position: \"top-end\",\r\n            icon: \"error\",\r\n            text: \"Data Gagal Dihapus!\",\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n        )\r\n        .then(() => dispatch(getKotaList()));\r\n    }\r\n  });\r\n}\r\n\r\nconst defaultSorted = [\r\n  {\r\n    dataField: \"kodeKota\",\r\n    order: \"asc\",\r\n  },\r\n];\r\nconst mapToState = (state) => {\r\n  return {\r\n    KotaList: state.provinsi.kota,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n  };\r\n};\r\n\r\nclass Kota extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      provinsi: [],\r\n      provinsi_array: [],\r\n      response: \"\",\r\n      columns: [\r\n        {\r\n          dataField: \"kodeKota\",\r\n          text: \"Kode Kota\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"15%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"namaKota\",\r\n          text: \"Nama Kota\",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"kodeProvinsi\",\r\n          text: \"Provinsi\",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"statusAktif\",\r\n          text: \"Status\",\r\n          sort: true,\r\n          formatter: status,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() => hapus(this.props.dispatch, row.kodeKota)}\r\n                >\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                  HAPUS\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-warning mr-2\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#editModal\"\r\n                  onClick={() =>\r\n                    this.props.dispatch(\r\n                      editKota(\r\n                        row.kodeKota,\r\n                        row.namaKota,\r\n                        row.kodeProvinsi,\r\n                        row.statusAktif\r\n                      )\r\n                    )\r\n                  }\r\n                >\r\n                  <i className=\"fa fa-edit mr-1\"></i>\r\n                  EDIT\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getKotaList());\r\n  }\r\n\r\n  handlerSubmit(data) {\r\n    const isi = {\r\n      statusAktif: data.status ? data.status : \"AKTIF\",\r\n      namaKota: data.NamaKota,\r\n      kodeKota: data.KodeKota,\r\n      kodeProvinsi: data.kodeProvinsi,\r\n    };\r\n    console.log(isi);\r\n    axios\r\n      .post(server + \"city\", isi)\r\n      .then(\r\n        (res) =>\r\n          Swal.fire({\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            text: \"Data Berhasil Disimpan!\",\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          }),\r\n        document.getElementById(\"dismiss_modal\").click()\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text: \"Data Gagal Disimpan!\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n      )\r\n      .then(() => this.props.dispatch(getKotaList()))\r\n      .then(() => this.props.dispatch(reset(\"Provinsi\")));\r\n  }\r\n  handlerEdit(data) {\r\n    const isi = {\r\n      statusAktif: data.status ? data.status : \"AKTIF\",\r\n      namaKota: data.NamaKota,\r\n      kodeKota: data.KodeKota,\r\n      kodeProvinsi: data.kodeProvinsi,\r\n    };\r\n    console.log(isi);\r\n    axios\r\n      .put(server + \"city\", isi)\r\n      .then(\r\n        (res) =>\r\n          Swal.fire({\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            text: \"Data Berhasil Dirubah!\",\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          }),\r\n        document.getElementById(\"dismiss_modal1\").click()\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text: \"Data Gagal Dirubah!\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n      )\r\n      .then(() => this.props.dispatch(getKotaList()));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div id=\"notif_alert\" className={this.props.alert} role=\"alert\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n          <strong>Error - </strong> Tidak Bisa Mengambil Data\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title mb-3\" style={{ fontSize: 30 }}>\r\n                  Data Kota\r\n                </h4>\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"text-right\">\r\n                    <button\r\n                      name=\"simpan\"\r\n                      id=\"simpan\"\r\n                      type=\"button\"\r\n                      className=\"btn btn-info\"\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#primary-header-modal\"\r\n                    >\r\n                      Tambah Data Kota\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                {this.props.KotaList ? (\r\n                  <Table\r\n                    data={this.props.KotaList}\r\n                    columns={this.state.columns}\r\n                    defaultSorted={defaultSorted}\r\n                    namaKey=\"kodeKota\"\r\n                  />\r\n                ) : (\r\n                  <div>\r\n                    {this.props.error ? (\r\n                      <div className=\"text-center\">\r\n                        <img\r\n                          src={notrespond}\r\n                          style={{ width: \"30%\" }}\r\n                          alt=\"ACTIVE\"\r\n                        />\r\n                        <br />\r\n                        <h4>Request API Gagal, Silahkan Refresh</h4>\r\n                      </div>\r\n                    ) : (\r\n                      <Skeleton width={\"100%\"} height={180} />\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          id=\"primary-header-modal\"\r\n          className=\"modal fade\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"primary-header-modalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header modal-colored-header bg-primary\">\r\n                <h4 className=\"modal-title\" id=\"primary-header-modalLabel\">\r\n                  Tambah Data Kota\r\n                </h4>\r\n                <button\r\n                  id=\"dismiss_modal\"\r\n                  name=\"dismiss_modal\"\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <AreaProvinsiKota\r\n                  nama=\"Nama Kota\"\r\n                  kode=\"Kode Kota\"\r\n                  kode_ext=\"Nama Provinsi\"\r\n                  onSubmit={(data) => this.handlerSubmit(data)}\r\n                  from=\"kota\"\r\n                />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-light\"\r\n                  data-dismiss=\"modal\"\r\n                  id=\"close_modal\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          id=\"editModal\"\r\n          className=\"modal fade\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"primary-header-modalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header modal-colored-header bg-primary\">\r\n                <h4 className=\"modal-title\" id=\"primary-header-modalLabel\">\r\n                  Edit Data Kota\r\n                </h4>\r\n                <button\r\n                  id=\"dismiss_modal1\"\r\n                  name=\"dismiss_modal1\"\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <FormKotaEdit\r\n                  nama=\"Nama Kota\"\r\n                  kode=\"Kode Kota\"\r\n                  kode_ext=\"Nama Provinsi\"\r\n                  onSubmit={(data) => this.handlerEdit(data)}\r\n                  from=\"kota\"\r\n                />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-light\"\r\n                  data-dismiss=\"modal\"\r\n                  id=\"close_modal\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapToState, null)(Kota);\r\n"],"sourceRoot":""}