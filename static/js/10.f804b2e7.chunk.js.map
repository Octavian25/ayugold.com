{"version":3,"sources":["FICO/Element/AccordCiok.jsx","FICO/Element/AccordRongsok.jsx","FICO/Element/AccordCashMurni.jsx","FICO/Element/AccordTransferMurni.jsx","FICO/Element/AccordTransfer.jsx","Validations/validasiCash.js","FICO/Element/AccordCash.jsx"],"names":["renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","min","step","maxLength","AccordCiok","props","state","this","change","totalBrutoCiok","parseFloat","totalCiok","toFixed","id","data-toggle","href","aria-expanded","aria-controls","onClick","setCiok","style","color","name","component","aria-labelledby","data-parent","data-target","onBlur","Component","reduxForm","form","enableReinitialize","selector","formValueSelector","connect","harga","cash","cashNetto","AccordRongsok","totalBrutoRongsok","totalRongsok","setRongsok","currencyMask","createNumberMask","prefix","suffix","locale","AccordCashMurni","netto","local","JSON","parse","localStorage","getItem","tunaiRp","tunaiKurs","cashNettoMurni","onSubmit","handleSubmit","onChange","AccordTransferMurni","listBank","transferNettoMurni","transfer","tujuan","supplier","tanggal","transferRp","transferKurs","accTo","accFrom","transferTanggalJanji","Axios","get","server","then","res","setState","data","catch","err","console","log","getlocal","value","key","map","list","noRekening","atasNama","transferNetto","AccordTrannsfer","validasiCash","errors","AccordCash","tunaiNetto","Field","validate"],"mappings":"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","file":"static/js/10.f804b2e7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nclass AccordCiok extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  setCiok() {\r\n    this.props.change(\"ciokBrutto\", this.props.totalBrutoCiok);\r\n    this.props.change(\"ciokNetto\", parseFloat(this.props.totalCiok).toFixed(3));\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-6\">\r\n        <div id=\"accordion\" className=\"custom-accordion mb-4\">\r\n          <div className=\"card mb-0 bg-dark\">\r\n            <div className=\"card-header\" id=\"headingOne\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-8 col-md-8\">\r\n                  <h5 className=\"m-0\">\r\n                    <a\r\n                      className=\"custom-accordion-title d-block pt-2 pb-2 text-white\"\r\n                      data-toggle=\"collapse\"\r\n                      href=\"#collapseCiok\"\r\n                      aria-expanded=\"true\"\r\n                      aria-controls=\"collapseCiok\"\r\n                      onClick={() => this.setCiok()}\r\n                    >\r\n                      Ciok\r\n                      <span className=\"float-right\">\r\n                        <i className=\"mdi mdi-chevron-down accordion-arrow\" />\r\n                      </span>\r\n                    </a>\r\n                  </h5>\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <label htmlFor=\"\" style={{ color: \"white\" }}>\r\n                    Netto\r\n                  </label>\r\n                  <Field\r\n                    name=\"ciokNetto\"\r\n                    type=\"number\"\r\n                    component=\"input\"\r\n                    className=\"form-control\"\r\n                    readOnly={true}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              id=\"collapseCiok\"\r\n              className=\"collapse\"\r\n              aria-labelledby=\"headingOne\"\r\n              data-parent=\"#accordion\"\r\n            >\r\n              <div className=\"card-body bg-white\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-2\">\r\n                    <label htmlFor=\"\">.</label>\r\n                    <button\r\n                      className=\"btn btn-primary btn-block\"\r\n                      type=\"button\"\r\n                      data-target=\"#ciokModal\"\r\n                      data-toggle=\"modal\"\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </div>\r\n                  {this.props.totalCiok ? (\r\n                    <>\r\n                      <div className=\"col-lg-5 col-md-5\">\r\n                        <Field\r\n                          name=\"ciokBrutto\"\r\n                          label=\"Bruto\"\r\n                          type=\"number\"\r\n                          component={renderField}\r\n                          readOnly={true}\r\n                          onBlur={this.setCiok()}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-lg-5 col-md-5\">\r\n                        <Field\r\n                          name=\"ciokNetto\"\r\n                          label=\"Netto\"\r\n                          type=\"number\"\r\n                          component={renderField}\r\n                          readOnly={true}\r\n                          onBlur={this.setCiok()}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <div className=\"col-lg-5 col-md-5\">\r\n                        <Field\r\n                          name=\"ciokBrutto\"\r\n                          label=\"Bruto\"\r\n                          type=\"number\"\r\n                          component={renderField}\r\n                          readOnly={true}\r\n                          onBlur={this.setCiok()}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-lg-5 col-md-5\">\r\n                        <Field\r\n                          name=\"ciokNetto\"\r\n                          label=\"Netto\"\r\n                          type=\"number\"\r\n                          component={renderField}\r\n                          readOnly={true}\r\n                          onBlur={this.setCiok()}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* end card*/}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAccordCiok = reduxForm({\r\n  form: \"AccordCiok\",\r\n  enableReinitialize: true,\r\n})(AccordCiok);\r\nconst selector = formValueSelector(\"AccordCiok\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { harga, cash } = selector(state, \"harga\", \"cash\");\r\n  return {\r\n    cashNetto: (parseFloat(cash) / parseFloat(harga)).toFixed(3),\r\n  };\r\n})(AccordCiok);\r\n","import React, { Component } from \"react\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nclass AccordRongsok extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {\r\n    this.props.change(\r\n      \"rongsokBruto\",\r\n      parseFloat(this.props.totalBrutoRongsok).toFixed(3)\r\n    );\r\n    this.props.change(\r\n      \"rongsokNetto\",\r\n      parseFloat(this.props.totalRongsok).toFixed(3)\r\n    );\r\n  }\r\n  setRongsok() {\r\n    this.props.change(\r\n      \"rongsokBruto\",\r\n      parseFloat(this.props.totalBrutoRongsok).toFixed(3)\r\n    );\r\n    this.props.change(\r\n      \"rongsokNetto\",\r\n      parseFloat(this.props.totalRongsok).toFixed(3)\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-6\">\r\n        <div id=\"accordion\" className=\"custom-accordion mb-4\">\r\n          <div className=\"card mb-0 bg-dark\">\r\n            <div className=\"card-header\" id=\"headingOne\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-8 col-md-8\">\r\n                  <h5 className=\"m-0\">\r\n                    <a\r\n                      className=\"custom-accordion-title d-block pt-2 pb-2 text-white\"\r\n                      data-toggle=\"collapse\"\r\n                      href=\"#collapseRongsok\"\r\n                      aria-expanded=\"true\"\r\n                      aria-controls=\"collapseRongsok\"\r\n                    >\r\n                      Rongsok\r\n                      <span className=\"float-right\">\r\n                        <i className=\"mdi mdi-chevron-down accordion-arrow\" />\r\n                      </span>\r\n                    </a>\r\n                  </h5>\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <label htmlFor=\"\" style={{ color: \"white\" }}>\r\n                    Netto\r\n                  </label>\r\n                  <Field\r\n                    name=\"rongsokNetto\"\r\n                    type=\"number\"\r\n                    component=\"input\"\r\n                    className=\"form-control\"\r\n                    readOnly={true}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              id=\"collapseRongsok\"\r\n              className=\"collapse\"\r\n              aria-labelledby=\"headingOne\"\r\n              data-parent=\"#accordion\"\r\n            >\r\n              <div className=\"card-body bg-white\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-2\">\r\n                    <label htmlFor=\"\">.</label>\r\n                    <button\r\n                      className=\"btn btn-primary btn-block\"\r\n                      type=\"button\"\r\n                      data-target=\"#rongsokModal\"\r\n                      data-toggle=\"modal\"\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"col-lg-5 col-md-5\">\r\n                    <Field\r\n                      name=\"rongsokBruto\"\r\n                      label=\"Brutto\"\r\n                      type=\"number\"\r\n                      component={renderField}\r\n                      readOnly={true}\r\n                      onBlur={this.setRongsok()}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-lg-5 col-md-5\">\r\n                    <Field\r\n                      name=\"rongsokNetto\"\r\n                      label=\"Netto\"\r\n                      type=\"number\"\r\n                      component={renderField}\r\n                      readOnly={true}\r\n                      onBlur={this.setRongsok()}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>{\" \"}\r\n          {/* end card*/}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAccordRongsok = reduxForm({\r\n  form: \"AccordRongsok\",\r\n  enableReinitialize: true,\r\n})(AccordRongsok);\r\nconst selector = formValueSelector(\"AccordRongsok\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { harga, cash } = selector(state, \"harga\", \"cash\");\r\n  return {\r\n    cashNetto: (parseFloat(cash) / parseFloat(harga)).toFixed(3),\r\n  };\r\n})(AccordRongsok);\r\n","import React, { Component } from \"react\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\n\r\nclass AccordCashMurni extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {\r\n    var cash = 0,\r\n      harga = 0,\r\n      netto = 0;\r\n    var local = JSON.parse(localStorage.getItem(\"alatBayarTunaiRp\"))\r\n      ? JSON.parse(localStorage.getItem(\"alatBayarTunaiRp\"))\r\n      : \"kosong\";\r\n    if (local === \"kosong\") {\r\n      cash = 0;\r\n      harga = 0;\r\n      netto = 0;\r\n    } else {\r\n      cash = local[0].tunaiRp;\r\n      harga = local[0].tunaiKurs;\r\n      netto = local[0].tunaiKurs;\r\n    }\r\n    this.props.change(\"cash\", cash);\r\n    this.props.change(\"harga\", harga);\r\n    this.props.change(\"cashNetto\", netto);\r\n  }\r\n\r\n  onChange() {\r\n    this.props.change(\"cashNetto\", this.props.cashNettoMurni);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-6 mt-3\">\r\n        <div id=\"accordion\" className=\"custom-accordion mb-4\">\r\n          <div className=\"card mb-0 bg-dark\">\r\n            <div className=\"card-header \" id=\"headingOne\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-8\">\r\n                  <h5 className=\"m-0\">\r\n                    <a\r\n                      className=\"custom-accordion-title d-block pt-2 pb-2 text-white\"\r\n                      data-toggle=\"collapse\"\r\n                      href=\"#collapseCash\"\r\n                      aria-expanded=\"true\"\r\n                      aria-controls=\"collapseCash\"\r\n                    >\r\n                      Cash\r\n                    </a>\r\n                  </h5>\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <label htmlFor=\"\" style={{ color: \"white\" }}>\r\n                    Netto\r\n                  </label>\r\n                  <Field\r\n                    name=\"cashNetto\"\r\n                    type=\"telp\"\r\n                    component=\"input\"\r\n                    className=\"form-control\"\r\n                    readOnly={true}\r\n                    {...currencyMask}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              id=\"collapseCash\"\r\n              className=\"collapse\"\r\n              aria-labelledby=\"headingOne\"\r\n              data-parent=\"#accordion\"\r\n            >\r\n              <div className=\"card-body bg-white\">\r\n                <form onSubmit={this.props.handleSubmit}>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <label htmlFor=\"\">Cash</label>\r\n                      <Field\r\n                        name=\"cash\"\r\n                        component=\"input\"\r\n                        type=\"tel\"\r\n                        className=\"form-control\"\r\n                        onBlur={this.onChange()}\r\n                        {...currencyMask}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <label htmlFor=\"\">Harga </label>\r\n                      <div className=\"form-gorup\">\r\n                        <Field\r\n                          name=\"harga\"\r\n                          component=\"input\"\r\n                          type=\"tel\"\r\n                          className=\"form-control\"\r\n                          onBlur={this.onChange()}\r\n                          readOnly={true}\r\n                          {...currencyMask}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <Field\r\n                        name=\"cashNetto\"\r\n                        label=\"Netto\"\r\n                        type=\"telp\"\r\n                        component={renderField}\r\n                        readOnly={true}\r\n                        {...currencyMask}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <div className=\"text-right\">\r\n                        <button type=\"submit\" className=\"btn btn-primary\">\r\n                          Simpan\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAccordCashMurni = reduxForm({\r\n  form: \"AccordCashMurni\",\r\n  enableReinitialize: true,\r\n})(AccordCashMurni);\r\nconst selector = formValueSelector(\"AccordCashMurni\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { harga, cash } = selector(state, \"harga\", \"cash\");\r\n  return {\r\n    cashNetto: (parseFloat(cash) / parseFloat(harga)).toFixed(3),\r\n    cashNettoMurni: parseFloat(cash),\r\n  };\r\n})(AccordCashMurni);\r\n","import React, { Component } from \"react\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport Axios from \"axios\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\n\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nclass AccordTransferMurni extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listBank: [],\r\n    };\r\n  }\r\n  onChange() {\r\n    this.props.change(\"transferNetto\", this.props.transferNettoMurni);\r\n  }\r\n  getlocal() {\r\n    var transfer = 0,\r\n      harga = 0,\r\n      netto = 0,\r\n      tujuan = \"\",\r\n      supplier = \"\",\r\n      tanggal = \"\";\r\n    var local = JSON.parse(localStorage.getItem(\"alatBayarTrfRp\"))\r\n      ? JSON.parse(localStorage.getItem(\"alatBayarTrfRp\"))\r\n      : \"kosong\";\r\n    if (local === \"kosong\") {\r\n      transfer = 0;\r\n      harga = 0;\r\n      netto = 0;\r\n      tujuan = \"\";\r\n      supplier = \"\";\r\n      tanggal = \"\";\r\n    } else {\r\n      transfer = local[0].transferRp;\r\n      harga = local[0].transferKurs;\r\n      netto = local[0].transferKurs;\r\n      tujuan = local[0].accTo;\r\n      supplier = local[0].accFrom;\r\n      tanggal = local[0].transferTanggalJanji;\r\n    }\r\n    this.props.change(\"transfer\", transfer);\r\n    this.props.change(\"harga\", harga);\r\n    this.props.change(\"transferNetto\", netto);\r\n    this.props.change(\"tanggal\", tanggal);\r\n    this.props.change(\"tujuan\", tujuan);\r\n    this.props.change(\"supplier\", supplier);\r\n  }\r\n\r\n  componentDidMount() {\r\n    Axios.get(server + \"banks\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listBank: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err))\r\n      .then(() => this.getlocal());\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-6 mt-3\">\r\n        <div id=\"accordion\" className=\"custom-accordion mb-4\">\r\n          <div className=\"card mb-0 bg-dark\">\r\n            <div className=\"card-header\" id=\"headingOne\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-8 col-md-8\">\r\n                  <h5 className=\"m-0\">\r\n                    <a\r\n                      className=\"custom-accordion-title d-block pt-2 pb-2 text-white\"\r\n                      data-toggle=\"collapse\"\r\n                      href=\"#collapseTransfer\"\r\n                      aria-expanded=\"true\"\r\n                      aria-controls=\"collapseTransfer\"\r\n                    >\r\n                      Transfer\r\n                      <span className=\"float-right\">\r\n                        <i className=\"mdi mdi-chevron-down accordion-arrow\" />\r\n                      </span>\r\n                    </a>\r\n                  </h5>\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <label htmlFor=\"\" style={{ color: \"white\" }}>\r\n                    Netto\r\n                  </label>\r\n                  <Field\r\n                    name=\"transferNetto\"\r\n                    type=\"telp\"\r\n                    component=\"input\"\r\n                    className=\"form-control\"\r\n                    readOnly={true}\r\n                    {...currencyMask}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              id=\"collapseTransfer\"\r\n              className=\"collapse\"\r\n              aria-labelledby=\"headingOne\"\r\n              data-parent=\"#accordion\"\r\n            >\r\n              <div className=\"card-body bg-white\">\r\n                <form onSubmit={this.props.handleSubmit}>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <label htmlFor=\"\">Transfer</label>\r\n                      <Field\r\n                        name=\"transfer\"\r\n                        component=\"input\"\r\n                        type=\"tel\"\r\n                        className=\"form-control\"\r\n                        onBlur={this.onChange()}\r\n                        {...currencyMask}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <label htmlFor=\"\">Harga </label>\r\n                      <div className=\"form-gorup\">\r\n                        <Field\r\n                          name=\"harga\"\r\n                          component=\"input\"\r\n                          type=\"tel\"\r\n                          className=\"form-control\"\r\n                          onBlur={this.onChange()}\r\n                          readOnly={true}\r\n                          {...currencyMask}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <label htmlFor=\"\">Netto </label>\r\n                      <Field\r\n                        name=\"transferNetto\"\r\n                        label=\"Netto\"\r\n                        type=\"tel\"\r\n                        className=\"form-control\"\r\n                        component=\"input\"\r\n                        readOnly={true}\r\n                        {...currencyMask}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-6 col-lg-6\">\r\n                      <Field\r\n                        name=\"tujuan\"\r\n                        label=\"A/C Tujuan\"\r\n                        type=\"text\"\r\n                        component={renderField}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-6 col-lg-6\">\r\n                      <label htmlFor=\"\">A/C Asal</label>\r\n                      <Field\r\n                        name=\"kodeBank\"\r\n                        className=\"form-control\"\r\n                        component=\"select\"\r\n                      >\r\n                        <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                          silahkan pilih\r\n                        </option>\r\n                        {this.state.listBank.map((list) => (\r\n                          <option value={list.noRekening} key={list.noRekening}>\r\n                            {list.atasNama}\r\n                          </option>\r\n                        ))}\r\n                      </Field>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-lg-6\">\r\n                      <Field\r\n                        name=\"tanggal\"\r\n                        label=\"Tanggal\"\r\n                        type=\"date\"\r\n                        component={renderField}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <div className=\"text-right\">\r\n                        <button className=\"btn btn-primary\" type=\"submit\">\r\n                          Simpan\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* end card*/}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAccordTransferMurni = reduxForm({\r\n  form: \"AccordTransferMurni\",\r\n  enableReinitialize: true,\r\n})(AccordTransferMurni);\r\nconst selector = formValueSelector(\"AccordTransferMurni\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { harga, transfer } = selector(state, \"harga\", \"transfer\");\r\n  return {\r\n    transferNetto: (parseFloat(transfer) / parseFloat(harga)).toFixed(3),\r\n    transferNettoMurni: parseFloat(transfer),\r\n  };\r\n})(AccordTransferMurni);\r\n","import React, { Component } from \"react\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport Axios from \"axios\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\n\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nclass AccordTrannsfer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listBank: [],\r\n    };\r\n  }\r\n  onChange() {\r\n    this.props.change(\"cashNetto\", this.props.cashNetto);\r\n    this.props.change(\"transferNetto\", this.props.transferNetto);\r\n  }\r\n  getlocal() {\r\n    var transfer = 0,\r\n      harga = 0,\r\n      netto = 0,\r\n      tujuan = \"\",\r\n      supplier = \"\",\r\n      tanggal = \"\";\r\n    var local = JSON.parse(localStorage.getItem(\"alatBayarTrf\"))\r\n      ? JSON.parse(localStorage.getItem(\"alatBayarTrf\"))\r\n      : \"kosong\";\r\n    if (local === \"kosong\") {\r\n      transfer = 0;\r\n      harga = 0;\r\n      netto = 0;\r\n      tujuan = \"\";\r\n      supplier = \"\";\r\n      tanggal = \"\";\r\n    } else {\r\n      transfer = local[0].transferRp;\r\n      harga = local[0].transferKurs;\r\n      netto = local[0].transferNetto;\r\n      tujuan = local[0].accTo;\r\n      supplier = local[0].accFrom;\r\n      tanggal = local[0].transferTanggalJanji;\r\n    }\r\n    this.props.change(\"transfer\", transfer);\r\n    this.props.change(\"harga\", harga);\r\n    this.props.change(\"transferNetto\", netto);\r\n    this.props.change(\"tanggal\", tanggal);\r\n    this.props.change(\"tujuan\", tujuan);\r\n    this.props.change(\"supplier\", supplier);\r\n  }\r\n\r\n  componentDidMount() {\r\n    Axios.get(server + \"banks\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listBank: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err))\r\n      .then(() => this.getlocal());\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-6 mt-3\">\r\n        <div id=\"accordion\" className=\"custom-accordion mb-4\">\r\n          <div className=\"card mb-0 bg-dark\">\r\n            <div className=\"card-header\" id=\"headingOne\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-8 col-md-8\">\r\n                  <h5 className=\"m-0\">\r\n                    <a\r\n                      className=\"custom-accordion-title d-block pt-2 pb-2 text-white\"\r\n                      data-toggle=\"collapse\"\r\n                      href=\"#collapseTransfer\"\r\n                      aria-expanded=\"true\"\r\n                      aria-controls=\"collapseTransfer\"\r\n                    >\r\n                      Transfer\r\n                      <span className=\"float-right\">\r\n                        <i className=\"mdi mdi-chevron-down accordion-arrow\" />\r\n                      </span>\r\n                    </a>\r\n                  </h5>\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <label htmlFor=\"\" style={{ color: \"white\" }}>\r\n                    Netto\r\n                  </label>\r\n                  <Field\r\n                    name=\"transferNetto\"\r\n                    type=\"number\"\r\n                    component=\"input\"\r\n                    className=\"form-control\"\r\n                    readOnly={true}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              id=\"collapseTransfer\"\r\n              className=\"collapse\"\r\n              aria-labelledby=\"headingOne\"\r\n              data-parent=\"#accordion\"\r\n            >\r\n              <div className=\"card-body bg-white\">\r\n                <form onSubmit={this.props.handleSubmit}>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <label htmlFor=\"\">Transfer</label>\r\n                      <Field\r\n                        name=\"transfer\"\r\n                        component=\"input\"\r\n                        type=\"tel\"\r\n                        className=\"form-control\"\r\n                        onBlur={this.onChange()}\r\n                        {...currencyMask}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <label htmlFor=\"\">Harga </label>\r\n                      <div className=\"form-gorup\">\r\n                        <Field\r\n                          name=\"harga\"\r\n                          component=\"input\"\r\n                          type=\"tel\"\r\n                          className=\"form-control\"\r\n                          onBlur={this.onChange()}\r\n                          {...currencyMask}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <Field\r\n                        name=\"transferNetto\"\r\n                        label=\"Netto\"\r\n                        type=\"number\"\r\n                        component={renderField}\r\n                        readOnly={true}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-6 col-lg-6\">\r\n                      <Field\r\n                        name=\"tujuan\"\r\n                        label=\"A/C Tujuan\"\r\n                        type=\"text\"\r\n                        component={renderField}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-6 col-lg-6\">\r\n                      <label htmlFor=\"\">A/C Asal</label>\r\n                      <Field\r\n                        name=\"supplier\"\r\n                        className=\"form-control\"\r\n                        component=\"select\"\r\n                      >\r\n                        <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                          silahkan pilih\r\n                        </option>\r\n                        {this.state.listBank.map((list) => (\r\n                          <option value={list.noRekening} key={list.noRekening}>\r\n                            {list.atasNama}\r\n                          </option>\r\n                        ))}\r\n                      </Field>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-lg-6\">\r\n                      <Field\r\n                        name=\"tanggal\"\r\n                        label=\"Tanggal\"\r\n                        type=\"date\"\r\n                        component={renderField}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <div className=\"text-right\">\r\n                        <button className=\"btn btn-primary\" type=\"submit\">\r\n                          Simpan\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* end card*/}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAccordTrannsfer = reduxForm({\r\n  form: \"AccordTrannsfer\",\r\n  enableReinitialize: true,\r\n})(AccordTrannsfer);\r\nconst selector = formValueSelector(\"AccordTrannsfer\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { harga, transfer } = selector(state, \"harga\", \"transfer\");\r\n  return {\r\n    transferNetto: (parseFloat(transfer) / parseFloat(harga)).toFixed(3),\r\n  };\r\n})(AccordTrannsfer);\r\n","const validasiCash = (value) => {\r\n  const errors = {};\r\n  if (!value.cash) {\r\n    errors.cash = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.harga) {\r\n    errors.harga = \"Tidak Boleh kosong\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default validasiCash;\r\n","import React, { Component } from \"react\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport validasiCash from \"../../Validations/validasiCash\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\n\r\nclass AccordCash extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {\r\n    var cash = 0,\r\n      harga = 0,\r\n      netto = 0;\r\n    var local = JSON.parse(localStorage.getItem(\"alatBayarTunai\"))\r\n      ? JSON.parse(localStorage.getItem(\"alatBayarTunai\"))\r\n      : \"kosong\";\r\n    if (local === \"kosong\") {\r\n      cash = 0;\r\n      harga = 0;\r\n      netto = 0;\r\n    } else {\r\n      cash = local[0].tunaiRp;\r\n      harga = local[0].tunaiKurs;\r\n      netto =\r\n        this.props.type === \"murni\" ? local[0].tunaiKurs : local[0].tunaiNetto;\r\n    }\r\n    this.props.change(\"cash\", cash);\r\n    this.props.change(\"harga\", harga);\r\n    this.props.change(\"cashNetto\", netto);\r\n  }\r\n\r\n  onChange() {\r\n    this.props.change(\r\n      \"cashNetto\",\r\n      this.props.type === \"murni\"\r\n        ? this.props.cashNettoMurni\r\n        : this.props.cashNetto\r\n    );\r\n    this.props.change(\"transferNetto\", this.props.transferNetto);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-6 mt-3\">\r\n        <div id=\"accordion\" className=\"custom-accordion mb-4\">\r\n          <div className=\"card mb-0 bg-dark\">\r\n            <div className=\"card-header \" id=\"headingOne\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-8\">\r\n                  <h5 className=\"m-0\">\r\n                    <a\r\n                      className=\"custom-accordion-title d-block pt-2 pb-2 text-white\"\r\n                      data-toggle=\"collapse\"\r\n                      href=\"#collapseCash\"\r\n                      aria-expanded=\"true\"\r\n                      aria-controls=\"collapseCash\"\r\n                    >\r\n                      Cash\r\n                    </a>\r\n                  </h5>\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <label htmlFor=\"\" style={{ color: \"white\" }}>\r\n                    Netto\r\n                  </label>\r\n                  <Field\r\n                    name=\"cashNetto\"\r\n                    type=\"number\"\r\n                    component=\"input\"\r\n                    className=\"form-control\"\r\n                    readOnly={true}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              id=\"collapseCash\"\r\n              className=\"collapse\"\r\n              aria-labelledby=\"headingOne\"\r\n              data-parent=\"#accordion\"\r\n            >\r\n              <div className=\"card-body bg-white\">\r\n                <form onSubmit={this.props.handleSubmit}>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <label htmlFor=\"\">Cash</label>\r\n                      <Field\r\n                        name=\"cash\"\r\n                        component=\"input\"\r\n                        type=\"tel\"\r\n                        className=\"form-control\"\r\n                        onBlur={this.onChange()}\r\n                        {...currencyMask}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <label htmlFor=\"\">Harga </label>\r\n                      <div className=\"form-gorup\">\r\n                        <Field\r\n                          name=\"harga\"\r\n                          component=\"input\"\r\n                          type=\"tel\"\r\n                          className=\"form-control\"\r\n                          onBlur={this.onChange()}\r\n                          {...currencyMask}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <Field\r\n                        name=\"cashNetto\"\r\n                        label=\"Netto\"\r\n                        type=\"number\"\r\n                        component={renderField}\r\n                        readOnly={true}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <div className=\"text-right\">\r\n                        <button type=\"submit\" className=\"btn btn-primary\">\r\n                          Simpan\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAccordCash = reduxForm({\r\n  form: \"AccordCash\",\r\n  enableReinitialize: true,\r\n  validate: validasiCash,\r\n})(AccordCash);\r\nconst selector = formValueSelector(\"AccordCash\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { harga, cash } = selector(state, \"harga\", \"cash\");\r\n  return {\r\n    cashNetto: (parseFloat(cash) / parseFloat(harga)).toFixed(3),\r\n    cashNettoMurni: parseFloat(cash),\r\n  };\r\n})(AccordCash);\r\n"],"sourceRoot":""}