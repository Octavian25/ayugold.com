{"version":3,"sources":["Transaksi/TerimaSupplier.jsx","../node_modules/redux-form/es/index.js","HeaderCard.jsx","Stocking/Component/PrintNota.jsx","deleteLocalStorage.js"],"names":["FormTerimaSupplier","lazy","ModalMasterData","TerimaSupplier","props","inputChange","input","e","setState","target","value","localStorage","setItem","date","Date","formatedDate","getFullYear","getMonth","getDate","state","listSupplier","onDelete","columns","dataField","text","footerClasses","formatter","cell","parseFloat","toLocaleString","csvExport","rowContent","row","rowIndex","className","data-tip","data-for","onClick","deleteIndexUpdatetotalNW","dispatch","getTerimaSupplierTemp","then","barang","JSON","parse","getItem","map","list","netto","reduce","a","b","toFixed","totalNW","id","type","effect","tanggal_invoice","tanggal_barang","noBon","totalBruto","totalPkg","totalGross","totalOngkir","kodeSupplier","namaSupplier","keterangan","startingDate","tampungBarang","tampungBarangLocal","urutan","this","getsupplierList","AxiosMasterGet","res","data","catch","err","alert","getUUID","getSumData","result_explode","split","kodeJenis","isi","no_urut","kode_jenis","toUpperCase","kadar_cetak","kadar_beli","kadarTransaksi","kode_barcode","qty","k","plastik","p","kulit","pkg","gross","bruto","ongkos_rp","rp","push","stringify","Swal","fire","position","icon","showConfirmButton","timer","reset","getNetto","getBruto","getRp","getPkg","getQty","warning","tanggalBarang","tanggal","simpan","no_terima","noFaktur","no_bon","kode_supplier","total_netto","sumNetto","total_netto_ext","detail_barang","console","log","tableRows","table","forEach","ticket","i","ticketData","footer","columTable","AxiosMasterPost","removeItem","PrintNota","document","getElementById","style","color","title","htmlFor","name","options","kode","nama_supplier","search","onChange","pilihSupplier","width","height","step","min","content","fallback","from","onSubmit","handleSubmit","showModal","keyField","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","noDataIndication","kirimData","Component","connect","supplierList","provinsi","supplier","terimaSupplierTemp","username","error","sumBruto","perhitungan","sumRp","sumPkg","sumQty","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","change","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors","HeaderCard","fontSize","backgroundColor","borderTopLeftRadius","borderTopRightRadius","row1name","row1isi","row2name","row2isi","row3name","row3isi","row4name","row4isi","validby","tableColumn","doc","jsPDF","autoTable","startY","finalY","lastAutoTable","setFontSize","string","output","embed","x","window","open","write","close","deleteLocalStorage","keyRemove","deleteIndex","nama","index","func","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","array","splice","Promise","resolve","reject"],"mappings":"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","file":"static/js/76.419e7712.chunk.js","sourcesContent":["import React, { Component, lazy, Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getsupplierList } from \"../actions/supplierAction\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { reset } from \"redux-form\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getTerimaSupplierTemp } from \"../actions/terimaSupplierAction\";\r\nimport { warning } from \"../Alert\";\r\nimport PrintNota from \"../Stocking/Component/PrintNota\";\r\n// import { Link } from \"react-router-dom\";\r\nimport {\r\n  getBruto,\r\n  getNetto,\r\n  getPkg,\r\n  getQty,\r\n  getRp,\r\n} from \"../actions/LogicAction\";\r\nimport { deleteIndexUpdatetotalNW } from \"../deleteLocalStorage\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport SelectSearch from \"react-select-search\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { showModal } from \"../actions/ModalAction\";\r\nimport {\r\n  AxiosMasterGet,\r\n  AxiosMasterPost,\r\n  AxiosTransactionPost,\r\n} from \"../Axios\";\r\nimport HeaderCard from \"../HeaderCard\";\r\n\r\nconst FormTerimaSupplier = lazy(() => import(\"./Component/FormTerimaSupplier\"));\r\nconst ModalMasterData = lazy(() =>\r\n  import(\"../DataMaster/Component/ModalMasterData\")\r\n);\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    supplierList: state.provinsi.supplier,\r\n    tampungBarang: state.provinsi.terimaSupplierTemp,\r\n    noFaktur: state.provinsi.noFaktur,\r\n    username: state.provinsi.username,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n    totalNW: state.provinsi.totalNW,\r\n    sumBruto: state.perhitungan.sumBruto,\r\n    sumNetto: state.perhitungan.sumNetto,\r\n    sumRp: state.perhitungan.sumRp,\r\n    sumPkg: state.perhitungan.sumPkg,\r\n    sumQty: state.perhitungan.sumQty,\r\n  };\r\n};\r\n\r\nclass TerimaSupplier extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var date = new Date();\r\n    var formatedDate = `${date.getFullYear()}-${\r\n      date.getMonth() + 1\r\n    }-${date.getDate()}`;\r\n    this.state = {\r\n      listSupplier: [],\r\n      onDelete: false,\r\n      columns: [\r\n        {\r\n          dataField: \"kode_jenis\",\r\n          text: \"Kode Barang\",\r\n        },\r\n        {\r\n          dataField: \"kadar_cetak\",\r\n          text: \"Kadar Cetak(%)\",\r\n        },\r\n        {\r\n          dataField: \"plastik\",\r\n          text: \"P\",\r\n        },\r\n        {\r\n          dataField: \"kulit\",\r\n          text: \"K\",\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Bungkus(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Berat(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"kadar_beli\",\r\n          text: \"Harga(%)\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Murni(Gr)\",\r\n          footerClasses: \"sum-netto-terima-supplier\",\r\n        },\r\n        {\r\n          dataField: \"ongkos_rp\",\r\n          text: \"Ongkos(RP)\",\r\n          formatter: (cell) => (\r\n            <span>Rp. {parseFloat(cell).toLocaleString(\"ID-id\")}</span>\r\n          ),\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row, rowIndex) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  data-tip\r\n                  data-for=\"hapus\"\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() =>\r\n                    deleteIndexUpdatetotalNW(\r\n                      \"TerimaSupplier\",\r\n                      rowIndex,\r\n                      this.props.dispatch,\r\n                      getTerimaSupplierTemp()\r\n                    )\r\n                      .then(() => {\r\n                        var barang =\r\n                          JSON.parse(localStorage.getItem(\"TerimaSupplier\")) ||\r\n                          [];\r\n                        localStorage.setItem(\r\n                          \"totalNW\",\r\n                          barang\r\n                            .map((list) => list.netto)\r\n                            .reduce((a, b) => a + b, 0)\r\n                            .toFixed(3)\r\n                        );\r\n                      })\r\n                      .then(() =>\r\n                        this.setState({\r\n                          totalNW: localStorage.getItem(\"totalNW\") || 0,\r\n                        })\r\n                      )\r\n                  }\r\n                >\r\n                  <ReactTooltip id=\"hapus\" type=\"dark\" effect=\"solid\">\r\n                    <span>Hapus</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                </button>\r\n                <br />\r\n                {/* <button\r\n                  data-tip\r\n                  data-for=\"edit\"\r\n                  className=\"btn btn-warning mr-2\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#editModal\"\r\n                  onClick={() => this.setEdit(row)}\r\n                >\r\n                  <ReactTooltip id=\"edit\" type=\"dark\" effect=\"solid\">\r\n                    <span>Edit</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-edit mr-1\"></i>\r\n                </button> */}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      tanggal_invoice: formatedDate,\r\n      tanggal_barang: formatedDate,\r\n      noBon: \"\",\r\n      totalNW: localStorage.getItem(\"totalNW\") || 0,\r\n      totalBruto: 0,\r\n      totalPkg: 0,\r\n      totalGross: 0,\r\n      totalOngkir: 0,\r\n      kodeSupplier: \"\",\r\n      namaSupplier: \"\",\r\n      keterangan: \"\",\r\n      startingDate: formatedDate,\r\n      tampungBarang: [],\r\n      tampungBarangLocal: [],\r\n      urutan: localStorage.getItem(\"urutan\") || 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getsupplierList());\r\n    AxiosMasterGet(\"supplier/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listSupplier: res.data,\r\n        })\r\n      )\r\n      .catch((err) => alert(err));\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getTerimaSupplierTemp());\r\n    this.getSumData();\r\n  }\r\n\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n    localStorage.setItem([input], e.target.value);\r\n  };\r\n\r\n  pilihSupplier(data) {\r\n    var supp = data ? data : \"DEFALT | DEFAULT\";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeSupplier: result_explode[0],\r\n      namaSupplier: result_explode[1],\r\n    });\r\n    localStorage.setItem(\"namaSupplier\", result_explode[0]);\r\n    localStorage.setItem(\"kodeSupplier\", result_explode[1]);\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    var barang = JSON.parse(localStorage.getItem(\"TerimaSupplier\")) || [];\r\n    var jenis = data.kodeJenis ? data.kodeJenis : \"DEFALT | DEFAULT\";\r\n    var result_explode = jenis.split(\"|\");\r\n    let isi = {\r\n      no_urut: 1,\r\n      kode_jenis: result_explode[0],\r\n      keterangan: data.keterangan.toUpperCase(),\r\n      kadar_cetak: result_explode[2],\r\n      kadar_beli: parseFloat(data.kadarTransaksi),\r\n      kode_barcode: \"-\",\r\n      qty: parseFloat(data.k),\r\n      plastik: parseFloat(data.p),\r\n      kulit: 0,\r\n      pkg: parseFloat(data.pkg),\r\n      gross: parseFloat(data.gross),\r\n      bruto: parseFloat(data.bruto),\r\n      netto: parseFloat(data.netto),\r\n      ongkos_rp: parseFloat(data.rp || 0),\r\n    };\r\n    barang.push(isi);\r\n    localStorage.setItem(\"TerimaSupplier\", JSON.stringify(barang));\r\n    localStorage.setItem(\r\n      \"totalNW\",\r\n      barang\r\n        .map((list) => list.netto)\r\n        .reduce((a, b) => a + b, 0)\r\n        .toFixed(3)\r\n    );\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      text: \"Transaksi Berhasil\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    })\r\n      .then(() => this.props.dispatch(reset(\"TerimaSupplier\")))\r\n      .then(() => this.getSumData())\r\n      .then(() => this.props.dispatch(getTerimaSupplierTemp()))\r\n      .then(() =>\r\n        this.setState({\r\n          totalNW: localStorage.getItem(\"totalNW\") || 0,\r\n        })\r\n      );\r\n  }\r\n  getSumData() {\r\n    this.props.dispatch(getNetto(\"TerimaSupplier\"));\r\n    this.props.dispatch(getBruto(\"TerimaSupplier\"));\r\n    this.props.dispatch(getRp(\"TerimaSupplier\"));\r\n    this.props.dispatch(getPkg(\"TerimaSupplier\"));\r\n    this.props.dispatch(getQty(\"TerimaSupplier\"));\r\n  }\r\n  kirimData() {\r\n    var jenis = this.state.kodeSupplier\r\n      ? this.state.kodeSupplier\r\n      : \"DEFALT | DEFAULT\";\r\n    var result_explode = jenis.split(\"|\");\r\n    if (this.state.kodeSupplier === \"\") {\r\n      warning(\"Mohon pilih Supplier\");\r\n      return false;\r\n    } else if (this.state.keterangan === \"\") {\r\n      warning(\"Mohon isi Keterangan\");\r\n      return false;\r\n    } else if (this.state.noBon === \"\") {\r\n      warning(\"Mohon Isi nomor Bon\");\r\n      return false;\r\n    } else if (localStorage.getItem(\"TerimaSupplier\") === null) {\r\n      warning(\"Barang masih kosong, mohon tambahkan barang\");\r\n      return false;\r\n    } else if (this.state.tanggalBarang === \"\") {\r\n      warning(\"Mohon isi Tanggal\");\r\n      return false;\r\n    } else if (this.state.tanggal === \"\") {\r\n      warning(\"Mohon isi Tanggal Invoice\");\r\n      return false;\r\n    }\r\n    var simpan = {\r\n      //\r\n      no_terima: this.props.noFaktur.toUpperCase(),\r\n      no_bon: this.props.noFaktur.toUpperCase(),\r\n      kode_supplier: result_explode[0],\r\n      total_netto: this.props.sumNetto,\r\n      total_netto_ext: localStorage.getItem(\"totalNW\"),\r\n      tanggal_invoice: this.state.tanggal,\r\n      tanggal_barang: this.state.tanggalBarang,\r\n      detail_barang: JSON.parse(localStorage.getItem(\"TerimaSupplier\")),\r\n    };\r\n    console.log(JSON.stringify(simpan));\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    var table = JSON.parse(localStorage.getItem(\"TerimaSupplier\"));\r\n    // for each ticket pass all its data into an array\r\n    table.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        ++i,\r\n        ticket.kode_jenis,\r\n        ticket.kadar_cetak,\r\n        ticket.plastik,\r\n        ticket.kulit,\r\n        ticket.pkg,\r\n        ticket.bruto,\r\n        ticket.kadar_beli,\r\n        ticket.netto,\r\n        parseFloat(ticket.ongkos_rp).toLocaleString(\"id-ID\"),\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    const footer = [\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      table.map((list) => list.pkg).reduce((a, b) => a + b, 0),\r\n      table.map((list) => list.bruto).reduce((a, b) => a + b, 0),\r\n      \"\",\r\n      table\r\n        .map((list) => list.netto)\r\n        .reduce((a, b) => a + b, 0)\r\n        .toFixed(3),\r\n      table\r\n        .map((list) => list.ongkos_rp)\r\n        .reduce((a, b) => a + b, 0)\r\n        .toLocaleString(\"id-ID\"),\r\n    ];\r\n    tableRows.push(footer);\r\n    console.log(JSON.stringify(tableRows));\r\n    var columTable = [\r\n      \"No\",\r\n      \"Kode Barang\",\r\n      \"Kadar Cetak (%)\",\r\n      \"P\",\r\n      \"K\",\r\n      \"Bungkus(Gr)\",\r\n      \"Berat(Gr)\",\r\n      \"Harga(Gr)\",\r\n      \"Murni(Gr)\",\r\n      \"Ongkos(Rp)\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    AxiosMasterPost(\"trx-supplier/terima-barang\", simpan)\r\n      .then((res) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Data Berhasil Ditambahkan!\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() => this.props.dispatch(getTerimaSupplierTemp()))\r\n          .then(() => localStorage.removeItem(\"noFaktur\"))\r\n          .then(() =>\r\n            PrintNota(\r\n              \"no Terima\",\r\n              this.props.noFaktur.toUpperCase(),\r\n              \"Tanggal\",\r\n              this.state.tanggal_invoice,\r\n              \"No Bon\",\r\n              this.state.noBon.toUpperCase(),\r\n              \"Supplier\",\r\n              this.state.kodeSupplier.toUpperCase(),\r\n              \"ADMIN\",\r\n              this.state.tanggal,\r\n              \"\",\r\n              columTable,\r\n              \"Terima Barang Supplier\",\r\n              tableRows\r\n            )\r\n          )\r\n          .then(() => localStorage.removeItem(\"TerimaSupplier\"))\r\n          .then(() => localStorage.removeItem(\"noBon\"))\r\n          .then(() => localStorage.removeItem(\"tanggal\"))\r\n          .then(() => localStorage.removeItem(\"tanggalBarang\"))\r\n          .then(() => localStorage.removeItem(\"namaSupplier\"))\r\n          .then(() => localStorage.removeItem(\"kodeSupplier\"))\r\n          .then(() => localStorage.removeItem(\"keterangan\"))\r\n          .then(() => localStorage.removeItem(\"totalNW\"))\r\n          .then(() => localStorage.removeItem(\"noFaktur\"))\r\n          .then(() => localStorage.setItem(\"isLogin\", true))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() =>\r\n            this.setState({\r\n              noBon: \"\",\r\n              keterangan: \"\",\r\n              totalNW: \"\",\r\n              kodeSupplier: \"\",\r\n            })\r\n          )\r\n          .then(() => this.props.dispatch(getTerimaSupplierTemp()))\r\n          .then(() => document.getElementById(\"myForm\").reset())\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text: \"Data Gagal Ditambahkan\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n      );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Terima Barang Supplier\" />\r\n              <div className=\"card-body\">\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-9\"></div>\r\n                    <div className=\"col-lg-12\">\r\n                      <br />\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <form id=\"myForm\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-lg-4 col-md-4\">\r\n                            <label htmlFor=\"\">Supplier</label>\r\n\r\n                            {this.state.listSupplier ? (\r\n                              <SelectSearch\r\n                                name=\"supplier\"\r\n                                id=\"kodeSupplier\"\r\n                                options={this.state.listSupplier.map((kode) => {\r\n                                  let data = {\r\n                                    value:\r\n                                      kode.kode_supplier +\r\n                                      \"|\" +\r\n                                      kode.nama_supplier,\r\n                                    name: kode.nama_supplier,\r\n                                  };\r\n                                  return data;\r\n                                })}\r\n                                search\r\n                                onChange={(data) => this.pilihSupplier(data)}\r\n                              />\r\n                            ) : (\r\n                              <Skeleton width={\"100%\"} height={50} />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"col-md-4 col-lg-4\">\r\n                            <label htmlFor=\"\">Tanggal Invoice</label>\r\n                            <input\r\n                              type=\"date\"\r\n                              id=\"tanggal_invoice\"\r\n                              name=\"tanggal_invoice\"\r\n                              className=\"form-control\"\r\n                              onChange={this.inputChange(\"tanggal\")}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-md-4 col-lg-4\">\r\n                            <label htmlFor=\"\">Tanggal Barang</label>\r\n                            <input\r\n                              type=\"date\"\r\n                              id=\"tanggal_barang\"\r\n                              name=\"tanggal_barang\"\r\n                              className=\"form-control\"\r\n                              onChange={this.inputChange(\"tanggalBarang\")}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-4 mt-3\">\r\n                            <label htmlFor=\"\">Keterangan</label>\r\n                            <input\r\n                              type=\"text\"\r\n                              id=\"keterangan\"\r\n                              name=\"keterangan\"\r\n                              className=\"form-control\"\r\n                              onChange={this.inputChange(\"keterangan\")}\r\n                              value={localStorage.getItem(\"keterangan\") || \"\"}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-md-4 col-lg-4 mt-3\">\r\n                            <label htmlFor=\"\">No Bon</label>\r\n                            <input\r\n                              type=\"text\"\r\n                              id=\"noBon\"\r\n                              name=\"noBon\"\r\n                              className=\"form-control\"\r\n                              onChange={this.inputChange(\"noBon\")}\r\n                              value={localStorage.getItem(\"noBon\") || \"\"}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-md-4 col-lg-4 mt-3\">\r\n                            <label htmlFor=\"\">Total NW Ext</label>\r\n                            <input\r\n                              type=\"number\"\r\n                              step={0.001}\r\n                              min={0}\r\n                              id=\"totalNW\"\r\n                              name=\"totalNW\"\r\n                              className=\"form-control\"\r\n                              onChange={this.inputChange(\"totalNW\")}\r\n                              value={parseFloat(this.state.totalNW) || 0}\r\n                            />\r\n                          </div>\r\n                          <ModalMasterData\r\n                            content={\r\n                              <Suspense\r\n                                fallback={\r\n                                  <Skeleton width={\"100%\"} height={400} />\r\n                                }\r\n                              >\r\n                                <FormTerimaSupplier\r\n                                  from=\"terima\"\r\n                                  onSubmit={(data) => this.handleSubmit(data)}\r\n                                  noFaktur={this.props.noFaktur}\r\n                                />\r\n                              </Suspense>\r\n                            }\r\n                            title=\"Tambah Data Barang\"\r\n                          />\r\n\r\n                          <div className=\"col-md-12 col-lg-12 mt-3\">\r\n                            <div className=\"row\">\r\n                              <div className=\"col-lg-6\"></div>\r\n                              <div className=\"col-lg-6 col-md-6\">\r\n                                <div className=\"text-right\">\r\n                                  <button\r\n                                    className=\"btn btn-primary\"\r\n                                    type=\"button\"\r\n                                    onClick={() =>\r\n                                      this.props.dispatch(showModal())\r\n                                    }\r\n                                  >\r\n                                    Tambah Data\r\n                                    <i className=\"fa fa-plus ml-3\"></i>\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                  {this.props.tampungBarang ? (\r\n                    <ToolkitProvider\r\n                      keyField=\"kodeJenis\"\r\n                      data={this.props.tampungBarang}\r\n                      columns={this.state.columns}\r\n                      search\r\n                    >\r\n                      {(props) => (\r\n                        <div className=\"form-group mt-2\">\r\n                          <BootstrapTable\r\n                            {...props.baseProps}\r\n                            striped\r\n                            hover\r\n                            condensed\r\n                            bordered={true}\r\n                            headerClasses=\"header-table\"\r\n                            pagination={paginationFactory()}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </ToolkitProvider>\r\n                  ) : (\r\n                    <BootstrapTable\r\n                      keyField=\"kodeJenis\"\r\n                      data={[]}\r\n                      columns={this.state.columns}\r\n                      bordered={true}\r\n                      headerClasses=\"header-table\"\r\n                      noDataIndication=\"Tidak Ada Data\"\r\n                    />\r\n                  )}\r\n                  <div className=\"col-lg-12 col-md-12\">\r\n                    <div className=\"text-right\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        onClick={() => this.kirimData()}\r\n                      >\r\n                        Simpan\r\n                        <i className=\"fa fa-paper-plane ml-3\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(TerimaSupplier);\r\n","import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;","import React, { Component } from \"react\";\r\n\r\nclass HeaderCard extends Component {\r\n  render() {\r\n    return (\r\n      <h4\r\n        className=\"card-header mb-3\"\r\n        style={{\r\n          fontSize: 25,\r\n          backgroundColor: \"#394867\",\r\n          borderTopLeftRadius: 10,\r\n          borderTopRightRadius: 10,\r\n          height: 50,\r\n          color: \"#ffffff\",\r\n        }}\r\n      >\r\n        {this.props.title}\r\n      </h4>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderCard;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst PrintNota = (\r\n  row1name = \"\",\r\n  row1isi = \"\",\r\n  row2name = \"\",\r\n  row2isi = \"\",\r\n  row3name = \"\",\r\n  row3isi = \"\",\r\n  row4name = \"\",\r\n  row4isi = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n  validby = \"\",\r\n  tableColumn = [],\r\n  title = \"\",\r\n  tableRows\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  // var tickets = JSON.parse(data);\r\n  // define the columns we want and their titles\r\n\r\n  // // define an empty array of rows\r\n  // const tableRows = [];\r\n\r\n  // // for each ticket pass all its data into an array\r\n  // tickets.forEach((ticket, i) => {\r\n  //   const ticketData = [\r\n  //     i++,\r\n  //     ticket.kodeJenis01,\r\n  //     ticket.bruto01,\r\n  //     ticket.kadarTransaksi01,\r\n  //     ticket.netto01,\r\n  //     ticket.kodeJenis02,\r\n  //     ticket.bruto02,\r\n  //     ticket.kadarTransaksi02,\r\n  //     ticket.netto02,\r\n  //   ];\r\n  //   // push each tickcet's info into a row\r\n  //   tableRows.push(ticketData);\r\n  // });\r\n\r\n  // startY is basically margin-top\r\n  doc.autoTable(tableColumn, tableRows, { startY: 40 });\r\n  let finalY = doc.lastAutoTable.finalY + 10;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(title, 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(row1name, 14, 25);\r\n  doc.text(\":\", 37, 25);\r\n  doc.text(row1isi, 40, 25);\r\n  doc.text(row2name, 120, 25);\r\n  doc.text(\":\", 141, 25);\r\n  doc.text(row2isi, 145, 25);\r\n  //row 2\r\n  doc.text(row3name, 14, 30);\r\n  doc.text(\":\", 37, 30);\r\n  doc.text(row3isi, 40, 30);\r\n  doc.text(row4name, 120, 30);\r\n  doc.text(\":\", 141, 30);\r\n  doc.text(row4isi, 145, 30);\r\n\r\n  //Stamp\r\n  doc.text(\"User\", 160, finalY + 10);\r\n  doc.text(\":\", 168, finalY + 10);\r\n  doc.text(username, 170, finalY + 10);\r\n  doc.text(\"Cetak\", 160, finalY + 15);\r\n  doc.text(\":\", 168, finalY + 15);\r\n  doc.text(tanggal, 170, finalY + 15);\r\n  doc.text(\"Valid\", 160, finalY + 20);\r\n  doc.text(\":\", 168, finalY + 20);\r\n  doc.text(validby, 170, finalY + 20);\r\n  // doc.autoPrint();\r\n  // doc.save(`${title}_${dateStr}.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  x.document.close();\r\n};\r\n\r\nexport default PrintNota;\r\n","import Swal from \"sweetalert2\";\r\n\r\nexport const deleteLocalStorage = (keyRemove) => {\r\n  keyRemove.forEach((e) => {\r\n    localStorage.removeItem(e);\r\n  });\r\n};\r\n\r\nexport const deleteIndex = (nama, index, dispatch, func) => {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      const array = JSON.parse(localStorage.getItem(nama)) || [];\r\n      array.splice(index, 1);\r\n      localStorage.setItem(nama, JSON.stringify(array));\r\n      Swal.fire({\r\n        text: \"Berhasil\",\r\n        timer: 2000,\r\n        showConfirmButton: false,\r\n        position: \"top-right\",\r\n        icon: \"success\",\r\n      }).then(() => dispatch(func));\r\n    }\r\n  });\r\n};\r\nexport const deleteIndexUpdatetotalNW = (nama, index, dispatch, func) => {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      title: \"Anda Yakin ?\",\r\n      text: \"Anda Akan Menghapus Data Ini ?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        const array = JSON.parse(localStorage.getItem(nama)) || [];\r\n        array.splice(index, 1);\r\n        localStorage.setItem(nama, JSON.stringify(array));\r\n        Swal.fire({\r\n          text: \"Berhasil\",\r\n          timer: 2000,\r\n          showConfirmButton: false,\r\n          position: \"top-right\",\r\n          icon: \"success\",\r\n        })\r\n          .then(() => dispatch(func))\r\n          .then(resolve(\"Berhasil\"))\r\n          .catch(\"Gagal\");\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexport const deleteIndexUpdateNettoNW = (\r\n  nama,\r\n  index,\r\n  dispatch,\r\n  func,\r\n  nilai,\r\n  func2,\r\n  state\r\n) => {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      const array = JSON.parse(localStorage.getItem(nama)) || [];\r\n      array.splice(index, 1);\r\n      localStorage.setItem(nama, JSON.stringify(array));\r\n      var awal = localStorage.getItem(\"GrandTotalNetto\");\r\n      var hasil = parseFloat(awal) - parseFloat(nilai);\r\n      localStorage.setItem(\"GrandTotalNetto\", parseFloat(hasil).toFixed(3));\r\n      Swal.fire({\r\n        text: \"Berhasil\",\r\n        timer: 2000,\r\n        showConfirmButton: false,\r\n        position: \"top-right\",\r\n        icon: \"success\",\r\n      })\r\n        .then(() => dispatch(func))\r\n        .then(() => dispatch(func2));\r\n    }\r\n  });\r\n};\r\n"],"sourceRoot":""}