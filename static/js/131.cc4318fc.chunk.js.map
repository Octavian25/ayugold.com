{"version":3,"sources":["Transaksi/Component/CheckSupplier.jsx","Transaksi/BarcodeSupplier/UBS.js","Transaksi/BarcodeSupplier/INTERN.js","Transaksi/Component/FormPengambilanBarcode.jsx","Transaksi/PengambilanBarcode.jsx"],"names":["CheckSupplier","barcode","UBS","length","substr","console","log","substring","NW","parseFloat","PKG","GW","checkUBS","INTERN","awal","indexOf","checkINTERN","FormPengambilanBarcode","props","onclick1","bind","state","kodeBarang","DataSupplier","kode_barang","keterangan","kadar","P","K","bungkus","berat","harga","murni","ongkos","status","kadarCetak","kadarBeli","namaJenis","kodeJenis","AxiosMasterGet","then","res","setState","data","catch","err","getTimbangan","this","change","netto","noFaktur","pkg","result_explode","split","kadarJual","barang","localStorage","getItem","e","timeout","clearTimeout","setTimeout","akhir","target","value","document","getElementById","click","onSubmit","handleSubmit","className","Field","name","label","type","readOnly","component","renderField","defaultValue","normalize","toUpperCase","String","renderFieldSelect","options","map","list","kode_jenis","nama_jenis","kadar_cetak","kadar_jual","kadar_beli","onChange","pilihBarang","onBlur","setKadar","placeholder","undefined","getBarcode","id","disabled","submitting","Component","reduxForm","form","validate","validationTerimaSupplier","enableReinitialize","selector","formValueSelector","connect","bruto","kadarTransaksi","gross","toFixed","PengambilanBarcod","inputChange","input","jenisTransaksi","columns","dataField","text","footerClasses","csvExport","formatter","rowContent","row","index","data-tut","onClick","hapus_barcode","kode_supplier","kode_customer","kode_lokasi_asal","kode_lokasi_tujuan","jenisTransaksiSelected","tanggal","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","JSON","parse","splice","setItem","stringify","dispatch","getListDataPengambilanBarcode","getUUID","getcustomerList","getsupplierList","getLokasiPindah","removeItem","str","replace","paddingNumberGW","paddingNumberNW","simpan","kode_barcode","ongkos_rp","rp","array","push","position","showConfirmButton","timer","reset","warning","instansi","instansi2","local","qty","reduce","a","b","progressSend","no_barcode","jenis_trx","baki","total_qty","total_bruto","total_pkg","total_gross","total_netto","total_ongkos","detail_barang","AxiosMasterPost","berhasil","multipleDeleteLocal","finishSend","window","location","reload","gagal","response","style","color","HeaderCard","setJenisTransaksi","htmlFor","customer","nama_customer","search","supplier","nama_supplier","lokasi","kode_lokasi","nama_lokasi","GlobalTabel","keyField","pengambilanBarcode","textEmpty","pengambilanBarcodeSubmit","onSend","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","provinsi","dataLokasiPindah"],"mappings":"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","file":"static/js/131.cc4318fc.chunk.js","sourcesContent":["import { checkINTERN } from \"../BarcodeSupplier/INTERN\";\r\nimport { checkUBS } from \"../BarcodeSupplier/UBS\";\r\n\r\nexport const CheckSupplier = (barcode) => {\r\n  //   console.log(barcode);\r\n  let UBS = checkUBS(barcode);\r\n  let INTERN = checkINTERN(barcode);\r\n  if (UBS) {\r\n    return UBS;\r\n  } else if (INTERN) {\r\n    return INTERN;\r\n  }\r\n};\r\n","export const checkUBS = (barcode) => {\r\n  if (barcode.length === 22 && barcode.substr(0, 1) === \"0\") {\r\n    console.log(\"INI DI UBS\");\r\n    console.log(barcode.substring(14, 5));\r\n    let NW = parseFloat(barcode.substr(14, 4)) / 100;\r\n    let PKG = parseFloat(barcode.substr(18, 4)) / 100;\r\n    let GW = NW + PKG;\r\n\r\n    let data = {\r\n      NW: NW,\r\n      PKG: PKG,\r\n      GW: GW,\r\n    };\r\n    return data;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n","export const checkINTERN = (barcode) => {\r\n  let awal = barcode.indexOf(\"X\");\r\n  let akhir = barcode.length - 1;\r\n  let posisi = akhir - awal;\r\n  if (posisi === 12 && barcode.substr(1, 1) !== \"0\") {\r\n    console.log(barcode.substr(awal + 7, 5));\r\n    let GW = parseFloat(barcode.substr(awal + 1, 7)) / 100;\r\n    let PKG = parseFloat(barcode.substr(awal + 8, 5)) / 100;\r\n    let NW = GW - PKG;\r\n\r\n    let data = {\r\n      NW: NW,\r\n      PKG: PKG,\r\n      GW: GW,\r\n    };\r\n    return data;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Field, reduxForm, formValueSelector } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport validationTerimaSupplier from \"../../Validations/validationTerimaSupplier\";\r\nimport { getTimbangan } from \"../../GetTimbangan\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport { SkeletonLoading } from \"../../helper\";\r\nimport { CheckSupplier } from \"./CheckSupplier\";\r\n\r\nclass FormPengambilanBarcode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onclick1 = this.onclick1.bind(this);\r\n    this.state = {\r\n      kodeBarang: [],\r\n      DataSupplier: [],\r\n      kode_barang: \"\",\r\n      keterangan: \"INI KETERANGAN\",\r\n      kadar: \"\",\r\n      P: \"\",\r\n      K: \"\",\r\n      bungkus: \"\",\r\n      berat: \"\",\r\n      harga: \"\",\r\n      murni: \"\",\r\n      ongkos: \"\",\r\n      status: \"\",\r\n      kadarCetak: \"\",\r\n      kadarBeli: \"\",\r\n      namaJenis: \"\",\r\n      kodeJenis: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"jenis/get/by-kode-kelompok/PERHIASAN\")\r\n      .then((res) =>\r\n        this.setState({\r\n          kodeBarang: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    getTimbangan(this.props.change);\r\n  }\r\n\r\n  onclick1() {\r\n    this.props.change(\"netto\", this.props.netto);\r\n    this.props.change(\"noFaktur\", this.props.noFaktur);\r\n    this.props.change(\"pkg\", this.props.pkg);\r\n  }\r\n\r\n  pilihBarang(data) {\r\n    var supp = data ? data : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n      namaJenis: result_explode[1],\r\n      kadarCetak: result_explode[2],\r\n      kadarJual: result_explode[3],\r\n      kadarBeli: result_explode[4],\r\n      barang: \"terpilih\",\r\n    });\r\n  }\r\n\r\n  setKadar() {\r\n    this.props.change(\"keterangan\", this.state.namaJenis);\r\n    this.props.change(\"kadar\", this.state.kadarCetak);\r\n    if (\r\n      localStorage.getItem(\"jenisTransaksi\") === \"RETUR SUPPLIER\" ||\r\n      localStorage.getItem(\"jenisTransaksi\") === \"PENERIMAAN SUPPLIER\"\r\n    ) {\r\n      this.props.change(\"kadarTransaksi\", this.state.kadarBeli);\r\n    } else {\r\n      this.props.change(\"kadarTransaksi\", this.state.kadarJual);\r\n    }\r\n  }\r\n\r\n  async getBarcode(e) {\r\n    // Init a timeout variable to be used below\r\n    let timeout = null;\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(() => {\r\n      console.log(\"GET BAROCDE\");\r\n      let akhir = CheckSupplier(e.target.value);\r\n      if (akhir) {\r\n        console.log(`GW : ${akhir.GW} - NW : ${akhir.NW} - PKG : ${akhir.PKG}`);\r\n        this.props.change(\"bruto\", akhir.GW - akhir.PKG);\r\n        this.props.change(\"gross\", akhir.GW);\r\n        this.props.change(\"netto\", this.props.netto);\r\n        this.props.change(\"noFaktur\", this.props.noFaktur);\r\n        this.props.change(\"pkg\", this.props.pkg);\r\n      }\r\n      this.onclick1();\r\n      document.getElementById(\"simpan\").click();\r\n    }, 400);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 col-lg-12 d-none\">\r\n            <Field\r\n              name=\"noFaktur\"\r\n              label={this.props.noFaktur}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              component={renderField}\r\n              defaultValue={this.props.noFaktur}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 form-group\">\r\n            {String(this.state.kodeBarang) !== \"\" ? (\r\n              <Field\r\n                label=\"Kode Barang\"\r\n                name=\"kodeJenis\"\r\n                component={renderFieldSelect}\r\n                options={this.state.kodeBarang.map((list) => {\r\n                  let data = {\r\n                    value:\r\n                      list.kode_jenis +\r\n                      \"|\" +\r\n                      list.nama_jenis +\r\n                      \"|\" +\r\n                      list.kadar_cetak +\r\n                      \"|\" +\r\n                      list.kadar_jual +\r\n                      \"|\" +\r\n                      list.kadar_beli,\r\n                    name: list.nama_jenis,\r\n                  };\r\n                  return data;\r\n                })}\r\n                onChange={(data) => this.pilihBarang(data)}\r\n                onBlur={this.setKadar()}\r\n                placeholder=\"Silahkan Pilih\"\r\n              ></Field>\r\n            ) : (\r\n              <SkeletonLoading label=\"Kode Barang\" />\r\n            )}\r\n          </div>\r\n          {/* <div className=\"col-md-8 form-group\">\r\n            <Field\r\n              name=\"keterangan\"\r\n              label=\"Keterangan\"\r\n              type=\"text\"\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div> */}\r\n          <div className=\"col-lg-8\">\r\n            <Field\r\n              name=\"barcode\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              label=\"Barcode\"\r\n              readOnly={this.state.barang === undefined ? true : false}\r\n              placeholder=\"Masukan Barcode\"\r\n              onBlur={(e) => this.getBarcode(e)}\r\n              onChange={(e) => this.getBarcode(e)}\r\n            />\r\n          </div>\r\n          {/* <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"kadar\"\r\n              label=\"Kadar (%)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div> */}\r\n          {/* <div className=\"col-md-3 form-group\">\r\n            <Field name=\"p\" label=\"P\" type=\"number\" component={renderField} />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field name=\"k\" label=\"K\" type=\"number\" component={renderField} />\r\n          </div> */}\r\n          {/* <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"pkg\"\r\n              label=\"Bungkus (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n              readOnly\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"bruto\"\r\n              label=\"Berat (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"kadarTransaksi\"\r\n              label=\"Harga (%)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"gross\"\r\n              label=\"Gross (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"netto\"\r\n              label=\"Murni (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <label htmlFor=\"\">Ongkos (Rp)</label>\r\n            <Field\r\n              name=\"rp\"\r\n              component=\"input\"\r\n              type=\"tel\"\r\n              className=\"form-control\"\r\n              {...currencyMask}\r\n            />\r\n          </div> */}\r\n          <div className=\"col-md-12 form-group mt-3\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\"\r\n                id=\"simpan\"\r\n                disabled={this.props.submitting}\r\n              >\r\n                Simpan\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormPengambilanBarcode = reduxForm({\r\n  form: \"TerimaSupplier\",\r\n  validate: validationTerimaSupplier,\r\n  enableReinitialize: true,\r\n})(FormPengambilanBarcode);\r\nconst selector = formValueSelector(\"TerimaSupplier\"); // <-- same as form name\r\n\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi, gross } = selector(\r\n    state,\r\n    \"bruto\",\r\n    \"kadarTransaksi\",\r\n    \"gross\"\r\n  );\r\n  return {\r\n    netto: (parseFloat(bruto) * (parseFloat(kadarTransaksi) / 100)).toFixed(3),\r\n    pkg: (parseFloat(gross) - parseFloat(bruto)).toFixed(3),\r\n  };\r\n})(FormPengambilanBarcode);\r\n","import React, { Component } from \"react\";\r\nimport FormPengambilanBarcode from \"./Component/FormPengambilanBarcode\";\r\nimport SelectSearch from \"react-select-search\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getListDataPengambilanBarcode } from \"../actions/pengambilanBarcodeAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm, reset } from \"redux-form\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport { getcustomerList } from \"../actions/customerAction\";\r\nimport { getLokasiPindah, getsupplierList } from \"../actions/supplierAction\";\r\nimport { AxiosMasterPost } from \"../Axios\";\r\nimport { berhasil, gagal, warning } from \"../Alert\";\r\nimport { multipleDeleteLocal } from \"../helper\";\r\nimport GlobalTabel from \"../GlobalComponent/GlobalTabel\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\nimport { renderFieldSelect } from \"../renderField\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    pengambilanBarcode: state.provinsi.pengambilanBarcode,\r\n    noFaktur: state.provinsi.noFaktur,\r\n    customer: state.provinsi.customer,\r\n    supplier: state.provinsi.supplier,\r\n    lokasi: state.provinsi.dataLokasiPindah,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\nclass PengambilanBarcod extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jenisTransaksi: [\r\n        {\r\n          value: \"RETUR SUPPLIER\",\r\n          name: \"RETUR SUPPLIER\",\r\n        },\r\n        {\r\n          value: \"PENERIMAAN SUPPLIER\",\r\n          name: \"PENERIMAAN SUPPLIER\",\r\n        },\r\n        {\r\n          value: \"PINDAH BARANG\",\r\n          name: \"PINDAH BARANG\",\r\n        },\r\n        {\r\n          value: \"PENJUALAN\",\r\n          name: \"PENJUALAN\",\r\n        },\r\n        {\r\n          value: \"RETUR CUSTOMER\",\r\n          name: \"RETUR CUSTOMER\",\r\n        },\r\n      ],\r\n      columns: [\r\n        {\r\n          dataField: \"kode_jenis\",\r\n          text: \"Kode Barang\",\r\n        },\r\n        {\r\n          dataField: \"kode_barcode\",\r\n          text: \"Barcode\",\r\n        },\r\n        {\r\n          dataField: \"gross\",\r\n          text: \"Gross\",\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Bungkus\\n(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Berat\\n(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"kadar_cetak\",\r\n          text: \"Kadar\",\r\n        },\r\n        {\r\n          dataField: \"kadar\",\r\n          text: \"Harga\\n(%)\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Murni\\n(Gr)\",\r\n          footerClasses: \"sum-netto-terima-supplier\",\r\n        },\r\n        {\r\n          dataField: \"ongkos_rp\",\r\n          text: \"Ongkos\\n(RP)\",\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row, index) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-danger mr-2\"\r\n                  data-tut=\"reactour_4\"\r\n                  onClick={() => this.hapus_barcode(index)}\r\n                >\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                  HAPUS\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      kode_supplier: \"\",\r\n      kode_customer: \"\",\r\n      kode_lokasi_asal: \"\",\r\n      kode_lokasi_tujuan: \"\",\r\n      jenisTransaksiSelected: \"\",\r\n      tanggal: \"\",\r\n    };\r\n  }\r\n\r\n  hapus_barcode(index) {\r\n    Swal.fire({\r\n      title: \"Anda Yakin ?\",\r\n      text: \"Anda Akan Menghapus Data Ini ?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    })\r\n      .then((result) => {\r\n        if (result.isConfirmed) {\r\n          let data = JSON.parse(\r\n            localStorage.getItem(\"pengambilanBarcode_temp\")\r\n          );\r\n          data.splice(index, 1);\r\n          localStorage.setItem(\"pengambilanBarcode_temp\", JSON.stringify(data));\r\n        }\r\n      })\r\n      .then(() => this.props.dispatch(getListDataPengambilanBarcode()));\r\n  }\r\n\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListDataPengambilanBarcode());\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getcustomerList());\r\n    this.props.dispatch(getsupplierList());\r\n    this.props.dispatch(getLokasiPindah());\r\n    localStorage.removeItem(\"jenisTransaksi\");\r\n  }\r\n  paddingNumberGW(str) {\r\n    var pad = \"00000000\";\r\n    var ans = pad.substring(0, pad.length - str.length) + str;\r\n    return ans.replace(\".\", \"\");\r\n  }\r\n  paddingNumberNW(str) {\r\n    var pad = \"000000\";\r\n    var ans = pad.substring(0, pad.length - str.length) + str;\r\n    return ans.replace(\".\", \"\");\r\n  }\r\n  handleSubmit(data) {\r\n    var supp = data.kodeJenis\r\n      ? data.kodeJenis\r\n      : \"DEFAULT|DEFAULT|DEFAULT|DEFAULT\";\r\n    var split = supp.split(\"|\");\r\n    var gross = parseFloat(data.bruto) + parseFloat(data.pkg);\r\n    var barcode = `${split[0]}X>C${this.paddingNumberGW(\r\n      parseFloat(gross).toFixed(2),\r\n      7\r\n    )}${this.paddingNumberNW(parseFloat(data.netto).toFixed(2), 5)}`;\r\n    var simpan = {\r\n      kode_jenis: split[0],\r\n      nama_jenis: data.keterangan,\r\n      kadar_cetak: data.kadar,\r\n      kadar: data.kadarTransaksi,\r\n      kode_barcode: barcode,\r\n      pkg: data.pkg,\r\n      gross: data.gross,\r\n      bruto: data.bruto,\r\n      netto: data.netto,\r\n      ongkos_rp: data.rp || 0,\r\n    };\r\n    var array =\r\n      JSON.parse(localStorage.getItem(\"pengambilanBarcode_temp\")) || [];\r\n    array.push(simpan);\r\n    localStorage.setItem(\"pengambilanBarcode_temp\", JSON.stringify(array));\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      text: \"Data Berhasil Ditambahkan!\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n    this.props.dispatch(getListDataPengambilanBarcode());\r\n    this.props.dispatch(reset(\"TerimaSupplier\"));\r\n  }\r\n\r\n  pengambilanBarcodeSubmit() {\r\n    if (this.state.jenisTransaksiSelected === \"\") {\r\n      warning(\"Harap Pilih Jenis Transaksi\");\r\n      return false;\r\n    } else if (this.state.tanggal === \"\") {\r\n      warning(\"Harap Pilih Tanggal\");\r\n      return false;\r\n    }\r\n    var instansi = \"\";\r\n    var instansi2 = \"\";\r\n    if (this.state.jenisTransaksiSelected === \"PENJUALAN\") {\r\n      instansi = this.state.kode_customer;\r\n      instansi2 = this.state.kode_customer;\r\n    } else if (this.state.jenisTransaksiSelected === \"RETUR SUPPLIER\") {\r\n      instansi = this.state.kode_supplier;\r\n      instansi2 = this.state.kode_supplier;\r\n    } else if (this.state.jenisTransaksiSelected === \"PENERIMAAN SUPPLIER\") {\r\n      instansi = this.state.kode_supplier;\r\n      instansi2 = this.state.kode_supplier;\r\n    } else if (this.state.jenisTransaksiSelected === \"PINDAH BARANG\") {\r\n      instansi = this.state.kode_lokasi_asal;\r\n      instansi2 = this.state.kode_lokasi_tujuan;\r\n    } else if (this.state.jenisTransaksiSelected === \"RETUR CUSTOMER\") {\r\n      instansi = this.state.kode_customer;\r\n      instansi2 = this.state.kode_customer;\r\n    }\r\n    var local = JSON.parse(localStorage.getItem(\"pengambilanBarcode_temp\"));\r\n    var qty = local.length;\r\n    var bruto = local\r\n      .map((list) => parseFloat(list.bruto))\r\n      .reduce((a, b) => a + b, 0);\r\n    var pkg = local\r\n      .map((list) => parseFloat(list.pkg))\r\n      .reduce((a, b) => a + b, 0);\r\n    var gross = local\r\n      .map((list) => parseFloat(list.gross))\r\n      .reduce((a, b) => a + b, 0);\r\n    var netto = local\r\n      .map((list) => parseFloat(list.netto))\r\n      .reduce((a, b) => a + b, 0);\r\n    var ongkos_rp = local\r\n      .map((list) => parseFloat(list.ongkos_rp))\r\n      .reduce((a, b) => a + b, 0);\r\n    this.props.dispatch(progressSend());\r\n    var simpan = {\r\n      no_barcode: this.props.noFaktur,\r\n      jenis_trx: this.state.jenisTransaksiSelected,\r\n      tanggal: this.state.tanggal,\r\n      baki: \"-\",\r\n      instansi: instansi,\r\n      instansi2: instansi2,\r\n      total_qty: qty,\r\n      total_bruto: bruto,\r\n      total_pkg: pkg,\r\n      total_gross: gross,\r\n      total_netto: netto,\r\n      total_ongkos: ongkos_rp,\r\n      detail_barang: JSON.parse(\r\n        localStorage.getItem(\"pengambilanBarcode_temp\")\r\n      ),\r\n    };\r\n    AxiosMasterPost(\"pengambilan-barcode/simpan\", simpan)\r\n      .then(() => berhasil(\"Simpan Data Berhasil\"))\r\n      .then(() => multipleDeleteLocal([\"pengambilanBarcode_temp\", \"noFaktur\"]))\r\n      .then(() => this.props.dispatch(getListDataPengambilanBarcode()))\r\n      .then(() => this.props.dispatch(getUUID()))\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => window.location.reload())\r\n      .catch((err) =>\r\n        gagal(`Gagal Simpan Data , Detail : ${err.response.data}`).then(() =>\r\n          this.props.dispatch(finishSend())\r\n        )\r\n      );\r\n  }\r\n\r\n  setJenisTransaksi(e) {\r\n    this.setState({\r\n      jenisTransaksiSelected: e,\r\n    });\r\n    localStorage.setItem(\"jenisTransaksi\", e);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Pengambilan Barcode\" />\r\n              <div className=\"card-body\">\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-4\">\r\n                      <Field\r\n                        name=\"jenisTransaksi\"\r\n                        component={renderFieldSelect}\r\n                        options={this.state.jenisTransaksi}\r\n                        type=\"text\"\r\n                        label=\"Jenis Transaksi\"\r\n                        placeholder=\"Masukan Jenis Transaksi\"\r\n                        onChange={(data) => this.setJenisTransaksi(data)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <label htmlFor=\"\">Tanggal</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        id=\"tanggal\"\r\n                        name=\"tanggal\"\r\n                        className=\"form-control\"\r\n                        onChange={this.inputChange(\"tanggal\")}\r\n                      />\r\n                    </div>\r\n                    {/* <div className=\"col-md-4 col-lg-4\">\r\n                      <label htmlFor=\"\">Baki</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"baki\"\r\n                        name=\"baki\"\r\n                        className=\"form-control\"\r\n                        onChange={this.inputChange(\"baki\")}\r\n                      />\r\n                    </div> */}\r\n                    {this.state.jenisTransaksiSelected === \"PENJUALAN\" ? (\r\n                      <>\r\n                        <div className=\"col-md-5 col-lg-4 \">\r\n                          <label htmlFor=\"\">Nama Toko</label>\r\n                          <SelectSearch\r\n                            options={this.props.customer.map((list) => {\r\n                              let data = {\r\n                                value: list.kode_customer,\r\n                                name: list.nama_customer,\r\n                              };\r\n                              return data;\r\n                            })}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                            onChange={(data) =>\r\n                              this.setState({\r\n                                kode_customer: data,\r\n                              })\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </>\r\n                    ) : this.state.jenisTransaksiSelected ===\r\n                      \"PENERIMAAN SUPPLIER\" ? (\r\n                      <>\r\n                        <div className=\"col-md-5 col-lg-4 \">\r\n                          <label htmlFor=\"\">Nama Supplier</label>\r\n                          <SelectSearch\r\n                            options={this.props.supplier.map((list) => {\r\n                              let data = {\r\n                                value: list.kode_supplier,\r\n                                name: list.nama_supplier,\r\n                              };\r\n                              return data;\r\n                            })}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                            onChange={(data) =>\r\n                              this.setState({\r\n                                kode_supplier: data,\r\n                              })\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </>\r\n                    ) : this.state.jenisTransaksiSelected ===\r\n                      \"RETUR SUPPLIER\" ? (\r\n                      <>\r\n                        <div className=\"col-md-5 col-lg-4 \">\r\n                          <label htmlFor=\"\">Nama Supplier</label>\r\n                          <SelectSearch\r\n                            options={this.props.supplier.map((list) => {\r\n                              let data = {\r\n                                value: list.kode_supplier,\r\n                                name: list.nama_supplier,\r\n                              };\r\n                              return data;\r\n                            })}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                            onChange={(data) =>\r\n                              this.setState({\r\n                                kode_supplier: data,\r\n                              })\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </>\r\n                    ) : this.state.jenisTransaksiSelected ===\r\n                      \"PINDAH BARANG\" ? (\r\n                      <>\r\n                        <div className=\"col-md-5 col-lg-4 \">\r\n                          <label htmlFor=\"\">Dari</label>\r\n                          <SelectSearch\r\n                            options={this.props.lokasi.map((list) => {\r\n                              let data = {\r\n                                value: list.kode_lokasi,\r\n                                name: list.nama_lokasi,\r\n                              };\r\n                              return data;\r\n                            })}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                            onChange={(data) =>\r\n                              this.setState({\r\n                                kode_lokasi_asal: data,\r\n                              })\r\n                            }\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-md-5 col-lg-4 \">\r\n                          <label htmlFor=\"\">Ke</label>\r\n                          <SelectSearch\r\n                            options={this.props.lokasi.map((list) => {\r\n                              let data = {\r\n                                value: list.kode_lokasi,\r\n                                name: list.nama_lokasi,\r\n                              };\r\n                              return data;\r\n                            })}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                            onChange={(data) =>\r\n                              this.setState({\r\n                                kode_lokasi_tujuan: data,\r\n                              })\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </>\r\n                    ) : this.state.jenisTransaksiSelected ===\r\n                      \"RETUR CUSTOMER\" ? (\r\n                      <>\r\n                        <div className=\"col-md-5 col-lg-4 \">\r\n                          <label htmlFor=\"\">Nama Toko</label>\r\n                          <SelectSearch\r\n                            options={this.props.customer.map((list) => {\r\n                              let data = {\r\n                                value: list.kode_customer,\r\n                                name: list.nama_customer,\r\n                              };\r\n                              return data;\r\n                            })}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                            onChange={(data) =>\r\n                              this.setState({\r\n                                kode_customer: data,\r\n                              })\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <div className=\"col-md-5 col-lg-4 \">\r\n                          <label htmlFor=\"\">Nama Supplier</label>\r\n                          <SelectSearch\r\n                            options={this.props.supplier.map((list) => {\r\n                              let data = {\r\n                                value: list.kode_supplier,\r\n                                name: list.nama_supplier,\r\n                              };\r\n                              return data;\r\n                            })}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                            onChange={(data) =>\r\n                              this.setState({\r\n                                kode_supplier: data,\r\n                              })\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                    <div className=\"col-lg-12 col-md-12 mt-4\">\r\n                      <FormPengambilanBarcode\r\n                        onSubmit={(data) => this.handleSubmit(data)}\r\n                        noFaktur={this.props.noFaktur}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <GlobalTabel\r\n                        keyField=\"kodeJenis\"\r\n                        data={this.props.pengambilanBarcode || []}\r\n                        columns={this.state.columns}\r\n                        textEmpty=\"Silahkan Tambah Data Dengan Klik Tombol Biru Diatas\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          onClick={() => this.pengambilanBarcodeSubmit()}\r\n                          disabled={this.props.onSend}\r\n                        >\r\n                          SIMPAN\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          id=\"primary-header-modal\"\r\n          className=\"modal fade\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"primary-header-modalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header modal-colored-header bg-primary\">\r\n                <h4 className=\"modal-title\" id=\"primary-header-modalLabel\">\r\n                  Tambah Data Pengambilan Barcode\r\n                </h4>\r\n                <button\r\n                  type=\"button\"\r\n                  id=\"dismissModal\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPengambilanBarcod = reduxForm({\r\n  form: \"PengambilanBarcod\",\r\n  enableReinitialize: true,\r\n})(PengambilanBarcod);\r\nexport default connect(maptostate, null)(PengambilanBarcod);\r\n"],"sourceRoot":""}