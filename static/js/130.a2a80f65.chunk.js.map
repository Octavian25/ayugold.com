{"version":3,"sources":["Transaksi/Component/CheckSupplier.jsx","Transaksi/BarcodeSupplier/UBS.js","Transaksi/BarcodeSupplier/INTERN.js","Transaksi/BarcodeSupplier/DKS.js","Transaksi/Component/FormPengambilanBarcode.jsx","Transaksi/PengambilanBarcode.jsx"],"names":["CheckSupplier","barcode","UBS","length","substr","console","log","substring","NW","parseFloat","PKG","GW","checkUBS","INTERN","awal","indexOf","checkINTERN","DKS","split","decimal_gw","parseInt","decimal_nw","checkDKS","FormPengambilanBarcode","props","onChange","e","setState","text","target","value","handleCheck","clearTimeout","timer","setTimeout","akhir","state","change","netto","noFaktur","pkg","onclick1","document","getElementById","click","bind","kodeBarang","DataSupplier","kode_barang","keterangan","kadar","P","K","bungkus","berat","harga","murni","ongkos","status","kadarCetak","kadarBeli","namaJenis","kodeJenis","AxiosMasterGet","then","res","data","catch","err","getTimbangan","this","result_explode","kadarJual","barang","localStorage","getItem","prevProps","prevState","onSubmit","handleSubmit","className","Field","name","label","type","readOnly","component","renderField","defaultValue","normalize","toUpperCase","String","renderFieldSelect","options","map","list","kode_jenis","nama_jenis","kadar_cetak","kadar_jual","kadar_beli","pilihBarang","onBlur","setKadar","placeholder","undefined","id","disabled","submitting","Component","reduxForm","form","validate","validationTerimaSupplier","enableReinitialize","selector","formValueSelector","connect","bruto","kadarTransaksi","gross","toFixed","PengambilanBarcod","inputChange","input","jenisTransaksi","columns","dataField","footerClasses","csvExport","formatter","rowContent","row","index","data-tut","onClick","hapus_barcode","kode_supplier","kode_customer","kode_lokasi_asal","kode_lokasi_tujuan","jenisTransaksiSelected","tanggal","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","JSON","parse","splice","setItem","stringify","dispatch","getListDataPengambilanBarcode","getUUID","getcustomerList","getsupplierList","getLokasiPindah","removeItem","str","replace","paddingNumberGW","paddingNumberNW","array","simpan","kode_barcode","ongkos_rp","rp","findIndex","warning","push","ToastSucces","instansi","instansi2","local","qty","reduce","a","b","progressSend","no_barcode","jenis_trx","baki","total_qty","total_bruto","total_pkg","total_gross","total_netto","total_ongkos","detail_barang","AxiosMasterPost","berhasil","multipleDeleteLocal","finishSend","window","location","reload","gagal","response","style","color","HeaderCard","setJenisTransaksi","htmlFor","customer","nama_customer","search","supplier","nama_supplier","lokasi","kode_lokasi","nama_lokasi","GlobalTabel","keyField","pengambilanBarcode","textEmpty","pengambilanBarcodeSubmit","onSend","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","provinsi","dataLokasiPindah"],"mappings":"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","file":"static/js/130.a2a80f65.chunk.js","sourcesContent":["import { checkDKS } from \"../BarcodeSupplier/DKS\";\r\nimport { checkINTERN } from \"../BarcodeSupplier/INTERN\";\r\nimport { checkUBS } from \"../BarcodeSupplier/UBS\";\r\n\r\nexport const CheckSupplier = (barcode) => {\r\n  //   console.log(barcode);\r\n  let UBS = checkUBS(barcode);\r\n  let INTERN = checkINTERN(barcode);\r\n  let DKS = checkDKS(barcode);\r\n  if (UBS) {\r\n    return UBS;\r\n  } else if (INTERN) {\r\n    return INTERN;\r\n  } else if (DKS) {\r\n    return DKS;\r\n  }\r\n};\r\n","export const checkUBS = (barcode) => {\r\n  if (barcode.length === 22 && barcode.substr(0, 1) === \"0\") {\r\n    console.log(\"INI DI UBS\");\r\n    console.log(barcode.substring(14, 5));\r\n    let NW = parseFloat(barcode.substr(14, 4)) / 100;\r\n    let PKG = parseFloat(barcode.substr(18, 4)) / 100;\r\n    let GW = NW + PKG;\r\n\r\n    let data = {\r\n      NW: NW,\r\n      PKG: PKG,\r\n      GW: GW,\r\n    };\r\n    return data;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n","export const checkINTERN = (barcode) => {\r\n  let awal = barcode.indexOf(\"X\");\r\n  let akhir = barcode.length - 1;\r\n  let posisi = akhir - awal;\r\n  if (posisi === 12 && barcode.substr(1, 1) !== \"0\") {\r\n    console.log(barcode.substr(awal + 7, 5));\r\n    let GW = parseFloat(barcode.substr(awal + 1, 7)) / 100;\r\n    let PKG = parseFloat(barcode.substr(awal + 8, 5)) / 100;\r\n    let NW = GW - PKG;\r\n\r\n    let data = {\r\n      NW: NW,\r\n      PKG: PKG,\r\n      GW: GW,\r\n    };\r\n    return data;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n","export const checkDKS = (barcode) => {\r\n  if (barcode.length === 11) {\r\n    let GW = barcode.split(\"#\")[0];\r\n    let NW = barcode.split(\"#\")[1];\r\n    let PKG = \"NW - GW\";\r\n    // console.log(GW);\r\n    var decimal_gw =\r\n      parseInt(GW.substr(0, 3)) + \".\" + GW.substr(GW.length - 2, 2);\r\n    var decimal_nw =\r\n      parseInt(NW.substr(0, 3)) + \".\" + NW.substr(NW.length - 2, 2);\r\n    console.log(decimal_gw + \"-\" + decimal_nw);\r\n    let data = {\r\n      NW: NW,\r\n      PKG: PKG,\r\n      GW: GW,\r\n    };\r\n    return data;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Field, reduxForm, formValueSelector } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport validationTerimaSupplier from \"../../Validations/validationTerimaSupplier\";\r\nimport { getTimbangan } from \"../../GetTimbangan\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport { SkeletonLoading } from \"../../helper\";\r\nimport { CheckSupplier } from \"./CheckSupplier\";\r\n\r\nclass FormPengambilanBarcode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onclick1 = this.onclick1.bind(this);\r\n    this.state = {\r\n      kodeBarang: [],\r\n      DataSupplier: [],\r\n      kode_barang: \"\",\r\n      keterangan: \"INI KETERANGAN\",\r\n      kadar: \"\",\r\n      P: \"\",\r\n      K: \"\",\r\n      bungkus: \"\",\r\n      berat: \"\",\r\n      harga: \"\",\r\n      murni: \"\",\r\n      ongkos: \"\",\r\n      status: \"\",\r\n      kadarCetak: \"\",\r\n      kadarBeli: \"\",\r\n      namaJenis: \"\",\r\n      kodeJenis: \"\",\r\n      text: \"\",\r\n    };\r\n    this.timer = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"jenis/get/by-kode-kelompok/PERHIASAN\")\r\n      .then((res) =>\r\n        this.setState({\r\n          kodeBarang: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    getTimbangan(this.props.change);\r\n  }\r\n\r\n  onclick1() {\r\n    this.props.change(\"netto\", this.props.netto);\r\n    this.props.change(\"noFaktur\", this.props.noFaktur);\r\n    this.props.change(\"pkg\", this.props.pkg);\r\n  }\r\n\r\n  pilihBarang(data) {\r\n    var supp = data ? data : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n      namaJenis: result_explode[1],\r\n      kadarCetak: result_explode[2],\r\n      kadarJual: result_explode[3],\r\n      kadarBeli: result_explode[4],\r\n      barang: \"terpilih\",\r\n    });\r\n  }\r\n\r\n  setKadar() {\r\n    this.props.change(\"keterangan\", this.state.namaJenis);\r\n    this.props.change(\"kadar\", this.state.kadarCetak);\r\n    if (\r\n      localStorage.getItem(\"jenisTransaksi\") === \"RETUR SUPPLIER\" ||\r\n      localStorage.getItem(\"jenisTransaksi\") === \"PENERIMAAN SUPPLIER\"\r\n    ) {\r\n      this.props.change(\"kadarTransaksi\", this.state.kadarBeli);\r\n    } else {\r\n      this.props.change(\"kadarTransaksi\", this.state.kadarJual);\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      text: e.target.value,\r\n    });\r\n  };\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.text !== this.state.text) {\r\n      this.handleCheck();\r\n    }\r\n  }\r\n  handleCheck = () => {\r\n    // Clears running timer and starts a new one each time the user types\r\n    clearTimeout(this.timer);\r\n    this.timer = setTimeout(() => {\r\n      let akhir = CheckSupplier(this.state.text);\r\n      if (akhir) {\r\n        console.log(`GW : ${akhir.GW} - NW : ${akhir.NW} - PKG : ${akhir.PKG}`);\r\n        this.props.change(\"bruto\", akhir.GW - akhir.PKG);\r\n        this.props.change(\"gross\", akhir.GW);\r\n        this.props.change(\"netto\", this.props.netto);\r\n        this.props.change(\"noFaktur\", this.props.noFaktur);\r\n        this.props.change(\"pkg\", this.props.pkg);\r\n      }\r\n      this.onclick1();\r\n      document.getElementById(\"simpan\").click();\r\n      this.props.change(\"barcode\", null);\r\n    }, 150);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 col-lg-12 d-none\">\r\n            <Field\r\n              name=\"noFaktur\"\r\n              label={this.props.noFaktur}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              component={renderField}\r\n              defaultValue={this.props.noFaktur}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 form-group\">\r\n            {String(this.state.kodeBarang) !== \"\" ? (\r\n              <Field\r\n                label=\"Kode Barang\"\r\n                name=\"kodeJenis\"\r\n                component={renderFieldSelect}\r\n                options={this.state.kodeBarang.map((list) => {\r\n                  let data = {\r\n                    value:\r\n                      list.kode_jenis +\r\n                      \"|\" +\r\n                      list.nama_jenis +\r\n                      \"|\" +\r\n                      list.kadar_cetak +\r\n                      \"|\" +\r\n                      list.kadar_jual +\r\n                      \"|\" +\r\n                      list.kadar_beli,\r\n                    name: list.nama_jenis,\r\n                  };\r\n                  return data;\r\n                })}\r\n                onChange={(data) => this.pilihBarang(data)}\r\n                onBlur={this.setKadar()}\r\n                placeholder=\"Silahkan Pilih\"\r\n              ></Field>\r\n            ) : (\r\n              <SkeletonLoading label=\"Kode Barang\" />\r\n            )}\r\n          </div>\r\n          {/* <div className=\"col-md-8 form-group\">\r\n            <Field\r\n              name=\"keterangan\"\r\n              label=\"Keterangan\"\r\n              type=\"text\"\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div> */}\r\n          <div className=\"col-lg-8\">\r\n            <Field\r\n              name=\"barcode\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              label=\"Barcode\"\r\n              readOnly={this.state.barang === undefined ? true : false}\r\n              placeholder=\"Masukan Barcode\"\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <p>*Barang Akan Bertambah Otomatis Setelah Scan Barcode</p>\r\n          </div>\r\n          {/* <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"kadar\"\r\n              label=\"Kadar (%)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div> */}\r\n          {/* <div className=\"col-md-3 form-group\">\r\n            <Field name=\"p\" label=\"P\" type=\"number\" component={renderField} />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field name=\"k\" label=\"K\" type=\"number\" component={renderField} />\r\n          </div> */}\r\n          {/* <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"pkg\"\r\n              label=\"Bungkus (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n              readOnly\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"bruto\"\r\n              label=\"Berat (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"kadarTransaksi\"\r\n              label=\"Harga (%)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"gross\"\r\n              label=\"Gross (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"netto\"\r\n              label=\"Murni (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <label htmlFor=\"\">Ongkos (Rp)</label>\r\n            <Field\r\n              name=\"rp\"\r\n              component=\"input\"\r\n              type=\"tel\"\r\n              className=\"form-control\"\r\n              {...currencyMask}\r\n            />\r\n          </div> */}\r\n          <div className=\"col-md-12 form-group mt-3 d-none\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\"\r\n                id=\"simpan\"\r\n                disabled={this.props.submitting}\r\n              >\r\n                Simpan\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormPengambilanBarcode = reduxForm({\r\n  form: \"TerimaSupplier\",\r\n  validate: validationTerimaSupplier,\r\n  enableReinitialize: true,\r\n})(FormPengambilanBarcode);\r\nconst selector = formValueSelector(\"TerimaSupplier\"); // <-- same as form name\r\n\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi, gross } = selector(\r\n    state,\r\n    \"bruto\",\r\n    \"kadarTransaksi\",\r\n    \"gross\"\r\n  );\r\n  return {\r\n    netto: (parseFloat(bruto) * (parseFloat(kadarTransaksi) / 100)).toFixed(3),\r\n    pkg: (parseFloat(gross) - parseFloat(bruto)).toFixed(3),\r\n  };\r\n})(FormPengambilanBarcode);\r\n","import React, { Component } from \"react\";\r\nimport FormPengambilanBarcode from \"./Component/FormPengambilanBarcode\";\r\nimport SelectSearch from \"react-select-search\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getListDataPengambilanBarcode } from \"../actions/pengambilanBarcodeAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport { getcustomerList } from \"../actions/customerAction\";\r\nimport { getLokasiPindah, getsupplierList } from \"../actions/supplierAction\";\r\nimport { AxiosMasterPost } from \"../Axios\";\r\nimport { berhasil, gagal, warning } from \"../Alert\";\r\nimport { multipleDeleteLocal } from \"../helper\";\r\nimport GlobalTabel from \"../GlobalComponent/GlobalTabel\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\nimport { renderFieldSelect } from \"../renderField\";\r\nimport { ToastSucces } from \"../GlobalComponent/notification\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    pengambilanBarcode: state.provinsi.pengambilanBarcode,\r\n    noFaktur: state.provinsi.noFaktur,\r\n    customer: state.provinsi.customer,\r\n    supplier: state.provinsi.supplier,\r\n    lokasi: state.provinsi.dataLokasiPindah,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\nclass PengambilanBarcod extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jenisTransaksi: [\r\n        {\r\n          value: \"RETUR SUPPLIER\",\r\n          name: \"RETUR SUPPLIER\",\r\n        },\r\n        {\r\n          value: \"PENERIMAAN SUPPLIER\",\r\n          name: \"PENERIMAAN SUPPLIER\",\r\n        },\r\n        {\r\n          value: \"PINDAH BARANG\",\r\n          name: \"PINDAH BARANG\",\r\n        },\r\n        {\r\n          value: \"PENJUALAN\",\r\n          name: \"PENJUALAN\",\r\n        },\r\n        {\r\n          value: \"RETUR CUSTOMER\",\r\n          name: \"RETUR CUSTOMER\",\r\n        },\r\n      ],\r\n      columns: [\r\n        {\r\n          dataField: \"kode_jenis\",\r\n          text: \"Kode Barang\",\r\n        },\r\n        {\r\n          dataField: \"kode_barcode\",\r\n          text: \"Barcode\",\r\n        },\r\n        {\r\n          dataField: \"gross\",\r\n          text: \"Gross\",\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Bungkus\\n(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Berat\\n(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"kadar_cetak\",\r\n          text: \"Kadar\",\r\n        },\r\n        {\r\n          dataField: \"kadar\",\r\n          text: \"Harga\\n(%)\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Murni\\n(Gr)\",\r\n          footerClasses: \"sum-netto-terima-supplier\",\r\n        },\r\n        {\r\n          dataField: \"ongkos_rp\",\r\n          text: \"Ongkos\\n(RP)\",\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row, index) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-danger mr-2\"\r\n                  data-tut=\"reactour_4\"\r\n                  onClick={() => this.hapus_barcode(index)}\r\n                >\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                  HAPUS\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      kode_supplier: \"\",\r\n      kode_customer: \"\",\r\n      kode_lokasi_asal: \"\",\r\n      kode_lokasi_tujuan: \"\",\r\n      jenisTransaksiSelected: \"\",\r\n      tanggal: \"\",\r\n    };\r\n  }\r\n\r\n  hapus_barcode(index) {\r\n    Swal.fire({\r\n      title: \"Anda Yakin ?\",\r\n      text: \"Anda Akan Menghapus Data Ini ?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    })\r\n      .then((result) => {\r\n        if (result.isConfirmed) {\r\n          let data = JSON.parse(\r\n            localStorage.getItem(\"pengambilanBarcode_temp\")\r\n          );\r\n          data.splice(index, 1);\r\n          localStorage.setItem(\"pengambilanBarcode_temp\", JSON.stringify(data));\r\n        }\r\n      })\r\n      .then(() => this.props.dispatch(getListDataPengambilanBarcode()));\r\n  }\r\n\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListDataPengambilanBarcode());\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getcustomerList());\r\n    this.props.dispatch(getsupplierList());\r\n    this.props.dispatch(getLokasiPindah());\r\n    localStorage.removeItem(\"jenisTransaksi\");\r\n  }\r\n  paddingNumberGW(str) {\r\n    var pad = \"00000000\";\r\n    var ans = pad.substring(0, pad.length - str.length) + str;\r\n    return ans.replace(\".\", \"\");\r\n  }\r\n  paddingNumberNW(str) {\r\n    var pad = \"000000\";\r\n    var ans = pad.substring(0, pad.length - str.length) + str;\r\n    return ans.replace(\".\", \"\");\r\n  }\r\n  handleSubmit(data) {\r\n    var supp = data.kodeJenis\r\n      ? data.kodeJenis\r\n      : \"DEFAULT|DEFAULT|DEFAULT|DEFAULT\";\r\n    var split = supp.split(\"|\");\r\n    var gross = parseFloat(data.bruto) + parseFloat(data.pkg);\r\n    var barcode = `${split[0]}X>C${this.paddingNumberGW(\r\n      parseFloat(gross).toFixed(2),\r\n      7\r\n    )}${this.paddingNumberNW(parseFloat(data.netto).toFixed(2), 5)}`;\r\n    var array =\r\n      JSON.parse(localStorage.getItem(\"pengambilanBarcode_temp\")) || [];\r\n    var simpan = {\r\n      kode_jenis: split[0],\r\n      nama_jenis: data.keterangan,\r\n      kadar_cetak: data.kadar,\r\n      kadar: data.kadarTransaksi,\r\n      kode_barcode: barcode,\r\n      pkg: data.pkg,\r\n      gross: data.gross,\r\n      bruto: data.bruto,\r\n      netto: data.netto,\r\n      ongkos_rp: data.rp || 0,\r\n    };\r\n    let posisi = array.findIndex((data) => data.kode_barcode === barcode);\r\n    if (posisi < 0) {\r\n      array.push(simpan);\r\n      localStorage.setItem(\"pengambilanBarcode_temp\", JSON.stringify(array));\r\n      ToastSucces(\"Berhasil Menambahkan Data\");\r\n      this.props.dispatch(getListDataPengambilanBarcode());\r\n      // this.props.dispatch(reset(\"TerimaSupplier\"));\r\n    } else {\r\n      warning(`Barcode Sudah Ada DI Tabel Barang`);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  pengambilanBarcodeSubmit() {\r\n    if (this.state.jenisTransaksiSelected === \"\") {\r\n      warning(\"Harap Pilih Jenis Transaksi\");\r\n      return false;\r\n    } else if (this.state.tanggal === \"\") {\r\n      warning(\"Harap Pilih Tanggal\");\r\n      return false;\r\n    }\r\n    var instansi = \"\";\r\n    var instansi2 = \"\";\r\n    if (this.state.jenisTransaksiSelected === \"PENJUALAN\") {\r\n      instansi = this.state.kode_customer;\r\n      instansi2 = this.state.kode_customer;\r\n    } else if (this.state.jenisTransaksiSelected === \"RETUR SUPPLIER\") {\r\n      instansi = this.state.kode_supplier;\r\n      instansi2 = this.state.kode_supplier;\r\n    } else if (this.state.jenisTransaksiSelected === \"PENERIMAAN SUPPLIER\") {\r\n      instansi = this.state.kode_supplier;\r\n      instansi2 = this.state.kode_supplier;\r\n    } else if (this.state.jenisTransaksiSelected === \"PINDAH BARANG\") {\r\n      instansi = this.state.kode_lokasi_asal;\r\n      instansi2 = this.state.kode_lokasi_tujuan;\r\n    } else if (this.state.jenisTransaksiSelected === \"RETUR CUSTOMER\") {\r\n      instansi = this.state.kode_customer;\r\n      instansi2 = this.state.kode_customer;\r\n    }\r\n    var local = JSON.parse(localStorage.getItem(\"pengambilanBarcode_temp\"));\r\n    var qty = local.length;\r\n    var bruto = local\r\n      .map((list) => parseFloat(list.bruto))\r\n      .reduce((a, b) => a + b, 0);\r\n    var pkg = local\r\n      .map((list) => parseFloat(list.pkg))\r\n      .reduce((a, b) => a + b, 0);\r\n    var gross = local\r\n      .map((list) => parseFloat(list.gross))\r\n      .reduce((a, b) => a + b, 0);\r\n    var netto = local\r\n      .map((list) => parseFloat(list.netto))\r\n      .reduce((a, b) => a + b, 0);\r\n    var ongkos_rp = local\r\n      .map((list) => parseFloat(list.ongkos_rp))\r\n      .reduce((a, b) => a + b, 0);\r\n    this.props.dispatch(progressSend());\r\n    var simpan = {\r\n      no_barcode: this.props.noFaktur,\r\n      jenis_trx: this.state.jenisTransaksiSelected,\r\n      tanggal: this.state.tanggal,\r\n      baki: \"-\",\r\n      instansi: instansi,\r\n      instansi2: instansi2,\r\n      total_qty: qty,\r\n      total_bruto: bruto,\r\n      total_pkg: pkg,\r\n      total_gross: gross,\r\n      total_netto: netto,\r\n      total_ongkos: ongkos_rp,\r\n      detail_barang: JSON.parse(\r\n        localStorage.getItem(\"pengambilanBarcode_temp\")\r\n      ),\r\n    };\r\n    AxiosMasterPost(\"pengambilan-barcode/simpan\", simpan)\r\n      .then(() => berhasil(\"Simpan Data Berhasil\"))\r\n      .then(() => multipleDeleteLocal([\"pengambilanBarcode_temp\", \"noFaktur\"]))\r\n      .then(() => this.props.dispatch(getListDataPengambilanBarcode()))\r\n      .then(() => this.props.dispatch(getUUID()))\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => window.location.reload())\r\n      .catch((err) =>\r\n        gagal(`Gagal Simpan Data , Detail : ${err.response.data}`).then(() =>\r\n          this.props.dispatch(finishSend())\r\n        )\r\n      );\r\n  }\r\n\r\n  setJenisTransaksi(e) {\r\n    this.setState({\r\n      jenisTransaksiSelected: e,\r\n    });\r\n    localStorage.setItem(\"jenisTransaksi\", e);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Pengambilan Barcode\" />\r\n              <div className=\"card-body\">\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-4\">\r\n                      <Field\r\n                        name=\"jenisTransaksi\"\r\n                        component={renderFieldSelect}\r\n                        options={this.state.jenisTransaksi}\r\n                        type=\"text\"\r\n                        label=\"Jenis Transaksi\"\r\n                        placeholder=\"Masukan Jenis Transaksi\"\r\n                        onChange={(data) => this.setJenisTransaksi(data)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <label htmlFor=\"\">Tanggal</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        id=\"tanggal\"\r\n                        name=\"tanggal\"\r\n                        className=\"form-control\"\r\n                        onChange={this.inputChange(\"tanggal\")}\r\n                      />\r\n                    </div>\r\n                    {/* <div className=\"col-md-4 col-lg-4\">\r\n                      <label htmlFor=\"\">Baki</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"baki\"\r\n                        name=\"baki\"\r\n                        className=\"form-control\"\r\n                        onChange={this.inputChange(\"baki\")}\r\n                      />\r\n                    </div> */}\r\n                    {this.state.jenisTransaksiSelected === \"PENJUALAN\" ? (\r\n                      <>\r\n                        <div className=\"col-md-5 col-lg-4 \">\r\n                          <label htmlFor=\"\">Nama Toko</label>\r\n                          <SelectSearch\r\n                            options={this.props.customer.map((list) => {\r\n                              let data = {\r\n                                value: list.kode_customer,\r\n                                name: list.nama_customer,\r\n                              };\r\n                              return data;\r\n                            })}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                            onChange={(data) =>\r\n                              this.setState({\r\n                                kode_customer: data,\r\n                              })\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </>\r\n                    ) : this.state.jenisTransaksiSelected ===\r\n                      \"PENERIMAAN SUPPLIER\" ? (\r\n                      <>\r\n                        <div className=\"col-md-5 col-lg-4 \">\r\n                          <label htmlFor=\"\">Nama Supplier</label>\r\n                          <SelectSearch\r\n                            options={this.props.supplier.map((list) => {\r\n                              let data = {\r\n                                value: list.kode_supplier,\r\n                                name: list.nama_supplier,\r\n                              };\r\n                              return data;\r\n                            })}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                            onChange={(data) =>\r\n                              this.setState({\r\n                                kode_supplier: data,\r\n                              })\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </>\r\n                    ) : this.state.jenisTransaksiSelected ===\r\n                      \"RETUR SUPPLIER\" ? (\r\n                      <>\r\n                        <div className=\"col-md-5 col-lg-4 \">\r\n                          <label htmlFor=\"\">Nama Supplier</label>\r\n                          <SelectSearch\r\n                            options={this.props.supplier.map((list) => {\r\n                              let data = {\r\n                                value: list.kode_supplier,\r\n                                name: list.nama_supplier,\r\n                              };\r\n                              return data;\r\n                            })}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                            onChange={(data) =>\r\n                              this.setState({\r\n                                kode_supplier: data,\r\n                              })\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </>\r\n                    ) : this.state.jenisTransaksiSelected ===\r\n                      \"PINDAH BARANG\" ? (\r\n                      <>\r\n                        <div className=\"col-md-5 col-lg-4 \">\r\n                          <label htmlFor=\"\">Dari</label>\r\n                          <SelectSearch\r\n                            options={this.props.lokasi.map((list) => {\r\n                              let data = {\r\n                                value: list.kode_lokasi,\r\n                                name: list.nama_lokasi,\r\n                              };\r\n                              return data;\r\n                            })}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                            onChange={(data) =>\r\n                              this.setState({\r\n                                kode_lokasi_asal: data,\r\n                              })\r\n                            }\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-md-5 col-lg-4 \">\r\n                          <label htmlFor=\"\">Ke</label>\r\n                          <SelectSearch\r\n                            options={this.props.lokasi.map((list) => {\r\n                              let data = {\r\n                                value: list.kode_lokasi,\r\n                                name: list.nama_lokasi,\r\n                              };\r\n                              return data;\r\n                            })}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                            onChange={(data) =>\r\n                              this.setState({\r\n                                kode_lokasi_tujuan: data,\r\n                              })\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </>\r\n                    ) : this.state.jenisTransaksiSelected ===\r\n                      \"RETUR CUSTOMER\" ? (\r\n                      <>\r\n                        <div className=\"col-md-5 col-lg-4 \">\r\n                          <label htmlFor=\"\">Nama Toko</label>\r\n                          <SelectSearch\r\n                            options={this.props.customer.map((list) => {\r\n                              let data = {\r\n                                value: list.kode_customer,\r\n                                name: list.nama_customer,\r\n                              };\r\n                              return data;\r\n                            })}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                            onChange={(data) =>\r\n                              this.setState({\r\n                                kode_customer: data,\r\n                              })\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <div className=\"col-md-5 col-lg-4 \">\r\n                          <label htmlFor=\"\">Nama Supplier</label>\r\n                          <SelectSearch\r\n                            options={this.props.supplier.map((list) => {\r\n                              let data = {\r\n                                value: list.kode_supplier,\r\n                                name: list.nama_supplier,\r\n                              };\r\n                              return data;\r\n                            })}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                            onChange={(data) =>\r\n                              this.setState({\r\n                                kode_supplier: data,\r\n                              })\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                    <div className=\"col-lg-12 col-md-12 mt-4\">\r\n                      <FormPengambilanBarcode\r\n                        onSubmit={(data) => this.handleSubmit(data)}\r\n                        noFaktur={this.props.noFaktur}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <GlobalTabel\r\n                        keyField=\"kodeJenis\"\r\n                        data={this.props.pengambilanBarcode || []}\r\n                        columns={this.state.columns}\r\n                        textEmpty=\"Silahkan Tambah Data Dengan Klik Tombol Biru Diatas\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          onClick={() => this.pengambilanBarcodeSubmit()}\r\n                          disabled={this.props.onSend}\r\n                        >\r\n                          SIMPAN\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          id=\"primary-header-modal\"\r\n          className=\"modal fade\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"primary-header-modalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header modal-colored-header bg-primary\">\r\n                <h4 className=\"modal-title\" id=\"primary-header-modalLabel\">\r\n                  Tambah Data Pengambilan Barcode\r\n                </h4>\r\n                <button\r\n                  type=\"button\"\r\n                  id=\"dismissModal\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPengambilanBarcod = reduxForm({\r\n  form: \"PengambilanBarcod\",\r\n  enableReinitialize: true,\r\n})(PengambilanBarcod);\r\nexport default connect(maptostate, null)(PengambilanBarcod);\r\n"],"sourceRoot":""}