{"version":3,"sources":["Supervisory/CetakUlangForm/FormLaporanPenerimaanSupplier.jsx","HeaderCard.jsx","Images/500.svg","Stocking/Component/PrintNota.jsx"],"names":["SearchBar","Search","ExportCSVButton","CSVExport","serverNonMaster","process","REACT_APP_BACKEND_URL_NON_MASTER","FormLaporanPenerimaanSupplier","props","inputChange","input","e","setState","target","value","pilihSupplier","result_explode","split","kodeSupplier","namaSupplier","state","listSupplier","columns","dataField","text","csvExport","formatter","rowContent","row","className","onClick","getDetails","noFaktur","data","tanggal","listPenerimaan","this","dispatch","getsupplierList","Axios","get","server","then","res","catch","err","alert","getUUID","getCetakUlang","faktur","console","log","setLocal","gagal","localStorage","setItem","JSON","stringify","barangDetails","print","noBon","tableRows","table","parse","getItem","forEach","ticket","i","ticketData","kodeJenis","kadarCetak","p","k","pkg","bruto","kadarTransaksi","netto","rp","push","sumBruto","map","list","reduce","a","b","sumNetto","sumRp","sum","parseFloat","toFixed","toLocaleString","PrintNota","params","tglFrom","tglTo","statusValid","to","type","clear","aria-hidden","title","htmlFor","id","name","defaultValue","startingDate","onChange","kode","caridata","bootstrap4","keyField","search","searchProps","placeholder","style","margin","baseProps","headerClasses","striped","hover","bordered","pagination","paginationFactory","csvProps","error","src","notrespond","width","alt","height","Component","connect","HeaderCard","fontSize","backgroundColor","borderTopLeftRadius","borderTopRightRadius","color","module","exports","row1name","row1isi","row2name","row2isi","row3name","row3isi","row4name","row4isi","username","validby","tableColumn","doc","jsPDF","autoTable","startY","finalY","lastAutoTable","setFontSize","string","output","embed","x","window","open","document","write","close"],"mappings":"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","file":"static/js/97.d374d580.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getCetakUlang } from \"../../actions/cetakUlangAction\";\r\nimport { getUUID } from \"../../actions/fakturAction\";\r\nimport { getsupplierList } from \"../../actions/supplierAction\";\r\nimport Axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport,\r\n} from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport notrespond from \"../../Images/500.svg\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { gagal } from \"../../Alert\";\r\nimport PrintNota from \"../../Stocking/Component/PrintNota\";\r\nimport HeaderCard from \"../../HeaderCard\";\r\n\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nconst serverNonMaster = process.env.REACT_APP_BACKEND_URL_NON_MASTER;\r\nclass FormLaporanPenerimaanSupplier extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listSupplier: [],\r\n      columns: [\r\n        {\r\n          dataField: \"tanggal\",\r\n          text: \"Tanggal\",\r\n        },\r\n        {\r\n          dataField: \"noBon\",\r\n          text: \"Nomor Bon\",\r\n        },\r\n        {\r\n          dataField: \"namaAktor\",\r\n          text: \"Nama Supplier\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Bruto(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Netto\",\r\n        },\r\n        {\r\n          dataField: \"rp\",\r\n          text: \"Ongkos(Rp)\",\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-warning mr-2\"\r\n                  onClick={() => this.getDetails(row.noFaktur)}\r\n                >\r\n                  <i className=\"fa fa-print mr-1\"></i>\r\n                  Print\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      data: [\r\n        {\r\n          tanggal: \"2020-11-12\",\r\n        },\r\n      ],\r\n      listPenerimaan: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getsupplierList());\r\n    Axios.get(server + \"suppliers\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listSupplier: res.data,\r\n        })\r\n      )\r\n      .catch((err) => alert(err));\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getCetakUlang());\r\n  }\r\n  getDetails(faktur) {\r\n    console.log(faktur);\r\n    Axios.get(serverNonMaster + \"spp/dc/trm/detail?noFaktur=\" + faktur)\r\n      .then((res) => this.setLocal(res.data))\r\n      .catch(() =>\r\n        gagal(\"Sepertinya ada kesalahan, Mohon Periksa Koneksi anda\")\r\n      );\r\n  }\r\n  setLocal(data) {\r\n    localStorage.setItem(\r\n      \"TerimaSupplierTable\",\r\n      JSON.stringify(data.barangDetails)\r\n    );\r\n    this.print(data.tanggal, data.noBon, data.noFaktur, data.kodeSupplier);\r\n  }\r\n  print(tanggal, noBon, noFaktur, kodeSupplier) {\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    var table = JSON.parse(localStorage.getItem(\"TerimaSupplierTable\"));\r\n    // for each ticket pass all its data into an array\r\n    table.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        i++,\r\n        ticket.kodeJenis,\r\n        ticket.kadarCetak,\r\n        ticket.p,\r\n        ticket.k,\r\n        ticket.pkg,\r\n        ticket.bruto,\r\n        ticket.kadarTransaksi,\r\n        ticket.netto,\r\n        ticket.rp,\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    var sumBruto = table.map((list) => list.bruto).reduce((a, b) => a + b);\r\n    var sumNetto = table.map((list) => list.netto).reduce((a, b) => a + b);\r\n    var sumRp = table.map((list) => list.rp).reduce((a, b) => a + b);\r\n    const sum = [\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      parseFloat(sumBruto).toFixed(3),\r\n      \"\",\r\n      parseFloat(sumNetto).toFixed(3),\r\n      parseFloat(sumRp).toLocaleString(\"id-ID\"),\r\n    ];\r\n    tableRows.push(sum);\r\n    console.log(JSON.stringify(tableRows));\r\n    var columTable = [\r\n      \"No\",\r\n      \"Kode Barang\",\r\n      \"Kadar Cetak (%)\",\r\n      \"P\",\r\n      \"K\",\r\n      \"Bungkus(Gr)\",\r\n      \"Berat(Gr)\",\r\n      \"Harga(Gr)\",\r\n      \"Murni(Gr)\",\r\n      \"Ongkos(Rp)\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    PrintNota(\r\n      \"no Terima\",\r\n      noFaktur,\r\n      \"Tanggal\",\r\n      tanggal,\r\n      \"No Bon\",\r\n      noBon,\r\n      \"Supplier\",\r\n      kodeSupplier,\r\n      \"ADMIN\",\r\n      tanggal,\r\n      \"\",\r\n      columTable,\r\n      \"Terima Barang Supplier\",\r\n      tableRows\r\n    );\r\n  }\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  pilihSupplier = (input) => (e) => {\r\n    var supp = e.target.value ? e.target.value : \"DEFALT | DEFAULT\";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeSupplier: result_explode[0],\r\n      namaSupplier: result_explode[1],\r\n    });\r\n  };\r\n\r\n  caridata() {\r\n    console.log(\"PENCARIAN....\");\r\n    Axios.get(serverNonMaster + \"spp/dc/trm/heads\", {\r\n      params: {\r\n        tglFrom: this.state.tglFrom,\r\n        tglTo: this.state.tglTo,\r\n        noBon: this.state.noBon,\r\n        kodeSupplier: this.state.kodeSupplier,\r\n        statusValid: \"VALID\",\r\n      },\r\n    })\r\n      .then((res) =>\r\n        this.setState({\r\n          listPenerimaan: res.data,\r\n        })\r\n      )\r\n      .catch(() => gagal(\"Data Kosong\"));\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"container-fluid\">\r\n          <ol className=\"breadcrumb mb-2\">\r\n            <Link to=\"/cetakUlangBukti\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                onClick={() => localStorage.clear()}\r\n              >\r\n                <i className=\"fa fa-angle-left mr-3\" aria-hidden=\"true\"></i>{\" \"}\r\n                Back\r\n              </button>\r\n            </Link>\r\n          </ol>\r\n          <div className=\"card\">\r\n            <HeaderCard title=\"Cetak Ulang Butki Penerimaan Supplier\" />\r\n            <div className=\"card-body\">\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <label htmlFor=\"\">Tanggal Awal</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    id=\"tanggal\"\r\n                    name=\"tanggalAwal\"\r\n                    className=\"form-control\"\r\n                    defaultValue={this.state.startingDate}\r\n                    onChange={this.inputChange(\"tglFrom\")}\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4 col-md-4\">\r\n                  <div className=\"text-center\">\r\n                    <i className=\"fas fa-exchange-alt\"></i>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <label htmlFor=\"\">Tanggal Akhir</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    id=\"tanggal\"\r\n                    name=\"tanggalAkhir\"\r\n                    className=\"form-control\"\r\n                    defaultValue={this.state.startingDate}\r\n                    onChange={this.inputChange(\"tglTo\")}\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4 col-md-4 mt-3\">\r\n                  <label htmlFor=\"\">Supplier</label>\r\n                  <select\r\n                    name=\"supplier\"\r\n                    id=\"kodeSupplier\"\r\n                    className=\"form-control\"\r\n                    onChange={this.pilihSupplier(\"kodeSupplier\")}\r\n                  >\r\n                    <option value=\"DEFAULT | DEFAULT\">SILAHKAN PILIH</option>\r\n                    {this.state.listSupplier.map((kode) => (\r\n                      <option\r\n                        value={kode.kodeSupplier + \"|\" + kode.namaSupplier}\r\n                      >\r\n                        {kode.namaSupplier}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                <div className=\"col-md-6 col-lg-4 mt-3\">\r\n                  <label htmlFor=\"\">Nomor Terima</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"noTerima\"\r\n                    name=\"noTerima\"\r\n                    className=\"form-control\"\r\n                    onChange={this.inputChange(\"noBon\")}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6 col-lg-4 mt-3\">\r\n                  <label htmlFor=\"\">Nomor Nota</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"noNota\"\r\n                    name=\"noNota\"\r\n                    className=\"form-control\"\r\n                    onChange={this.inputChange(\"noBon\")}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-12 col-lg-12 mt-3\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-6 col-md-6\">\r\n                      <div className=\"text-left\">\r\n                        {/* <Link to=\"/ViewPDF\">\r\n                              <button className=\"btn btn-primary\" type=\"button\">\r\n                                PDF\r\n                              </button>\r\n                            </Link> */}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-lg-6 col-md-6\">\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          onClick={() => this.caridata()}\r\n                        >\r\n                          <i className=\"fa fa-search mr-1\"></i>\r\n                          Cari Data\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      {this.state.listPenerimaan ? (\r\n                        <ToolkitProvider\r\n                          bootstrap4\r\n                          keyField={this.state.listPenerimaan}\r\n                          data={this.state.listPenerimaan}\r\n                          columns={this.state.columns}\r\n                          search\r\n                        >\r\n                          {(props) => (\r\n                            <div className=\"col-lg-12 col-md-12 mt-5\">\r\n                              <div className=\"text-right\">\r\n                                <SearchBar\r\n                                  {...props.searchProps}\r\n                                  className=\"form-control\"\r\n                                  placeholder=\"Tuliskan Kode / Nama\"\r\n                                  style={{ margin: 0 }}\r\n                                />\r\n                              </div>\r\n                              <BootstrapTable\r\n                                {...props.baseProps}\r\n                                headerClasses=\"header-table\"\r\n                                striped\r\n                                hover\r\n                                bordered={true}\r\n                                pagination={paginationFactory()}\r\n                              />\r\n                              <ExportCSVButton\r\n                                {...props.csvProps}\r\n                                className=\"btn btn-primary\"\r\n                              >\r\n                                Export CSV\r\n                              </ExportCSVButton>\r\n                            </div>\r\n                          )}\r\n                        </ToolkitProvider>\r\n                      ) : (\r\n                        <div>\r\n                          {this.props.error ? (\r\n                            <div className=\"text-center\">\r\n                              <img\r\n                                src={notrespond}\r\n                                style={{ width: \"30%\" }}\r\n                                alt=\"NOT RESPOND\"\r\n                              />\r\n                              <br />\r\n                              <h4>Request API Gagal, Silahkan Refresh</h4>\r\n                            </div>\r\n                          ) : (\r\n                            <Skeleton width=\"100%\" height={180} />\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(FormLaporanPenerimaanSupplier);\r\n","import React, { Component } from \"react\";\r\n\r\nclass HeaderCard extends Component {\r\n  render() {\r\n    return (\r\n      <h4\r\n        className=\"card-header mb-3\"\r\n        style={{\r\n          fontSize: 25,\r\n          backgroundColor: \"#394867\",\r\n          borderTopLeftRadius: 10,\r\n          borderTopRightRadius: 10,\r\n          height: 50,\r\n          color: \"#ffffff\",\r\n        }}\r\n      >\r\n        {this.props.title}\r\n      </h4>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderCard;\r\n","module.exports = __webpack_public_path__ + \"static/media/500.c22f1e39.svg\";","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst PrintNota = (\r\n  row1name = \"\",\r\n  row1isi = \"\",\r\n  row2name = \"\",\r\n  row2isi = \"\",\r\n  row3name = \"\",\r\n  row3isi = \"\",\r\n  row4name = \"\",\r\n  row4isi = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n  validby = \"\",\r\n  tableColumn = [],\r\n  title = \"\",\r\n  tableRows\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  // var tickets = JSON.parse(data);\r\n  // define the columns we want and their titles\r\n\r\n  // // define an empty array of rows\r\n  // const tableRows = [];\r\n\r\n  // // for each ticket pass all its data into an array\r\n  // tickets.forEach((ticket, i) => {\r\n  //   const ticketData = [\r\n  //     i++,\r\n  //     ticket.kodeJenis01,\r\n  //     ticket.bruto01,\r\n  //     ticket.kadarTransaksi01,\r\n  //     ticket.netto01,\r\n  //     ticket.kodeJenis02,\r\n  //     ticket.bruto02,\r\n  //     ticket.kadarTransaksi02,\r\n  //     ticket.netto02,\r\n  //   ];\r\n  //   // push each tickcet's info into a row\r\n  //   tableRows.push(ticketData);\r\n  // });\r\n\r\n  // startY is basically margin-top\r\n  doc.autoTable(tableColumn, tableRows, { startY: 40 });\r\n  let finalY = doc.lastAutoTable.finalY + 10;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(title, 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(row1name, 14, 25);\r\n  doc.text(\":\", 37, 25);\r\n  doc.text(row1isi, 40, 25);\r\n  doc.text(row2name, 120, 25);\r\n  doc.text(\":\", 141, 25);\r\n  doc.text(row2isi, 145, 25);\r\n  //row 2\r\n  doc.text(row3name, 14, 30);\r\n  doc.text(\":\", 37, 30);\r\n  doc.text(row3isi, 40, 30);\r\n  doc.text(row4name, 120, 30);\r\n  doc.text(\":\", 141, 30);\r\n  doc.text(row4isi, 145, 30);\r\n\r\n  //Stamp\r\n  doc.text(\"User\", 160, finalY + 10);\r\n  doc.text(\":\", 168, finalY + 10);\r\n  doc.text(username, 170, finalY + 10);\r\n  doc.text(\"Cetak\", 160, finalY + 15);\r\n  doc.text(\":\", 168, finalY + 15);\r\n  doc.text(tanggal, 170, finalY + 15);\r\n  doc.text(\"Valid\", 160, finalY + 20);\r\n  doc.text(\":\", 168, finalY + 20);\r\n  doc.text(validby, 170, finalY + 20);\r\n  // doc.autoPrint();\r\n  // doc.save(`${title}_${dateStr}.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  x.document.close();\r\n};\r\n\r\nexport default PrintNota;\r\n"],"sourceRoot":""}