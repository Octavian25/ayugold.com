{"version":3,"sources":["../node_modules/redux-form/es/index.js","Validations/validationPengambilanBarcode.js","Transaksi/Component/FormPengambilanBarcode.jsx","Transaksi/PengambilanBarcode.jsx"],"names":["reset","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","change","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors","validationPengambilanBarcode","value","errors","kodeBarang","currencyMask","createNumberMask","prefix","suffix","locale","renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","maxLength","FormPengambilanBarcode","props","pilihBarang","e","result_explode","target","split","setState","kodeJenis","namaJenis","kadarCetak","kadarBeli","state","DataSupplier","Axios","get","server","then","res","data","catch","err","console","log","this","gross","netto","noFaktur","onSubmit","handleSubmit","Field","name","component","onChange","onBlur","setKadar","key","map","kode","normalize","toUpperCase","id","jenis","onclick1","disabled","submitting","Component","reduxForm","form","validate","enableReinitialize","selector","formValueSelector","connect","bruto","kadarTransaksi","pkg","parseFloat","toFixed","PengambilanBarcod","inputChange","columns","dataField","text","footerClasses","dispatch","getListDataPengambilanBarcode","simpan","keterangan","barcode","kadar","rp","array","JSON","parse","localStorage","getItem","push","setItem","stringify","Swal","fire","position","icon","showConfirmButton","timer","document","getElementById","click","jenisTransaksi","tanggal","baki","namaToko","detail","barang","style","color","options","items","search","placeholder","onClick","pengambilanBarcodeSubmit","data-toggle","data-target","pengambilanBarcode","keyField","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","width","height","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","provinsi"],"mappings":"sGAAA,8CA2DWA,GArBcC,IAAQC,YACVD,IAAQE,UACTF,IAAQG,SACPH,IAAQI,UACNJ,IAAQK,YACLL,IAAQM,eACZN,IAAQO,WACPP,IAAQQ,YACVR,IAAQS,UACLT,IAAQU,aACZV,IAAQW,SACZX,IAAQY,KACNZ,IAAQa,OACCb,IAAQc,gBACZd,IAAQe,YACRf,IAAQgB,YACFhB,IAAQiB,kBAClBjB,IAAQkB,QACVlB,IAAQmB,MACHnB,IAAQoB,WACLpB,IAAQqB,cAChBrB,IAAQD,OACDC,IAAQsB,aACLtB,IAAQuB,gBACLvB,IAAQwB,mBACNxB,IAAQyB,qBACjBzB,IAAQ0B,YACA1B,IAAQ2B,oBACjB3B,IAAQ4B,WACZ5B,IAAQ6B,OACT7B,IAAQ8B,MACE9B,IAAQ+B,gBAChB/B,IAAQgC,QACGhC,IAAQiC,mBACVjC,IAAQkC,kB,wIChEvBC,EARsB,SAACC,GAClC,IAAMC,EAAS,GAIf,OAHKD,EAAME,aACPD,EAAOC,WAAa,sBAEjBD,G,yBCELE,EAAeC,2BAAiB,CACpCC,OAAQ,OACRC,OAAQ,KACRC,OAAQ,UAGJC,EAAc,SAAC,GAAD,IAClBC,EADkB,EAClBA,MACAC,EAFkB,EAElBA,MACAC,EAHkB,EAGlBA,KACAC,EAJkB,EAIlBA,MACAC,EALkB,EAKlBA,SALkB,IAMlBC,KAAQC,EANU,EAMVA,QAASC,EANC,EAMDA,MAAOC,EANN,EAMMA,QANN,OAQlB,yBAAKC,UAAU,cACb,2BAAOC,QAAQ,GAAGD,UAAU,cACzBR,GAEH,2CACMD,EADN,CAEEE,KAAMA,EACNO,UAAU,eACVE,UAAWR,EACXC,SAAUA,KAEXE,IACGC,GAAS,uBAAGE,UAAU,oBAAoBF,IACzCC,GAAW,2BAAIA,MAIlBI,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAiBRC,YAAc,SAACd,GAAD,OAAW,SAACe,GACxB,IAGIC,GAHOD,EAAEE,OAAO1B,MAChBwB,EAAEE,OAAO1B,MACT,0CACsB2B,MAAM,KAChC,EAAKC,SAAS,CACZC,UAAWJ,EAAe,GAC1BK,UAAWL,EAAe,GAC1BM,WAAYN,EAAe,GAC3BO,UAAWP,EAAe,OAzB5B,EAAKQ,MAAQ,CACXC,aAAc,GACdhC,WAAY,IAJG,E,gEAQE,IAAD,OAClBiC,IAAMC,IAAIC,oDACPC,MAAK,SAACC,GAAD,OACJ,EAAKX,SAAS,CACZ1B,WAAYqC,EAAIC,UAGnBC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,Q,iCAiB9BG,KAAKvB,MAAM7C,OAAO,aAAcoE,KAAKZ,MAAMH,WAC3Ce,KAAKvB,MAAM7C,OAAO,QAASoE,KAAKZ,MAAMF,YACtCc,KAAKvB,MAAM7C,OAAO,iBAAkBoE,KAAKZ,MAAMD,WAC/Ca,KAAKvB,MAAM7C,OAAO,QAASoE,KAAKvB,MAAMwB,S,iCAItCD,KAAKvB,MAAM7C,OAAO,QAASoE,KAAKvB,MAAMyB,OACtCF,KAAKvB,MAAM7C,OAAO,WAAYoE,KAAKvB,MAAM0B,UACzCH,KAAKvB,MAAM7C,OAAO,QAASoE,KAAKvB,MAAMwB,S,+BAG9B,IAAD,OACP,OACE,0BAAMG,SAAUJ,KAAKvB,MAAM4B,cACzB,yBAAKhC,UAAU,OACb,yBAAKA,UAAU,uBACb,2BAAOC,QAAQ,IAAf,eACA,kBAACgC,EAAA,EAAD,CACEC,KAAK,YACLC,UAAU,SACVnC,UAAU,eACVoC,SAAUT,KAAKtB,cACfgC,OAAQV,KAAKW,YAEb,4BAAQxD,MAAM,UAAUyD,IAAI,WAA5B,kBAGCZ,KAAKZ,MAAM/B,aAAe,GACzB,kDAEA2C,KAAKZ,MAAM/B,WAAWwD,KAAI,SAACC,GAAD,OACxB,4BACE3D,MACE2D,EAAK9B,UACL,IACA8B,EAAK7B,UACL,IACA6B,EAAK5B,WACL,IACA4B,EAAK3B,WAGN2B,EAAK7B,gBAMhB,yBAAKZ,UAAU,YACb,kBAACiC,EAAA,EAAD,CACEC,KAAK,aACL1C,MAAM,aACNC,KAAK,OACL0C,UAAW7C,EACXoD,UAAW,SAAC5D,GAAD,OAAWA,GAASA,EAAM6D,kBAGzC,yBAAK3C,UAAU,YACb,2BAAOC,QAAQ,IAAf,KACA,yBAAKD,UAAU,OACb,yBAAKA,UAAU,YACb,+BACE,kBAACiC,EAAA,EAAD,CACEC,KAAK,QACLU,GAAG,QACHT,UAAU,QACV1C,KAAK,aALT,aAYN,yBAAKO,UAAU,YACb,kBAACiC,EAAA,EAAD,CACEC,KAAK,UACL1C,MAAM,UACNC,KAAK,OACL0C,UAAW7C,EACXoD,UAAW,SAAC5D,GAAD,OAAWA,GAASA,EAAM6D,mBAGnB,IAArBhB,KAAKvB,MAAMyC,MACV,oCACE,yBAAK7C,UAAU,YACb,kBAACiC,EAAA,EAAD,CACEC,KAAK,MACL1C,MAAM,cACNC,KAAK,SACL0C,UAAW7C,EACXoD,UAAW,SAAC5D,GAAD,OAAWA,GAASA,EAAM6D,eACrCN,OAAQ,kBAAM,EAAKS,eAGvB,yBAAK9C,UAAU,YACb,kBAACiC,EAAA,EAAD,CACEC,KAAK,QACL1C,MAAM,aACNC,KAAK,SACL0C,UAAW7C,EACXoD,UAAW,SAAC5D,GAAD,OAAWA,GAASA,EAAM6D,eACrCN,OAAQ,kBAAM,EAAKS,eAGvB,yBAAK9C,UAAU,YACb,kBAACiC,EAAA,EAAD,CACEC,KAAK,QACL1C,MAAM,aACNC,KAAK,SACL0C,UAAW7C,EACXoD,UAAW,SAAC5D,GAAD,OAAWA,GAASA,EAAM6D,eACrCN,OAAQ,kBAAM,EAAKS,gBAKzB,oCACE,yBAAK9C,UAAU,YACb,kBAACiC,EAAA,EAAD,CACEC,KAAK,MACL1C,MAAM,cACNC,KAAK,SACL0C,UAAW7C,EACXoD,UAAW,SAAC5D,GAAD,OAAWA,GAASA,EAAM6D,eACrCN,OAAQ,kBAAM,EAAKS,YACnBnD,UAAU,KAGd,yBAAKK,UAAU,YACb,kBAACiC,EAAA,EAAD,CACEC,KAAK,QACL1C,MAAM,aACNC,KAAK,SACL0C,UAAW7C,EACXoD,UAAW,SAAC5D,GAAD,OAAWA,GAASA,EAAM6D,eACrCN,OAAQ,kBAAM,EAAKS,YACnBnD,UAAU,KAGd,yBAAKK,UAAU,YACb,kBAACiC,EAAA,EAAD,CACEC,KAAK,QACL1C,MAAM,aACNC,KAAK,SACL0C,UAAW7C,EACXoD,UAAW,SAAC5D,GAAD,OAAWA,GAASA,EAAM6D,eACrCN,OAAQ,kBAAM,EAAKS,YACnBnD,UAAU,MAMlB,yBAAKK,UAAU,YACb,kBAACiC,EAAA,EAAD,CACEC,KAAK,QACL1C,MAAM,QACNC,KAAK,SACL0C,UAAW7C,EACXoD,UAAW,SAAC5D,GAAD,OAAWA,GAASA,EAAM6D,eACrCN,OAAQ,kBAAM,EAAKS,eAGvB,yBAAK9C,UAAU,YACb,kBAACiC,EAAA,EAAD,CACEC,KAAK,iBACL1C,MAAM,YACNC,KAAK,SACL0C,UAAW7C,EACXoD,UAAW,SAAC5D,GAAD,OAAWA,GAASA,EAAM6D,eACrCN,OAAQ,kBAAM,EAAKS,eAGvB,yBAAK9C,UAAU,YACb,kBAACiC,EAAA,EAAD,CACEC,KAAK,QACL1C,MAAM,aACNC,KAAK,SACL0C,UAAW7C,EACXoD,UAAW,SAAC5D,GAAD,OAAWA,GAASA,EAAM6D,eACrCN,OAAQ,kBAAM,EAAKS,eAGvB,yBAAK9C,UAAU,uBACb,2BAAOC,QAAQ,IAAf,eACA,kBAACgC,EAAA,EAAD,eACEC,KAAK,KACLC,UAAU,QACV1C,KAAK,MACLO,UAAU,gBACNf,KAGR,yBAAKe,UAAU,6BACb,yBAAKA,UAAU,cACb,4BACEA,UAAU,kBACV+C,SAAUpB,KAAKvB,MAAM4C,WACrBvD,KAAK,UAHP,kB,GArOuBwD,aAoPrC9C,EAAyB+C,YAAU,CACjCC,KAAM,yBACNC,SAAUvE,EACVwE,oBAAoB,GAHGH,CAItB/C,GACH,IAAMmD,EAAWC,YAAkB,0BACpBC,eAAQ,SAACzC,GAAW,IAAD,EACcuC,EAC5CvC,EACA,QACA,iBACA,MACA,SALM0C,EADwB,EACxBA,MAAOC,EADiB,EACjBA,eAAgBC,EADC,EACDA,IAAKd,EADJ,EACIA,MAOpC,MAAO,CACLhB,OAAQ+B,WAAWH,IAAUG,WAAWF,GAAkB,MAAMG,QAAQ,GACxEjC,MAAOgC,WAAWH,GAASG,WAAWD,GACtCd,MAAOA,KAXIW,CAaZrD,G,iHC5RG2D,E,kDACJ,WAAY1D,GAAQ,IAAD,8BACjB,cAAMA,IAoDR2D,YAAc,SAACxE,GAAD,OAAW,SAACe,GACxB,EAAKI,SAAL,eACGnB,EAAQe,EAAEE,OAAO1B,UArDpB,EAAKiC,MAAQ,CACXiD,QAAS,CACP,CACEC,UAAW,YACXC,KAAM,eAER,CACED,UAAW,aACXC,KAAM,cAER,CACED,UAAW,SACXC,KAAM,UAER,CACED,UAAW,UACXC,KAAM,WAER,CACED,UAAW,QACXC,KAAM,SAER,CACED,UAAW,MACXC,KAAM,eAER,CACED,UAAW,QACXC,KAAM,aAER,CACED,UAAW,QACXC,KAAM,SAER,CACED,UAAW,iBACXC,KAAM,YAER,CACED,UAAW,QACXC,KAAM,YACNC,cAAe,6BAEjB,CACEF,UAAW,KACXC,KAAM,gBA/CK,E,gEA4DjBvC,KAAKvB,MAAMgE,SAASC,iB,mCAET/C,GACX,IAIIgD,EAAS,CACX3D,WALSW,EAAKX,UACZW,EAAKX,UACL,mCACaF,MAAM,KAEJ,GACjB8D,WAAYjD,EAAKiD,WACjB1B,MAAOvB,EAAKuB,MACZ2B,QAASlD,EAAKkD,QACdb,IAAKrC,EAAKqC,IACVF,MAAOnC,EAAKmC,MACZ5B,MAAOP,EAAKO,MACZD,MAAON,EAAKM,MACZ6C,MAAOnD,EAAKmD,MACZf,eAAgBpC,EAAKoC,eACrBgB,GAAIpD,EAAKoD,IAEPC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,wBAA0B,GACtEJ,EAAMK,KAAKV,GACXQ,aAAaG,QAAQ,qBAAsBL,KAAKM,UAAUP,IAC1DQ,IAAKC,KAAK,CACRC,SAAU,UACVC,KAAM,UACNpB,KAAM,6BACNqB,mBAAmB,EACnBC,MAAO,OAET7D,KAAKvB,MAAMgE,SAASC,eACpB1C,KAAKvB,MAAMgE,SAAS3H,YAAM,2BAC1BgJ,SAASC,eAAe,gBAAgBC,U,iDAIxC,IAAIrB,EAAS,CACXsB,eAAgBjE,KAAKZ,MAAM6E,eAC3BC,QAASlE,KAAKZ,MAAM8E,QACpBC,KAAMnE,KAAKZ,MAAM+E,KACjBC,SAAUpE,KAAKZ,MAAMgF,SACrBC,OAAQrE,KAAKZ,MAAMiF,OACnBC,OAAQrB,KAAKC,MAAMC,aAAaC,QAAQ,wBAE1CtD,QAAQC,IAAI4C,K,+BAEJ,IAAD,OACP,OACE,yBAAKtE,UAAU,kBAAkBkG,MAAO,CAAEC,MAAO,UAC/C,yBAAKnG,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,qBACb,2BAAOC,QAAQ,IAAf,mBACA,4BACER,KAAK,OACLmD,GAAG,iBACHV,KAAK,iBACLlC,UAAU,eACVoC,SAAUT,KAAKoC,YAAY,mBAE3B,4BAAQjF,MAAM,kBAAkByD,IAAI,mBAApC,mBAGA,4BACEzD,MAAM,sBACNyD,IAAI,uBAFN,uBAMA,4BAAQzD,MAAM,YAAYyD,IAAI,aAA9B,aAGA,4BAAQzD,MAAM,gBAAgByD,IAAI,iBAAlC,iBAGA,4BAAQzD,MAAM,kBAAkByD,IAAI,mBAApC,qBAKJ,yBAAKvC,UAAU,qBACb,2BAAOC,QAAQ,IAAf,WACA,2BACER,KAAK,OACLmD,GAAG,UACHV,KAAK,UACLlC,UAAU,eACVoC,SAAUT,KAAKoC,YAAY,cAG/B,yBAAK/D,UAAU,qBACb,2BAAOC,QAAQ,IAAf,QACA,2BACER,KAAK,OACLmD,GAAG,OACHV,KAAK,OACLlC,UAAU,eACVoC,SAAUT,KAAKoC,YAAY,WAGA,cAA9BpC,KAAKZ,MAAM6E,eACV,oCACE,yBAAK5F,UAAU,0BACb,2BAAOC,QAAQ,IAAf,aACA,kBAAC,IAAD,CACEmG,QAASzE,KAAKZ,MAAMsF,MACpBC,QAAM,EACNC,YAAY,qBAIc,wBAA9B5E,KAAKZ,MAAM6E,gBAWmB,oBAA9BjE,KAAKZ,MAAM6E,eAVb,oCACE,yBAAK5F,UAAU,0BACb,2BAAOC,QAAQ,IAAf,iBACA,kBAAC,IAAD,CACEmG,QAASzE,KAAKZ,MAAMsF,MACpBC,QAAM,EACNC,YAAY,qBAec,kBAA9B5E,KAAKZ,MAAM6E,eACb,oCACE,yBAAK5F,UAAU,0BACb,2BAAOC,QAAQ,IAAf,QACA,kBAAC,IAAD,CACEmG,QAASzE,KAAKZ,MAAMsF,MACpBC,QAAM,EACNC,YAAY,oBAGhB,yBAAKvG,UAAU,0BACb,2BAAOC,QAAQ,IAAf,MACA,kBAAC,IAAD,CACEmG,QAASzE,KAAKZ,MAAMsF,MACpBC,QAAM,EACNC,YAAY,qBAIc,oBAA9B5E,KAAKZ,MAAM6E,eACb,oCACE,yBAAK5F,UAAU,0BACb,2BAAOC,QAAQ,IAAf,aACA,kBAAC,IAAD,CACEmG,QAASzE,KAAKZ,MAAMsF,MACpBC,QAAM,EACNC,YAAY,qBAKlB,oCACE,yBAAKvG,UAAU,0BACb,2BAAOC,QAAQ,IAAf,iBACA,kBAAC,IAAD,CACEmG,QAASzE,KAAKZ,MAAMsF,MACpBC,QAAM,EACNC,YAAY,qBAKpB,yBAAKvG,UAAU,4BACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,aACb,4BACEA,UAAU,kBACVwG,QAAS,kBAAM,EAAKC,6BAFtB,YAQJ,yBAAKzG,UAAU,YACb,yBAAKA,UAAU,cACb,4BACEA,UAAU,kBACV0G,cAAY,QACZC,cAAY,yBAHd,mBAWR,yBAAK3G,UAAU,kBACZ2B,KAAKvB,MAAMwG,mBACV,kBAAC,IAAD,CACEC,SAAS,KACTvF,KAAMK,KAAKvB,MAAMwG,mBACjB5C,QAASrC,KAAKZ,MAAMiD,QACpBsC,QAAM,IAEL,SAAClG,GAAD,OACC,yBAAKJ,UAAU,mBACb,kBAAC,IAAD,iBACMI,EAAM0G,UADZ,CAEEC,SAAO,EACPC,OAAK,EACLC,WAAS,EACTC,UAAU,EACVC,cAAc,eACdC,WAAYC,aAMpB,kBAAC,IAAD,CAAUC,MAAO,OAAQC,OAAQ,aASjD,yBACE3E,GAAG,uBACH5C,UAAU,aACVwH,SAAS,KACTC,KAAK,SACLC,kBAAgB,4BAChBC,cAAY,QAEZ,yBAAK3H,UAAU,yBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gDACb,wBAAIA,UAAU,cAAc4C,GAAG,6BAA/B,kCAGA,4BACEnD,KAAK,SACLmD,GAAG,eACH5C,UAAU,QACV4H,eAAa,QACbD,cAAY,QALd,SAUF,yBAAK3H,UAAU,cACb,kBAAC,EAAD,CACE+B,SAAU,SAACT,GAAD,OAAU,EAAKU,aAAaV,IACtCQ,SAAUH,KAAKvB,MAAM0B,oB,GApUPmB,aA+UjBO,uBApVI,SAACzC,GAClB,MAAO,CACL6F,mBAAoB7F,EAAM8G,SAASjB,sBAkVJ,KAApBpD,CAA0BM","file":"static/js/127.3f2824b4.chunk.js","sourcesContent":["import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;","const validationPengambilanBarcode = (value) => {\r\n    const errors = {}\r\n    if (!value.kodeBarang) {\r\n        errors.kodeBarang = \"Tidak Boleh kosong\"\r\n    }\r\n    return errors\r\n}\r\n\r\nexport default validationPengambilanBarcode;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport validationPengambilanBarcode from \"../../Validations/validationPengambilanBarcode\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport Axios from \"axios\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\n\r\nclass FormPengambilanBarcode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      DataSupplier: [],\r\n      kodeBarang: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Axios.get(server + \"subcategorys\")\r\n      .then((res) =>\r\n        this.setState({\r\n          kodeBarang: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  pilihBarang = (input) => (e) => {\r\n    var supp = e.target.value\r\n      ? e.target.value\r\n      : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n      namaJenis: result_explode[1],\r\n      kadarCetak: result_explode[2],\r\n      kadarBeli: result_explode[3],\r\n    });\r\n  };\r\n\r\n  setKadar() {\r\n    this.props.change(\"keterangan\", this.state.namaJenis);\r\n    this.props.change(\"kadar\", this.state.kadarCetak);\r\n    this.props.change(\"kadarTransaksi\", this.state.kadarBeli);\r\n    this.props.change(\"gross\", this.props.gross);\r\n  }\r\n\r\n  onclick1() {\r\n    this.props.change(\"netto\", this.props.netto);\r\n    this.props.change(\"noFaktur\", this.props.noFaktur);\r\n    this.props.change(\"gross\", this.props.gross);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 form-group\">\r\n            <label htmlFor=\"\">Kode Barang</label>\r\n            <Field\r\n              name=\"kodeJenis\"\r\n              component=\"select\"\r\n              className=\"form-control\"\r\n              onChange={this.pilihBarang()}\r\n              onBlur={this.setKadar()}\r\n            >\r\n              <option value=\"DEFUALT\" key=\"DEFUALT\">\r\n                SILAHKAN PILIH\r\n              </option>\r\n              {this.state.kodeBarang === [] ? (\r\n                <option>TIDAK ADA DATA</option>\r\n              ) : (\r\n                this.state.kodeBarang.map((kode) => (\r\n                  <option\r\n                    value={\r\n                      kode.kodeJenis +\r\n                      \"|\" +\r\n                      kode.namaJenis +\r\n                      \"|\" +\r\n                      kode.kadarCetak +\r\n                      \"|\" +\r\n                      kode.kadarBeli\r\n                    }\r\n                  >\r\n                    {kode.namaJenis}\r\n                  </option>\r\n                ))\r\n              )}\r\n            </Field>\r\n          </div>\r\n          <div className=\"col-md-8\">\r\n            <Field\r\n              name=\"keterangan\"\r\n              label=\"Keterangan\"\r\n              type=\"text\"\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <label htmlFor=\"\">.</label>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <label>\r\n                  <Field\r\n                    name=\"jenis\"\r\n                    id=\"jenis\"\r\n                    component=\"input\"\r\n                    type=\"checkbox\"\r\n                  />\r\n                  Manual\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <Field\r\n              name=\"barcode\"\r\n              label=\"Barcode\"\r\n              type=\"text\"\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          {this.props.jenis === true ? (\r\n            <>\r\n              <div className=\"col-md-3\">\r\n                <Field\r\n                  name=\"pkg\"\r\n                  label=\"Bungkus(Gr)\"\r\n                  type=\"number\"\r\n                  component={renderField}\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  onBlur={() => this.onclick1()}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <Field\r\n                  name=\"bruto\"\r\n                  label=\"Berat (Gr)\"\r\n                  type=\"number\"\r\n                  component={renderField}\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  onBlur={() => this.onclick1()}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <Field\r\n                  name=\"gross\"\r\n                  label=\"Gross (Gr)\"\r\n                  type=\"number\"\r\n                  component={renderField}\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  onBlur={() => this.onclick1()}\r\n                />\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div className=\"col-md-3\">\r\n                <Field\r\n                  name=\"pkg\"\r\n                  label=\"Bungkus(Gr)\"\r\n                  type=\"number\"\r\n                  component={renderField}\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  onBlur={() => this.onclick1()}\r\n                  readOnly={true}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <Field\r\n                  name=\"bruto\"\r\n                  label=\"Berat (Gr)\"\r\n                  type=\"number\"\r\n                  component={renderField}\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  onBlur={() => this.onclick1()}\r\n                  readOnly={true}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <Field\r\n                  name=\"gross\"\r\n                  label=\"Gross (Gr)\"\r\n                  type=\"number\"\r\n                  component={renderField}\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  onBlur={() => this.onclick1()}\r\n                  readOnly={true}\r\n                />\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          <div className=\"col-md-3\">\r\n            <Field\r\n              name=\"kadar\"\r\n              label=\"Kadar\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <Field\r\n              name=\"kadarTransaksi\"\r\n              label=\"Harga (%)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <Field\r\n              name=\"netto\"\r\n              label=\"Murni (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <label htmlFor=\"\">Ongkos (Rp)</label>\r\n            <Field\r\n              name=\"rp\"\r\n              component=\"input\"\r\n              type=\"tel\"\r\n              className=\"form-control\"\r\n              {...currencyMask}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 form-group mt-3\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                disabled={this.props.submitting}\r\n                type=\"submit\"\r\n              >\r\n                Simpan\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormPengambilanBarcode = reduxForm({\r\n  form: \"FormPengambilanBarcode\",\r\n  validate: validationPengambilanBarcode,\r\n  enableReinitialize: true,\r\n})(FormPengambilanBarcode);\r\nconst selector = formValueSelector(\"FormPengambilanBarcode\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi, pkg, jenis } = selector(\r\n    state,\r\n    \"bruto\",\r\n    \"kadarTransaksi\",\r\n    \"pkg\",\r\n    \"jenis\"\r\n  );\r\n  return {\r\n    netto: (parseFloat(bruto) * (parseFloat(kadarTransaksi) / 100)).toFixed(3),\r\n    gross: parseFloat(bruto) + parseFloat(pkg),\r\n    jenis: jenis,\r\n  };\r\n})(FormPengambilanBarcode);\r\n","import React, { Component } from \"react\";\r\nimport FormPengambilanBarcode from \"./Component/FormPengambilanBarcode\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport SelectSearch from \"react-select-search\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getListDataPengambilanBarcode } from \"../actions/pengambilanBarcodeAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset } from \"redux-form\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    pengambilanBarcode: state.provinsi.pengambilanBarcode,\r\n  };\r\n};\r\nclass PengambilanBarcod extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [\r\n        {\r\n          dataField: \"kodeJenis\",\r\n          text: \"Kode Barang\",\r\n        },\r\n        {\r\n          dataField: \"keterangan\",\r\n          text: \"Keterangan\",\r\n        },\r\n        {\r\n          dataField: \"pabrik\",\r\n          text: \"Pabrik\",\r\n        },\r\n        {\r\n          dataField: \"barcode\",\r\n          text: \"Barcode\",\r\n        },\r\n        {\r\n          dataField: \"gross\",\r\n          text: \"Gross\",\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Bungkus(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Berat(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"kadar\",\r\n          text: \"Kadar\",\r\n        },\r\n        {\r\n          dataField: \"kadarTransaksi\",\r\n          text: \"Harga(%)\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Murni(Gr)\",\r\n          footerClasses: \"sum-netto-terima-supplier\",\r\n        },\r\n        {\r\n          dataField: \"rp\",\r\n          text: \"Ongkos(RP)\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListDataPengambilanBarcode());\r\n  }\r\n  handleSubmit(data) {\r\n    var supp = data.kodeJenis\r\n      ? data.kodeJenis\r\n      : \"DEFAULT|DEFAULT|DEFAULT|DEFAULT\";\r\n    var split = supp.split(\"|\");\r\n    var simpan = {\r\n      kodeJenis: split[0],\r\n      keterangan: data.keterangan,\r\n      jenis: data.jenis,\r\n      barcode: data.barcode,\r\n      pkg: data.pkg,\r\n      bruto: data.bruto,\r\n      netto: data.netto,\r\n      gross: data.gross,\r\n      kadar: data.kadar,\r\n      kadarTransaksi: data.kadarTransaksi,\r\n      rp: data.rp,\r\n    };\r\n    var array = JSON.parse(localStorage.getItem(\"pengambilanBarcode\")) || [];\r\n    array.push(simpan);\r\n    localStorage.setItem(\"pengambilanBarcode\", JSON.stringify(array));\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      text: \"Data Berhasil Ditambahkan!\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n    this.props.dispatch(getListDataPengambilanBarcode());\r\n    this.props.dispatch(reset(\"FormPengambilanBarcode\"));\r\n    document.getElementById(\"dismissModal\").click();\r\n  }\r\n\r\n  pengambilanBarcodeSubmit() {\r\n    var simpan = {\r\n      jenisTransaksi: this.state.jenisTransaksi,\r\n      tanggal: this.state.tanggal,\r\n      baki: this.state.baki,\r\n      namaToko: this.state.namaToko,\r\n      detail: this.state.detail,\r\n      barang: JSON.parse(localStorage.getItem(\"pengambilanBarcode\")),\r\n    };\r\n    console.log(simpan);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-4 col-md-4\">\r\n                      <label htmlFor=\"\">Jenis Transaksi</label>\r\n                      <select\r\n                        type=\"text\"\r\n                        id=\"jenisTransaksi\"\r\n                        name=\"jenisTransaksi\"\r\n                        className=\"form-control\"\r\n                        onChange={this.inputChange(\"jenisTransaksi\")}\r\n                      >\r\n                        <option value=\"RETURN SUPPLIER\" key=\"RETURN SUPPLIER\">\r\n                          RETURN SUPPLIER\r\n                        </option>\r\n                        <option\r\n                          value=\"PENERIMAAN SUPPLIER\"\r\n                          key=\"PENERIMAAN SUPPLIER\"\r\n                        >\r\n                          PENERIMAAN SUPPLIER\r\n                        </option>\r\n                        <option value=\"PENJUALAN\" key=\"PENJUALAN\">\r\n                          PENJUALAN\r\n                        </option>\r\n                        <option value=\"PINDAH BARANG\" key=\"PINDAH BARANG\">\r\n                          PINDAH BARANG\r\n                        </option>\r\n                        <option value=\"RETURN CUSTOMER\" key=\"RETURN CUSTOMER\">\r\n                          RETURN CUSTOMER\r\n                        </option>\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <label htmlFor=\"\">Tanggal</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        id=\"tanggal\"\r\n                        name=\"tanggal\"\r\n                        className=\"form-control\"\r\n                        onChange={this.inputChange(\"tanggal\")}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <label htmlFor=\"\">Baki</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"baki\"\r\n                        name=\"baki\"\r\n                        className=\"form-control\"\r\n                        onChange={this.inputChange(\"baki\")}\r\n                      />\r\n                    </div>\r\n                    {this.state.jenisTransaksi === \"PENJUALAN\" ? (\r\n                      <>\r\n                        <div className=\"col-md-5 col-lg-4 mt-2\">\r\n                          <label htmlFor=\"\">Nama Toko</label>\r\n                          <SelectSearch\r\n                            options={this.state.items}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                          />\r\n                        </div>\r\n                      </>\r\n                    ) : this.state.jenisTransaksi === \"PENERIMAAN SUPPLIER\" ? (\r\n                      <>\r\n                        <div className=\"col-md-5 col-lg-4 mt-2\">\r\n                          <label htmlFor=\"\">Nama Supplier</label>\r\n                          <SelectSearch\r\n                            options={this.state.items}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                          />\r\n                        </div>\r\n                      </>\r\n                    ) : this.state.jenisTransaksi === \"RETURN SUPPLIER\" ? (\r\n                      <>\r\n                        <div className=\"col-md-5 col-lg-4 mt-2\">\r\n                          <label htmlFor=\"\">Nama Supplier</label>\r\n                          <SelectSearch\r\n                            options={this.state.items}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                          />\r\n                        </div>\r\n                      </>\r\n                    ) : this.state.jenisTransaksi === \"PINDAH BARANG\" ? (\r\n                      <>\r\n                        <div className=\"col-md-5 col-lg-4 mt-2\">\r\n                          <label htmlFor=\"\">Dari</label>\r\n                          <SelectSearch\r\n                            options={this.state.items}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-md-5 col-lg-4 mt-2\">\r\n                          <label htmlFor=\"\">Ke</label>\r\n                          <SelectSearch\r\n                            options={this.state.items}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                          />\r\n                        </div>\r\n                      </>\r\n                    ) : this.state.jenisTransaksi === \"RETURN CUSTOMER\" ? (\r\n                      <>\r\n                        <div className=\"col-md-5 col-lg-4 mt-2\">\r\n                          <label htmlFor=\"\">Nama Toko</label>\r\n                          <SelectSearch\r\n                            options={this.state.items}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                          />\r\n                        </div>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <div className=\"col-md-5 col-lg-4 mt-2\">\r\n                          <label htmlFor=\"\">Nama Supplier</label>\r\n                          <SelectSearch\r\n                            options={this.state.items}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                          />\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                    <div className=\"col-lg-12 col-md-12 mt-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-6\">\r\n                          <div className=\"text-left\">\r\n                            <button\r\n                              className=\"btn btn-primary\"\r\n                              onClick={() => this.pengambilanBarcodeSubmit()}\r\n                            >\r\n                              SIMPAN\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                          <div className=\"text-right\">\r\n                            <button\r\n                              className=\"btn btn-primary\"\r\n                              data-toggle=\"modal\"\r\n                              data-target=\"#primary-header-modal\"\r\n                            >\r\n                              TAMBAH DATA\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-lg-12 mt-3\">\r\n                      {this.props.pengambilanBarcode ? (\r\n                        <ToolkitProvider\r\n                          keyField=\"id\"\r\n                          data={this.props.pengambilanBarcode}\r\n                          columns={this.state.columns}\r\n                          search\r\n                        >\r\n                          {(props) => (\r\n                            <div className=\"form-group mt-2\">\r\n                              <BootstrapTable\r\n                                {...props.baseProps}\r\n                                striped\r\n                                hover\r\n                                condensed\r\n                                bordered={true}\r\n                                headerClasses=\"header-table\"\r\n                                pagination={paginationFactory()}\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        </ToolkitProvider>\r\n                      ) : (\r\n                        <Skeleton width={\"100%\"} height={100} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          id=\"primary-header-modal\"\r\n          className=\"modal fade\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"primary-header-modalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header modal-colored-header bg-primary\">\r\n                <h4 className=\"modal-title\" id=\"primary-header-modalLabel\">\r\n                  Tambah Data Pengamblan Barcode\r\n                </h4>\r\n                <button\r\n                  type=\"button\"\r\n                  id=\"dismissModal\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <FormPengambilanBarcode\r\n                  onSubmit={(data) => this.handleSubmit(data)}\r\n                  noFaktur={this.props.noFaktur}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(PengambilanBarcod);\r\n"],"sourceRoot":""}