{"version":3,"sources":["Transaksi/TransaksiPenjualan.jsx","../node_modules/redux-form/es/index.js","HeaderCard.jsx","Stocking/Component/PrintNota.jsx"],"names":["ModalMasterData","lazy","FormTransaksiPenjualan","server","process","serverNonMaster","REACT_APP_BACKEND_URL_NON_MASTER","TransaksiPenjualan","props","inputChange","input","e","setState","target","value","inputGrandTotal","GrandNetto","sumGross","parseFloat","state","discGlobalGr","grandTotal","console","log","warning","discount","hasil","localStorage","getItem","toFixed","discGlobalPr","GrandTotalNetto","listLokasi","listSales","listCustomer","columns","dataField","text","footerClasses","csvExport","formatter","rowContent","row","rowIndex","className","data-tip","data-for","onClick","deleteRow","nettoDiscGlobalExt","id","type","effect","totalNWExt","noBon","namaCustomer","lokasi","sales","namaToko","tanggal","data","dihapus","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","array","JSON","parse","splice","setItem","stringify","awal","timer","showConfirmButton","position","dispatch","getTotalNW","getListReturnPenjualan","axios","get","res","this","getUUID","getListTransaksiPenjualan","getBruto","getNetto","getPkg","getRp","getGross","getP","getK","getQty","result_explode","kodeBarang","split","simpan","noFaktur","gross","netto","qty","k","rp","undefined","kadarCetak","toUpperCase","keterangan","kodeKategori","kadarTransaksi","kodeJenis","noBarcode","p","pkg","bruto","nettoDiscGlobal","push","map","list","reduce","a","b","reset","document","getElementById","click","headDiscount","totalNettoExt","totalNettoFaktur","discPr","discGr","totalNettoAkhir","footerItem","totalBruto","sumBruto","totalNetto","sumNetto","totalGross","totalRp","sumRp","totalQty","sumQty","totalK","sumK","totalP","sumP","totalpkg","sumPkg","kodeLokasi","kodeSales","kodeCustomer","barangDetails","footerDocument","inputBy","username","progressSend","tableRows","table","forEach","ticket","i","ticketData","toLocaleString","footer","columTable","post","PrintNota","finishSend","removeItem","toko","catch","err","onKeyDown","event","key","htmlFor","name","label","onChange","options","obj","namaLokasi","search","placeholder","onSubmit","onSubmitToko","onBlur","defaultValue","min","step","totalNW","readOnly","showModal","class","aria-hidden","transaksiPenjualan","keyField","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","noDataIndication","disabled","onSend","transaksiPenjualanSubmit","content","fallback","width","height","count","handleSubmit","Component","reduxForm","form","enableReinitialize","connect","provinsi","customer","salesman","perhitungan","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","change","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors","HeaderCard","style","fontSize","backgroundColor","borderTopLeftRadius","borderTopRightRadius","color","row1name","row1isi","row2name","row2isi","row3name","row3isi","row4name","row4isi","validby","tableColumn","doc","jsPDF","autoTable","startY","finalY","lastAutoTable","setFontSize","string","output","embed","x","window","open","write","close"],"mappings":"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","file":"static/js/105.fba100ff.chunk.js","sourcesContent":["import React, { Component, lazy, Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm, reset } from \"redux-form\";\r\nimport axios from \"axios\";\r\n\r\nimport SelectSearch from \"react-select-search\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getListTransaksiPenjualan } from \"../actions/transaksiPenjualanAction\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport {\r\n  finishSend,\r\n  getBruto,\r\n  getGross,\r\n  getK,\r\n  getNetto,\r\n  getP,\r\n  getPkg,\r\n  getQty,\r\n  getRp,\r\n  progressSend,\r\n} from \"../actions/LogicAction\";\r\nimport PrintNota from \"../Stocking/Component/PrintNota\";\r\nimport { warning } from \"../Alert\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport {\r\n  getListReturnPenjualan,\r\n  getTotalNW,\r\n} from \"../actions/returnPenjualanAction\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { showModal } from \"../actions/ModalAction\";\r\nimport HeaderCard from \"../HeaderCard\";\r\n\r\nconst ModalMasterData = lazy(() =>\r\n  import(\"../DataMaster/Component/ModalMasterData\")\r\n);\r\nconst FormTransaksiPenjualan = lazy(() =>\r\n  import(\"./Component/FormTranskasiPenjualan\")\r\n);\r\nconst maptostate = (state) => {\r\n  return {\r\n    noFaktur: state.provinsi.noFaktur,\r\n    transaksiPenjualan: state.provinsi.transaksiPenjualan,\r\n    listCustomer: state.provinsi.customer,\r\n    listLokasi: state.provinsi.lokasi,\r\n    listSales: state.provinsi.salesman,\r\n    totalNW: state.provinsi.totalNW,\r\n    sumNetto: state.perhitungan.sumNetto,\r\n    sumBruto: state.perhitungan.sumBruto,\r\n    sumPkg: state.perhitungan.sumPkg,\r\n    sumP: state.perhitungan.sumP,\r\n    sumK: state.perhitungan.sumK,\r\n    sumQty: state.perhitungan.sumNetto,\r\n    sumGross: state.perhitungan.sumGross,\r\n    sumRp: state.perhitungan.sumRp,\r\n    username: state.provinsi.username,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nconst serverNonMaster = process.env.REACT_APP_BACKEND_URL_NON_MASTER;\r\nclass TransaksiPenjualan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listLokasi: [],\r\n      listSales: [],\r\n      listCustomer: [],\r\n      columns: [\r\n        {\r\n          dataField: \"kodeJenis\",\r\n          text: \"Kode Barang\",\r\n        },\r\n        {\r\n          dataField: \"kadarCetak\",\r\n          text: \"Kadar Cetak(%)\",\r\n        },\r\n        {\r\n          dataField: \"p\",\r\n          text: \"P\",\r\n        },\r\n        {\r\n          dataField: \"k\",\r\n          text: \"K\",\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Bungkus(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Berat(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"kadarTransaksi\",\r\n          text: \"Harga(%)\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Murni(Gr)\",\r\n\r\n          footerClasses: \"sum-netto-terima-supplier\",\r\n        },\r\n        {\r\n          dataField: \"discGlobalPr\",\r\n          text: \"%\",\r\n\r\n          footerClasses: \"sum-netto-terima-supplier\",\r\n        },\r\n        {\r\n          dataField: \"discGlobalGr\",\r\n          text: \"Disc (Gr)\",\r\n\r\n          footerClasses: \"sum-netto-terima-supplier\",\r\n        },\r\n        {\r\n          dataField: \"nettoDiscGlobalExt\",\r\n          text: \"Netto Disc(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row, rowIndex) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  data-tip\r\n                  data-for=\"hapus\"\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() =>\r\n                    this.deleteRow(rowIndex, row.nettoDiscGlobalExt)\r\n                  }\r\n                >\r\n                  <ReactTooltip id=\"hapus\" type=\"dark\" effect=\"solid\">\r\n                    <span>Hapus</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                </button>\r\n                <br />\r\n                {/* <button\r\n                  data-tip\r\n                  data-for=\"edit\"\r\n                  className=\"btn btn-warning mr-2\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#editModal\"\r\n                  onClick={() => this.setEdit(row)}\r\n                >\r\n                  <ReactTooltip id=\"edit\" type=\"dark\" effect=\"solid\">\r\n                    <span>Edit</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-edit mr-1\"></i>\r\n                </button> */}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      discGlobalGr: 0,\r\n      discGlobalPr: 0,\r\n      totalNWExt: 0,\r\n      noBon: \"\",\r\n      namaCustomer: \"\",\r\n      lokasi: \"\",\r\n      sales: \"\",\r\n      namaToko: \"\",\r\n      tanggal: \"\",\r\n      data: \"\",\r\n    };\r\n  }\r\n\r\n  deleteRow(rowIndex, dihapus) {\r\n    Swal.fire({\r\n      title: \"Anda Yakin ?\",\r\n      text: \"Anda Akan Menghapus Data Ini ?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        const array =\r\n          JSON.parse(localStorage.getItem(\"transaksiPenjualan\")) || [];\r\n        array.splice(rowIndex, 1);\r\n        localStorage.setItem(\"transaksiPenjualan\", JSON.stringify(array));\r\n        var awal = localStorage.getItem(\"GrandTotalNetto\");\r\n        var hasil = parseFloat(awal) - parseFloat(dihapus);\r\n        localStorage.setItem(\"GrandTotalNetto\", parseFloat(hasil).toFixed(3));\r\n        Swal.fire({\r\n          text: \"Berhasil\",\r\n          timer: 2000,\r\n          showConfirmButton: false,\r\n          position: \"top-right\",\r\n          icon: \"success\",\r\n        })\r\n          .then(() => this.props.dispatch(getTotalNW()))\r\n          .then(() => this.props.dispatch(getListReturnPenjualan()))\r\n          .then(() =>\r\n            this.setState({\r\n              GrandTotalNetto: (\r\n                parseFloat(localStorage.getItem(\"GrandTotalNetto\") || 0) - 0\r\n              ).toFixed(3),\r\n            })\r\n          );\r\n      }\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    axios.get(server + \"storages2?tipeData=LOKASI\").then((res) =>\r\n      this.setState({\r\n        listLokasi: res.data,\r\n      })\r\n    );\r\n    axios.get(server + \"storages2?tipeData=SALES\").then((res) =>\r\n      this.setState({\r\n        listSales: res.data,\r\n      })\r\n    );\r\n    axios.get(server + \"customers\").then((res) =>\r\n      this.setState({\r\n        listCustomer: res.data,\r\n      })\r\n    );\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getListTransaksiPenjualan());\r\n    this.props.dispatch(getTotalNW());\r\n    this.props.dispatch(getBruto(\"transaksiPenjualan\"));\r\n    this.props.dispatch(getNetto(\"transaksiPenjualan\"));\r\n    this.props.dispatch(getPkg(\"transaksiPenjualan\"));\r\n    this.props.dispatch(getRp(\"transaksiPenjualan\"));\r\n    this.props.dispatch(getGross(\"transaksiPenjualan\"));\r\n    this.props.dispatch(getP(\"transaksiPenjualan\"));\r\n    this.props.dispatch(getK(\"transaksiPenjualan\"));\r\n    this.props.dispatch(getQty(\"transaksiPenjualan\"));\r\n    this.setState({\r\n      GrandTotalNetto: (\r\n        parseFloat(localStorage.getItem(\"GrandTotalNetto\") || 0) - 0\r\n      ).toFixed(3),\r\n    });\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    var barang = data.kodeBarang\r\n      ? data.kodeBarang\r\n      : \"DEFAULT|DEFAULT|DEFAULT|DEFAULT\";\r\n    var result_explode = barang.split(\"|\");\r\n    var simpan = {\r\n      noFaktur: this.props.noFaktur, //\r\n      nettoDiscGlobalExt: data.nettoDiscGlobalExt,\r\n      gross: parseFloat(data.gross), //berat + bungkus\r\n      netto: parseFloat(data.netto), //murni\r\n      qty: 1,\r\n      k: parseFloat(data.k),\r\n      rp: parseFloat(data.rp === undefined ? 0 : data.rp), //ongkos\r\n      kadarCetak: result_explode[2].toUpperCase(),\r\n      keterangan: data.keterangan.toUpperCase(),\r\n      discGlobalPr: data.discGlobalPr,\r\n      kodeKategori: \"-\",\r\n      kadarTransaksi: parseFloat(data.kadarTransaksi), //harga%\r\n      kodeJenis: result_explode[0].toUpperCase(), //kodebarang\r\n      noBarcode: \"-\",\r\n      p: parseFloat(data.p),\r\n      discGlobalGr: data.discGlobalGr,\r\n      pkg: parseFloat(data.pkg),\r\n      bruto: parseFloat(data.bruto), //berat\r\n      nettoDiscGlobal: 0,\r\n    };\r\n    var array = JSON.parse(localStorage.getItem(\"transaksiPenjualan\")) || [];\r\n    array.push(simpan);\r\n    var GrandTotalNetto = array\r\n      .map((list) => parseFloat(list.nettoDiscGlobalExt))\r\n      .reduce((a, b) => a + b, 0)\r\n      .toFixed(3);\r\n    localStorage.setItem(\"GrandTotalNetto\", GrandTotalNetto);\r\n    localStorage.setItem(\"transaksiPenjualan\", JSON.stringify(array));\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      text: \"Data Berhasil Ditambahkan!\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n    this.props.dispatch(getListTransaksiPenjualan());\r\n    this.props.dispatch(getTotalNW());\r\n    this.props.dispatch(reset(\"FormTransaksiPenjualan\"));\r\n    document.getElementById(\"dismissModal\").click();\r\n    this.props.dispatch(getNetto(\"transaksiPenjualan\"));\r\n    this.setState({\r\n      discGlobalGr:\r\n        (parseFloat(0) / 100) *\r\n        parseFloat(localStorage.getItem(\"GrandTotalNetto\")),\r\n      discGlobalPr: 0,\r\n      GrandTotalNetto: (\r\n        parseFloat(localStorage.getItem(\"GrandTotalNetto\")) - 0\r\n      ).toFixed(3),\r\n    });\r\n  }\r\n\r\n  transaksiPenjualanSubmit() {\r\n    if (localStorage.getItem(\"transaksiPenjualan\") === null) {\r\n      warning(\"Barang masih kosong, Silahkan tambah barang\");\r\n      return false;\r\n    } else if (this.state.noBon === \"\") {\r\n      warning(\"Mohon isi Nomor bon\");\r\n      return false;\r\n    } else if (this.state.lokasi === \"\") {\r\n      warning(\"Mohon pilih lokasi\");\r\n      return false;\r\n    } else if (this.state.sales === \"\") {\r\n      warning(\"Mohon pilih Sales\");\r\n      return false;\r\n    } else if (this.state.namaToko === \"\") {\r\n      warning(\"Mohon pilih toko\");\r\n      return false;\r\n    } else if (this.state.discGlobalPr === \"\") {\r\n      warning(\"Mohon isi Discount\");\r\n      return false;\r\n    } else if (this.state.discGlobalGr === \"\") {\r\n      warning(\"Mohon isi Discount Gr\");\r\n      return false;\r\n    } else if (this.state.totalNWExt === 0) {\r\n      warning(\"Mohon isi Grand Total\");\r\n      return false;\r\n    } else if (this.state.tanggal === \"\") {\r\n      warning(\"Mohon isi Tanggal\");\r\n      return false;\r\n    }\r\n    var headDiscount = {\r\n      totalNettoExt: this.state.totalNWExt, // grand total NW ext\r\n      totalNettoFaktur: this.props.gross, // total NW\r\n      discPr: this.state.discGlobalPr, //dic global\r\n      discGr: this.state.discGlobalGr, //gramasi dic global ( disc global x bruto )\r\n      totalNettoAkhir:\r\n        parseFloat(this.props.gross) - parseFloat(this.state.discGlobalGr), // grand total NW\r\n    };\r\n    var footerItem = {\r\n      totalBruto: this.props.sumBruto,\r\n      totalNetto: this.props.sumNetto,\r\n      totalNettoExt: 0, // penjualan tidakada\r\n      totalGross: this.props.sumGross,\r\n      totalRp: this.props.sumRp,\r\n      totalQty: this.props.sumQty,\r\n      totalK: this.props.sumK,\r\n      totalP: this.props.sumP,\r\n      totalpkg: this.props.sumPkg,\r\n    };\r\n    var simpan = {\r\n      noBon: this.state.noBon.toUpperCase(),\r\n      noFaktur: this.props.noFaktur.toUpperCase(),\r\n      tanggal: this.state.tanggal,\r\n      kodeLokasi: this.state.lokasi.toUpperCase(),\r\n      kodeSales: this.state.sales.toUpperCase(),\r\n      namaToko: this.state.namaToko.toUpperCase(),\r\n      kodeCustomer: this.state.kodeCustomer.toUpperCase(),\r\n      barangDetails: JSON.parse(localStorage.getItem(\"transaksiPenjualan\")),\r\n      headDiscount: headDiscount,\r\n      footerItem: footerItem,\r\n      footerDocument: {\r\n        inputBy: this.props.username, //INPUT BY DEFAULT\r\n      },\r\n    };\r\n    console.log(JSON.stringify(simpan));\r\n    this.props.dispatch(progressSend());\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    var table = JSON.parse(localStorage.getItem(\"transaksiPenjualan\"));\r\n    // for each ticket pass all its data into an array\r\n    table.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        ++i,\r\n        ticket.kadarCetak,\r\n        ticket.kodeJenis,\r\n        ticket.keterangan,\r\n        parseFloat(ticket.bruto).toFixed(3),\r\n        ticket.kadarTransaksi,\r\n        parseFloat(ticket.discGlobalGr).toFixed(3),\r\n        parseFloat(ticket.netto).toFixed(3),\r\n        ticket.pkg,\r\n        ticket.qty,\r\n        parseFloat(ticket.rp).toLocaleString(\"id-ID\"),\r\n        \"\",\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    const footer = [\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      table\r\n        .map((list) => parseFloat(list.bruto))\r\n        .reduce((a, b) => a + b, 0)\r\n        .toFixed(3),\r\n      \"\",\r\n      table\r\n        .map((list) => parseFloat(list.discGlobalGr))\r\n        .reduce((a, b) => a + b, 0)\r\n        .toFixed(3),\r\n      table\r\n        .map((list) => parseFloat(list.netto))\r\n        .reduce((a, b) => a + b, 0)\r\n        .toFixed(3),\r\n      table.map((list) => parseFloat(list.pkg)).reduce((a, b) => a + b, 0),\r\n      table.map((list) => parseFloat(list.qty)).reduce((a, b) => a + b, 0),\r\n      table\r\n        .map((list) => parseFloat(list.rp))\r\n        .reduce((a, b) => a + b, 0)\r\n        .toLocaleString(\"id-ID\"),\r\n      this.state.totalNWExt,\r\n    ];\r\n    tableRows.push(footer);\r\n    console.log(JSON.stringify(tableRows));\r\n    var columTable = [\r\n      \"No\",\r\n      \"Kadar\",\r\n      \"Kode\",\r\n      \"Keterangan\",\r\n      \"Bruto \\n(Gr)\",\r\n      \"Harga \\n(%)\",\r\n      \"Diskon\",\r\n      \"Netto \\n(Gr)\",\r\n      \"Pkg\",\r\n      \"Qty\",\r\n      \"Ongkos \\n(Rp)\",\r\n      \"Grand Total\\nNetto Ext\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    axios\r\n      .post(serverNonMaster + \"cst/dc/pjl\", simpan)\r\n      .then(() =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Data Berhasil Ditambahkan!\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() =>\r\n            PrintNota(\r\n              \"no Trx\",\r\n              this.props.noFaktur.toUpperCase(),\r\n              \"Tanggal\",\r\n              this.state.tanggal,\r\n              \"No Bon\",\r\n              this.state.noBon.toUpperCase(),\r\n              \"Sales\",\r\n              this.state.namaToko.toUpperCase(),\r\n              \"ADMIN\",\r\n              this.state.tanggal,\r\n              \"\",\r\n              columTable,\r\n              \"Transaksi Penjualan\",\r\n              tableRows\r\n            )\r\n          )\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => localStorage.removeItem(\"transaksiPenjualan\"))\r\n          .then(() => localStorage.removeItem(\"GrandTotalNetto\"))\r\n          .then(() => localStorage.removeItem(\"noFaktur\"))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() => this.props.dispatch(getTotalNW()))\r\n          .then(() => this.props.dispatch(getListTransaksiPenjualan()))\r\n          .then(() =>\r\n            this.setState({\r\n              noBon: \"\",\r\n              namaCustomer: \"\",\r\n              lokasi: \"\",\r\n              sales: \"\",\r\n              namaToko: \"\",\r\n              tanggal: \"\",\r\n              toko: \"\",\r\n              GrandTotalNetto: 0,\r\n            })\r\n          )\r\n          .then(() => document.getElementById(\"myForm\").reset())\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text: \"Data Gagal Ditambahkan!\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        }).then(() => this.props.dispatch(finishSend()))\r\n      );\r\n    console.log(JSON.stringify(simpan));\r\n  }\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  inputGrandTotal = (input) => (e) => {\r\n    var GrandNetto = this.props.sumGross - parseFloat(this.state.discGlobalGr);\r\n    var grandTotal = e.target.value;\r\n    console.log(GrandNetto + \"-\" + grandTotal);\r\n    if (GrandNetto - grandTotal < -1) {\r\n      warning(\"Selisih lebih dari 1\");\r\n      e.target.value = \"\";\r\n      return false;\r\n    } else {\r\n      if (GrandNetto - grandTotal <= 1) {\r\n        this.setState({\r\n          [input]: e.target.value,\r\n        });\r\n      } else {\r\n        warning(\"Selisih lebih dari 1\");\r\n        e.target.value = \"\";\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n  discount = (input) => (e) => {\r\n    var hasil =\r\n      (parseFloat(e.target.value) / 100) *\r\n      parseFloat(localStorage.getItem(\"GrandTotalNetto\"));\r\n    this.setState({\r\n      discGlobalGr: hasil.toFixed(3),\r\n      discGlobalPr: e.target.value,\r\n      GrandTotalNetto: (\r\n        parseFloat(localStorage.getItem(\"GrandTotalNetto\")) - hasil.toFixed(3)\r\n      ).toFixed(3),\r\n    });\r\n  };\r\n  onSubmit(data, input) {\r\n    this.setState({\r\n      [input]: data,\r\n    });\r\n  }\r\n  onSubmitToko(data, input) {\r\n    var split = data.split(\"|\");\r\n    this.setState({\r\n      kodeCustomer: split[0],\r\n      namaCustomer: split[1],\r\n      namaToko: split[2],\r\n      toko: data,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"card\">\r\n            <HeaderCard title=\"Transaksi Penjualan\" />\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-9\"></div>\r\n                {/* <div className=\"col-lg-3\">\r\n                  <div className=\"text-right\">\r\n                    <Link to=\"/EditForm/transaksiPenjualan\">\r\n                      <button\r\n                        className=\"btn btn-warning\"\r\n                        // data-target=\"#editModal\"\r\n                        // data-toggle=\"modal\"\r\n                      >\r\n                        Edit Transaksi Penjualan\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </div> */}\r\n                <div className=\"col-lg-12\">\r\n                  <br />\r\n                </div>\r\n\r\n                <div className=\"col-lg-12\">\r\n                  <form\r\n                    id=\"myForm\"\r\n                    onKeyDown={(event) => {\r\n                      return event.key !== \"Enter\";\r\n                    }}\r\n                  >\r\n                    <div className=\"row\">\r\n                      <div className=\"col-lg-4 col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"\">Tanggal</label>\r\n                          <input\r\n                            name=\"tanggal\"\r\n                            type=\"date\"\r\n                            label=\"Tanggal\"\r\n                            className=\"form-control\"\r\n                            onChange={this.inputChange(\"tanggal\")}\r\n                            value={this.state.tanggal}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-4 col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"\">No Bon</label>\r\n                          <input\r\n                            name=\"noBon\"\r\n                            type=\"text\"\r\n                            label=\"No Bon\"\r\n                            className=\"form-control\"\r\n                            onChange={this.inputChange(\"noBon\")}\r\n                            value={this.state.noBon}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-4 col-md-4\"></div>\r\n                      <div className=\"col-lg-3 col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"\">Lokasi</label>\r\n                          <SelectSearch\r\n                            options={this.state.listLokasi.map((obj) => {\r\n                              var payload = {\r\n                                value: obj.kodeLokasi,\r\n                                name: obj.namaLokasi,\r\n                              };\r\n                              return payload;\r\n                            })}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                            onChange={(data) => this.onSubmit(data, \"lokasi\")}\r\n                            value={this.state.lokasi}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-3 col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"\">Sales</label>\r\n                          <SelectSearch\r\n                            options={this.state.listSales.map((obj) => {\r\n                              var payload = {\r\n                                value: obj.kodeLokasi,\r\n                                name: obj.namaLokasi,\r\n                              };\r\n                              return payload;\r\n                            })}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                            onChange={(data) => this.onSubmit(data, \"sales\")}\r\n                            value={this.state.sales}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-3 col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"\">Nama Toko</label>\r\n                          <SelectSearch\r\n                            options={this.state.listCustomer.map((obj) => {\r\n                              var payload = {\r\n                                value:\r\n                                  obj.kodeCustomer +\r\n                                  \"|\" +\r\n                                  obj.namaCustomer +\r\n                                  \"|\" +\r\n                                  obj.namaToko,\r\n                                name: obj.namaToko,\r\n                              };\r\n                              return payload;\r\n                            })}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                            onChange={(data) =>\r\n                              this.onSubmitToko(data, \"namaToko\")\r\n                            }\r\n                            onBlur={(data) => this.onSubmit(data, \"toko\")}\r\n                            value={this.state.toko}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-3 col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"\">Customer</label>\r\n                          <input\r\n                            name=\"customer\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            label=\"Customer\"\r\n                            onChange={this.inputChange(\"namaCustomer\")}\r\n                            defaultValue={this.state.namaCustomer}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-3 mb-3\">\r\n                        <label htmlFor=\"\">Total NW</label>\r\n                        <input\r\n                          name=\"totalNW\"\r\n                          type=\"number\"\r\n                          className=\"form-control\"\r\n                          min={0}\r\n                          step={0.01}\r\n                          label=\"totalNW\"\r\n                          value={this.props.totalNW}\r\n                          readOnly={true}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-lg-3\">\r\n                        <label htmlFor=\"\">Disc Global (%)</label>\r\n                        <input\r\n                          name=\"discGlobal\"\r\n                          type=\"number\"\r\n                          className=\"form-control\"\r\n                          min={0}\r\n                          step={0.001}\r\n                          label=\"discGlobal\"\r\n                          onChange={this.discount(\"discGlobalPr\")}\r\n                          value={this.state.discGlobalPr}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-lg-3\">\r\n                        <label htmlFor=\"\">Disc (Gr)</label>\r\n                        <input\r\n                          name=\"discGlobal\"\r\n                          type=\"number\"\r\n                          className=\"form-control\"\r\n                          label=\"discGlobal\"\r\n                          value={this.state.discGlobalGr}\r\n                          readOnly={true}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-lg-3\">\r\n                        <label htmlFor=\"\">Grand Total Netto</label>\r\n                        <input\r\n                          name=\"totalNW\"\r\n                          type=\"number\"\r\n                          className=\"form-control\"\r\n                          label=\"totalNW\"\r\n                          value={this.state.GrandTotalNetto}\r\n                          readOnly={true}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-lg-3\">\r\n                        <label htmlFor=\"\">Grand Total Netto Ext</label>\r\n                        <input\r\n                          name=\"totalNWExt\"\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          label=\"totalNWExt\"\r\n                          onChange={this.inputChange(\"totalNWExt\")}\r\n                          // onBlur={this.inputGrandTotal(\"totalNWExt\")}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n                <div className=\"col-lg-12 col-md-12 mt-3\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-6\"></div>\r\n                    <div className=\"col-lg-6\">\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          onClick={() => this.props.dispatch(showModal())}\r\n                        >\r\n                          Tambah Barang\r\n                          <i class=\"fa fa-plus ml-3\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-12 mt-5\">\r\n                  {this.props.transaksiPenjualan ? (\r\n                    <ToolkitProvider\r\n                      keyField=\"id\"\r\n                      data={this.props.transaksiPenjualan}\r\n                      columns={this.state.columns}\r\n                      search\r\n                    >\r\n                      {(props) => (\r\n                        <div className=\"form-group\">\r\n                          <BootstrapTable\r\n                            {...props.baseProps}\r\n                            striped\r\n                            hover\r\n                            condensed\r\n                            bordered={true}\r\n                            headerClasses=\"header-table\"\r\n                            pagination={paginationFactory()}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </ToolkitProvider>\r\n                  ) : (\r\n                    <ToolkitProvider\r\n                      keyField=\"id\"\r\n                      data={[]}\r\n                      columns={this.state.columns}\r\n                      search\r\n                    >\r\n                      {(props) => (\r\n                        <div className=\"form-group\">\r\n                          <BootstrapTable\r\n                            {...props.baseProps}\r\n                            striped\r\n                            hover\r\n                            condensed\r\n                            bordered={true}\r\n                            headerClasses=\"header-table\"\r\n                            pagination={paginationFactory()}\r\n                            noDataIndication=\"Tidak Ada Data\"\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </ToolkitProvider>\r\n                  )}\r\n                  <div className=\"text-right\">\r\n                    <button\r\n                      className=\"btn btn-primary\"\r\n                      disabled={this.props.onSend}\r\n                      onClick={() => this.transaksiPenjualanSubmit()}\r\n                    >\r\n                      {this.props.onSend ? (\r\n                        <span\r\n                          className=\"spinner-border spinner-border-sm mr-3\"\r\n                          aria-hidden=\"true\"\r\n                        ></span>\r\n                      ) : null}\r\n                      Simpan\r\n                      <i class=\"fa fa-paper-plane ml-3\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ModalMasterData\r\n          content={\r\n            <Suspense\r\n              fallback={<Skeleton width={\"100%\"} height={50} count={4} />}\r\n            >\r\n              <FormTransaksiPenjualan\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n              />\r\n            </Suspense>\r\n          }\r\n          title=\"Tambah Data\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTransaksiPenjualan = reduxForm({\r\n  form: \"TransaksiPenjualan\",\r\n  enableReinitialize: true,\r\n})(TransaksiPenjualan);\r\nexport default connect(maptostate, null)(TransaksiPenjualan);\r\n","import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;","import React, { Component } from \"react\";\r\n\r\nclass HeaderCard extends Component {\r\n  render() {\r\n    return (\r\n      <h4\r\n        className=\"card-header mb-3\"\r\n        style={{\r\n          fontSize: 25,\r\n          backgroundColor: \"#394867\",\r\n          borderTopLeftRadius: 10,\r\n          borderTopRightRadius: 10,\r\n          height: 50,\r\n          color: \"#ffffff\",\r\n        }}\r\n      >\r\n        {this.props.title}\r\n      </h4>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderCard;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst PrintNota = (\r\n  row1name = \"\",\r\n  row1isi = \"\",\r\n  row2name = \"\",\r\n  row2isi = \"\",\r\n  row3name = \"\",\r\n  row3isi = \"\",\r\n  row4name = \"\",\r\n  row4isi = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n  validby = \"\",\r\n  tableColumn = [],\r\n  title = \"\",\r\n  tableRows\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  // var tickets = JSON.parse(data);\r\n  // define the columns we want and their titles\r\n\r\n  // // define an empty array of rows\r\n  // const tableRows = [];\r\n\r\n  // // for each ticket pass all its data into an array\r\n  // tickets.forEach((ticket, i) => {\r\n  //   const ticketData = [\r\n  //     i++,\r\n  //     ticket.kodeJenis01,\r\n  //     ticket.bruto01,\r\n  //     ticket.kadarTransaksi01,\r\n  //     ticket.netto01,\r\n  //     ticket.kodeJenis02,\r\n  //     ticket.bruto02,\r\n  //     ticket.kadarTransaksi02,\r\n  //     ticket.netto02,\r\n  //   ];\r\n  //   // push each tickcet's info into a row\r\n  //   tableRows.push(ticketData);\r\n  // });\r\n\r\n  // startY is basically margin-top\r\n  doc.autoTable(tableColumn, tableRows, { startY: 40 });\r\n  let finalY = doc.lastAutoTable.finalY + 10;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(title, 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(row1name, 14, 25);\r\n  doc.text(\":\", 37, 25);\r\n  doc.text(row1isi, 40, 25);\r\n  doc.text(row2name, 120, 25);\r\n  doc.text(\":\", 141, 25);\r\n  doc.text(row2isi, 145, 25);\r\n  //row 2\r\n  doc.text(row3name, 14, 30);\r\n  doc.text(\":\", 37, 30);\r\n  doc.text(row3isi, 40, 30);\r\n  doc.text(row4name, 120, 30);\r\n  doc.text(\":\", 141, 30);\r\n  doc.text(row4isi, 145, 30);\r\n\r\n  //Stamp\r\n  doc.text(\"User\", 160, finalY + 10);\r\n  doc.text(\":\", 168, finalY + 10);\r\n  doc.text(username, 170, finalY + 10);\r\n  doc.text(\"Cetak\", 160, finalY + 15);\r\n  doc.text(\":\", 168, finalY + 15);\r\n  doc.text(tanggal, 170, finalY + 15);\r\n  doc.text(\"Valid\", 160, finalY + 20);\r\n  doc.text(\":\", 168, finalY + 20);\r\n  doc.text(validby, 170, finalY + 20);\r\n  // doc.autoPrint();\r\n  // doc.save(`${title}_${dateStr}.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  x.document.close();\r\n};\r\n\r\nexport default PrintNota;\r\n"],"sourceRoot":""}