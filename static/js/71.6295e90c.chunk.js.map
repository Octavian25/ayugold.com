{"version":3,"sources":["FICO/ValidasiPembayaranGiro.jsx","FICO/Component/FormValidasiTransferCustomer.jsx","FICO/Element/Validasi.jsx"],"names":["ValidasiPembayaranGiro","props","state","data","console","log","className","onSubmit","handleSubmit","id","tabIndex","role","aria-labelledby","aria-hidden","type","name","data-dismiss","from","Component","FormValidasiTransferCustomer","inputChange","input","e","setState","target","value","columns","dataField","text","csvExport","formatter","rowContent","row","data-toggle","data-target","onClick","dispatch","setTotalBon","saldoRp","products","tanggal","namaToko","noBon","keterangan","noRekening","searchText","this","change","cashNetto","transferNetto","htmlFor","defaultValue","key","onChange","searchList","keyField","bordered","headerClasses","reduxForm","form","enableReinitialize","selector","formValueSelector","connect","harga","cash","transfer","parseFloat","toFixed","renderField","label","limit","readOnly","meta","touched","error","warning","min","step","maxLength","Validasi","component","initialValues","totalBon","provinsi"],"mappings":"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","file":"static/js/71.6295e90c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport FormValidasiTransferCustomer from \"./Component/FormValidasiTransferCustomer\";\r\nimport Validasi from \"./Element/Validasi\";\r\n\r\nclass ValidasiPembayaranGiro extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    console.log(data);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"col-lg-12 col-d-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <FormValidasiTransferCustomer\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          id=\"primary-header-modal\"\r\n          className=\"modal fade\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"primary-header-modalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header modal-colored-header bg-primary\">\r\n                <h4 className=\"modal-title\" id=\"primary-header-modalLabel\">\r\n                  Tambah Data Lokasi\r\n                </h4>\r\n                <button\r\n                  type=\"button\"\r\n                  id=\"dismiss_modal\"\r\n                  name=\"dismiss_modal\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  Ã—\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <Validasi\r\n                  onSubmit={(data) => this.handleSubmit(data)}\r\n                  from=\"giro\"\r\n                />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-light\"\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ValidasiPembayaranGiro;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm, formValueSelector } from \"redux-form\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { setTotalBon } from \"../../actions/TrasferCustomerAction\";\r\n\r\nclass FormValidasiTransferCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [\r\n        {\r\n          dataField: \"tanggal\",\r\n          text: \"Tanggal\",\r\n        },\r\n        {\r\n          dataField: \"namaToko\",\r\n          text: \"Nama Toko\",\r\n        },\r\n        {\r\n          dataField: \"noBon\",\r\n          text: \"No Bon\",\r\n        },\r\n        {\r\n          dataField: \"keterangan\",\r\n          text: \"Keterangan\",\r\n        },\r\n        {\r\n          dataField: \"noRekening\",\r\n          text: \"Nomor Rekening\",\r\n        },\r\n        {\r\n          dataField: \"saldoRp\",\r\n          text: \"Saldo (Rp)\",\r\n        },\r\n        {\r\n          dataField: \"link\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-success mr-2\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#primary-header-modal\"\r\n                  onClick={() => this.props.dispatch(setTotalBon(row.saldoRp))}\r\n                >\r\n                  <i className=\"fa fa-check-circle mr-1\"></i>\r\n                  VALIDASI\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      products: [\r\n        {\r\n          tanggal: \"001\",\r\n          namaToko: \"BANDUNG\",\r\n          noBon: \"001\",\r\n          keterangan: \"TEst\",\r\n          noRekening: \"8888\",\r\n          saldoRp: \"1000000\",\r\n        },\r\n      ],\r\n      searchText: \"\",\r\n    };\r\n  }\r\n\r\n  onChange() {\r\n    this.props.change(\"cashNetto\", this.props.cashNetto);\r\n    this.props.change(\"transferNetto\", this.props.transferNetto);\r\n  }\r\n\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n  searchList() {\r\n    console.log(this.state.searchText);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"\">Kriteria</label>\r\n              <select\r\n                className=\"form-control\"\r\n                id=\"kriteria\"\r\n                name=\"kriteria\"\r\n                defaultValue=\"tanggalJanji\"\r\n              >\r\n                <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                  Tanggal Janji\r\n                </option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"\">Tanggal Janji</label>\r\n              <input\r\n                type=\"date\"\r\n                id=\"searchNoBon\"\r\n                onChange={this.inputChange(\"searchText\")}\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-1\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"\" className=\"text-white\">\r\n                .\r\n              </label>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary form-control\"\r\n                onClick={() => this.searchList()}\r\n              >\r\n                Cari\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12 col-lg-12 mt-3\">\r\n            <BootstrapTable\r\n              keyField=\"noTransaksi\"\r\n              data={this.state.products}\r\n              columns={this.state.columns}\r\n              bordered={true}\r\n              headerClasses=\"header-table\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12 col-md-12\">\r\n            <div className=\"text-right\">\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Simpan\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormValidasiTransferCustomer = reduxForm({\r\n  form: \"FormValidasiTransferCustomer\",\r\n  enableReinitialize: true,\r\n})(FormValidasiTransferCustomer);\r\nconst selector = formValueSelector(\"FormValidasiTransferCustomer\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { harga, cash, transfer } = selector(\r\n    state,\r\n    \"harga\",\r\n    \"cash\",\r\n    \"transfer\"\r\n  );\r\n  return {\r\n    cashNetto: (parseFloat(cash) / parseFloat(harga)).toFixed(3),\r\n    transferNetto: (parseFloat(transfer) / parseFloat(harga)).toFixed(3),\r\n  };\r\n})(FormValidasiTransferCustomer);\r\n","import React, { Component } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    initialValues: {\r\n      totalBon: state.provinsi.totalBon,\r\n    },\r\n  };\r\n};\r\n\r\nclass Validasi extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-12 col-md-12\">\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-4 col-md-4\">\r\n              <Field\r\n                name=\"cash\"\r\n                label=\"Cash\"\r\n                component={renderField}\r\n                type=\"number\"\r\n              />\r\n            </div>\r\n            {this.props.from === \"transfer\" ? (\r\n              <>\r\n                <div className=\"col-lg-4 col-md-4\">\r\n                  <Field\r\n                    name=\"transfer\"\r\n                    label=\"Transfer\"\r\n                    component={renderField}\r\n                    type=\"number\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4 col-md-4\">\r\n                  <Field\r\n                    name=\"tanggal\"\r\n                    label=\"Tanggal\"\r\n                    component={renderField}\r\n                    type=\"date\"\r\n                  ></Field>\r\n                </div>\r\n                <div className=\"col-lg-4 col-md-4\">\r\n                  <Field\r\n                    name=\"a/cAsal\"\r\n                    label=\"A/C Asal\"\r\n                    component={renderField}\r\n                    type=\"text\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4 col-md-4\">\r\n                  <label htmlFor=\"\">A/C Tujuan</label>\r\n                  <Field\r\n                    name=\"a/cTujuan\"\r\n                    component=\"select\"\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                      Silahkan Pilih\r\n                    </option>\r\n                  </Field>\r\n                </div>\r\n                <div className=\"col-lg-4 col-md-4\"></div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <div className=\"col-lg-4 col-md-4\">\r\n                  <Field\r\n                    name=\"giro\"\r\n                    label=\"Giro\"\r\n                    component={renderField}\r\n                    type=\"number\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4 col-md-4\">\r\n                  <Field\r\n                    name=\"noGiro\"\r\n                    label=\"No Giro\"\r\n                    component={renderField}\r\n                    type=\"number\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4 col-md-4\">\r\n                  <Field\r\n                    name=\"bank\"\r\n                    label=\"Bank\"\r\n                    component={renderField}\r\n                    type=\"number\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4 col-md-4\">\r\n                  <Field\r\n                    name=\"tanggalJ/T\"\r\n                    label=\"Tanggal Jatuh Tempo\"\r\n                    component={renderField}\r\n                    type=\"number\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4 col-md-4\">\r\n                  <Field\r\n                    name=\"tanggal\"\r\n                    label=\"Tanggal\"\r\n                    component={renderField}\r\n                    type=\"date\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4 col-md-4\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"\">A/C Tujuan</label>\r\n                    <Field\r\n                      name=\"a/cTujuan\"\r\n                      component=\"select\"\r\n                      className=\"form-control\"\r\n                    >\r\n                      <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                        Silahkan Pilih\r\n                      </option>\r\n                    </Field>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-8 col-md-8\">\r\n                  <div></div>\r\n                </div>\r\n              </>\r\n            )}\r\n            <div className=\"col-lg-4 col-md-4\">\r\n              <Field\r\n                name={this.props.from === \"transfer\" ? \"totalBon\" : \"awal\"}\r\n                label={this.props.from === \"transfer\" ? \"Total Bon\" : \"Awal\"}\r\n                component={renderField}\r\n                type=\"number\"\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4 col-md-4\">\r\n              <Field\r\n                name=\"totalBayar\"\r\n                label=\"Total Bayar\"\r\n                component={renderField}\r\n                type=\"number\"\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4 col-md-4\">\r\n              <Field\r\n                name={this.props.from === \"transfer\" ? \"sisaBon\" : \"akhir\"}\r\n                label={this.props.from === \"transfer\" ? \"Sisa Bon\" : \"Akhir\"}\r\n                component={renderField}\r\n                type=\"text\"\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <div className=\"text-right\">\r\n                <button className=\"btn btn-primary\" type=\"submit\">\r\n                  Tambah\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nValidasi = reduxForm({\r\n  form: \"Validasi\",\r\n  enableReinitialize: true,\r\n})(Validasi);\r\nexport default connect(maptoState, null)(Validasi);\r\n"],"sourceRoot":""}