{"version":3,"sources":["../node_modules/redux-form/es/index.js","Validations/validasiHeadMutasiBarang.js","Stocking/Component/HeadMutasiBarang.jsx","Stocking/MutasiBarang.jsx","deleteLocalStorage.js"],"names":["reset","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","change","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors","validasiHeadMutasiBarang","value","errors","tanggal","noMutasi","bonMutasi","kategori","lokasi","HeadMutasiBarang","props","state","listKategori","nama","AxiosMasterGet","then","res","setState","data","catch","err","console","log","this","getToday","localStorage","getItem","onSubmit","handleSubmit","className","Field","component","renderField","normalize","toUpperCase","label","type","name","readOnly","id","renderFieldSelect","options","map","list","onKeyPress","e","key","preventDefault","kodeLokasi","namaLokasi","disabled","onSend","onClick","aria-hidden","Component","reduxForm","form","enableReinitialize","validate","connect","FormMutasiBarang","lazy","ModalMasterData","expandRow","renderer","row","kodeJenis02","keteranganTujuan","kadarTransaksi02","kadarCetak02","pkg02","bruto02","netto02","serverNonMaster","process","REACT_APP_BACKEND_URL_NON_MASTER","MutasiBarang","onChange","input","target","kodeJenis","kodeJenisTujuan","keterangan","noBon","columns","dataField","isDummyField","text","formatter","csvExport","rowContent","rowIndex","data-tip","data-for","deleteIndex","dispatch","getListMutasiBarang","effect","getUUID","getBruto","getNetto","getPkg","getQty","getGross","result_explode","kodeBarang","split","result","kodeBarangTujuan","barang1","JSON","parse","simpan","noFaktur","bruto01","parseFloat","bruto","toFixed","brutoTujuan","kadarCetak01","kadar","kadarTujuan","kadarTransaksi01","kadarTransaksi","kadarTransaksiTujuan","netto01","netto","nettoTujuan","pkg01","pkg","pkgTujuan","qty01","qty02","gross01","gross02","kodeJenis01","kodeKategori01","kodeKategori02","k01","k02","p01","p02","push","setItem","stringify","Swal","fire","position","icon","showConfirmButton","timer","warning","kategoriTransaksi","tipeFaktur","barangDetailList","footerItem","totalBruto","totalNetto","totalQty","totalGross","totalK","totalP","totalpkg","totalNettoExt","totalRp","footerDocument","inputBy","username","progressSend","tableRows","forEach","ticket","i","ticketData","columTable","Axios","post","finishSend","removeItem","PrintNota","forceUpdate","style","color","HeaderCard","title","submitMutasiBarang","data-toggle","showModal","listBarang","keyField","bordered","headerClasses","noDataIndication","content","fallback","width","height","count","provinsi","mutasiBarang","sumBruto","perhitungan","sumNetto","sumPkg","sumQty","sumGross","deleteLocalStorage","keyRemove","index","func","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","array","splice","deleteIndexUpdatetotalNW","Promise","resolve","reject"],"mappings":"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","file":"static/js/89.c47cf715.chunk.js","sourcesContent":["import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;","const validasiHeadMutasiBarang = (value) => {\r\n  const errors = {};\r\n  if (!value.tanggal) {\r\n    errors.tanggal = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.noMutasi) {\r\n    errors.noMutasi = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.bonMutasi) {\r\n    errors.bonMutasi = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.kategori) {\r\n    errors.kategori = \"Tidak Boleh kosong\";\r\n  }\r\n\r\n  if (!value.lokasi) {\r\n    errors.lokasi = \"Tidak Boleh kosong\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default validasiHeadMutasiBarang;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport { getToday, SkeletonLoading } from \"../../getDate\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport validasiHeadMutasiBarang from \"../../Validations/validasiHeadMutasiBarang\";\r\n\r\nclass HeadMutasiBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lokasi: false,\r\n      listKategori: [\r\n        {\r\n          nama: \"AMBIL BARANG\",\r\n        },\r\n        {\r\n          nama: \"KEMBALI STOK\",\r\n        },\r\n        {\r\n          nama: \"KOREKSI STOK\",\r\n        },\r\n        {\r\n          nama: \"MUTASI BAHAN\",\r\n        },\r\n        {\r\n          nama: \"PENGAMBILAN SALES\",\r\n        },\r\n        {\r\n          nama: \"PINDAH\",\r\n        },\r\n        {\r\n          nama: \"PINDAH GUDANG REPARASI\",\r\n        },\r\n        {\r\n          nama: \"RETURN SALES\",\r\n        },\r\n        {\r\n          nama: \"SALAH INPUT\",\r\n        },\r\n        {\r\n          nama: \"SALAH PINDAH\",\r\n        },\r\n        {\r\n          nama: \"STOK AWAL\",\r\n        },\r\n        {\r\n          nama: \"TAMBAH BARANG\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"storages2?tipeData=LOKASI\")\r\n      .then((res) =>\r\n        this.setState({\r\n          lokasi: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    this.props.change(\"tanggal\", getToday);\r\n    this.props.change(\"noMutasi\", localStorage.getItem(\"noFaktur\"));\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 form-group\">\r\n            <Field\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              label=\"Nomor Mutasi\"\r\n              type=\"text\"\r\n              name=\"noMutasi\"\r\n              className=\"form-control\"\r\n              readOnly\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 form-group\">\r\n            <Field\r\n              type=\"date\"\r\n              label=\"Tanggal\"\r\n              id=\"tanggal\"\r\n              name=\"tanggal\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 form-group\">\r\n            <Field\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              label=\"Bon Mutasi\"\r\n              type=\"text\"\r\n              id=\"bonMutasi\"\r\n              name=\"bonMutasi\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 form-group\">\r\n            <Field\r\n              id=\"kategori\"\r\n              label=\"Kategori\"\r\n              name=\"kategori\"\r\n              component={renderFieldSelect}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              options={this.state.listKategori.map((list) => {\r\n                let data = {\r\n                  value: list.nama,\r\n                  name: list.nama,\r\n                };\r\n                return data;\r\n              })}\r\n            ></Field>\r\n          </div>\r\n          <div className=\"col-md-4 form-group\">\r\n            <Field\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              label=\"Keterangan\"\r\n              type=\"text\"\r\n              id=\"keterangan\"\r\n              name=\"keterangan\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 form-group\">\r\n            {this.state.lokasi ? (\r\n              <Field\r\n                label=\"Lokasi\"\r\n                component={renderFieldSelect}\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                type=\"text\"\r\n                id=\"lokasi\"\r\n                name=\"lokasi\"\r\n                onKeyPress={(e) => {\r\n                  e.key === \"Enter\" && e.preventDefault();\r\n                }}\r\n                options={this.state.lokasi.map((list) => {\r\n                  let data = {\r\n                    value: list.kodeLokasi,\r\n                    name: list.namaLokasi,\r\n                  };\r\n                  return data;\r\n                })}\r\n              ></Field>\r\n            ) : (\r\n              <SkeletonLoading label=\"Lokasi\" />\r\n            )}\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-4 mb-3\">\r\n            <div className=\"text-left\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                disabled={this.props.onSend}\r\n                type=\"button\"\r\n                onClick={this.props.handleSubmit}\r\n              >\r\n                {this.props.onSend ? (\r\n                  <span\r\n                    className=\"spinner-border spinner-border-sm mr-3\"\r\n                    aria-hidden=\"true\"\r\n                  ></span>\r\n                ) : null}\r\n                SIMPAN\r\n                <i className=\"fa fa-paper-plane ml-3\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadMutasiBarang = reduxForm({\r\n  form: \"HeadMutasiBarang\",\r\n  enableReinitialize: true,\r\n  validate: validasiHeadMutasiBarang,\r\n})(HeadMutasiBarang);\r\nexport default connect()(HeadMutasiBarang);\r\n","import React, { Component, lazy, Suspense } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\n\r\nimport { getListMutasiBarang } from \"../actions/mutasiBarangAction\";\r\nimport Swal from \"sweetalert2\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset } from \"redux-form\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport {\r\n  finishSend,\r\n  getBruto,\r\n  getGross,\r\n  getNetto,\r\n  getPkg,\r\n  getQty,\r\n  progressSend,\r\n} from \"../actions/LogicAction\";\r\nimport Axios from \"axios\";\r\nimport PrintNota from \"./Component/PrintNota\";\r\nimport { warning } from \"../Alert\";\r\nimport { deleteIndex } from \"../deleteLocalStorage\";\r\nimport HeadMutasiBarang from \"./Component/HeadMutasiBarang\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { showModal } from \"../actions/ModalAction\";\r\nimport HeaderCard from \"../HeaderCard\";\r\n\r\nconst FormMutasiBarang = lazy(() => import(\"./Component/FormMutasiBarang\"));\r\nconst ModalMasterData = lazy(() =>\r\n  import(\"../DataMaster/Component/ModalMasterData\")\r\n);\r\nconst expandRow = {\r\n  renderer: (row) => (\r\n    <div>\r\n      <p>{`Tujuan`}</p>\r\n      <p>{`Kode Tujuan : ${row.kodeJenis02} | Keterangan : ${row.keteranganTujuan} | Kat Harga : ${row.kadarTransaksi02} | Kadar : ${row.kadarCetak02} | Pkg(Gr): ${row.pkg02}`}</p>\r\n      <p>{`Bruto(Gr) : ${row.bruto02} | Harga Tujuan : ${row.kadarTransaksi02} | Netto : ${row.netto02}`}</p>\r\n    </div>\r\n  ),\r\n};\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    listBarang: state.provinsi.mutasiBarang,\r\n    noFaktur: state.provinsi.noFaktur,\r\n    username: state.provinsi.username,\r\n    sumBruto: state.perhitungan.sumBruto,\r\n    sumNetto: state.perhitungan.sumBruto,\r\n    sumPkg: state.perhitungan.sumPkg,\r\n    sumQty: state.perhitungan.sumQty,\r\n    sumGross: state.perhitungan.sumGross,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\n\r\nconst serverNonMaster = process.env.REACT_APP_BACKEND_URL_NON_MASTER;\r\nclass MutasiBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lokasi: [],\r\n      kodeJenis: \"\",\r\n      kodeJenisTujuan: \"\",\r\n      noMutasi: \"\",\r\n      kodeLokasi: \"\",\r\n      tanggal: \"\",\r\n      keterangan: \"\",\r\n      kategori: \"\",\r\n      noBon: \"\",\r\n      columns: [\r\n        {\r\n          dataField: \"Lihat Detail\",\r\n          isDummyField: true,\r\n          text: \"Lihat Detail\",\r\n          formatter: (row) => {\r\n            return (\r\n              <span>\r\n                <i className=\"fa fa-chevron-down\"></i>\r\n              </span>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          dataField: \"kodeJenis01\",\r\n          text: \"Kode Barang\",\r\n        },\r\n        {\r\n          dataField: \"keterangan\",\r\n          text: \"Keterangan\",\r\n        },\r\n        {\r\n          dataField: \"kadarTransaksi01\",\r\n          text: \"Kat Harga\",\r\n        },\r\n        {\r\n          dataField: \"kadarCetak01\",\r\n          text: \"Kadar\",\r\n        },\r\n        {\r\n          dataField: \"pkg01\",\r\n          text: \"Pkg (Gr)\",\r\n        },\r\n        {\r\n          dataField: \"bruto01\",\r\n          text: \"Bruto (Gr)\",\r\n        },\r\n        {\r\n          dataField: \"kadarTransaksi01\",\r\n          text: \"Harga\",\r\n        },\r\n        {\r\n          dataField: \"netto01\",\r\n          text: \"Netto (Gr)\",\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row, rowIndex) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  data-tip\r\n                  data-for=\"hapus\"\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() =>\r\n                    deleteIndex(\r\n                      \"mutasiBarang\",\r\n                      rowIndex,\r\n                      this.props.dispatch,\r\n                      getListMutasiBarang()\r\n                    )\r\n                  }\r\n                >\r\n                  <ReactTooltip id=\"hapus\" type=\"dark\" effect=\"solid\">\r\n                    <span>Hapus</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-trash\"></i>\r\n                </button>\r\n                <br />\r\n                {/* <button\r\n                  data-tip\r\n                  data-for=\"edit\"\r\n                  className=\"btn btn-warning mr-2\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#editModal\"\r\n                  onClick={() => console.log(\"EDIT\")}\r\n                >\r\n                  <ReactTooltip id=\"edit\" type=\"dark\" effect=\"solid\">\r\n                    <span>Edit</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-edit mr-1\"></i>\r\n                </button> */}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListMutasiBarang());\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getBruto(\"mutasiBarang\"));\r\n    this.props.dispatch(getNetto(\"mutasiBarang\"));\r\n    this.props.dispatch(getPkg(\"mutasiBarang\"));\r\n    this.props.dispatch(getQty(\"mutasiBarang\"));\r\n    this.props.dispatch(getGross(\"mutasiBarang\"));\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    var supp = data.kodeBarang\r\n      ? data.kodeBarang\r\n      : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n    });\r\n    var supp1 = data.kodeBarangTujuan\r\n      ? data.kodeBarangTujuan\r\n      : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result = supp1.split(\"|\");\r\n    this.setState({\r\n      kodeJenisTujuan: result[0],\r\n    });\r\n    var barang1 = JSON.parse(localStorage.getItem(\"mutasiBarang\")) || [];\r\n    var simpan = {\r\n      noFaktur: this.props.noFaktur.toUpperCase(),\r\n      bruto01: parseFloat(data.bruto).toFixed(3),\r\n      bruto02: parseFloat(data.brutoTujuan).toFixed(3),\r\n      kadarCetak01: parseFloat(data.kadar).toFixed(3),\r\n      kadarCetak02: parseFloat(data.kadarTujuan).toFixed(3),\r\n      kadarTransaksi01: parseFloat(data.kadarTransaksi).toFixed(3),\r\n      kadarTransaksi02: parseFloat(data.kadarTransaksiTujuan).toFixed(3),\r\n      keterangan: data.keterangan,\r\n      keteranganTujuan: data.keteranganTujuan,\r\n      netto01: parseFloat(data.netto).toFixed(3),\r\n      netto02: parseFloat(data.nettoTujuan).toFixed(3),\r\n      pkg01: parseFloat(data.pkg).toFixed(3),\r\n      pkg02: parseFloat(data.pkgTujuan).toFixed(3),\r\n      qty01: 1,\r\n      qty02: 1,\r\n      gross01: (parseFloat(data.bruto) + parseFloat(data.pkg)).toFixed(3),\r\n      gross02: (\r\n        parseFloat(data.brutoTujuan) + parseFloat(data.pkgTujuan)\r\n      ).toFixed(3),\r\n      kodeJenis01: result_explode[0].toUpperCase(),\r\n      kodeJenis02: result[0].toUpperCase(),\r\n      kodeKategori01: \"-\",\r\n      kodeKategori02: \"-\",\r\n      k01: 0,\r\n      k02: 0,\r\n      p01: 0,\r\n      p02: 0,\r\n    };\r\n    barang1.push(simpan);\r\n    localStorage.setItem(\"mutasiBarang\", JSON.stringify(barang1));\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      text: \"Data Berhasil Ditambahkan!\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    })\r\n      .then(() => this.props.dispatch(reset(\"FormMutasiBarang\")))\r\n      .then(() => this.props.dispatch(getListMutasiBarang()));\r\n  }\r\n  onChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  submitMutasiBarang(data) {\r\n    if (localStorage.getItem(\"mutasiBarang\") === null) {\r\n      warning(\"Mohon Tambahkan Barang Yang akan dipindahkan\");\r\n      return false;\r\n    }\r\n    var simpan = {\r\n      tanggal: data.tanggal,\r\n      noFaktur: this.props.noFaktur,\r\n      noBon: data.noBon,\r\n      kategoriTransaksi: data.kategori,\r\n      keterangan: data.keterangan,\r\n      kodeLokasi: data.kodeLokasi,\r\n      tipeFaktur: \"-\",\r\n      barangDetailList: JSON.parse(localStorage.getItem(\"mutasiBarang\")),\r\n      footerItem: {\r\n        totalBruto: 0,\r\n        totalNetto: 0,\r\n        totalQty: 0,\r\n        totalGross: 0,\r\n        totalK: 0,\r\n        totalP: 0,\r\n        totalpkg: 0,\r\n        totalNettoExt: 0,\r\n        totalRp: 0,\r\n      },\r\n      footerDocument: {\r\n        inputBy: this.props.username, //INPUT BY DEFAULT\r\n      },\r\n    };\r\n    console.log(JSON.stringify(simpan));\r\n    this.props.dispatch(progressSend());\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    var table = JSON.parse(localStorage.getItem(\"mutasiBarang\"));\r\n    // for each ticket pass all its data into an array\r\n    table.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        i++,\r\n        ticket.kodeJenis01,\r\n        ticket.bruto01,\r\n        ticket.kadarTransaksi01,\r\n        ticket.netto01,\r\n        ticket.kodeJenis02,\r\n        ticket.bruto02,\r\n        ticket.kadarTransaksi02,\r\n        ticket.netto02,\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    console.log(tableRows);\r\n    var columTable = [\r\n      \"No\",\r\n      \"Kode Awal\",\r\n      \"Bruto\",\r\n      \"Harga (%)\",\r\n      \"Netto Awal\",\r\n      \"Kode Tujuan\",\r\n      \"Harga (%)\",\r\n      \"Netto Akhir\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    Axios.post(serverNonMaster + \"item/dc/mutasibarang\", simpan)\r\n      .then(() =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Transaksi Berhasil\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => localStorage.removeItem(\"noFaktur\"))\r\n          .then(() => this.props.dispatch(reset(\"HeadMutasiBarang\")))\r\n          .then(() =>\r\n            PrintNota(\r\n              \"Tanggal\",\r\n              data.tanggal,\r\n              \"\",\r\n              \"\",\r\n              \"Nomor Bon\",\r\n              data.noBon,\r\n              \"\",\r\n              \"\",\r\n              \"ADMIN\",\r\n              data.tanggal,\r\n              \"\",\r\n              columTable,\r\n              \"MUTASI BARANG\",\r\n              tableRows\r\n            )\r\n          )\r\n          .then(() => localStorage.removeItem(\"mutasiBarang\"))\r\n          .then(() => this.props.dispatch(getListMutasiBarang()))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() =>\r\n            this.setState({\r\n              kodeJenis: \"\",\r\n              kodeJenisTujuan: \"\",\r\n              noMutasi: \"\",\r\n              kodeLokasi: \"\",\r\n              tanggal: \"\",\r\n              keterangan: \"\",\r\n              kategori: \"\",\r\n              noBon: \"\",\r\n            })\r\n          )\r\n          .then(() => this.forceUpdate())\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text: \"Sepertinya ada kendala, silahkan cek koneksi\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() => console.log(err))\r\n          .then(() => this.props.dispatch(finishSend()))\r\n      );\r\n    this.props.dispatch(getListMutasiBarang());\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Mutasi Barang\" />\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <HeadMutasiBarang\r\n                      onSubmit={(data) => this.submitMutasiBarang(data)}\r\n                      onSend={this.props.onSend}\r\n                      noFaktur={this.props.noFaktur}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-lg-4\"></div>\r\n                  <div className=\"col-lg-4 col-md-4 mb-3\">\r\n                    <div className=\"text-center\">\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        disabled\r\n                      >\r\n                        BARCODE (+)\r\n                      </button>\r\n                      <button\r\n                        className=\"btn btn-primary ml-2\"\r\n                        data-toggle=\"modal\"\r\n                        disabled\r\n                      >\r\n                        BARCODE (-)\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-4 col-md-4 mb-3\">\r\n                    <div className=\"text-right\">\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        onClick={() => this.props.dispatch(showModal())}\r\n                      >\r\n                        TAMBAH BARANG\r\n                        <i className=\"fa fa-plus ml-3\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-12\">\r\n                    {this.props.listBarang ? (\r\n                      <BootstrapTable\r\n                        keyField=\"id\"\r\n                        data={this.props.listBarang}\r\n                        columns={this.state.columns}\r\n                        bordered={true}\r\n                        headerClasses=\"header-table\"\r\n                        expandRow={expandRow}\r\n                      />\r\n                    ) : (\r\n                      <BootstrapTable\r\n                        keyField=\"id\"\r\n                        data={[]}\r\n                        columns={this.state.columns}\r\n                        bordered={true}\r\n                        headerClasses=\"header-table\"\r\n                        expandRow={expandRow}\r\n                        noDataIndication=\"Tidak Ada Data\"\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ModalMasterData\r\n          content={\r\n            <Suspense\r\n              fallback={<Skeleton width={\"100%\"} height={50} count={5} />}\r\n            >\r\n              <FormMutasiBarang onSubmit={(data) => this.handleSubmit(data)} />\r\n            </Suspense>\r\n          }\r\n          title=\"Tambah Data Mutasi Barang\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(MutasiBarang);\r\n","import Swal from \"sweetalert2\";\r\n\r\nexport const deleteLocalStorage = (keyRemove) => {\r\n  keyRemove.forEach((e) => {\r\n    localStorage.removeItem(e);\r\n  });\r\n};\r\n\r\nexport const deleteIndex = (nama, index, dispatch, func) => {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      const array = JSON.parse(localStorage.getItem(nama)) || [];\r\n      array.splice(index, 1);\r\n      localStorage.setItem(nama, JSON.stringify(array));\r\n      Swal.fire({\r\n        text: \"Berhasil\",\r\n        timer: 2000,\r\n        showConfirmButton: false,\r\n        position: \"top-right\",\r\n        icon: \"success\",\r\n      }).then(() => dispatch(func));\r\n    }\r\n  });\r\n};\r\nexport const deleteIndexUpdatetotalNW = (nama, index, dispatch, func) => {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      title: \"Anda Yakin ?\",\r\n      text: \"Anda Akan Menghapus Data Ini ?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        const array = JSON.parse(localStorage.getItem(nama)) || [];\r\n        array.splice(index, 1);\r\n        localStorage.setItem(nama, JSON.stringify(array));\r\n        Swal.fire({\r\n          text: \"Berhasil\",\r\n          timer: 2000,\r\n          showConfirmButton: false,\r\n          position: \"top-right\",\r\n          icon: \"success\",\r\n        })\r\n          .then(() => dispatch(func))\r\n          .then(resolve(\"Berhasil\"))\r\n          .catch(\"Gagal\");\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexport const deleteIndexUpdateNettoNW = (\r\n  nama,\r\n  index,\r\n  dispatch,\r\n  func,\r\n  nilai,\r\n  func2,\r\n  state\r\n) => {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      const array = JSON.parse(localStorage.getItem(nama)) || [];\r\n      array.splice(index, 1);\r\n      localStorage.setItem(nama, JSON.stringify(array));\r\n      var awal = localStorage.getItem(\"GrandTotalNetto\");\r\n      var hasil = parseFloat(awal) - parseFloat(nilai);\r\n      localStorage.setItem(\"GrandTotalNetto\", parseFloat(hasil).toFixed(3));\r\n      Swal.fire({\r\n        text: \"Berhasil\",\r\n        timer: 2000,\r\n        showConfirmButton: false,\r\n        position: \"top-right\",\r\n        icon: \"success\",\r\n      })\r\n        .then(() => dispatch(func))\r\n        .then(() => dispatch(func2));\r\n    }\r\n  });\r\n};\r\n"],"sourceRoot":""}