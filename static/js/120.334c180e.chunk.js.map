{"version":3,"sources":["Stocking/Component/FormTambahBarang.jsx"],"names":["currencyMask","createNumberMask","prefix","suffix","locale","renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","min","step","maxLength","FormTambahBarang","props","handleChange","e","result_explode","target","value","split","setState","kodeJenis","kadarCetak","kadarBeli","kadarJual","namaJenis","state","listBarang","Axios","get","server","then","res","data","catch","err","console","log","getTimbangan","this","change","netto","onSubmit","handleSubmit","name","component","onChange","onBlur","setKadar","key","KodeBarangList","map","list","kode_jenis","kadar_cetak","kadar_beli","kadar_jual","nama_jenis","kode_kategori","setNetto","defaultValue","Component","reduxForm","form","enableReinitialize","validate","validationPindahBarang","selector","formValueSelector","connect","bruto","kadarTransaksi","provinsi","kodeBarang","parseFloat","toFixed"],"mappings":"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","file":"static/js/120.334c180e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport Axios from \"axios\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport validationPindahBarang from \"../../Validations/validationPindahBarang\";\r\nimport { getTimbangan } from \"../../GetTimbangan\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nclass FormTambahBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listBarang: [],\r\n      kodeJenis: \"\",\r\n      kadarCetak: \"\",\r\n      kadarBeli: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Axios.get(server + \"subcategorys2?kodeKelompok=PERHIASAN\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listBarang: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    getTimbangan(this.props.change);\r\n  }\r\n\r\n  handleChange = (input) => (e) => {\r\n    var supp = e.target.value\r\n      ? e.target.value\r\n      : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n      kadarCetak: result_explode[1],\r\n      kadarBeli: result_explode[2],\r\n      kadarJual: result_explode[3],\r\n      namaJenis: result_explode[4],\r\n    });\r\n  };\r\n\r\n  setKadar() {\r\n    this.props.change(\"kadar\", this.state.kadarCetak);\r\n    this.props.change(\"kadarTransaksi\", this.state.kadarBeli);\r\n    this.props.change(\"kadarJual\", this.state.kadarJual);\r\n    this.props.change(\"keterangan\", this.state.namaJenis);\r\n  }\r\n  setNetto() {\r\n    this.props.change(\r\n      \"netto\",\r\n      this.props.netto === \"NaN\" ? 0 : this.props.netto\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 form-group\">\r\n            <label htmlFor=\"\">Kode Barang</label>\r\n            <Field\r\n              name=\"kodeBarang\"\r\n              component=\"select\"\r\n              className=\"form-control\"\r\n              onChange={this.handleChange()}\r\n              onBlur={this.setKadar()}\r\n            >\r\n              <option value=\"DEFAULT|DEFAULT|DEFAULT\" key=\"DEFAULT\">\r\n                SILAHKAN PILIH\r\n              </option>\r\n              {this.props.KodeBarangList.map((list) => (\r\n                <option\r\n                  value={\r\n                    list.kode_jenis +\r\n                    \"|\" +\r\n                    list.kadar_cetak +\r\n                    \"|\" +\r\n                    list.kadar_beli +\r\n                    \"|\" +\r\n                    list.kadar_jual +\r\n                    \"|\" +\r\n                    list.nama_jenis +\r\n                    \"|\" +\r\n                    list.kode_kategori\r\n                  }\r\n                  key={list.kode_jenis}\r\n                >\r\n                  {list.nama_jenis}\r\n                </option>\r\n              ))}\r\n            </Field>\r\n          </div>\r\n          <div className=\"col-md-4 form-group\">\r\n            <Field\r\n              name=\"keterangan\"\r\n              label=\"Keterangan\"\r\n              component={renderField}\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-5\"></div>\r\n          <div className=\"col-md-2 form-group\">\r\n            <Field\r\n              name=\"kadar\"\r\n              label=\"Kadar (%)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2 form-group\">\r\n            <Field\r\n              name=\"pkg\"\r\n              label=\"Pkg (Gr)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              onBlur={this.setNetto()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2 form-group\">\r\n            <Field\r\n              name=\"bruto\"\r\n              label=\"Bruto (Gr)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              onBlur={this.setNetto()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2 form-group\">\r\n            <Field\r\n              name=\"kadarTransaksi\"\r\n              label=\"Harga (%)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2 form-group\">\r\n            <Field\r\n              name=\"netto\"\r\n              label=\"Netto (Gr)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 form-group\">\r\n            <label htmlFor=\"\">Ongkos (Rp)</label>\r\n            <Field\r\n              name=\"ongkos\"\r\n              label=\"Ongkos (Rp)\"\r\n              component=\"input\"\r\n              type=\"telp\"\r\n              className=\"form-control\"\r\n              defaultValue={0}\r\n              {...currencyMask}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 form-group\">\r\n            <div className=\"text-right\">\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Simpan\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormTambahBarang = reduxForm({\r\n  form: \"FormTambahBarang\",\r\n  enableReinitialize: true,\r\n  validate: validationPindahBarang,\r\n})(FormTambahBarang);\r\nconst selector = formValueSelector(\"FormTambahBarang\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi } = selector(state, \"bruto\", \"kadarTransaksi\");\r\n  return {\r\n    KodeBarangList: state.provinsi.kodeBarang,\r\n    netto: (parseFloat(bruto) * (parseFloat(kadarTransaksi) / 100)).toFixed(3),\r\n  };\r\n})(FormTambahBarang);\r\n"],"sourceRoot":""}