{"version":3,"sources":["Transaksi/ReturnSupplier.jsx","GlobalComponent/EmptyTable.jsx","GlobalComponent/GlobalTabel.jsx","Images/emptyTable.svg","deleteLocalStorage.js","../node_modules/redux-form/es/index.js"],"names":["FormTerimaSupplier","lazy","ModalMasterData","ReturnSupplier","props","date","Date","formatedDate","getFullYear","getMonth","getDate","inputChange","input","e","setState","target","value","pilihSupplier","result_explode","split","kodeSupplier","namaSupplier","state","listSupplier","DataSupplier","tanggal","noReturn","noBon","status","totalNW","totalOngkir","dateStart","tampungBarang","tampungBarangLocal","columns","dataField","text","formatter","cell","parseFloat","toLocaleString","csvExport","rowContent","row","rowIndex","className","data-tip","data-for","onClick","deleteIndex","dispatch","getListReturnSupplier","id","type","effect","urutan","localStorage","getItem","this","getsupplierList","getUUID","setTotalOngkir","setTotalNW","data","barang","JSON","parse","kodeJenis","isi","no_urut","length","kode_jenis","keterangan","toUpperCase","kadar_cetak","kadar_beli","kadarTransaksi","kode_barcode","qty","plastik","p","kulit","k","pkg","gross","bruto","netto","ongkos_rp","rp","array","push","setItem","stringify","Swal","fire","position","icon","showConfirmButton","timer","then","reset","getReturnSupplierTemp","getNetto","getBruto","getRp","getPkg","getQty","explode","warning","total","map","list","reduce","a","b","simpan","no_retur","noFaktur","no_bon","kode_supplier","total_netto","tanggal_invoice","detail_barang","console","log","progressSend","tableRows","table","forEach","ticket","i","ticketData","toFixed","footer","columTable","AxiosMasterPost","res","PrintNota","finishSend","clear","document","getElementById","catch","err","style","color","title","content","fallback","width","height","count","from","onSubmit","handleSubmit","htmlFor","name","defaultValue","onChange","key","supplierList","nama_supplier","showModal","class","aria-hidden","keyField","disabled","onSend","kirimData","Component","connect","provinsi","supplier","returnSupplier","alert","error","username","sumBruto","perhitungan","sumNetto","sumRp","sumPkg","sumQty","EmptyTable","src","empty","alt","SearchBar","Search","ExportCSVButton","CSVExport","GlobalTabel","textEmpty","handleClick","tambahData","expandRow","selectRow","exportCSV","search","searchProps","pagination","paginationFactory","baseProps","striped","noDataIndication","csvProps","module","exports","deleteLocalStorage","keyRemove","removeItem","nama","index","func","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","splice","deleteIndexUpdatetotalNW","Promise","resolve","reject","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","change","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors"],"mappings":"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","file":"static/js/53.537f2503.chunk.js","sourcesContent":["import React, { Component, lazy, Suspense } from \"react\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { reset } from \"redux-form\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  getReturnSupplierTemp,\r\n  setTotalNW,\r\n  setTotalOngkir,\r\n} from \"../actions/terimaSupplierAction\";\r\nimport { getsupplierList } from \"../actions/supplierAction\";\r\nimport PrintNota from \"../Stocking/Component/PrintNota\";\r\nimport { warning } from \"../Alert\";\r\n// import { Link } from \"react-router-dom\";\r\nimport { deleteIndex } from \"../deleteLocalStorage\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { getListReturnSupplier } from \"../actions/returnSupplier\";\r\nimport {\r\n  finishSend,\r\n  getBruto,\r\n  getNetto,\r\n  getPkg,\r\n  getQty,\r\n  getRp,\r\n  progressSend,\r\n} from \"../actions/LogicAction\";\r\nimport { AxiosMasterPost } from \"../Axios\";\r\nimport { showModal } from \"../actions/ModalAction\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport GlobalTabel from \"../GlobalComponent/GlobalTabel\";\r\n\r\nconst FormTerimaSupplier = lazy(() => import(\"./Component/FormTerimaSupplier\"));\r\nconst ModalMasterData = lazy(() =>\r\n  import(\"../DataMaster/Component/ModalMasterData\")\r\n);\r\nconst maptostate = (state) => {\r\n  return {\r\n    supplierList: state.provinsi.supplier,\r\n    tampungBarang: state.provinsi.returnSupplier,\r\n    noFaktur: state.provinsi.noFaktur,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n    username: state.provinsi.username,\r\n    sumBruto: state.perhitungan.sumBruto,\r\n    sumNetto: state.perhitungan.sumNetto,\r\n    sumRp: state.perhitungan.sumRp,\r\n    sumPkg: state.perhitungan.sumPkg,\r\n    sumQty: state.perhitungan.sumQty,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\nclass ReturnSupplier extends Component {\r\n  constructor(props) {\r\n    var date = new Date();\r\n    var formatedDate = `${date.getFullYear()}-${\r\n      date.getMonth() + 1\r\n    }-${date.getDate()}`;\r\n    super(props);\r\n    this.state = {\r\n      listSupplier: [],\r\n      DataSupplier: [],\r\n      kodeSupplier: \"\",\r\n      namaSupplier: \"\",\r\n      tanggal: formatedDate,\r\n      noReturn: \"\",\r\n      noBon: \"\",\r\n      status: \"\",\r\n      totalNW: 0,\r\n      totalOngkir: 0,\r\n      dateStart: formatedDate,\r\n      tampungBarang: [],\r\n      tampungBarangLocal: [],\r\n      columns: [\r\n        {\r\n          dataField: \"kode_jenis\",\r\n          text: \"Kode Barang\",\r\n        },\r\n        {\r\n          dataField: \"kadar_cetak\",\r\n          text: \"Kadar Cetak(%)\",\r\n        },\r\n        {\r\n          dataField: \"plastik\",\r\n          text: \"P\",\r\n        },\r\n        {\r\n          dataField: \"kulit\",\r\n          text: \"K\",\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Bungkus(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Berat(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"kadar_beli\",\r\n          text: \"Harga(%)\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Murni(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"ongkos_rp\",\r\n          text: \"Ongkos(RP)\",\r\n          formatter: (cell) => (\r\n            <span>Rp. {parseFloat(cell).toLocaleString(\"ID-id\")}</span>\r\n          ),\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row, rowIndex) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  data-tip\r\n                  data-for=\"hapus\"\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() =>\r\n                    deleteIndex(\r\n                      \"ReturnSupplier\",\r\n                      rowIndex,\r\n                      this.props.dispatch,\r\n                      getListReturnSupplier()\r\n                    )\r\n                  }\r\n                >\r\n                  <ReactTooltip id=\"hapus\" type=\"dark\" effect=\"solid\">\r\n                    <span>Hapus</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                </button>\r\n                <br />\r\n                {/* <button\r\n                  data-tip\r\n                  data-for=\"edit\"\r\n                  className=\"btn btn-warning mr-2\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#editModal\"\r\n                  onClick={() => this.setEdit(row)}\r\n                >\r\n                  <ReactTooltip id=\"edit\" type=\"dark\" effect=\"solid\">\r\n                    <span>Edit</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-edit mr-1\"></i>\r\n                </button> */}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      urutan: localStorage.getItem(\"urutan\") || 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getsupplierList());\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getListReturnSupplier());\r\n    this.props.dispatch(setTotalOngkir());\r\n    this.props.dispatch(setTotalNW());\r\n  }\r\n\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  pilihSupplier = (input) => (e) => {\r\n    var supp = e.target.value ? e.target.value : \"DEFALT | DEFAULT\";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeSupplier: result_explode[0],\r\n      namaSupplier: result_explode[1],\r\n    });\r\n  };\r\n\r\n  handleSubmit(data) {\r\n    var barang = JSON.parse(localStorage.getItem(\"ReturnSupplier\")) || [];\r\n    var jenis = data.kodeJenis ? data.kodeJenis : \"DEFALT | DEFAULT\";\r\n    var result_explode = jenis.split(\"|\");\r\n    let isi = {\r\n      no_urut: barang.length + 1,\r\n      kode_jenis: result_explode[0],\r\n      keterangan: data.keterangan.toUpperCase(),\r\n      kadar_cetak: result_explode[2],\r\n      kadar_beli: parseFloat(data.kadarTransaksi),\r\n      kode_barcode: \"-\",\r\n      qty: 1,\r\n      plastik: parseFloat(data.p),\r\n      kulit: parseFloat(data.k),\r\n      pkg: parseFloat(data.pkg),\r\n      gross: parseFloat(data.gross),\r\n      bruto: parseFloat(data.bruto),\r\n      netto: parseFloat(data.netto),\r\n      ongkos_rp: parseFloat(data.rp || 0),\r\n    };\r\n    let array = JSON.parse(localStorage.getItem(\"ReturnSupplier\")) || [];\r\n    array.push(isi);\r\n    localStorage.setItem(\"ReturnSupplier\", JSON.stringify(array));\r\n    this.props.dispatch(getListReturnSupplier());\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      text: \"Data Berhasil Ditambahkan!\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    })\r\n      .then(() => this.props.dispatch(reset(\"TerimaSupplier\")))\r\n      .then(() => this.props.dispatch(getReturnSupplierTemp()))\r\n      .then(() => this.props.dispatch(setTotalNW()))\r\n      .then(() => this.props.dispatch(setTotalOngkir()));\r\n  }\r\n  getSumData() {\r\n    this.props.dispatch(getNetto(\"ReturnSupplier\"));\r\n    this.props.dispatch(getBruto(\"ReturnSupplier\"));\r\n    this.props.dispatch(getRp(\"ReturnSupplier\"));\r\n    this.props.dispatch(getPkg(\"ReturnSupplier\"));\r\n    this.props.dispatch(getQty(\"ReturnSupplier\"));\r\n  }\r\n\r\n  kirimData() {\r\n    var supplier = this.state.kodeSupplier\r\n      ? this.state.kodeSupplier\r\n      : \"DEFAULT|DEFUALT\";\r\n    var explode = supplier.split(\"|\");\r\n    if (localStorage.getItem(\"ReturnSupplier\") === null) {\r\n      warning(\"Barang masih kosong, Mohon tambahkan barang\");\r\n      return false;\r\n    } else if (this.state.noReturn === \"\") {\r\n      warning(\"Mohon isi nomor Return\");\r\n      return false;\r\n    } else if (this.state.tanggal === \"\") {\r\n      warning(\"Mohon isi tanggal\");\r\n      return false;\r\n    } else if (this.state.kodeSupplier === \"\") {\r\n      warning(\"Mohon pilih supplier\");\r\n      return false;\r\n    }\r\n    let hasil = JSON.parse(localStorage.getItem(\"ReturnSupplier\"));\r\n    let total = hasil.map((list) => list.netto).reduce((a, b) => a + b, 0);\r\n    var simpan = {\r\n      no_retur: this.props.noFaktur.toUpperCase(),\r\n      no_bon: this.state.noReturn.toUpperCase(),\r\n      kode_supplier: explode[0],\r\n      total_netto: total,\r\n      tanggal_invoice: this.state.tanggal,\r\n      detail_barang: JSON.parse(localStorage.getItem(\"ReturnSupplier\")),\r\n    };\r\n    console.log(JSON.stringify(simpan));\r\n    this.props.dispatch(progressSend());\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    var table = JSON.parse(localStorage.getItem(\"ReturnSupplier\"));\r\n    // for each ticket pass all its data into an array\r\n    table.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        ++i,\r\n        ticket.kode_jenis,\r\n        ticket.kadar_cetak,\r\n        ticket.plastik,\r\n        ticket.kulit,\r\n        ticket.pkg,\r\n        ticket.bruto,\r\n        ticket.kadar_beli,\r\n        parseFloat(ticket.netto).toFixed(3),\r\n        \"Rp.\" + parseFloat(ticket.ongkos_rp).toLocaleString(\"id-ID\"),\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    const footer = [\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      table.map((list) => list.pkg).reduce((a, b) => a + b, 0),\r\n      table.map((list) => list.bruto).reduce((a, b) => a + b, 0),\r\n      \"\",\r\n      table\r\n        .map((list) => list.netto)\r\n        .reduce((a, b) => a + b, 0)\r\n        .toFixed(3),\r\n      \"Rp.\" +\r\n        table\r\n          .map((list) => list.ongkos_rp)\r\n          .reduce((a, b) => a + b, 0)\r\n          .toLocaleString(\"id-ID\"),\r\n    ];\r\n    tableRows.push(footer);\r\n    console.log(JSON.stringify(tableRows));\r\n    var columTable = [\r\n      \"No\",\r\n      \"Kode Barang\",\r\n      \"Kadar Cetak\\n(%)\",\r\n      \"P\",\r\n      \"K\",\r\n      \"Bungkus\\n(Gr)\",\r\n      \"Berat\\n(Gr)\",\r\n      \"Harga\\n(Gr)\",\r\n      \"Murni\\n(Gr)\",\r\n      \"Ongkos\\n(Rp)\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    AxiosMasterPost(\"trx-supplier/retur-supplier\", simpan)\r\n      .then((res) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Data Berhasil Ditambahkan!\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() =>\r\n            PrintNota(\r\n              \"no Return\",\r\n              this.state.noReturn.toUpperCase(),\r\n              \"Tanggal\",\r\n              this.state.tanggal,\r\n              \"\",\r\n              \"\",\r\n              \"Supplier\",\r\n              this.state.kodeSupplier.toUpperCase(),\r\n              \"ADMIN\",\r\n              this.state.tanggal,\r\n              \"\",\r\n              columTable,\r\n              \"Return Barang Supplier\",\r\n              tableRows\r\n            )\r\n          )\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => localStorage.clear())\r\n          .then(() => this.props.dispatch(getReturnSupplierTemp()))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() => localStorage.setItem(\"isLogin\", true))\r\n          .then(() => this.props.dispatch(getListReturnSupplier()))\r\n          .then(() =>\r\n            this.setState({\r\n              noBon: \"\",\r\n              noReturn: \"\",\r\n            })\r\n          )\r\n          .then(() => document.getElementById(\"myForm\").reset())\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text: \"Data Gagal Ditambahkan\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        }).then(() => this.props.dispatch(finishSend()))\r\n      );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Return Barang Supplier\" />\r\n              <div className=\"card-body\">\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-9\"></div>\r\n                    {/* <div className=\"col-lg-3\">\r\n                      <div className=\"text-right\">\r\n                        <Link to=\"/EditForm/returnSupplier\">\r\n                          <button\r\n                            className=\"btn btn-warning\"\r\n                            // data-target=\"#editModal\"\r\n                            // data-toggle=\"modal\"\r\n                          >\r\n                            Edit Return Barang\r\n                          </button>\r\n                        </Link>\r\n                      </div>\r\n                    </div> */}\r\n                    <div className=\"col-lg-12\">\r\n                      <br />\r\n                    </div>\r\n                    <ModalMasterData\r\n                      content={\r\n                        <Suspense\r\n                          fallback={\r\n                            <Skeleton width={\"100%\"} height={50} count={5} />\r\n                          }\r\n                        >\r\n                          <FormTerimaSupplier\r\n                            from=\"return\"\r\n                            onSubmit={(data) => this.handleSubmit(data)}\r\n                          />\r\n                        </Suspense>\r\n                      }\r\n                      title=\"Tambah Data Barang\"\r\n                    />\r\n                    <div className=\"col-lg-12\">\r\n                      <form id=\"myForm\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-lg-4 col-md-4\">\r\n                            <label htmlFor=\"\">Supplier</label>\r\n                            <select\r\n                              name=\"supplier\"\r\n                              id=\"supplier\"\r\n                              className=\"form-control\"\r\n                              defaultValue=\"DEFAULT | DEFAULT\"\r\n                              onChange={this.pilihSupplier()}\r\n                            >\r\n                              <option value=\"DEFAULT | DEFAULT\" key=\"DEFAULT\">\r\n                                Silahkan Pilih\r\n                              </option>\r\n                              {this.props.supplierList.map((list) => (\r\n                                <option\r\n                                  value={\r\n                                    list.kode_supplier +\r\n                                    \"|\" +\r\n                                    list.nama_supplier\r\n                                  }\r\n                                >\r\n                                  {list.nama_supplier}\r\n                                </option>\r\n                              ))}\r\n                            </select>\r\n                          </div>\r\n                          <div className=\"col-md-4 col-lg-4\">\r\n                            <label htmlFor=\"\">Tanggal</label>\r\n                            <input\r\n                              type=\"date\"\r\n                              id=\"tanggal\"\r\n                              name=\"tanggal\"\r\n                              defaultValue={this.state.dateStart}\r\n                              className=\"form-control\"\r\n                              onChange={this.inputChange(\"tanggalInvoice\")}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-md-4 col-lg-4\">\r\n                            <label htmlFor=\"\">No Return</label>\r\n                            <input\r\n                              type=\"text\"\r\n                              id=\"no_return\"\r\n                              name=\"no_return\"\r\n                              className=\"form-control\"\r\n                              onChange={this.inputChange(\"noReturn\")}\r\n                              value={this.state.noReturn}\r\n                            />\r\n                          </div>\r\n                          {/* <div className=\"col-md-4 col-lg-4 mt-3\">\r\n                            <label htmlFor=\"\">No Terima</label>\r\n                            <input\r\n                              type=\"text\"\r\n                              id=\"bon_return\"\r\n                              name=\"bon_return\"\r\n                              className=\"form-control\"\r\n                              onChange={this.inputChange(\"noBon\")}\r\n                              value={this.state.noBon}\r\n                            />\r\n                          </div> */}\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                    <div className=\"col-md-12 col-lg-12 mt-3 mb-3\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-6 col-md-6\"></div>\r\n                        <div className=\"col-lg-6 col-md-6\">\r\n                          <div className=\"text-right\">\r\n                            <button\r\n                              className=\"btn btn-primary\"\r\n                              onClick={() => this.props.dispatch(showModal())}\r\n                            >\r\n                              Tambah Data\r\n                              <i class=\"fa fa-plus ml-3\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <GlobalTabel\r\n                    keyField=\"id\"\r\n                    data={this.props.tampungBarang}\r\n                    columns={this.state.columns}\r\n                  />\r\n                  <div className=\"text-right\">\r\n                    <button\r\n                      className=\"btn btn-primary\"\r\n                      disabled={this.props.onSend}\r\n                      onClick={() => this.kirimData()}\r\n                    >\r\n                      {this.props.onSend ? (\r\n                        <span\r\n                          className=\"spinner-border spinner-border-sm mr-3\"\r\n                          aria-hidden=\"true\"\r\n                        ></span>\r\n                      ) : null}\r\n                      Simpan\r\n                      <i class=\"fa fa-paper-plane ml-3\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(ReturnSupplier);\r\n","import React from \"react\";\r\nimport empty from \"../Images/emptyTable.svg\";\r\n\r\nfunction EmptyTable(props) {\r\n  return (\r\n    <div className=\"col-lg-12\">\r\n      <div className=\"text-center\">\r\n        <img src={empty} width=\"250\" height=\"250\" alt=\"Empty\"></img>\r\n        <h5>{props.text}</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmptyTable;\r\n","import React from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport,\r\n} from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport EmptyTable from \"./EmptyTable\";\r\n\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\nfunction GlobalTabel(props) {\r\n  let text = props.textEmpty;\r\n  let handleClick = props.handleClick;\r\n  let tambahData = props.tambahData;\r\n  let expandRow = props.expandRow;\r\n  let selectRow = props.selectRow;\r\n  let exportCSV = props.exportCSV;\r\n  return (\r\n    <ToolkitProvider\r\n      keyField={props.keyField}\r\n      data={props.data || []}\r\n      columns={props.columns}\r\n      search\r\n    >\r\n      {(props) => (\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <div className=\"text-left\">\r\n              <SearchBar {...props.searchProps} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <div className=\"text-right\">\r\n              {tambahData && (\r\n                <button\r\n                  onClick={handleClick}\r\n                  className=\"btn btn-primary\"\r\n                  type=\"button\"\r\n                >\r\n                  Tambah Data\r\n                  <i className=\"fa fa-plus ml-3\"></i>\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"col-12\">\r\n            <BootstrapTable\r\n              pagination={paginationFactory()}\r\n              selectRow={selectRow}\r\n              expandRow={expandRow}\r\n              {...props.baseProps}\r\n              striped\r\n              noDataIndication={<EmptyTable text={text || \"Tidak Ada Data\"} />}\r\n            />\r\n            <br />\r\n            {exportCSV && (\r\n              <ExportCSVButton {...props.csvProps}>\r\n                Export CSV!!\r\n              </ExportCSVButton>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </ToolkitProvider>\r\n  );\r\n}\r\n\r\nexport default GlobalTabel;\r\n","module.exports = __webpack_public_path__ + \"static/media/emptyTable.ffc2d7dc.svg\";","import Swal from \"sweetalert2\";\r\n\r\nexport const deleteLocalStorage = (keyRemove) => {\r\n  keyRemove.forEach((e) => {\r\n    localStorage.removeItem(e);\r\n  });\r\n};\r\n\r\nexport const deleteIndex = (nama, index, dispatch, func) => {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      const array = JSON.parse(localStorage.getItem(nama)) || [];\r\n      array.splice(index, 1);\r\n      localStorage.setItem(nama, JSON.stringify(array));\r\n      Swal.fire({\r\n        text: \"Berhasil\",\r\n        timer: 2000,\r\n        showConfirmButton: false,\r\n        position: \"top-right\",\r\n        icon: \"success\",\r\n      }).then(() => dispatch(func));\r\n    }\r\n  });\r\n};\r\nexport const deleteIndexUpdatetotalNW = (nama, index, dispatch, func) => {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      title: \"Anda Yakin ?\",\r\n      text: \"Anda Akan Menghapus Data Ini ?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        const array = JSON.parse(localStorage.getItem(nama)) || [];\r\n        array.splice(index, 1);\r\n        localStorage.setItem(nama, JSON.stringify(array));\r\n        Swal.fire({\r\n          text: \"Berhasil\",\r\n          timer: 2000,\r\n          showConfirmButton: false,\r\n          position: \"top-right\",\r\n          icon: \"success\",\r\n        })\r\n          .then(() => dispatch(func))\r\n          .then(resolve(\"Berhasil\"))\r\n          .catch(\"Gagal\");\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexport const deleteIndexUpdateNettoNW = (\r\n  nama,\r\n  index,\r\n  dispatch,\r\n  func,\r\n  nilai,\r\n  func2,\r\n  state\r\n) => {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      const array = JSON.parse(localStorage.getItem(nama)) || [];\r\n      array.splice(index, 1);\r\n      localStorage.setItem(nama, JSON.stringify(array));\r\n      var awal = localStorage.getItem(\"GrandTotalNetto\");\r\n      var hasil = parseFloat(awal) - parseFloat(nilai);\r\n      localStorage.setItem(\"GrandTotalNetto\", parseFloat(hasil).toFixed(3));\r\n      Swal.fire({\r\n        text: \"Berhasil\",\r\n        timer: 2000,\r\n        showConfirmButton: false,\r\n        position: \"top-right\",\r\n        icon: \"success\",\r\n      })\r\n        .then(() => dispatch(func))\r\n        .then(() => dispatch(func2));\r\n    }\r\n  });\r\n};\r\n","import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;"],"sourceRoot":""}