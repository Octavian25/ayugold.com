{"version":3,"sources":["../node_modules/redux-form/es/index.js","TotalanMenu/Components/FormModalTimbangBarcode.jsx","TotalanMenu/TotalanBarcode.jsx"],"names":["reset","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","change","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors","renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","maxLength","server","process","FormModalTimbanganBarcode","props","handleChange","e","result_explode","target","value","split","setState","kodeJenis","kadarCetak","kadarJual","state","listBarang","listBarangPerhiasan","Axios","get","then","res","data","catch","err","console","log","this","netto","onSubmit","handleSubmit","Field","name","component","onChange","key","jenisBarang","map","list","namaJenis","setNetto","id","defaultChecked","manual","onLoad","noFaktur","Component","reduxForm","form","enableReinitialize","selector","formValueSelector","connect","gross","kadarTransaksi","pkg","parseFloat","toFixed","SearchBar","Search","serverNonMaster","REACT_APP_BACKEND_URL_NON_MASTER","TotalanBarcode","changeInput","listLokasi","columns","dataField","text","sort","headerStyle","width","tanggal","lokasi","dispatch","getTableTotalanBarcode","getUUID","getBruto","getNetto","getPkg","getGross","getRp","getQty","explode","kodeBarang","simpan","nettoDiscGlobalExt","noBarcode","barcode","qty","k","kodeKategori","p","nettoDiscGlobal","discGlobalPr","discGlobalGr","bruto","rp","keterangan","array","JSON","parse","localStorage","getItem","push","setItem","stringify","Swal","fire","position","icon","timer","showConfirmButton","undefined","tipeFaktur","noBon","noValid","kodeLokasi","barangDetails","footerItem","totalP","totalGross","sumGross","totalpkg","sumPkg","totalQty","sumQty","totalK","totalRp","sumRp","totalBruto","sumBruto","totalNetto","sumNetto","totalNettoExt","progressSend","tableRows","forEach","ticket","i","ticketData","columTable","post","finishSend","PrintNota","removeItem","HeaderCard","title","namaLokasi","onClick","simpanTotalanTimbang","onSend","aria-hidden","data-target","data-toggle","listTableTotalanBarcode","keyField","search","searchProps","placeholder","style","margin","top","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","noDataIndication","tabIndex","role","aria-labelledby","data-dismiss","FormModalTimbangBarcode","totalanBarcode","provinsi","perhitungan"],"mappings":"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","file":"static/js/122.d232b15d.chunk.js","sourcesContent":["import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;","import Axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nclass FormModalTimbanganBarcode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listBarang: [],\r\n      listBarangPerhiasan: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Axios.get(server + \"subcategorys2?kodeKelompok=CIOK\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listBarang: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    Axios.get(server + \"subcategorys2?kodeKelompok=PERHIASAN\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listBarangPerhiasan: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  handleChange = (input) => (e) => {\r\n    var supp = e.target.value\r\n      ? e.target.value\r\n      : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n      kadarCetak: result_explode[1],\r\n      kadarJual: result_explode[2],\r\n    });\r\n    this.props.change(\"kadarTransaksi\", result_explode[2]);\r\n    this.props.change(\"keterangan\", result_explode[3]);\r\n  };\r\n  setNetto() {\r\n    this.props.change(\r\n      \"netto\",\r\n      this.props.netto === \"NaN\" ? 0 : this.props.netto\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-3\">\r\n              <label htmlFor=\"\">Kode barang</label>\r\n              <Field\r\n                name=\"kodeBarang\"\r\n                className=\"form-control\"\r\n                component=\"select\"\r\n                onChange={this.handleChange()}\r\n              >\r\n                <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                  SILAHKAN PILIH\r\n                </option>\r\n                {this.props.jenisBarang === \"RONGSOK\"\r\n                  ? this.state.listBarang.map((list) => (\r\n                      <option\r\n                        value={\r\n                          list.kodeJenis +\r\n                          \"|\" +\r\n                          list.kadarCetak +\r\n                          \"|\" +\r\n                          list.kadarJual +\r\n                          \"|\" +\r\n                          list.namaJenis\r\n                        }\r\n                        key={list.kodeJenis}\r\n                      >\r\n                        {list.namaJenis}\r\n                      </option>\r\n                    ))\r\n                  : this.state.listBarangPerhiasan.map((list) => (\r\n                      <option\r\n                        value={\r\n                          list.kodeJenis +\r\n                          \"|\" +\r\n                          list.kadarCetak +\r\n                          \"|\" +\r\n                          list.kadarJual +\r\n                          \"|\" +\r\n                          list.namaJenis\r\n                        }\r\n                        key={list.kodeJenis}\r\n                      >\r\n                        {list.namaJenis}\r\n                      </option>\r\n                    ))}\r\n              </Field>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <Field\r\n                name=\"keterangan\"\r\n                label=\"Keterangan\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <Field\r\n                name=\"kadarTransaksi\"\r\n                label=\"Kadar(%)\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                readOnly={true}\r\n                onChange={this.setNetto()}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <label htmlFor=\"employed\">Manual</label>\r\n              <div>\r\n                <Field\r\n                  name=\"manual\"\r\n                  id=\"employed\"\r\n                  component=\"input\"\r\n                  type=\"checkbox\"\r\n                  value=\"MANUAL\"\r\n                  defaultChecked={true}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <Field\r\n                name=\"barcode\"\r\n                label=\"Barcode\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                readOnly={this.props.manual}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <Field\r\n                name=\"gross\"\r\n                label=\"Gross(Gr)\"\r\n                type=\"text\"\r\n                readOnly={!this.props.manual}\r\n                component={renderField}\r\n                onChange={this.setNetto()}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <Field\r\n                name=\"pkg\"\r\n                label=\"Package(Gr)\"\r\n                type=\"text\"\r\n                readOnly={!this.props.manual}\r\n                component={renderField}\r\n                onChange={this.setNetto()}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <Field\r\n                name=\"netto\"\r\n                label=\"Netto\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-3 d-none\">\r\n              <Field\r\n                name=\"noFaktur\"\r\n                label=\"Netto\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                readOnly={true}\r\n                onLoad={() =>\r\n                  this.props.change(\"noFaktur\", this.props.noFaktur)\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"text-right\">\r\n                <button className=\"btn btn-primary\" type=\"submit\">\r\n                  Simpan\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n// Inisialisasi Redux Form\r\nFormModalTimbanganBarcode = reduxForm({\r\n  form: \"FormModalTimbanganBarcode\",\r\n  enableReinitialize: true,\r\n})(FormModalTimbanganBarcode);\r\nconst selector = formValueSelector(\"FormModalTimbanganBarcode\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { gross, kadarTransaksi, pkg, manual } = selector(\r\n    state,\r\n    \"gross\",\r\n    \"kadarTransaksi\",\r\n    \"pkg\",\r\n    \"manual\"\r\n  );\r\n  return {\r\n    netto: (\r\n      parseFloat(gross ? gross : 0) -\r\n      parseFloat(pkg ? pkg : 0) * (parseFloat(kadarTransaksi) / 100)\r\n    ).toFixed(3),\r\n    manual: manual || false,\r\n  };\r\n})(FormModalTimbanganBarcode);\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport { connect } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { reset } from \"redux-form\";\r\nimport {\r\n  finishSend,\r\n  getBruto,\r\n  getGross,\r\n  getNetto,\r\n  getPkg,\r\n  getQty,\r\n  getRp,\r\n  progressSend,\r\n} from \"../actions/LogicAction\";\r\nimport { getTableTotalanBarcode } from \"../actions/TotalanTimbanganAction\";\r\nimport Axios from \"axios\";\r\nimport PrintNota from \"../Stocking/Component/PrintNota\";\r\nimport FormModalTimbangBarcode from \"./Components/FormModalTimbangBarcode\";\r\nimport HeaderCard from \"../HeaderCard\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    totalanBarcode: state.provinsi.totalanBarcode,\r\n    noFaktur: state.provinsi.noFaktur,\r\n    listTableTotalanBarcode: state.provinsi.listTableTotalanBarcode,\r\n    sumBruto: state.perhitungan.sumBruto,\r\n    sumNetto: state.perhitungan.sumNetto,\r\n    sumGross: state.perhitungan.sumGross,\r\n    sumPkg: state.perhitungan.sumPkg,\r\n    sumQty: state.perhitungan.sumQty,\r\n    sumRp: state.perhitungan.sumRp,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\nconst { SearchBar } = Search;\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nconst serverNonMaster = process.env.REACT_APP_BACKEND_URL_NON_MASTER;\r\nclass TotalanBarcode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jenisBarang: \"RONGSOK\",\r\n      listLokasi: [],\r\n      columns: [\r\n        {\r\n          dataField: \"kodeJenis\",\r\n          text: \"Kode\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"kadarCetak\",\r\n          text: \"Kadar\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"gross\",\r\n          text: \"Gross (Gr)\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Pkg (Gr)\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Berat (Gr)\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"kadarTransaksi\",\r\n          text: \"Harga\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Netto (Gr)\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n      ],\r\n      data: [\r\n        {\r\n          tanggal: \"2020-11-10\",\r\n        },\r\n      ],\r\n      tanggal: \"\",\r\n      lokasi: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getTableTotalanBarcode());\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getBruto(\"totalanBarcode\"));\r\n    this.props.dispatch(getNetto(\"totalanBarcode\"));\r\n    this.props.dispatch(getPkg(\"totalanBarcode\"));\r\n    this.props.dispatch(getGross(\"totalanBarcode\"));\r\n    this.props.dispatch(getRp(\"totalanBarcode\"));\r\n    this.props.dispatch(getQty(\"totalanBarcode\"));\r\n    Axios.get(server + \"storages2?tipeData=LOKASI\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listLokasi: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    var isi = data.kodeBarang\r\n      ? data.kodeBarang\r\n      : \"DEFAULT|DEFUALT|DEFAULT|DEFAULT\";\r\n    var explode = isi.split(\"|\");\r\n    var simpan = {\r\n      nettoDiscGlobalExt: 0,\r\n      gross: parseFloat(data.gross),\r\n      kodeJenis: explode[0],\r\n      pkg: parseFloat(data.pkg),\r\n      noBarcode: data.barcode,\r\n      qty: 1,\r\n      k: 0,\r\n      kadarCetak: explode[1],\r\n      kodeKategori: \"-\",\r\n      p: 0,\r\n      nettoDiscGlobal: 0,\r\n      discGlobalPr: 0,\r\n      discGlobalGr: 0,\r\n      kadarTransaksi: parseFloat(data.kadarTransaksi),\r\n      noFaktur: data.noFaktur,\r\n      bruto: parseFloat(data.gross) - parseFloat(data.pkg),\r\n      netto: parseFloat(data.netto),\r\n      rp: 0,\r\n      keterangan: data.keterangan,\r\n    };\r\n    var array = JSON.parse(localStorage.getItem(\"totalanBarcode\")) || [];\r\n    array.push(simpan);\r\n    localStorage.setItem(\"totalanBarcode\", JSON.stringify(array));\r\n    Swal.fire({\r\n      position: \"top-right\",\r\n      icon: \"success\",\r\n      text: \"Transaksi Berhasil\",\r\n      timer: 1500,\r\n      showConfirmButton: false,\r\n    });\r\n    this.props.dispatch(reset(\"FormModalTimbanganBarcode\"));\r\n    this.props.dispatch(getTableTotalanBarcode());\r\n  }\r\n  simpanTotalanTimbang() {\r\n    if (this.state.tanggal === undefined) {\r\n      Swal.fire({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        text: \"Silahkan Isi Tanggal\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n      return false;\r\n    } else if (this.state.lokasi === undefined) {\r\n      Swal.fire({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        text: \"Silahkan Isi Lokasi\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n      return false;\r\n    } else if (localStorage.getItem(\"totalanBarcode\") === null) {\r\n      Swal.fire({\r\n        position: \"top-end\",\r\n        icon: \"error\",\r\n        text: \"Data Masih Kosong, Silahkan tambah data\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n      return false;\r\n    }\r\n    var simpan = {\r\n      tipeFaktur: this.state.jenisBarang,\r\n      noFaktur: this.props.noFaktur,\r\n      noBon: this.props.noFaktur,\r\n      tanggal: this.state.tanggal,\r\n      noValid: \"-\",\r\n      kodeLokasi: this.state.kodeLokasi,\r\n      barangDetails: JSON.parse(localStorage.getItem(\"totalanBarcode\")),\r\n      footerItem: {\r\n        totalP: 0,\r\n        totalGross: this.props.sumGross,\r\n        totalpkg: this.props.sumPkg,\r\n        totalQty: this.props.sumQty,\r\n        totalK: 0,\r\n        totalRp: this.props.sumRp,\r\n        totalBruto: this.props.sumBruto,\r\n        totalNetto: this.props.sumNetto,\r\n        totalNettoExt: 0,\r\n      },\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    var table = JSON.parse(localStorage.getItem(\"totalanBarcode\")) || [];\r\n    // for each ticket pass all its data into an array\r\n    table.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        i++,\r\n        ticket.kodeJenis,\r\n        ticket.gross,\r\n        ticket.pkg,\r\n        ticket.bruto,\r\n        ticket.kadarTransaksi,\r\n        ticket.netto,\r\n        ticket.rp,\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    console.log(tableRows);\r\n    var columTable = [\r\n      \"No\",\r\n      \"Kode Barang\",\r\n      \"Gross (Gr)\",\r\n      \"Pkg (Gr)\",\r\n      \"Bruto (Gr)\",\r\n      \"Harga (%)\",\r\n      \"Netto (Gr)\",\r\n      \"Ongkos (Rp)\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n\r\n    Axios.post(serverNonMaster + \"item/dc/totalantimbang\", simpan)\r\n      .then(() =>\r\n        Swal.fire({\r\n          position: \"top-right\",\r\n          icon: \"success\",\r\n          text: \"Transaksi Berhasil\",\r\n          timer: 1500,\r\n          showConfirmButton: false,\r\n        })\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() =>\r\n            PrintNota(\r\n              \"Tanggal\",\r\n              this.state.tanggal,\r\n              \"Lokasi\",\r\n              this.state.tanggal,\r\n              \"No Timbang\",\r\n              this.props.noFaktur,\r\n              \"\",\r\n              \"\",\r\n              \"\",\r\n              \"\",\r\n              \"\",\r\n              columTable,\r\n              \"STOCK OPNAME TIMBANG SALES\",\r\n              tableRows\r\n            )\r\n          )\r\n          .then(() => localStorage.removeItem(\"totalanBarcode\"))\r\n          .then(() => localStorage.removeItem(\"noFaktur\"))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() => this.props.dispatch(getTableTotalanBarcode()))\r\n          .then(() =>\r\n            this.setState({\r\n              tanggal: \"\",\r\n              lokasi: \"\",\r\n            })\r\n          )\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-right\",\r\n          icon: \"error\",\r\n          text:\r\n            \"Sepertinya ada kesalahan di server, mohon periksa koneksi dan ulangi transaksi\",\r\n          timer: 1500,\r\n          showConfirmButton: false,\r\n        })\r\n          .then(() => console.log(err))\r\n          .then(() => this.props.dispatch(finishSend()))\r\n      );\r\n  }\r\n  changeInput = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"card\">\r\n          <HeaderCard title=\"Totalan Barcode\" />\r\n          <div className=\"card-body\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"\">Tanggal</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"tanggal\"\r\n                    label=\"tanggal\"\r\n                    className=\"form-control\"\r\n                    onChange={this.changeInput(\"tanggal\")}\r\n                    value={this.state.tanggal}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"\">Lokasi</label>\r\n                  <select\r\n                    name=\"lokasi\"\r\n                    label=\"lokasi\"\r\n                    className=\"form-control\"\r\n                    onChange={this.changeInput(\"lokasi\")}\r\n                    value={this.state.lokasi}\r\n                  >\r\n                    <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                      SILAHKAN PILIH\r\n                    </option>\r\n                    {this.state.listLokasi.map((list) => (\r\n                      <option value={list.kodeLokasi} key={list.kodeLokasi}>\r\n                        {list.namaLokasi}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-12 mt-3\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-6\">\r\n                    <div className=\"text-left\">\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        onClick={() => this.simpanTotalanTimbang()}\r\n                      >\r\n                        {this.props.onSend ? (\r\n                          <span\r\n                            className=\"spinner-border spinner-border-sm mr-3\"\r\n                            aria-hidden=\"true\"\r\n                          ></span>\r\n                        ) : null}\r\n                        Simpan\r\n                        <i className=\"fa fa-paper-plane ml-3\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-6\">\r\n                    <div className=\"text-right\">\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        data-target=\"#tambahModal\"\r\n                        data-toggle=\"modal\"\r\n                      >\r\n                        Tambah Data\r\n                        <i className=\"fa fa-plus ml-3\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-12 mt-3\">\r\n                {this.props.listTableTotalanBarcode ? (\r\n                  <ToolkitProvider\r\n                    keyField=\"kodeKelompok\"\r\n                    data={this.props.listTableTotalanBarcode}\r\n                    columns={this.state.columns}\r\n                    search\r\n                  >\r\n                    {(props) => (\r\n                      <div className=\"form-group\">\r\n                        <div className=\"text-right mt-5 mb-3\">\r\n                          <SearchBar\r\n                            {...props.searchProps}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Tuliskan Kode / Nama\"\r\n                            style={{ margin: 0, top: \"50%\" }}\r\n                          />\r\n                        </div>\r\n                        <BootstrapTable\r\n                          {...props.baseProps}\r\n                          striped\r\n                          hover\r\n                          condensed\r\n                          bordered={true}\r\n                          headerClasses=\"header-table\"\r\n                          pagination={paginationFactory()}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </ToolkitProvider>\r\n                ) : (\r\n                  <BootstrapTable\r\n                    keyField=\"kodeKelompok\"\r\n                    data={[]}\r\n                    columns={this.state.columns}\r\n                    bordered={true}\r\n                    headerClasses=\"header-table\"\r\n                    noDataIndication=\"Tidak Ada Data\"\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          id=\"tambahModal\"\r\n          className=\"modal fade\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"primary-header-modalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header modal-colored-header bg-primary\">\r\n                <h4 className=\"modal-title\" id=\"primary-header-modalLabel\">\r\n                  Tambah Data Totalan\r\n                </h4>\r\n                <button\r\n                  id=\"dismiss_modal\"\r\n                  name=\"dismiss_modal\"\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <FormModalTimbangBarcode\r\n                  noFaktur={this.props.noFaktur}\r\n                  jenisBarang={this.state.jenisBarang}\r\n                  onSubmit={(data) => this.handleSubmit(data)}\r\n                />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-light\"\r\n                  data-dismiss=\"modal\"\r\n                  id=\"close_modal\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(TotalanBarcode);\r\n"],"sourceRoot":""}