{"version":3,"sources":["FICO/Component/FormTransferBalance.jsx","FICO/TransferBalance.jsx"],"names":["renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","min","step","maxLength","FormTransferBalance","props","inputChange","e","setState","target","value","state","columns","dataField","text","products","kode_salesman","nama_salesman","searchText","listCustomer","this","dispatch","getcustomerList","change","cashNetto","transferNetto","console","log","data","split","onSubmit","handleSubmit","Field","name","component","options","customer","map","obj","kode_customer","nama_customer","nama_toko","search","placeholder","onChange","onSubmitToko","GlobalTabel","keyField","bordered","headerClasses","Component","reduxForm","form","enableReinitialize","selector","formValueSelector","connect","harga","cash","transfer","parseFloat","toFixed","provinsi","TransferBalance","to","aria-hidden","HeaderCard","title","handlSubmit"],"mappings":"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","file":"static/js/110.0e267ae7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm, formValueSelector } from \"redux-form\";\r\nimport SelectSearch from \"react-select-search\";\r\nimport { getcustomerList } from \"../../actions/customerAction\";\r\nimport GlobalTabel from \"../../GlobalComponent/GlobalTabel\";\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\n\r\nclass FormTransferBalance extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [\r\n        {\r\n          dataField: \"tanggal\",\r\n          text: \"Tanggal\",\r\n        },\r\n        {\r\n          dataField: \"sales\",\r\n          text: \"Sales\",\r\n        },\r\n        {\r\n          dataField: \"noTransaksi\",\r\n          text: \"No Transaksi\",\r\n        },\r\n        {\r\n          dataField: \"noBon\",\r\n          text: \"No Bon\",\r\n        },\r\n        {\r\n          dataField: \"saldoGr\",\r\n          text: \"Saldo (Gr)\",\r\n        },\r\n        {\r\n          dataField: \"saldoRp\",\r\n          text: \"Saldo (Rp)\",\r\n        },\r\n        {\r\n          dataField: \"titipGr\",\r\n          text: \"Titip (Gr)\",\r\n        },\r\n        {\r\n          dataField: \"titipRp\",\r\n          text: \"Titip (Rp)\",\r\n        },\r\n      ],\r\n      products: [\r\n        {\r\n          kode_salesman: \"001\",\r\n          nama_salesman: \"BANDUNG\",\r\n        },\r\n        {\r\n          kode_salesman: \"002\",\r\n          nama_salesman: \"BOGOR\",\r\n        },\r\n      ],\r\n      searchText: \"\",\r\n      listCustomer: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getcustomerList());\r\n  }\r\n  onChange() {\r\n    this.props.change(\"cashNetto\", this.props.cashNetto);\r\n    this.props.change(\"transferNetto\", this.props.transferNetto);\r\n  }\r\n\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n  searchList() {\r\n    console.log(this.state.searchText);\r\n  }\r\n  onSubmitToko(data) {\r\n    var split = data.split(\"|\");\r\n    this.props.change(\"kodeToko\", split[0]);\r\n    this.props.change(\"kodeCustomer\", split[1]);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <Field\r\n              name=\"tanggal\"\r\n              label=\"Tanggal\"\r\n              type=\"date\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4 d-none\">\r\n            <Field\r\n              name=\"kodeToko\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              label=\"Nama Toko\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <label htmlFor=\"\">Nama Toko</label>\r\n            <SelectSearch\r\n              options={this.props.customer.map((obj) => {\r\n                var payload = {\r\n                  value: obj.kode_customer + \"|\" + obj.nama_customer,\r\n                  name: obj.nama_toko,\r\n                };\r\n                return payload;\r\n              })}\r\n              search\r\n              placeholder=\"Silahkan Pilih\"\r\n              onChange={(data) => this.onSubmitToko(data)}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <Field\r\n              name=\"kodeCustomer\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              label=\"Nama Customer\"\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-md-12 col-lg-12 mt-3\">\r\n            <GlobalTabel\r\n              keyField=\"noTransaksi\"\r\n              data={this.state.products}\r\n              columns={this.state.columns}\r\n              bordered={true}\r\n              headerClasses=\"header-table\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12 col-md-12\">\r\n            <div className=\"text-right\">\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Simpan\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormTransferBalance = reduxForm({\r\n  form: \"FormTransferBalance\",\r\n  enableReinitialize: true,\r\n})(FormTransferBalance);\r\nconst selector = formValueSelector(\"FormTransferBalance\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { harga, cash, transfer } = selector(\r\n    state,\r\n    \"harga\",\r\n    \"cash\",\r\n    \"transfer\"\r\n  );\r\n  return {\r\n    cashNetto: (parseFloat(cash) / parseFloat(harga)).toFixed(3),\r\n    transferNetto: (parseFloat(transfer) / parseFloat(harga)).toFixed(3),\r\n    customer: state.provinsi.customer,\r\n  };\r\n})(FormTransferBalance);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport FormTransferBalance from \"./Component/FormTransferBalance\";\r\n\r\nclass TransferBalance extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  handlSubmit(data) {\r\n    console.log(data);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"col-lg-12 col-d-12\">\r\n          <ol className=\"breadcrumb mb-2\">\r\n            <Link to=\"/KlasifikasiCustomer\">\r\n              <button type=\"button\" className=\"btn btn-secondary\">\r\n                <i className=\"fa fa-angle-left mr-3\" aria-hidden=\"true\"></i>{\" \"}\r\n                Back\r\n              </button>\r\n            </Link>\r\n          </ol>\r\n          <div className=\"card\">\r\n            <HeaderCard title=\"Transfer Balance Customer\" />\r\n            <div className=\"card-body\">\r\n              <FormTransferBalance\r\n                onSubmit={(data) => this.handlSubmit(data)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TransferBalance;\r\n"],"sourceRoot":""}