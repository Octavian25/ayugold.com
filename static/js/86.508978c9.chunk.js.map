{"version":3,"sources":["FICO/Component/FormMutasiCashDanBank.jsx","FICO/MutasiCashDanBank.jsx","Alert.jsx","Stocking/Component/PrintNota.jsx"],"names":["currencyMask","createNumberMask","prefix","suffix","locale","renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","min","step","maxLength","server","process","FormMutasiCashDanBank","props","state","listKategori","listRekening","date","Date","this","change","getFullYear","getMonth","getDate","Axios","get","then","res","setState","data","catch","err","console","log","onSubmit","handleSubmit","Field","name","value","thisDay","component","normalize","toUpperCase","key","map","list","noRekening","atasNama","Component","reduxForm","form","enableReinitialize","connect","MutasiCashDanBank","formatedDate","dispatch","getUUID","undefined","tanggal","jumlah","asal","tujuan","isi","alatBayarTunai","tunaiKurs","tunaiRp","parseFloat","tunaiNetto","tunaiTipe","alatBayarTrf","transferTanggalJanji","transferRp","transferTipe","accFrom","accTo","transferKurs","transferNetto","noBon","noFaktur","tipeFaktur","keterangan","footerDocument","inputBy","username","tableRows","ticketData","toLocaleString","push","columTable","post","serverNonMaster","Swal","fire","position","icon","text","showConfirmButton","timer","localStorage","removeItem","PrintNota","reset","provinsi","pesan","berhasil","gagal","row1name","row1isi","row2name","row2isi","row3name","row3isi","row4name","row4isi","validby","tableColumn","title","doc","jsPDF","autoTable","startY","finalY","lastAutoTable","setFontSize","string","output","embed","x","window","open","document","write","close"],"mappings":"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","file":"static/js/86.508978c9.chunk.js","sourcesContent":["import Axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nclass FormMutasiCashDanBank extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listKategori: [],\r\n      listRekening: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const date = new Date();\r\n    this.props.change(\r\n      \"tanggal\",\r\n      `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`\r\n    );\r\n    Axios.get(server + \"parameteruangs\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listKategori: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    Axios.get(server + \"banks\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listRekening: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <Field\r\n              name=\"tanggal\"\r\n              label=\"Tanggal\"\r\n              type=\"date\"\r\n              value={this.state.thisDay}\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <label htmlFor=\"\">Asal</label>\r\n            <Field\r\n              name=\"asal\"\r\n              component=\"select\"\r\n              value=\"CASH\"\r\n              className=\"form-control\"\r\n            >\r\n              <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                silahkan pilih\r\n              </option>\r\n              <option value=\"CASH\" key=\"CASH\">\r\n                CASH\r\n              </option>\r\n              <option value=\"CASH KECIL\" key=\"CASH KECIL\">\r\n                CASH KECIL\r\n              </option>\r\n              {this.state.listRekening.map((list) => (\r\n                <option value={list.noRekening} key={list.noRekening}>\r\n                  {list.atasNama}\r\n                </option>\r\n              ))}\r\n            </Field>\r\n          </div>\r\n          <div className=\"col-md-1 text-center\">\r\n            <label htmlFor=\"\" className=\"text-white\">\r\n              .\r\n            </label>\r\n            <h3>\r\n              <i className=\"fa fa-exchange-alt\"></i>\r\n            </h3>\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <label htmlFor=\"\">Tujuan</label>\r\n            <Field\r\n              name=\"tujuan\"\r\n              component=\"select\"\r\n              value=\"CASH\"\r\n              className=\"form-control\"\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            >\r\n              <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                silahkan pilih\r\n              </option>\r\n              <option value=\"CASH\" key=\"CASH\">\r\n                CASH\r\n              </option>\r\n              <option value=\"CASH KECIL\" key=\"CASH KECIL\">\r\n                CASH KECIL\r\n              </option>\r\n              {this.state.listRekening.map((list) => (\r\n                <option value={list.noRekening} key={list.noRekening}>\r\n                  {list.atasNama}\r\n                </option>\r\n              ))}\r\n            </Field>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-4\">\r\n            <label htmlFor=\"\">Jumlah</label>\r\n            <Field\r\n              name=\"jumlah\"\r\n              component=\"input\"\r\n              type=\"tel\"\r\n              className=\"form-control\"\r\n              {...currencyMask}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-8 col-lg-8\">\r\n            <Field\r\n              name=\"keterangan\"\r\n              label=\"Keterangan\"\r\n              type=\"text\"\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12 col-md-12\">\r\n            <div className=\"text-right\">\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Simpan\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormMutasiCashDanBank = reduxForm({\r\n  form: \"FormMutasiCashDanBank\",\r\n  enableReinitialize: true,\r\n})(FormMutasiCashDanBank);\r\nexport default connect()(FormMutasiCashDanBank);\r\n","import Axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport FormMutasiCashDanBank from \"./Component/FormMutasiCashDanBank\";\r\nimport { connect } from \"react-redux\";\r\nimport PrintNota from \"../Stocking/Component/PrintNota\";\r\nimport { warning } from \"../Alert\";\r\nimport { reset } from \"redux-form\";\r\n\r\nconst serverNonMaster = process.env.REACT_APP_BACKEND_URL_NON_MASTER;\r\nconst maptostate = (state) => {\r\n  return {\r\n    noFaktur: state.provinsi.noFaktur,\r\n    username: state.provinsi.username,\r\n  };\r\n};\r\nclass MutasiCashDanBank extends Component {\r\n  constructor(props) {\r\n    var date = new Date();\r\n    var formatedDate = `${date.getFullYear()}-${\r\n      date.getMonth() + 1\r\n    }-${date.getDate()}`;\r\n    super(props);\r\n    this.state = {\r\n      thisDay: formatedDate,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getUUID());\r\n  }\r\n  handleSubmit(data) {\r\n    if (data.tanggal === undefined) {\r\n      warning(\"Mohon isi tanggal\");\r\n      return false;\r\n    } else if (data.jumlah === undefined) {\r\n      warning(\"Mohon isi Jumlah\");\r\n      return false;\r\n    } else if (data.asal === undefined) {\r\n      warning(\"Mohon isi Asal\");\r\n      return false;\r\n    } else if (data.tujuan === undefined) {\r\n      warning(\"Mohon isi Tujuan\");\r\n      return false;\r\n    }\r\n    const isi = {\r\n      alatBayarTunai: [\r\n        {\r\n          tunaiKurs: 0,\r\n          tunaiRp: parseFloat(data.jumlah),\r\n          tunaiNetto: 0,\r\n          tunaiTipe: \"-\",\r\n        },\r\n      ],\r\n      alatBayarTrf: [\r\n        {\r\n          transferTanggalJanji: \"-\",\r\n          transferRp: parseFloat(data.jumlah),\r\n          transferTipe: \"-\",\r\n          accFrom: data.asal,\r\n          accTo: data.tujuan,\r\n          transferKurs: 0,\r\n          transferNetto: 0,\r\n        },\r\n      ],\r\n      noBon: this.props.noFaktur,\r\n      tanggal: data.tanggal,\r\n      noFaktur: this.props.noFaktur,\r\n      tipeFaktur: \"AMBIL UANG TUNAI\",\r\n      keterangan: data.keterangan,\r\n      footerDocument: {\r\n        inputBy: this.props.username, //INPUT BY DEFAULT\r\n      },\r\n    };\r\n    console.log(isi);\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    // for each ticket pass all its data into an array\r\n    const ticketData = [\r\n      \"1\",\r\n      data.tanggal,\r\n      parseFloat(data.jumlah).toLocaleString(\"id-ID\"),\r\n      data.asal,\r\n      data.tujuan,\r\n      parseFloat(data.jumlah).toLocaleString(\"id-ID\"),\r\n      data.keterangan,\r\n    ];\r\n    // push each tickcet's info into a row\r\n    tableRows.push(ticketData);\r\n    console.log(tableRows);\r\n    var columTable = [\r\n      \"No\",\r\n      \"Tanggal Janji\",\r\n      \"Transfer nominal\",\r\n      \"Nomor Rekening Asal\",\r\n      \"Nomor Rekening Tujuan\",\r\n      \"Transfer Netto\",\r\n      \"Keperluan\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    Axios.post(serverNonMaster + \"fico/dc/fico\", isi)\r\n      .then((res) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Transaksi Berhasil\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() => localStorage.removeItem(\"noFaktur\"))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() =>\r\n            PrintNota(\r\n              \"Tanggal\",\r\n              data.tanggal,\r\n              \"\",\r\n              \"\",\r\n              \"Nomor Bon\",\r\n              this.props.noFaktur,\r\n              \"\",\r\n              \"\",\r\n              \"ADMIN\",\r\n              data.tanggal,\r\n              \"\",\r\n              columTable,\r\n              \"MUTASI CASH DAN BANK\",\r\n              tableRows\r\n            )\r\n          )\r\n          .then(() => this.props.dispatch(reset(\"FormMutasiCashDanBank\")))\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text:\r\n            \"Sepertinya terjadi kesalahan, silahkan check koneksi anda dan ulangi lagi transaksi\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n      );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"col-lg-12 col-md-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"col-lg-12\">\r\n                <h1>Mutasi Cash Dan Bank</h1>\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <FormMutasiCashDanBank\r\n                  onSubmit={(data) => this.handleSubmit(data)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(MutasiCashDanBank);\r\n","import Swal from \"sweetalert2\";\r\n\r\nexport const warning = (pesan) => {\r\n  Swal.fire({\r\n    position: \"top-right\",\r\n    icon: \"warning\",\r\n    text: pesan,\r\n    timer: 2500,\r\n    showConfirmButton: false,\r\n  });\r\n};\r\n\r\nexport const berhasil = (pesan) => {\r\n  Swal.fire({\r\n    position: \"top-right\",\r\n    icon: \"success\",\r\n    text: pesan,\r\n    timer: 2500,\r\n    showConfirmButton: false,\r\n  })\r\n};\r\n\r\nexport const gagal = (pesan) => {\r\n  Swal.fire({\r\n    position: \"top-right\",\r\n    icon: \"error\",\r\n    text: pesan,\r\n    timer: 2500,\r\n    showConfirmButton: false,\r\n  })\r\n};\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst PrintNota = (\r\n  row1name = \"\",\r\n  row1isi = \"\",\r\n  row2name = \"\",\r\n  row2isi = \"\",\r\n  row3name = \"\",\r\n  row3isi = \"\",\r\n  row4name = \"\",\r\n  row4isi = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n  validby = \"\",\r\n  tableColumn = [],\r\n  title = \"\",\r\n  tableRows\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  // var tickets = JSON.parse(data);\r\n  // define the columns we want and their titles\r\n\r\n  // // define an empty array of rows\r\n  // const tableRows = [];\r\n\r\n  // // for each ticket pass all its data into an array\r\n  // tickets.forEach((ticket, i) => {\r\n  //   const ticketData = [\r\n  //     i++,\r\n  //     ticket.kodeJenis01,\r\n  //     ticket.bruto01,\r\n  //     ticket.kadarTransaksi01,\r\n  //     ticket.netto01,\r\n  //     ticket.kodeJenis02,\r\n  //     ticket.bruto02,\r\n  //     ticket.kadarTransaksi02,\r\n  //     ticket.netto02,\r\n  //   ];\r\n  //   // push each tickcet's info into a row\r\n  //   tableRows.push(ticketData);\r\n  // });\r\n\r\n  // startY is basically margin-top\r\n  doc.autoTable(tableColumn, tableRows, { startY: 40 });\r\n  let finalY = doc.lastAutoTable.finalY + 10;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(title, 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(row1name, 14, 25);\r\n  doc.text(\":\", 37, 25);\r\n  doc.text(row1isi, 40, 25);\r\n  doc.text(row2name, 120, 25);\r\n  doc.text(\":\", 141, 25);\r\n  doc.text(row2isi, 145, 25);\r\n  //row 2\r\n  doc.text(row3name, 14, 30);\r\n  doc.text(\":\", 37, 30);\r\n  doc.text(row3isi, 40, 30);\r\n  doc.text(row4name, 120, 30);\r\n  doc.text(\":\", 141, 30);\r\n  doc.text(row4isi, 145, 30);\r\n\r\n  //Stamp\r\n  doc.text(\"User\", 160, finalY + 10);\r\n  doc.text(\":\", 168, finalY + 10);\r\n  doc.text(username, 170, finalY + 10);\r\n  doc.text(\"Cetak\", 160, finalY + 15);\r\n  doc.text(\":\", 168, finalY + 15);\r\n  doc.text(tanggal, 170, finalY + 15);\r\n  doc.text(\"Valid\", 160, finalY + 20);\r\n  doc.text(\":\", 168, finalY + 20);\r\n  doc.text(validby, 170, finalY + 20);\r\n  // doc.autoPrint();\r\n  // doc.save(`${title}_${dateStr}.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  x.document.close();\r\n};\r\n\r\nexport default PrintNota;\r\n"],"sourceRoot":""}