{"version":3,"sources":["Laporan/Component/FormStok.jsx","Laporan/Component/LaporanStockCard.jsx","Laporan/Component/LaporanStockPerKategori.jsx","Laporan/Component/LaporanStockPerKategoriLokasi.jsx","Laporan/LaporanStok.jsx","GlobalComponent/notification.jsx","GlobalComponent/function.jsx"],"names":["renderField","input","label","type","meta","touched","error","warning","className","htmlFor","FormStok","props","inputChange","e","setState","target","value","state","response","kode_perhiasan","tipeOmzet","listSupplier","filter","listKategori","nama","this","dispatch","getkategoriList","getLokasi","getListBarang","from","Field","name","component","key","onSubmit","handleSubmit","map","list","kodeSupplier","namaSupplier","id","ReanderSelect","options","listlokasi","kode_lokasi","nama_lokasi","placeholder","kodeBarang","kode_jenis","nama_jenis","ReanderField","onChange","data","listkategori","kode_kategori","nama_kategori","Component","reduxForm","form","enableReinitialize","connect","provinsi","lokasi","kategori","LaporanStockCard","doc","jsPDF","tableRows","setFontSize","text","forEach","item","index","tableColumn","content","colSpan","detail","hasil","rows","tanggal","awal_netto","awal_rp","in_netto","in_rp","out_netto","out_rp","akhir_netto","akhir_rp","keterangan","no_ref","no_ext","push","autoTable","head","body","startY","theme","rowPageBreak","pageBreak","margin","top","bodyStyles","lineWidth","lineColor","headStyles","fillColor","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","autoPrint","string","output","embed","x","window","open","document","write","LaporanStockPerKategori","total_bruto","total_netto","LaporanStockPerKategoriLokasi","LaporanStok","process","REACT_APP_BACKEND_URL_NON_MASTER","listLaporan","group_by","AxiosMasterGet","filter_by","then","res","ToastError","catch","tanggal_awal","tanggal_akhir","href","data-toggle","aria-expanded","handlePindah","handleMutasi","handleStockPerKategori","handleStockCard","handleTerimaMasak","handleKirimMasak","handleSummary","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","Promise","resolve","reject","fire","icon","title","readOnly","autoFocus","ref","loading","onKeyPress","event","preventDefault","getOptions","disabled","search","getUserData","JSON","parse","localStorage","getItem","getToday","Date","getFullYear","getMonth","slice","getDate","SkeletonLoading"],"mappings":"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","file":"static/js/126.7a9e7454.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { getkategoriList } from \"../../actions/kategoriAction\";\r\nimport { getListBarang } from \"../../actions/kodeBarangAction\";\r\nimport { getLokasi } from \"../../actions/lokasiAction\";\r\nimport {\r\n  ReanderField,\r\n  ReanderSelect,\r\n} from \"../../GlobalComponent/notification\";\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input {...input} type={type} className=\"form-control\" />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nclass FormStok extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      response: \"\",\r\n      kode_perhiasan: \"\",\r\n      tipeOmzet: \"PERTAHUN\",\r\n      listSupplier: [],\r\n      filter: true,\r\n      listKategori: [\r\n        {\r\n          nama: \"AMBIL BARANG\",\r\n        },\r\n        {\r\n          nama: \"KEMBALI STOK\",\r\n        },\r\n        {\r\n          nama: \"KOREKSI STOK\",\r\n        },\r\n        {\r\n          nama: \"MUTASI BAHAN\",\r\n        },\r\n        {\r\n          nama: \"PENGAMBILAN SALES\",\r\n        },\r\n        {\r\n          nama: \"PINDAH\",\r\n        },\r\n        {\r\n          nama: \"PINDAH GUDANG REPARASI\",\r\n        },\r\n        {\r\n          nama: \"RETURN SALES\",\r\n        },\r\n        {\r\n          nama: \"SALAH INPUT\",\r\n        },\r\n        {\r\n          nama: \"SALAH PINDAH\",\r\n        },\r\n        {\r\n          nama: \"STOK AWAL\",\r\n        },\r\n        {\r\n          nama: \"TAMBAH BARANG\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getkategoriList());\r\n    this.props.dispatch(getLokasi());\r\n    this.props.dispatch(getListBarang());\r\n  }\r\n  render() {\r\n    switch (this.props.from) {\r\n      case \"saldoAwal\":\r\n        return (\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-4\">\r\n              <label htmlFor=\"\">Lokasi</label>\r\n              <Field name=\"lokasi\" className=\"form-control\" component=\"select\">\r\n                <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                  SILAHKAN PILIH\r\n                </option>\r\n              </Field>\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <Field\r\n                name=\"tglFrom\"\r\n                label=\"Mulai Tanggal\"\r\n                className=\"form-control\"\r\n                component={renderField}\r\n                type=\"date\"\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <Field\r\n                name=\"tglEnd\"\r\n                label=\"Sampai Dengan\"\r\n                className=\"form-control\"\r\n                component={renderField}\r\n                type=\"date\"\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"text-right\">\r\n                <button className=\"btn btn-primary\">Print</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case \"kriteria\":\r\n        return (\r\n          <form onSubmit={this.props.handleSubmit}>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-4\">\r\n                <label htmlFor=\"\">Kriteria</label>\r\n                <Field\r\n                  name=\"kriteria\"\r\n                  className=\"form-control\"\r\n                  component=\"select\"\r\n                >\r\n                  <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                    SILAHKAN PILIH\r\n                  </option>\r\n                  {this.state.listKategori.map((list) => (\r\n                    <option value={list.nama}>{list.nama}</option>\r\n                  ))}\r\n                </Field>\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <Field\r\n                  name=\"tglFrom\"\r\n                  label=\"Mulai Tanggal\"\r\n                  className=\"form-control\"\r\n                  component={renderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <Field\r\n                  name=\"tglTo\"\r\n                  label=\"Sampai Dengan\"\r\n                  className=\"form-control\"\r\n                  component={renderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"text-right\">\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                    Print\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n\r\n      case \"perpindahanBarang\":\r\n        return (\r\n          <form onSubmit={this.props.handleSubmit}>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-4\">\r\n                <label htmlFor=\"\">Jenis</label>\r\n                <Field name=\"jenis\" className=\"form-control\" component=\"select\">\r\n                  <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                    SILAHKAN PILIH\r\n                  </option>\r\n                </Field>\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <label htmlFor=\"\">Dari Lokasi</label>\r\n                <Field\r\n                  name=\"kodeLokasiFrom\"\r\n                  className=\"form-control\"\r\n                  component=\"select\"\r\n                >\r\n                  <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                    SILAHKAN PILIH\r\n                  </option>\r\n                  {this.state.listSupplier.map((list) => (\r\n                    <option value={list.kodeSupplier}>\r\n                      {list.namaSupplier}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <label htmlFor=\"\">Ke Lokasi</label>\r\n                <Field\r\n                  name=\"kodeLokasiTo\"\r\n                  className=\"form-control\"\r\n                  component=\"select\"\r\n                >\r\n                  <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                    SILAHKAN PILIH\r\n                  </option>\r\n                  {this.state.listSupplier.map((list) => (\r\n                    <option value={list.kodeSupplier}>\r\n                      {list.namaSupplier}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n              </div>\r\n              <div className=\"col-lg-4 mt-3\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-6\">\r\n                    <label htmlFor=\"employed\">TAMBAH BARANG</label>\r\n                    <div>\r\n                      <Field\r\n                        name=\"tambahBarang\"\r\n                        id=\"employed\"\r\n                        component=\"input\"\r\n                        type=\"checkbox\"\r\n                        value=\"TAMBAH BARANG\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-6\">\r\n                    <label htmlFor=\"employed\">AMBIL BARANG</label>\r\n                    <div>\r\n                      <Field\r\n                        name=\"ambilBarang\"\r\n                        id=\"employed\"\r\n                        component=\"input\"\r\n                        type=\"checkbox\"\r\n                        value=\"AMBIL BARANG\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-8\"></div>\r\n              <div className=\"col-lg-4 mt-3\">\r\n                <Field\r\n                  name=\"tglFrom\"\r\n                  label=\"Mulai Tanggal\"\r\n                  className=\"form-control\"\r\n                  component={renderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-4 mt-3\">\r\n                <Field\r\n                  name=\"tglTo\"\r\n                  label=\"Sampai Dengan\"\r\n                  className=\"form-control\"\r\n                  component={renderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"text-right\">\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                    Print\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n\r\n      case \"kartuStok\":\r\n        return (\r\n          <form onSubmit={this.props.handleSubmit}>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"kode_lokasi\"\r\n                  component={ReanderSelect}\r\n                  options={this.props.listlokasi.map((list) => {\r\n                    let data = {\r\n                      value: list.kode_lokasi,\r\n                      name: `${list.kode_lokasi} - ${list.nama_lokasi}`,\r\n                    };\r\n                    return data;\r\n                  })}\r\n                  type=\"text\"\r\n                  label=\"Kode Lokasi\"\r\n                  placeholder=\"Masukan Kode Lokasi\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"kode_jenis\"\r\n                  component={ReanderSelect}\r\n                  options={this.props.kodeBarang.map((list) => {\r\n                    let data = {\r\n                      value: list.kode_jenis,\r\n                      name: `${list.kode_jenis} - ${list.nama_jenis}`,\r\n                    };\r\n                    return data;\r\n                  })}\r\n                  type=\"text\"\r\n                  label=\"Kode Jenis\"\r\n                  placeholder=\"Masukan Kode Jenis\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"tanggal_awal\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                  label=\"Tanggal Awal\"\r\n                  placeholder=\"Masukan Tanggal Awal\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"tanggal_akhir\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                  label=\"Tanggal Akhir\"\r\n                  placeholder=\"Masukan Tanggal Akhir\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"text-right\">\r\n                  <button className=\"btn btn-primary\">Print</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n\r\n      case \"stokPerKategori\":\r\n        return (\r\n          <form onSubmit={this.props.handleSubmit}>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"group_by\"\r\n                  component={ReanderSelect}\r\n                  options={[\r\n                    {\r\n                      value: \"LOKASI\",\r\n                      name: \"LOKASI\",\r\n                    },\r\n                    {\r\n                      value: \"KATEGORI\",\r\n                      name: \"KATEGORI\",\r\n                    },\r\n                  ]}\r\n                  type=\"text\"\r\n                  label=\"Group By\"\r\n                  placeholder=\"Masukan Group By\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"filter_by\"\r\n                  component={ReanderSelect}\r\n                  options={[\r\n                    {\r\n                      value: \"LOKASI\",\r\n                      name: \"LOKASI\",\r\n                    },\r\n                    {\r\n                      value: \"KATEGORI\",\r\n                      name: \"KATEGORI\",\r\n                    },\r\n                  ]}\r\n                  type=\"text\"\r\n                  label=\"Filter By\"\r\n                  placeholder=\"Masukan Filter By\"\r\n                  onChange={(data) => {\r\n                    data === \"KATEGORI\"\r\n                      ? this.setState({\r\n                          filter: false,\r\n                        })\r\n                      : this.setState({\r\n                          filter: true,\r\n                        });\r\n                  }}\r\n                />\r\n              </div>\r\n              <div\r\n                className={this.state.filter ? \"col-lg-3 d-none\" : \"col-lg-3 \"}\r\n              >\r\n                <Field\r\n                  name=\"kode_kategori\"\r\n                  component={ReanderSelect}\r\n                  options={this.props.listkategori.map((list) => {\r\n                    let data = {\r\n                      value: list.kode_kategori,\r\n                      name: `${list.nama_kategori} - ${list.kode_kategori}`,\r\n                    };\r\n                    return data;\r\n                  })}\r\n                  type=\"text\"\r\n                  label=\"Kode Kategori\"\r\n                  placeholder=\"Masukan Kode Kategori\"\r\n                />\r\n              </div>\r\n              <div\r\n                className={this.state.filter ? \"col-lg-3 \" : \"col-lg-3 d-none\"}\r\n              >\r\n                <Field\r\n                  name=\"kode_lokasi\"\r\n                  component={ReanderSelect}\r\n                  options={this.props.listlokasi.map((list) => {\r\n                    let data = {\r\n                      value: list.kode_lokasi,\r\n                      name: list.nama_lokasi,\r\n                    };\r\n                    return data;\r\n                  })}\r\n                  type=\"text\"\r\n                  label=\"Kode Lokasi\"\r\n                  placeholder=\"Masukan Kode Lokasi\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"text-right\">\r\n                  <button className=\"btn btn-primary\">Print</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n\r\n      case \"soSales\":\r\n        return (\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-4\">\r\n              <label htmlFor=\"\">Lokasi</label>\r\n              <Field name=\"lokasi\" className=\"form-control\" component=\"select\">\r\n                <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                  SILAHKAN PILIH\r\n                </option>\r\n              </Field>\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <Field\r\n                name=\"tanggal\"\r\n                label=\"Tanggal\"\r\n                className=\"form-control\"\r\n                component={renderField}\r\n                type=\"date\"\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"text-right\">\r\n                <button className=\"btn btn-primary\">Print</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case \"jenisJK\":\r\n        return (\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-4\">\r\n              <label htmlFor=\"\">Jenis</label>\r\n              <Field name=\"jenis\" className=\"form-control\" component=\"select\">\r\n                <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                  SILAHKAN PILIH\r\n                </option>\r\n              </Field>\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <Field\r\n                name=\"tglFrom\"\r\n                label=\"Mulai Tanggal\"\r\n                className=\"form-control\"\r\n                component={renderField}\r\n                type=\"date\"\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <Field\r\n                name=\"tglTo\"\r\n                label=\"Sampai Dengan\"\r\n                className=\"form-control\"\r\n                component={renderField}\r\n                type=\"date\"\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <div className=\"form-group\">\r\n                <label>Type Laporan</label>\r\n                <Field\r\n                  name=\"typeLap\"\r\n                  className=\"form-control\"\r\n                  component=\"select\"\r\n                >\r\n                  <option value=\"DETAIL\" key=\"DETAIL\">\r\n                    DETAIL\r\n                  </option>\r\n                  <option value=\"REKAPITULASI\" key=\"REKAPITULASI\">\r\n                    REKAPITULASI\r\n                  </option>\r\n                </Field>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-4\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\">Jenis Laporan</label>\r\n                <div className=\"form-control-transparant\">\r\n                  <label className=\"mr-3\">\r\n                    <Field\r\n                      name=\"jenisLaporan\"\r\n                      component=\"input\"\r\n                      type=\"radio\"\r\n                      value=\"bruto\"\r\n                      className=\"mr-2\"\r\n                    />\r\n                    Bruto\r\n                  </label>\r\n                  <label>\r\n                    <Field\r\n                      name=\"jenisLaporan\"\r\n                      component=\"input\"\r\n                      type=\"radio\"\r\n                      value=\"netto\"\r\n                      className=\"mr-2\"\r\n                    />\r\n                    Netto\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"text-right\">\r\n                <button className=\"btn btn-primary\">Print</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case \"kirimMasak\":\r\n        return (\r\n          <form onSubmit={this.props.handleSubmit}>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-4\">\r\n                <Field\r\n                  name=\"tglFrom\"\r\n                  label=\"Mulai Tanggal\"\r\n                  className=\"form-control\"\r\n                  component={renderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <Field\r\n                  name=\"tglTo\"\r\n                  label=\"Sampai Dengan\"\r\n                  className=\"form-control\"\r\n                  component={renderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"\">Jenis Laporan</label>\r\n                  <div className=\"form-control-transparant\">\r\n                    <label className=\"mr-3\">\r\n                      <Field\r\n                        name=\"jenisLaporanKM\"\r\n                        component=\"input\"\r\n                        type=\"radio\"\r\n                        value=\"KIRIM MASAK\"\r\n                        className=\"mr-2\"\r\n                      />\r\n                      Kirim Masak\r\n                    </label>\r\n                    <label>\r\n                      <Field\r\n                        name=\"jenisLaporanKM\"\r\n                        component=\"input\"\r\n                        type=\"radio\"\r\n                        value=\"KIRIM PRODUKSI\"\r\n                        className=\"mr-2\"\r\n                      />\r\n                      Kirim Produksi\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"text-right\">\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                    Print\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n\r\n      case \"terimaMasak\":\r\n        return (\r\n          <form onSubmit={this.props.handleSubmit}>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-4\">\r\n                <Field\r\n                  name=\"tglFrom\"\r\n                  label=\"Mulai Tanggal\"\r\n                  className=\"form-control\"\r\n                  component={renderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <Field\r\n                  name=\"tglTo\"\r\n                  label=\"Sampai Dengan\"\r\n                  className=\"form-control\"\r\n                  component={renderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"\">Jenis Laporan</label>\r\n                  <div className=\"form-control-transparant\">\r\n                    <label className=\"mr-3\">\r\n                      <Field\r\n                        name=\"jenisLaporanTM\"\r\n                        component=\"input\"\r\n                        type=\"radio\"\r\n                        value=\"TERIMA MASAK\"\r\n                        className=\"mr-2\"\r\n                      />\r\n                      Terima Masak\r\n                    </label>\r\n                    <label>\r\n                      <Field\r\n                        name=\"jenisLaporanTM\"\r\n                        component=\"input\"\r\n                        type=\"radio\"\r\n                        value=\"TERIMA PRODUKSI\"\r\n                        className=\"mr-2\"\r\n                      />\r\n                      Terima Produksi\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"text-right\">\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                    Print\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n      case \"SummaryStock\":\r\n        return (\r\n          <form onSubmit={this.props.handleSubmit}>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"kode_lokasi\"\r\n                  component={ReanderSelect}\r\n                  options={this.props.listlokasi.map((list) => {\r\n                    let data = {\r\n                      value: list.kode_lokasi,\r\n                      name: `${list.kode_lokasi} - ${list.nama_lokasi}`,\r\n                    };\r\n                    return data;\r\n                  })}\r\n                  type=\"text\"\r\n                  label=\"Kode Lokasi\"\r\n                  placeholder=\"Masukan Kode Lokasi\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"tanggal_awal\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                  label=\"Tanggal Awal\"\r\n                  placeholder=\"Masukan Tanggal Awal\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"tanggal_akhir\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                  label=\"Tanggal Akhir\"\r\n                  placeholder=\"Masukan Tanggal Akhir\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"text-right\">\r\n                <button className=\"btn btn-primary\">Print</button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nFormStok = reduxForm({\r\n  form: \"FormStok\",\r\n  enableReinitialize: true,\r\n})(FormStok);\r\nexport default connect((state) => {\r\n  return {\r\n    listlokasi: state.provinsi.lokasi,\r\n    listkategori: state.provinsi.kategori,\r\n    kodeBarang: state.provinsi.kodeBarang,\r\n  };\r\n})(FormStok);\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanStockCard = (data = []) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n\r\n  let finalY = 40;\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN HUTANG SUPPLIER \", 14, 15);\r\n  doc.setFontSize(10);\r\n  //   //row 1\r\n  //   doc.text(`Supplier : ${row1isi}`, 14, 25);\r\n  //   //   row 2\r\n  //   doc.text(`Tanggal\t: ${row2isi}`, 120, 25);\r\n  data.forEach((item, index) => {\r\n    let tableColumn = [\r\n      [\r\n        {\r\n          content: `KODE LOKASI : ${item.kode_lokasi}`,\r\n          colSpan: 5,\r\n        },\r\n        {\r\n          content: `KODE JENIS : ${item.kode_jenis}`,\r\n          colSpan: 5,\r\n        },\r\n      ],\r\n      [\r\n        {\r\n          content: `TANGGAL`,\r\n        },\r\n        {\r\n          content: `AWAL\\nNETTO`,\r\n        },\r\n        {\r\n          content: `AWAL\\nRP`,\r\n        },\r\n        {\r\n          content: `IN\\nNETTO`,\r\n        },\r\n        {\r\n          content: `IN\\nRP`,\r\n        },\r\n        {\r\n          content: `OUT\\nNETTO`,\r\n        },\r\n        {\r\n          content: `OUT\\nRP`,\r\n        },\r\n        {\r\n          content: `AKHIR\\nNETTO`,\r\n        },\r\n        {\r\n          content: `AKHIR\\nRP`,\r\n        },\r\n        {\r\n          content: `KETERANGAN`,\r\n        },\r\n        {\r\n          content: `NO REF`,\r\n        },\r\n        {\r\n          content: `NO BON`,\r\n        },\r\n      ],\r\n    ];\r\n    item.detail.forEach((hasil) => {\r\n      let rows = [\r\n        hasil.tanggal,\r\n        hasil.awal_netto,\r\n        hasil.awal_rp,\r\n        hasil.in_netto,\r\n        hasil.in_rp,\r\n        hasil.out_netto,\r\n        hasil.out_rp,\r\n        hasil.akhir_netto,\r\n        hasil.akhir_rp,\r\n        hasil.keterangan,\r\n        hasil.no_ref,\r\n        hasil.no_ext,\r\n      ];\r\n      tableRows.push(rows);\r\n    });\r\n    doc.autoTable({\r\n      head: tableColumn,\r\n      body: tableRows,\r\n      startY: 30,\r\n      theme: \"plain\",\r\n      rowPageBreak: \"avoid\",\r\n      pageBreak: \"avoid\",\r\n      margin: { top: 20 },\r\n      bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n      headStyles: {\r\n        lineWidth: 0.02,\r\n        lineColor: \"#000\",\r\n        fillColor: [212, 212, 211],\r\n      },\r\n    });\r\n    finalY = doc.autoTableEndPosY() + 10;\r\n  });\r\n\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanStockCard;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanStockPerKategori = (data) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 40;\r\n  // let data = [\r\n  //   {\r\n  //     kode_supplier: \"SP001\",\r\n  //     nama_supplier: \"SUPPLIER\",\r\n  //     detail: [\r\n  //       {\r\n  //         tanggal_invoice: \"2021-03-01\",\r\n  //         no_bon: \"CB44C4-F832-031A-3026-EB855A3D777F\",\r\n  //         detail_barang: [\r\n  //           {\r\n  //             no_urut: 1,\r\n  //             kode_jenis: \"990PER107\",\r\n  //             keterangan: \"990 PER 107\",\r\n  //             kadar_cetak: 100,\r\n  //             kadar_beli: 99,\r\n  //             kode_barcode: \"-\",\r\n  //             qty: 2,\r\n  //             plastik: 2,\r\n  //             kulit: 0,\r\n  //             pkg: 5,\r\n  //             gross: 10,\r\n  //             bruto: 5,\r\n  //             netto: 4.95,\r\n  //             ongkos_rp: 100000,\r\n  //           },\r\n  //           {\r\n  //             no_urut: 2,\r\n  //             kode_jenis: \"GLKEPRAS78\",\r\n  //             keterangan: \"GLKEPRAS 78\",\r\n  //             kadar_cetak: 78,\r\n  //             kadar_beli: 100,\r\n  //             kode_barcode: \"-\",\r\n  //             qty: 5,\r\n  //             plastik: 5,\r\n  //             kulit: 0,\r\n  //             pkg: 5,\r\n  //             gross: 60,\r\n  //             bruto: 55,\r\n  //             netto: 55,\r\n  //             ongkos_rp: 100000,\r\n  //           },\r\n  //         ],\r\n  //         total_bruto: 60,\r\n  //         total_netto: 59.95,\r\n  //         total_netto_ext: 59.95,\r\n  //         total_rp: 200000,\r\n  //       },\r\n  //     ],\r\n  //   },\r\n  // ];\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN STOCK PER KATEGORI\", 14, 15);\r\n  doc.setFontSize(10);\r\n  //   //row 1\r\n  //   doc.text(`Supplier : ${row1isi}`, 14, 25);\r\n  //   //   row 2\r\n  //   doc.text(`Tanggal\t: ${row2isi}`, 120, 25);\r\n  data.forEach((item, index) => {\r\n    tableColumn = [\r\n      [\r\n        {\r\n          content: `KODE KATEGORI : ${item.kode_kategori}`,\r\n          colSpan: 4,\r\n        },\r\n      ],\r\n      [\r\n        {\r\n          content: `KODE LOKASI`,\r\n        },\r\n        {\r\n          content: `KODE JENIS`,\r\n        },\r\n        {\r\n          content: `TOTAL BRUTO`,\r\n        },\r\n        {\r\n          content: `TOTAL NETTO`,\r\n        },\r\n      ],\r\n    ];\r\n    item.detail.forEach((hasil) => {\r\n      let rows = [\r\n        hasil.kode_lokasi,\r\n        hasil.kode_jenis,\r\n        hasil.total_bruto,\r\n        hasil.total_netto,\r\n      ];\r\n      tableRows.push(rows);\r\n    });\r\n  });\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    startY: 30,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    pageBreak: \"avoid\",\r\n    margin: { top: 20 },\r\n    bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n    headStyles: {\r\n      lineWidth: 0.02,\r\n      lineColor: \"#000\",\r\n      fillColor: [212, 212, 211],\r\n    },\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 10;\r\n\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanStockPerKategori;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanStockPerKategoriLokasi = (data) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 40;\r\n  // let data = [\r\n  //   {\r\n  //     kode_supplier: \"SP001\",\r\n  //     nama_supplier: \"SUPPLIER\",\r\n  //     detail: [\r\n  //       {\r\n  //         tanggal_invoice: \"2021-03-01\",\r\n  //         no_bon: \"CB44C4-F832-031A-3026-EB855A3D777F\",\r\n  //         detail_barang: [\r\n  //           {\r\n  //             no_urut: 1,\r\n  //             kode_jenis: \"990PER107\",\r\n  //             keterangan: \"990 PER 107\",\r\n  //             kadar_cetak: 100,\r\n  //             kadar_beli: 99,\r\n  //             kode_barcode: \"-\",\r\n  //             qty: 2,\r\n  //             plastik: 2,\r\n  //             kulit: 0,\r\n  //             pkg: 5,\r\n  //             gross: 10,\r\n  //             bruto: 5,\r\n  //             netto: 4.95,\r\n  //             ongkos_rp: 100000,\r\n  //           },\r\n  //           {\r\n  //             no_urut: 2,\r\n  //             kode_jenis: \"GLKEPRAS78\",\r\n  //             keterangan: \"GLKEPRAS 78\",\r\n  //             kadar_cetak: 78,\r\n  //             kadar_beli: 100,\r\n  //             kode_barcode: \"-\",\r\n  //             qty: 5,\r\n  //             plastik: 5,\r\n  //             kulit: 0,\r\n  //             pkg: 5,\r\n  //             gross: 60,\r\n  //             bruto: 55,\r\n  //             netto: 55,\r\n  //             ongkos_rp: 100000,\r\n  //           },\r\n  //         ],\r\n  //         total_bruto: 60,\r\n  //         total_netto: 59.95,\r\n  //         total_netto_ext: 59.95,\r\n  //         total_rp: 200000,\r\n  //       },\r\n  //     ],\r\n  //   },\r\n  // ];\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN STOCK PER LOKASI\", 14, 15);\r\n  doc.setFontSize(10);\r\n  //   //row 1\r\n  //   doc.text(`Supplier : ${row1isi}`, 14, 25);\r\n  //   //   row 2\r\n  //   doc.text(`Tanggal\t: ${row2isi}`, 120, 25);\r\n  data.forEach((item, index) => {\r\n    tableColumn = [\r\n      [\r\n        {\r\n          content: `KODE LOKASI : ${item.kode_lokasi}`,\r\n          colSpan: 4,\r\n        },\r\n      ],\r\n      [\r\n        {\r\n          content: `KODE KATEGORI`,\r\n        },\r\n        {\r\n          content: `KODE JENIS`,\r\n        },\r\n        {\r\n          content: `TOTAL BRUTO`,\r\n        },\r\n        {\r\n          content: `TOTAL NETTO`,\r\n        },\r\n      ],\r\n    ];\r\n    item.detail.forEach((hasil) => {\r\n      let rows = [\r\n        hasil.kode_kategori,\r\n        hasil.kode_jenis,\r\n        hasil.total_bruto,\r\n        hasil.total_netto,\r\n      ];\r\n      tableRows.push(rows);\r\n    });\r\n  });\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    startY: 30,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    pageBreak: \"avoid\",\r\n    margin: { top: 20 },\r\n    bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n    headStyles: {\r\n      lineWidth: 0.02,\r\n      lineColor: \"#000\",\r\n      fillColor: [212, 212, 211],\r\n    },\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 10;\r\n\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanStockPerKategoriLokasi;\r\n","import Axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { gagal } from \"../Alert\";\r\nimport { AxiosMasterGet } from \"../Axios\";\r\nimport { ToastError } from \"../GlobalComponent/notification\";\r\nimport FormStok from \"./Component/FormStok\";\r\nimport laporanPrint from \"./Component/laporanPrint\";\r\nimport laporanPrintKirimMasak from \"./Component/laporanPrintKirimMasak\";\r\nimport laporanPrintMutasi from \"./Component/LaporanPrintMutasi\";\r\nimport laporanPrintTerimaMasak from \"./Component/LaporanPrintTerimaMasak\";\r\nimport LaporanStockCard from \"./Component/LaporanStockCard\";\r\nimport LaporanStockPerKategori from \"./Component/LaporanStockPerKategori\";\r\nimport LaporanStockPerKategoriLokasi from \"./Component/LaporanStockPerKategoriLokasi\";\r\n\r\nconst serverNonMaster = process.env.REACT_APP_BACKEND_URL_NON_MASTER;\r\nclass LaporanStok extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listLaporan: [],\r\n    };\r\n  }\r\n  handlePindah(data) {}\r\n  handleMutasi(data) {}\r\n  handleKirimMasak(data) {}\r\n  handleTerimaMasak(data) {}\r\n  handleStockPerKategori(hasil) {\r\n    hasil.group_by === \"KATEGORI\"\r\n      ? AxiosMasterGet(\r\n          \"report/stock-barang/\" +\r\n            `${hasil.group_by}&${hasil.filter_by}&${hasil.kode_kategori}`\r\n        )\r\n          .then((res) => {\r\n            if (res === []) {\r\n              ToastError(\"Data Laporan Kosong\");\r\n              return false;\r\n            } else {\r\n              this.setState({\r\n                listLaporan: res && res.data,\r\n              });\r\n            }\r\n          })\r\n          .then(() => LaporanStockPerKategori(this.state.listLaporan))\r\n      : AxiosMasterGet(\r\n          \"report/stock-barang/\" +\r\n            `${hasil.group_by}&${hasil.filter_by}&${hasil.kode_lokasi || \"ALL\"}`\r\n        )\r\n          .then((res) =>\r\n            this.setState({\r\n              listLaporan: res && res.data,\r\n            })\r\n          )\r\n          .then(() => LaporanStockPerKategoriLokasi(this.state.listLaporan))\r\n          .catch(() => ToastError(\"Data Kosong\"));\r\n  }\r\n  handleStockCard(hasil) {\r\n    AxiosMasterGet(\r\n      `report/stock-barang-card/${hasil.kode_lokasi}&${hasil.kode_jenis}&${hasil.tanggal_awal}&${hasil.tanggal_akhir}`\r\n    )\r\n      .then((res) => {\r\n        if (res === []) {\r\n          ToastError(\"Data Kosong\");\r\n          return false;\r\n        } else {\r\n          this.setState({\r\n            listLaporan: res & res.data,\r\n          });\r\n        }\r\n      })\r\n      .then(() => LaporanStockCard(this.state.listLaporan))\r\n      .catch(() => ToastError(\"Data Kosong\"));\r\n  }\r\n  handleSummary(hasil) {\r\n    AxiosMasterGet(\r\n      `report/stock-barang-summary/${hasil.kode_lokasi}&${hasil.kode_jenis}&${hasil.tanggal_awal}&${hasil.tanggal_akhir}`\r\n    )\r\n      .then((res) => {\r\n        if (res === []) {\r\n          ToastError(\"Data Kosong\");\r\n          return false;\r\n        } else {\r\n          this.setState({\r\n            listLaporan: res & res.data,\r\n          });\r\n        }\r\n      })\r\n      .then(() => LaporanStockCard(this.state.listLaporan))\r\n      .catch(() => ToastError(\"Data Kosong\"));\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"col-lg-12\">\r\n                <ul className=\"nav nav-tabs nav-justified nav-bordered mb-3\">\r\n                  <li className=\"nav-item \">\r\n                    <a\r\n                      href=\"#stok-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link active\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">Stock Barang</span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#kartu-stok-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">\r\n                        Kartu Stok Barang\r\n                      </span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#summary-stok-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">Summary Barang</span>\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n                <div className=\"tab-content\">\r\n                  <div className=\"tab-pane show \" id=\"saldo-tab\">\r\n                    <FormStok from=\"saldoAwal\" />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"pindah-tab\">\r\n                    <FormStok\r\n                      from=\"perpindahanBarang\"\r\n                      onSubmit={(data) => this.handlePindah(data)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"mutasi-tab\">\r\n                    <FormStok\r\n                      from=\"kriteria\"\r\n                      onSubmit={(data) => this.handleMutasi(data)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"tab-pane active\" id=\"stok-tab\">\r\n                    <FormStok\r\n                      from=\"stokPerKategori\"\r\n                      onSubmit={(data) => this.handleStockPerKategori(data)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"kartu-stok-tab\">\r\n                    <FormStok\r\n                      from=\"kartuStok\"\r\n                      onSubmit={(data) => this.handleStockCard(data)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"sales-tab\">\r\n                    <FormStok from=\"soSales\" />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"jenis-lk-tab\">\r\n                    <FormStok from=\"jenisJK\" />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"jenis-rongsok-tab\">\r\n                    <FormStok from=\"jenisJK\" />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"terima-masak-tab\">\r\n                    <FormStok\r\n                      from=\"terimaMasak\"\r\n                      onSubmit={(data) => this.handleTerimaMasak(data)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"kirim-masak-tab\">\r\n                    <FormStok\r\n                      from=\"kirimMasak\"\r\n                      onSubmit={(data) => this.handleKirimMasak(data)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"summary-stok-tab\">\r\n                    <FormStok\r\n                      from=\"SummaryStock\"\r\n                      onSubmit={(data) => this.handleSummary(data)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LaporanStok;\r\n\r\n{\r\n  /* <ul className=\"nav nav-tabs nav-justified nav-bordered mb-3\">\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#saldo-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link active\"\r\n                    >\r\n                      <i className=\"mdi mdi-home-variant d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">Saldo Awal</span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#pindah-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"true\"\r\n                      className=\"nav-link \"\r\n                    >\r\n                      <i className=\"mdi mdi-account-circle d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">Pindah Barang</span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#mutasi-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">Mutasi Barang</span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#stok-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">\r\n                        Stok Per Kategori\r\n                      </span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#kartu-stok-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">Kartu Stok</span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#sales-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">SO Sales</span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#jenis-lk-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">Jenis LK</span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#jenis-rongsok-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">Jensi Rongsok</span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#kirim-masak-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">\r\n                        Kirim Masak / Produksi\r\n                      </span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#terima-masak-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">\r\n                        Terima Masak / Produksi\r\n                      </span>\r\n                    </a>\r\n                  </li>\r\n                </ul> */\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport React from \"react\";\r\nimport SelectSearch from \"react-select-search\";\r\nimport DateTime from \"react-datetime\";\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport { AxiosMasterPut } from \"../Axios\";\r\nimport { SkeletonLoading } from \"./function\";\r\n// import Select from \"react-select\";\r\n\r\nconst Toast = Swal.mixin({\r\n  toast: true,\r\n  position: \"top-end\",\r\n  showConfirmButton: false,\r\n  timer: 3000,\r\n  timerProgressBar: true,\r\n  didOpen: (toast) => {\r\n    toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n    toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n  },\r\n});\r\n\r\nexport function NotifSucces(text) {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      // title: 'Good Job',\r\n      text: text,\r\n      icon: \"success\",\r\n      position: \"top-right\",\r\n      timer: 2000,\r\n      width: \"300px\",\r\n      height: \"100px\",\r\n      showConfirmButton: false,\r\n    })\r\n      .then(resolve(\"berhasil\"))\r\n      .catch(reject(\"error\"));\r\n  });\r\n}\r\nexport function ToastSucces(text) {\r\n  return new Promise((resolve, reject) => {\r\n    Toast.fire({\r\n      icon: \"success\",\r\n      title: text,\r\n    })\r\n      .then(resolve(\"berhasil\"))\r\n      .catch(reject(\"error\"));\r\n  });\r\n}\r\n\r\nexport function NotifError(text) {\r\n  if (text.includes(\"Invalid token\")) {\r\n    Swal.fire({\r\n      title: \"Ooopss\",\r\n      text: \"Sepertinya ada masalah keamanan, Silahkan Login Kembali..\",\r\n      icon: \"info\",\r\n      position: \"center\",\r\n      showConfirmButton: true,\r\n      confirmButtonText: \"Login\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        localStorage.setItem(\"isLogin\", false);\r\n        window.location.reload();\r\n      }\r\n    });\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      Swal.fire({\r\n        title: \"Oopss!!\",\r\n        text: text,\r\n        icon: \"error\",\r\n        position: \"top-right\",\r\n        timer: 2000,\r\n        showConfirmButton: false,\r\n      })\r\n        .then(resolve(\"berhasil\"))\r\n        .catch(reject(\"error\"));\r\n    });\r\n  }\r\n}\r\n\r\nexport function ToastError(text) {\r\n  return new Promise((resolve, reject) => {\r\n    Toast.fire({\r\n      icon: \"error\",\r\n      title: text,\r\n    })\r\n      .then(resolve(\"berhasil\"))\r\n      .catch(reject(\"error\"));\r\n  });\r\n}\r\nexport function NotifWarning(text) {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      title: \"Warning !!!\",\r\n      text: text,\r\n      icon: \"warning\",\r\n      position: \"top-right\",\r\n      timer: 2000,\r\n      showConfirmButton: false,\r\n    })\r\n      .then(resolve(\"berhasil\"))\r\n      .catch(reject(\"error\"));\r\n  });\r\n}\r\nexport function ToastWarning(text) {\r\n  return new Promise((resolve, reject) => {\r\n    Toast.fire({\r\n      icon: \"warning\",\r\n      title: text,\r\n    })\r\n      .then(resolve(\"berhasil\"))\r\n      .catch(reject(\"error\"));\r\n  });\r\n}\r\n\r\nexport function NotifInfo(text) {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      title: \"Informasi !!!\",\r\n      text: text,\r\n      icon: \"info\",\r\n      position: \"top-right\",\r\n      timer: 2000,\r\n      showConfirmButton: false,\r\n    })\r\n      .then(resolve(\"berhasil\"))\r\n      .catch(reject(\"error\"));\r\n  });\r\n}\r\nexport function ToastInfo(text) {\r\n  return new Promise((resolve, reject) => {\r\n    Toast.fire({\r\n      icon: \"info\",\r\n      title: text,\r\n    })\r\n      .then(resolve(\"berhasil\"))\r\n      .catch(reject(\"error\"));\r\n  });\r\n}\r\n\r\nexport const reactive = (err, kode, endpoint, data, endpointUpdate) => {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      title: \"Oopps..\",\r\n      text: err.response.data,\r\n      icon: \"info\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Re-Activate\",\r\n      cancelButtonText: \"Cancel\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        AxiosMasterPut(endpoint + kode, data)\r\n          .then(() =>\r\n            AxiosMasterPut(endpointUpdate + kode, data)\r\n              .then(() => resolve(\"Berhasil\"))\r\n              .then(() =>\r\n                NotifSucces(\"Data Berhasil Dikembalikan\").catch((err) =>\r\n                  reject(err)\r\n                )\r\n              )\r\n          )\r\n          .then(() => NotifSucces(\"Data Berhasil Dikembalikan\"))\r\n          .then(() => resolve(\"Berhasil\"))\r\n          .catch((err) => reject(err));\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexport const ReanderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  readOnly,\r\n  placeholder,\r\n  autoFocus,\r\n  ref,\r\n  loading,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    {loading ? (\r\n      <SkeletonLoading />\r\n    ) : (\r\n      <input\r\n        {...input}\r\n        type={type}\r\n        ref={ref}\r\n        autoFocus={autoFocus}\r\n        className=\"form-control\"\r\n        readOnly={readOnly}\r\n        placeholder={placeholder}\r\n        onKeyPress={(event) => {\r\n          if (event.key === \"Enter\") {\r\n            event.preventDefault(); //<===== This stops the form from being submitted\r\n          } else {\r\n          }\r\n        }}\r\n      />\r\n    )}\r\n    {touched &&\r\n      ((error && (\r\n        <ul className=\"parsley-errors-list filled\">\r\n          <li className=\"parsley-required\"> {error}.</li>\r\n        </ul>\r\n      )) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nexport const ReanderFieldInline = ({\r\n  input,\r\n  label,\r\n  type,\r\n  readOnly,\r\n  placeholder,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group row\">\r\n    <label htmlFor=\"\" className=\"text-black col-form-label col-md-3\">\r\n      {label}\r\n    </label>\r\n    <div className=\"col-lg-9\">\r\n      <input\r\n        {...input}\r\n        type={type}\r\n        className=\"form-control\"\r\n        readOnly={readOnly}\r\n        placeholder={placeholder}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n      />\r\n      {touched &&\r\n        ((error && (\r\n          <ul className=\"parsley-errors-list filled\">\r\n            <li className=\"parsley-required\"> {error}.</li>\r\n          </ul>\r\n        )) ||\r\n          (warning && <p>{warning}</p>))}\r\n    </div>\r\n  </div>\r\n);\r\nexport const ReanderSelectInline = ({\r\n  input,\r\n  label,\r\n  readOnly,\r\n  placeholder,\r\n  options,\r\n  getOptions,\r\n  value,\r\n  disabled,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group row\">\r\n    <label htmlFor=\"\" className=\"text-black col-form-label col-md-3\">\r\n      {label}\r\n    </label>\r\n    <div className=\"col-lg-9\">\r\n      <SelectSearch\r\n        {...input}\r\n        search\r\n        disabled={readOnly}\r\n        placeholder={placeholder}\r\n        options={options}\r\n        getOptions={getOptions}\r\n      />\r\n      {touched &&\r\n        ((error && (\r\n          <ul className=\"parsley-errors-list filled\">\r\n            <li className=\"parsley-required\"> {error}.</li>\r\n          </ul>\r\n        )) ||\r\n          (warning && <p>{warning}</p>))}\r\n    </div>\r\n  </div>\r\n);\r\nexport const RenderCheckBox = ({\r\n  input,\r\n  label,\r\n  type,\r\n  readOnly,\r\n  placeholder,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\"></label>\r\n    <div className=\"checkbox checkbox-css mt-3\">\r\n      <input\r\n        type=\"checkbox\"\r\n        id={label}\r\n        {...input}\r\n        readOnly={readOnly}\r\n        placeholder={placeholder}\r\n      />\r\n      <label style={{ fontSize: 20 }} htmlFor={label}>\r\n        {label}\r\n      </label>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport const RenderFieldGroup = ({\r\n  input,\r\n  label,\r\n  type,\r\n  readOnly,\r\n  placeholder,\r\n  handleClick,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <div class=\"input-group\">\r\n      <input\r\n        {...input}\r\n        type={type}\r\n        className=\"form-control\"\r\n        readOnly={readOnly}\r\n        placeholder={placeholder}\r\n        aria-label=\"Recipient's username\"\r\n        aria-describedby=\"basic-addon2\"\r\n        onKeyPress={(event) => {\r\n          if (event.key === \"Enter\") {\r\n            event.preventDefault(); //<===== This stops the form from being submitted\r\n          } else {\r\n          }\r\n        }}\r\n      />\r\n      <div class=\"input-group-append\">\r\n        <button class=\"btn btn-primary\" type=\"button\" onClick={handleClick}>\r\n          <i className=\"fa fa-search mr-1\"></i>\r\n          Cari\r\n        </button>\r\n      </div>\r\n    </div>\r\n    {touched &&\r\n      ((error && (\r\n        <ul className=\"parsley-errors-list filled\">\r\n          <li className=\"parsley-required\"> {error}.</li>\r\n        </ul>\r\n      )) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\n\r\nexport const ReanderSelect = ({\r\n  input,\r\n  label,\r\n  readOnly,\r\n  placeholder,\r\n  options,\r\n  getOptions,\r\n  value,\r\n  disabled,\r\n  loading,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    {loading ? (\r\n      <SkeletonLoading />\r\n    ) : (\r\n      <SelectSearch\r\n        {...input}\r\n        search\r\n        disabled={readOnly}\r\n        placeholder={placeholder}\r\n        options={options}\r\n        getOptions={getOptions}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n      />\r\n    )}\r\n\r\n    {touched &&\r\n      ((error && (\r\n        <ul className=\"parsley-errors-list filled\">\r\n          <li className=\"parsley-required\"> {error}.</li>\r\n        </ul>\r\n      )) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nexport const ReanderSelectMultiple = ({\r\n  input,\r\n  label,\r\n  placeholder,\r\n  options,\r\n  disabled,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <SelectSearch\r\n      {...input}\r\n      search\r\n      multiple\r\n      closeOnSelect={false}\r\n      printOptions=\"on-focus\"\r\n      disabled={disabled}\r\n      placeholder={placeholder}\r\n      options={options}\r\n    />\r\n\r\n    {touched &&\r\n      ((error && (\r\n        <ul className=\"parsley-errors-list filled\">\r\n          <li className=\"parsley-required\"> {error}.</li>\r\n        </ul>\r\n      )) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nexport const RenderTime = ({\r\n  input,\r\n  label,\r\n  placeholder,\r\n  options,\r\n  disabled,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <DateTime dateFormat={false} inputProps={{ placeholder: placeholder }} />\r\n\r\n    {touched &&\r\n      ((error && (\r\n        <ul className=\"parsley-errors-list filled\">\r\n          <li className=\"parsley-required\"> {error}.</li>\r\n        </ul>\r\n      )) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\n\r\nexport const deleteLocalItemBarcode = (nama, kode_barcode) => {\r\n  let data = JSON.parse(localStorage.getItem(nama)) || [];\r\n  let hasil = data.findIndex((item) => item.kode_barcode === kode_barcode);\r\n  data.splice(hasil, 1);\r\n  localStorage.setItem(nama, JSON.stringify(data) || []);\r\n};\r\n\r\nexport const getUserData = () => {\r\n  let data = JSON.parse(localStorage.getItem(\"userdata\")) || [];\r\n  return data;\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nexport const getToday = () => {\r\n  return (\r\n    new Date().getFullYear() +\r\n    \"-\" +\r\n    (\"0\" + (new Date().getMonth() + 1)).slice(-2) +\r\n    \"-\" +\r\n    (\"0\" + new Date().getDate()).slice(-2)\r\n  );\r\n};\r\n\r\nexport const encryptascii = (str) => {\r\n  let key = process.env.REACT_APP_ENCKEY;\r\n  let dataKey = {};\r\n  for (let i = 0; i < key.length; i++) {\r\n    dataKey[i] = key.substr(`${i}`, 1);\r\n  }\r\n\r\n  let strEnc = \"\";\r\n  let nkey = 0;\r\n  let jml = str.length;\r\n\r\n  for (let i = 0; i < parseInt(jml); i++) {\r\n    strEnc =\r\n      strEnc + hexEncode(str[i].charCodeAt(0) + dataKey[nkey].charCodeAt(0));\r\n\r\n    if (nkey === Object.keys(dataKey).length - 1) {\r\n      nkey = 0;\r\n    }\r\n    nkey = nkey + 1;\r\n  }\r\n  return strEnc.toUpperCase();\r\n};\r\n\r\nexport const decryptascii = (str) => {\r\n  if (str !== null) {\r\n    let key = process.env.REACT_APP_ENCKEY;\r\n    let dataKey = {};\r\n    for (let i = 0; i < key.length; i++) {\r\n      dataKey[i] = key.substr(`${i}`, 1);\r\n    }\r\n\r\n    let strDec = \"\";\r\n    let nkey = 0;\r\n    let jml = str.length;\r\n    let i = 0;\r\n    while (i < parseInt(jml)) {\r\n      strDec =\r\n        strDec + chr(hexdec(str.substr(i, 2)) - dataKey[nkey].charCodeAt(0));\r\n      if (nkey === Object.keys(dataKey).length - 1) {\r\n        nkey = 0;\r\n      }\r\n      nkey = nkey + 1;\r\n      i = i + 2;\r\n    }\r\n    return strDec;\r\n  }\r\n};\r\nexport const hexEncode = (str) => {\r\n  var result = \"\";\r\n  result = str.toString(16);\r\n  return result;\r\n};\r\n\r\nexport const hexdec = (hex) => {\r\n  var str = \"\";\r\n  str = parseInt(hex, 16);\r\n  return str;\r\n};\r\nexport const chr = (asci) => {\r\n  var str = \"\";\r\n  str = String.fromCharCode(asci);\r\n  return str;\r\n};\r\n\r\nexport const formatDate = (date) => {\r\n  var d = new Date(date),\r\n    month = \"\" + (d.getMonth() + 1),\r\n    day = \"\" + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = \"0\" + month;\r\n  if (day.length < 2) day = \"0\" + day;\r\n\r\n  return [year, month, day].join(\"-\");\r\n};\r\n\r\nexport const parseIsoDatetime = (dtstr) => {\r\n  let hasil = dtstr.substr(0, 10);\r\n  return hasil;\r\n};\r\n\r\nexport const multipleDeleteLocal = (data = []) => {\r\n  data.forEach((k) => {\r\n    if (localStorage.getItem(k) !== null) {\r\n      localStorage.removeItem(k);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  });\r\n};\r\n\r\nexport const formatDateISO = (value) => {\r\n  let pattern = \"####-##-##\";\r\n  var i = 0,\r\n    date = value.toString();\r\n  return pattern.replace(/#/g, (_) => date[i++]);\r\n};\r\n\r\nexport const SkeletonLoading = ({ label }) => (\r\n  <div className=\"form-group\">\r\n    <label> {label} </label>\r\n    <Skeleton className=\"form-control\" />\r\n  </div>\r\n);\r\n"],"sourceRoot":""}