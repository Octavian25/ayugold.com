{"version":3,"sources":["DataMaster/Component/FormAreaEdit.jsx","DataMaster/Area.jsx","Images/500.svg","DataMaster/Component/ModalMasterData.jsx","TourGuide.jsx","DataMaster/Component/Table.jsx","Validations/validationProvinsi.js","DataMaster/Component/AreaProvinsiKota.jsx","../node_modules/redux-form/es/index.js"],"names":["FormAreaEdit","props","state","response","status","listKota","AxiosMasterGet","then","res","setState","data","catch","err","console","log","kodenya","this","kode","namanya","nama","onSubmit","handleSubmit","className","Field","name","replace","type","normalize","value","toUpperCase","component","renderField","readOnly","label","renderFieldSelect","kode_ext","from","options","map","obj","kode_kota","nama_kota","placeholder","id","disabled","onSend","aria-hidden","Component","reduxForm","form","validate","validationProvinsi","enableReinitialize","connect","initialValues","kodePos","provinsi","editArea","Status","KodeKecamatan","kodeArea","NamaKecamatan","namaArea","kodeKota","defaultSorted","dataField","order","Area","updateStatus","input","dispatch","getareaList","AreaArray","isEdit","columns","text","sort","headerStyle","width","csvExport","formatter","rowContent","row","data-tut","onClick","kode_kecamatan","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","AxiosMasterDelete","hideModal","berhasil","gagal","editarea","nama_kecamatan","kode_pos","editModal","hasil","dataEdit","progressSend","AxiosMasterPost","finishSend","reset","handleReactive","AxiosMasterPut","includes","reactive","showModal","style","color","alert","role","data-dismiss","aria-label","TourGuide","tourConfig","HeaderCard","content","handleEdit","AreaProvinsiKota","tambahModal","areaList","Table","namaKey","error","src","notrespond","alt","height","area","module","exports","ModalGlobal","show","onHide","dialogClassName","backdrop","keyboard","Header","closeButton","backgroundColor","Title","Body","modal","disableBody","target","disableBodyScroll","enableBody","enableBodyScroll","list","index","selector","onRequestClose","hideGuide","steps","isOpen","showTourGuide","maskClassName","rounded","accentColor","onAfterOpen","onBeforeClose","SearchBar","Search","ExportCSVButton","CSVExport","rowStyle","rowIndex","borderTop","bootstrap4","keyField","search","searchProps","margin","baseProps","headerClasses","striped","hover","bordered","pagination","paginationFactory","csvProps","values","errors","KodeProvinsi","length","NamaProvinsi","KodeKota","kodeProvinsi","NamaKota","KodeArea","NamaArea","KodeLokasi","NamaLokasi","listProvinsi","isiNama","isikode","LogData","limit","kode_provinsi","nama_provinsi","config","Error","editProvinsi","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","change","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors"],"mappings":"iRAiBMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAU,GACVC,OAAQ,QACRC,SAAU,IALK,E,gEASE,IAAD,OAClBC,YAAe,gBACZC,MAAK,SAACC,GAAD,OACJ,EAAKC,SAAS,CACZJ,SAAUG,EAAIE,UAGjBC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,Q,+BAI9B,IAAIG,EAAUC,KAAKf,MAAMgB,KACrBC,EAAUF,KAAKf,MAAMkB,KACzB,OACE,6BACE,0BAAMC,SAAUJ,KAAKf,MAAMoB,cACzB,yBAAKC,UAAU,OACb,yBAAKA,UAAU,YACb,kBAACC,EAAA,EAAD,CACEC,KAAMT,EAAQU,QAAQ,MAAO,IAC7BC,KAAK,OACLC,UAAW,SAACC,GAAD,OAAWA,GAASA,EAAMC,eACrCC,UAAWC,IACXC,UAAU,EACVC,MAAOjB,KAAKf,MAAMgB,QAGtB,yBAAKK,UAAU,YACb,yBAAKA,UAAU,cACb,kBAACC,EAAA,EAAD,CACEO,UAAWI,IACXD,MAAOjB,KAAKf,MAAMkC,SAClBX,KACsB,SAApBR,KAAKf,MAAMmC,KAAkB,eAAiB,WAEhDR,MAAOZ,KAAKf,MAAMG,OAClBuB,UAAW,SAACC,GAAD,OAAWA,GAASA,EAAMC,eACrCP,UAAU,eACVe,QAASrB,KAAKd,MAAMG,SAASiC,KAAI,SAACC,GAKhC,MAJc,CACZX,MAAOW,EAAIC,UACXhB,KAAMe,EAAIE,kBAOpB,yBAAKnB,UAAU,YACb,kBAACC,EAAA,EAAD,CACEC,KAAMN,EAAQO,QAAQ,MAAO,IAC7BC,KAAK,OACLC,UAAW,SAACC,GAAD,OAAWA,GAASA,EAAMC,eACrCC,UAAWC,IACXE,MAAOjB,KAAKf,MAAMkB,QAGtB,yBAAKG,UAAU,YACb,kBAACC,EAAA,EAAD,CACEC,KAAK,UACLM,UAAWC,IACXL,KAAK,OACLO,MAAM,WACNS,YAAY,sBAGhB,yBAAKpB,UAAU,uBACb,yBAAKA,UAAU,cACb,4BACEI,KAAK,SACLiB,GAAG,SACHrB,UAAU,kBACVsB,SAAU5B,KAAKf,MAAM4C,QAEpB7B,KAAKf,MAAM4C,OACV,0BACEvB,UAAU,wCACVwB,cAAY,SAEZ,KAXN,mB,GA9EWC,aAqG3B/C,EAAegD,YAAU,CACvBC,KAAM,WACNC,SAAUC,IACVC,oBAAoB,GAHPJ,CAIZhD,GACYqD,mBApHI,SAACnD,GAClB,MAAO,CACLoD,cAAe,CACbC,QAASrD,EAAMsD,SAASC,SAASC,OACjCC,cAAezD,EAAMsD,SAASC,SAASG,SACvCC,cAAe3D,EAAMsD,SAASC,SAASK,SACvCC,SAAU7D,EAAMsD,SAASC,SAASM,aA8GL,KAApBV,CAA0BrD,G,0ECpFzC,IAAMgE,EAAgB,CACpB,CACEC,UAAW,WACXC,MAAO,QAaLC,E,kDACJ,WAAYlE,GAAQ,IAAD,8BACjB,cAAMA,IA4ERmE,aAAe,SAACC,GACdxD,QAAQC,IAAIuD,GACZ,EAAK5D,SAAS,CACZN,SAAUkE,IAEZ,EAAKpE,MAAMqE,SAASC,gBAhFpB,EAAKrE,MAAQ,CACXiE,KAAM,GACNK,UAAW,GACXrE,SAAU,GACVsE,QAAQ,EACRC,QAAS,CACP,CACET,UAAW,iBACXU,KAAM,iBACNC,MAAM,EACNC,YAAa,WACX,MAAO,CAAEC,MAAO,SAGpB,CACEb,UAAW,iBACXU,KAAM,iBACNC,MAAM,GAER,CACEX,UAAW,WACXU,KAAM,WACNC,MAAM,GAER,CACEX,UAAW,YACXU,KAAM,YACNC,MAAM,GAGR,CACEX,UAAW,OACXU,KAAM,OACNI,WAAW,EACXC,UAAW,SAACC,EAAYC,GACtB,OACE,yBAAK5D,UAAU,eACb,4BACEA,UAAU,sBACV6D,WAAS,aACTC,QAAS,kBA/EZd,EA+EwB,EAAKrE,MAAMqE,SA/EzBrD,EA+EmCiE,EAAIG,oBA9E9DC,IAAKC,KAAK,CACRC,MAAO,eACPb,KAAM,iCACNc,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClBtF,MAAK,SAACuF,GACHA,EAAOC,aACTC,YAAkB,oBAAsB/E,GACrCV,MAAK,kBAAM+D,EAAS2B,kBACpB1F,MAAK,SAACC,GAAD,OAAS0F,YAAS,6BACvBvF,OAAM,SAACC,GAAD,OAASuF,YAAM,0BACrB5F,MAAK,kBAAM+D,EAASC,qBAf7B,IAAeD,EAAUrD,IAiFP,uBAAGK,UAAU,qBALf,SAQA,4BACEA,UAAU,uBACV6D,WAAS,aACTC,QAAS,kBACP,EAAKnF,MAAMqE,SACT8B,YACElB,EAAIG,eACJH,EAAImB,eACJnB,EAAI1C,UACJ0C,EAAIoB,SACJ,EAAKC,gBAKX,uBAAGjF,UAAU,oBAff,aA/CK,E,gEA0EjBN,KAAKf,MAAMqE,SAASC,iB,mCAWTiC,GAAQ,IAAD,OACd9F,EAAO,CACT2F,eAAgBG,EAAM3C,cACtBwB,eAAgBmB,EAAM7C,cACtBnB,UAAWgE,EAAMzC,SACjBuC,SAAUE,EAAMjD,SAEdkD,EAAW,CACbJ,eAAgBG,EAAM3C,cACtBrB,UAAWgE,EAAMzC,SACjBuC,SAAUE,EAAMjD,SAElBvC,KAAKf,MAAMqE,SAASoC,eACpB7F,QAAQC,IAAIJ,GACZiG,YAAgB,gBAAiBjG,GAC9BH,MAAK,kBAAM,EAAKN,MAAMqE,SAASsC,kBAC/BrG,MAAK,kBAAM,EAAKN,MAAMqE,SAAS2B,kBAC/B1F,MAAK,SAACC,GAAD,OACJ0F,YAAS,2BACN3F,MAAK,kBAAM,EAAKN,MAAMqE,SAASC,kBAC/BhE,MAAK,kBAAM,EAAKN,MAAMqE,SAASuC,YAAM,mBAEzClG,OAAM,SAACC,GAAD,OAAS,EAAKkG,eAAelG,EAAK4F,EAAM7C,cAAe8C,Q,iCAGvDD,GAAQ,IAAD,OACV9F,EAAO,CACX2F,eAAgBG,EAAM3C,cACtBrB,UAAWgE,EAAMzC,SACjBuC,SAAUE,EAAMjD,SAElBvC,KAAKf,MAAMqE,SAASoC,eAEpBK,YAAe,kBAAoBP,EAAM7C,cAAejD,GACrDH,MAAK,kBAAM,EAAKN,MAAMqE,SAASsC,kBAC/BrG,MAAK,kBAAM,EAAKN,MAAMqE,SAAS2B,kBAC/B1F,MAAK,SAACC,GAAD,OACJ0F,YAAS,wBACN3F,MAAK,kBAAM,EAAKN,MAAMqE,SAASC,kBAC/BhE,MAAK,kBAAM,EAAKN,MAAMqE,SAASuC,YAAM,mBAEzClG,OAAM,SAACC,GAAD,OAASuF,YAAM,0B,qCAEXvF,EAAKK,EAAMP,GAAO,IAAD,OAC9BM,KAAKf,MAAMqE,SAAS2B,eACRrF,EAAIT,SAASO,KACPsG,SAAS,WAEvBC,YACErG,EACAK,EACA,sBACAP,EACA,mBACAH,MAAK,kBAAM,EAAKN,MAAMqE,SAASC,kBACjC4B,YAAM,4B,oCAGVnF,KAAKf,MAAMqE,SAAS4C,eACpBlG,KAAKP,SAAS,CACZgE,QAAQ,M,kCAIVzD,KAAKf,MAAMqE,SAAS4C,eACpBlG,KAAKP,SAAS,CACZgE,QAAQ,M,+BAGF,IAAD,OACP,OACE,yBAAKnD,UAAU,kBAAkB6F,MAAO,CAAEC,MAAO,UAC/C,yBAAKzE,GAAG,cAAcrB,UAAWN,KAAKf,MAAMoH,MAAOC,KAAK,SACtD,4BACE5F,KAAK,SACLJ,UAAU,QACViG,eAAa,QACbC,aAAW,SAEX,0BAAM1E,cAAY,QAAlB,SAEF,4CATF,8BAWA,kBAAC2E,EAAA,EAAD,CACEC,WAAY,CAAC,mFAAD,qLAOd,yBAAKpG,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,QACb,kBAACqG,EAAA,QAAD,CAAYnC,MAAM,oBAClB,yBAAKlE,UAAU,aACb,kBAAC,UAAD,CACEsG,QACE5G,KAAKd,MAAMuE,OACT,kBAAC,EAAD,CACEtD,KAAK,iBACLF,KAAK,iBACLkB,SAAS,YACTf,SAAU,SAACV,GAAD,OAAU,EAAKmH,WAAWnH,IACpC0B,KAAK,OACLS,OAAQ7B,KAAKf,MAAM4C,SAGrB,kBAACiF,EAAA,EAAD,CACE3G,KAAK,iBACLF,KAAK,iBACLkB,SAAS,YACTiC,aAAcpD,KAAKoD,aACnBhD,SAAU,SAACV,GAAD,OAAU,EAAKW,aAAaX,IACtC0B,KAAK,OACLS,OAAQ7B,KAAKf,MAAM4C,SAIzB2C,MACExE,KAAKd,MAAMuE,OACP,sBACA,0BAGR,yBAAKnD,UAAU,uBACb,yBAAKA,UAAU,cACb,4BACEE,KAAK,SACLmB,GAAG,SACHjB,KAAK,SACLJ,UAAU,eACV8D,QAAS,kBAAM,EAAK2C,eACpB5C,WAAS,cANX,2BAYJ,yBAAK7D,UAAU,YAAY6D,WAAS,cACjCnE,KAAKf,MAAM+H,SACV,kBAACC,EAAA,EAAD,CACEvH,KAAMM,KAAKf,MAAM+H,SACjBtD,QAAS1D,KAAKd,MAAMwE,QACpBV,cAAeA,EACfkE,QAAQ,aAGV,6BACGlH,KAAKf,MAAMkI,MACV,yBAAK7G,UAAU,eACb,yBACE8G,IAAKC,IACLlB,MAAO,CAAErC,MAAO,OAChBwD,IAAI,gBAEN,6BACA,oEAGF,kBAAC,IAAD,CAAUxD,MAAO,OAAQyD,OAAQ,iB,GAtPtCxF,aAoQJM,uBA7QI,SAACnD,GAClB,MAAO,CACL8H,SAAU9H,EAAMsD,SAASgF,KACzBnB,MAAOnH,EAAMsD,SAAS6D,MACtBxE,OAAQ3C,EAAMsD,SAASX,OACvBsF,MAAOjI,EAAMsD,SAAS2E,SAwQS,KAApB9E,CAA0Bc,I,oBC3TzCsE,EAAOC,QAAU,IAA0B,iC,sHCUrCC,E,kDACJ,WAAY1I,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAIT,IAAD,OACP,OACE,kBAAC,IAAD,CACE0I,KAAM5H,KAAKf,MAAM2I,KACjBC,OAAQ,kBAAM,EAAK5I,MAAMqE,SAAS2B,gBAClC6C,gBAAgB,WAChBC,SAAS,SACTC,UAAU,GAEV,kBAAC,IAAMC,OAAP,CACEC,aAAW,EACX/B,MAAO,CAAEgC,gBAAiB,UAAW/B,MAAO,YAE5C,kBAAC,IAAMgC,MAAP,KAAcpI,KAAKf,MAAMuF,OAAS,KAEpC,kBAAC,IAAM6D,KAAP,KAAarI,KAAKf,MAAM2H,SAAW,S,GApBjB7E,aA0BXM,uBA/BI,SAACnD,GAClB,MAAO,CACL0I,KAAM1I,EAAMoJ,MAAMV,QA6Ba,KAApBvF,CAA0BsF,I,uHCzBnClB,E,kDACJ,WAAYxH,GAAQ,IAAD,8BACjB,cAAMA,IAGRsJ,YAAc,SAACC,GAAD,OAAYC,YAAkBD,IAJzB,EAKnBE,WAAa,SAACF,GAAD,OAAYG,YAAiBH,IAHxC,EAAKtJ,MAAQ,GAFI,E,qDAMT,IAAD,OACHwH,EAAa1G,KAAKf,MAAMyH,WAAWpF,KAAI,SAACsH,EAAMC,GAKhD,MAJW,CACTC,SAAU,0BAA2BD,EAAQ,KAC7CjC,QAASgC,MAKb,OADA/I,QAAQC,IAAI4G,GAEV,kBAAC,IAAD,CACEqC,eAAgB,kBAAM,EAAK9J,MAAMqE,SAAS0F,gBAC1CC,MAAOvC,EACPwC,OAAQlJ,KAAKf,MAAMkK,cACnBC,cAAc,OACd9I,UAAU,SACV+I,QAAS,EACTC,YAAY,UACZC,YAAavJ,KAAKuI,YAClBiB,cAAexJ,KAAK0I,iB,GA1BJ3G,aAgCTM,iBArCI,SAACnD,GAClB,MAAO,CACLiK,cAAejK,EAAMsD,SAAS2G,iBAmCC,KAApB9G,CAA0BoE,I,mJClCjCgD,EAAcC,SAAdD,UACAE,EAAoBC,YAApBD,gBAEF1C,E,kDACJ,WAAYhI,GAAQ,IAAD,8BACjB,cAAMA,IAKR4K,SAAW,SAAC3F,EAAK4F,GACf5F,EAAI2E,MAAQiB,EACZ,IAAM3D,EAAQ,GAQd,OANEA,EAAMgC,gBADJ2B,EAAW,IAAM,EACK,cAEA,UAE1B3D,EAAM4D,UAAY,OAEX5D,GAdP,EAAKjH,MAAQ,GAFI,E,qDAoBjB,OACE,kBAAC,IAAD,CACE8K,YAAU,EACVC,SAAUjK,KAAKf,MAAMiI,QAAUlH,KAAKf,MAAMiI,QAAU,OACpDxH,KAAMM,KAAKf,MAAMS,KACjBgE,QAAS1D,KAAKf,MAAMyE,QACpBV,cAAehD,KAAKf,MAAM+D,cAC1BkH,QAAM,IAEL,SAACjL,GAAD,OACC,yBAAKqB,UAAU,4BACb,yBAAKA,UAAU,cACb,kBAACmJ,EAAD,iBACMxK,EAAMkL,YADZ,CAEE7J,UAAU,eACVoB,YAAY,uBACZyE,MAAO,CAAEiE,OAAQ,OAGrB,kBAAC,IAAD,iBACMnL,EAAMoL,UADZ,CAEEC,cAAc,eACdC,SAAO,EACPC,OAAK,EACLC,UAAU,EACVC,WAAYC,SAEd,kBAAChB,EAAD,iBAAqB1K,EAAM2L,SAA3B,CAAqCtK,UAAU,oBAA/C,sB,GAhDQyB,aA0DLM,kBAAU4E,I,iCCtEzB,kCAAO,IAAM9E,EAAqB,SAAC0I,GACjC,IAAMC,EAAS,GAiDf,OA/CKD,EAAOE,aAEDF,EAAOE,aAAaC,OAAS,IACtCF,EAAOC,aAAe,qCAFtBD,EAAOC,aAAe,qBAInBF,EAAOI,eACVH,EAAOG,aAAe,sBAGnBJ,EAAOK,SAEDL,EAAOK,SAASF,OAAS,IAClCF,EAAOI,SAAW,qCAFlBJ,EAAOI,SAAW,qBAIhBL,EAAOM,aAEuB,YAAxBN,EAAOM,eACfL,EAAOK,aAAe,2BAFtBL,EAAOK,aAAe,qBAIpBN,EAAOO,WACTN,EAAOM,SAAW,sBAGfP,EAAOQ,SAEDR,EAAOQ,SAASL,OAAS,IAClCF,EAAOO,SAAW,qCAFlBP,EAAOO,SAAW,qBAIhBR,EAAO9H,SAEmB,YAApB8H,EAAO9H,WACf+H,EAAO/H,SAAW,2BAFlB+H,EAAO/H,SAAW,qBAIhB8H,EAAOS,WACTR,EAAOQ,SAAW,sBAIfT,EAAOU,WAEDV,EAAOU,WAAWP,OAAS,IACpCF,EAAOS,WAAa,qCAFpBT,EAAOS,WAAa,qBAIlBV,EAAOW,aACTV,EAAOU,WAAa,sBAGfV,I,8IClCHhE,E,kDACJ,WAAY7H,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAU,GACVC,OAAQ,QACRqM,aAAc,GACdpM,SAAU,GACVqM,QAAS,GACTC,QAAS,IARM,E,gEAYE,IAAD,OAClBrM,YAAe,oBACZC,MAAK,SAACC,GAAD,OACJ,EAAKC,SAAS,CACZgM,aAAcjM,EAAIE,UAGrBC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAC9BN,YAAe,gBACZC,MAAK,SAACC,GAAD,OACJ,EAAKC,SAAS,CACZJ,SAAUG,EAAIE,UAGjBC,OAAM,SAACC,GAAD,OAASgM,YAAQ,4B,+BAI1B,IAAI7L,EAAUC,KAAKf,MAAMgB,KACrBC,EAAUF,KAAKf,MAAMkB,KACzB,OACE,6BACE,0BAAMC,SAAUJ,KAAKf,MAAMoB,cACzB,yBAAKC,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,CACEE,KAAMT,EAAQU,QAAQ,MAAO,IAC7BC,KAAK,OACLC,UAAW,SAACC,GAAD,OAAWA,GAASA,EAAMC,eACrCC,UAAWC,IACX8K,MAAO,EACP5K,MAAOjB,KAAKf,MAAMgB,QAGD,SAApBD,KAAKf,MAAMmC,KACV,yBAAKd,UAAU,YACb,yBAAKA,UAAU,cACb,kBAAC,IAAD,CACEQ,UAAWI,IACXD,MAAOjB,KAAKf,MAAMkC,SAClBX,KAAK,eACLI,MAAOZ,KAAKf,MAAMG,OAClBuB,UAAW,SAACC,GAAD,OAAWA,GAASA,EAAMC,eACrCP,UAAU,eACVe,QAASrB,KAAKd,MAAMuM,aAAanK,KAAI,SAACC,GAKpC,MAJc,CACZX,MAAOW,EAAIuK,cACXtL,KAAMe,EAAIwK,sBAOlB,KAEiB,SAApB/L,KAAKf,MAAMmC,KACV,yBAAKd,UAAU,YACb,yBAAKA,UAAU,cACb,kBAAC,IAAD,CACEQ,UAAWI,IACXD,MAAOjB,KAAKf,MAAMkC,SAClBX,KACsB,SAApBR,KAAKf,MAAMmC,KAAkB,eAAiB,WAEhDR,MAAOZ,KAAKf,MAAMG,OAClBuB,UAAW,SAACC,GAAD,OAAWA,GAASA,EAAMC,eACrCP,UAAU,eACVe,QAASrB,KAAKd,MAAMG,SAASiC,KAAI,SAACC,GAKhC,MAJc,CACZX,MAAOW,EAAIC,UACXhB,KAAMe,EAAIE,kBAOlB,KAEJ,yBAAKnB,UAAU,YACb,kBAAC,IAAD,CACEE,KAAMN,EAAQO,QAAQ,MAAO,IAC7BC,KAAK,OACLC,UAAW,SAACC,GAAD,OAAWA,GAASA,EAAMC,eACrCC,UAAWC,IACXE,MAAOjB,KAAKf,MAAMkB,QAGD,SAApBH,KAAKf,MAAMmC,KACV,yBAAKd,UAAU,YACb,kBAAC,IAAD,CACEE,KAAK,UACLM,UAAWC,IACXL,KAAK,SACLO,MAAM,WACNS,YAAY,sBAGd,KACJ,yBAAKpB,UAAU,uBACb,yBAAKA,UAAU,cACb,4BACEI,KAAK,SACLiB,GAAG,SACHrB,UAAU,kBACVsB,SAAU5B,KAAKf,MAAM4C,QAEpB7B,KAAKf,MAAM4C,OACV,0BACEvB,UAAU,wCACVwB,cAAY,SAEZ,KAXN,SAaE,uBAAGxB,UAAU,qC,GAhIAyB,aA2I/B+E,EAAmB9E,YAAU,CAC3BC,KAAM,WACNC,SAAUC,IACVC,oBAAoB,GAHHJ,CAIhB8E,GACYzE,iBAxJI,SAACnD,GAClB,MAAO,CACL2M,MAAO3M,EAAM8M,OAAOH,MACpB1E,MAAOjI,EAAMmH,MAAM4F,MACnBC,aAAchN,EAAMsD,SAAS0J,gBAoJE,KAApB7J,CAA0ByE,I,gCChKzC,8CA2DWjB,GArBcsG,IAAQC,YACVD,IAAQE,UACTF,IAAQG,SACPH,IAAQI,UACNJ,IAAQK,YACLL,IAAQM,eACZN,IAAQO,WACPP,IAAQQ,YACVR,IAAQS,UACLT,IAAQU,aACZV,IAAQW,SACZX,IAAQY,KACNZ,IAAQa,OACCb,IAAQc,gBACZd,IAAQe,YACRf,IAAQgB,YACFhB,IAAQiB,kBAClBjB,IAAQkB,QACVlB,IAAQmB,MACHnB,IAAQoB,WACLpB,IAAQqB,cAChBrB,IAAQtG,OACDsG,IAAQsB,aACLtB,IAAQuB,gBACLvB,IAAQwB,mBACNxB,IAAQyB,qBACjBzB,IAAQ0B,YACA1B,IAAQ2B,oBACjB3B,IAAQ4B,WACZ5B,IAAQ6B,OACT7B,IAAQ8B,MACE9B,IAAQ+B,gBAChB/B,IAAQgC,QACGhC,IAAQiC,mBACVjC,IAAQkC","file":"static/js/35.c3858b26.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { validationProvinsi } from \"../../Validations/validationProvinsi\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    initialValues: {\r\n      kodePos: state.provinsi.editArea.Status,\r\n      KodeKecamatan: state.provinsi.editArea.kodeArea,\r\n      NamaKecamatan: state.provinsi.editArea.namaArea,\r\n      kodeKota: state.provinsi.editArea.kodeKota,\r\n    },\r\n  };\r\n};\r\nclass FormAreaEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      response: \"\",\r\n      status: \"AKTIF\",\r\n      listKota: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"kota/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listKota: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    var kodenya = this.props.kode;\r\n    var namanya = this.props.nama;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-2\">\r\n              <Field\r\n                name={kodenya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                readOnly={true}\r\n                label={this.props.kode}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <div className=\"form-group\">\r\n                <Field\r\n                  component={renderFieldSelect}\r\n                  label={this.props.kode_ext}\r\n                  name={\r\n                    this.props.from === \"kota\" ? \"kodeProvinsi\" : \"kodeKota\"\r\n                  }\r\n                  value={this.props.status}\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  className=\"form-control\"\r\n                  options={this.state.listKota.map((obj) => {\r\n                    var payload = {\r\n                      value: obj.kode_kota,\r\n                      name: obj.nama_kota,\r\n                    };\r\n                    return payload;\r\n                  })}\r\n                ></Field>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <Field\r\n                name={namanya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                label={this.props.nama}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <Field\r\n                name=\"kodePos\"\r\n                component={renderField}\r\n                type=\"text\"\r\n                label=\"Kode Pos\"\r\n                placeholder=\"Masukan Kode Pos\"\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  type=\"submit\"\r\n                  id=\"simpan\"\r\n                  className=\"btn btn-primary\"\r\n                  disabled={this.props.onSend}\r\n                >\r\n                  {this.props.onSend ? (\r\n                    <span\r\n                      className=\"spinner-border spinner-border-sm mr-3\"\r\n                      aria-hidden=\"true\"\r\n                    ></span>\r\n                  ) : null}\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormAreaEdit = reduxForm({\r\n  form: \"KotaEdit\", // a unique identifier for this form\r\n  validate: validationProvinsi, // <--- validation function given to redux-form\r\n  enableReinitialize: true,\r\n})(FormAreaEdit);\r\nexport default connect(maptoState, null)(FormAreaEdit);\r\n","import React, { Component } from \"react\";\r\nimport AreaProvinsiKota from \"./Component/AreaProvinsiKota\";\r\nimport Table from \"./Component/Table\";\r\nimport { connect } from \"react-redux\";\r\nimport notrespond from \"../Images/500.svg\";\r\nimport { editarea, getareaList } from \"../actions/areaAction\";\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport FormAreaEdit from \"./Component/FormAreaEdit\";\r\nimport { reset } from \"redux-form\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { AxiosMasterDelete, AxiosMasterPost, AxiosMasterPut } from \"../Axios\";\r\nimport { berhasil, gagal, reactive } from \"../Alert\";\r\nimport { hideModal, showModal } from \"../actions/ModalAction\";\r\nimport ModalGlobal from \"./Component/ModalMasterData\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport TourGuide from \"../TourGuide\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\n\r\nfunction hapus(dispatch, kode) {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      AxiosMasterDelete(\"kecamatan/delete/\" + kode)\r\n        .then(() => dispatch(hideModal()))\r\n        .then((res) => berhasil(\"Data Berhasil Dihapus!\"))\r\n        .catch((err) => gagal(\"Data Gagal Dihapus!\"))\r\n        .then(() => dispatch(getareaList()));\r\n    }\r\n  });\r\n}\r\n\r\nconst defaultSorted = [\r\n  {\r\n    dataField: \"kodeArea\",\r\n    order: \"asc\",\r\n  },\r\n];\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    areaList: state.provinsi.area,\r\n    alert: state.provinsi.alert,\r\n    onSend: state.provinsi.onSend,\r\n    error: state.provinsi.error,\r\n  };\r\n};\r\n\r\nclass Area extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Area: [],\r\n      AreaArray: [],\r\n      response: \"\",\r\n      isEdit: false,\r\n      columns: [\r\n        {\r\n          dataField: \"kode_kecamatan\",\r\n          text: \"Kode Kecamatan\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"15%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"nama_kecamatan\",\r\n          text: \"Nama Kecamatan\",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"kode_pos\",\r\n          text: \"Kode Pos\",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"kode_kota\",\r\n          text: \"Kode Kota\",\r\n          sort: true,\r\n        },\r\n\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-danger mr-2\"\r\n                  data-tut=\"reactour_3\"\r\n                  onClick={() => hapus(this.props.dispatch, row.kode_kecamatan)}\r\n                >\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                  HAPUS\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-warning mr-2\"\r\n                  data-tut=\"reactour_4\"\r\n                  onClick={() =>\r\n                    this.props.dispatch(\r\n                      editarea(\r\n                        row.kode_kecamatan,\r\n                        row.nama_kecamatan,\r\n                        row.kode_kota,\r\n                        row.kode_pos,\r\n                        this.editModal()\r\n                      )\r\n                    )\r\n                  }\r\n                >\r\n                  <i className=\"fa fa-edit mr-1\"></i>\r\n                  EDIT\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getareaList());\r\n  }\r\n\r\n  updateStatus = (input) => {\r\n    console.log(input);\r\n    this.setState({\r\n      response: input,\r\n    });\r\n    this.props.dispatch(getareaList());\r\n  };\r\n\r\n  handleSubmit(hasil) {\r\n    let data = {\r\n      nama_kecamatan: hasil.NamaKecamatan,\r\n      kode_kecamatan: hasil.KodeKecamatan,\r\n      kode_kota: hasil.kodeKota,\r\n      kode_pos: hasil.kodePos,\r\n    };\r\n    let dataEdit = {\r\n      nama_kecamatan: hasil.NamaKecamatan,\r\n      kode_kota: hasil.kodeKota,\r\n      kode_pos: hasil.kodePos,\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    console.log(data);\r\n    AxiosMasterPost(\"kecamatan/add\", data)\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) =>\r\n        berhasil(\"Data Berhasil Disimpan!\")\r\n          .then(() => this.props.dispatch(getareaList()))\r\n          .then(() => this.props.dispatch(reset(\"Provinsi\")))\r\n      )\r\n      .catch((err) => this.handleReactive(err, hasil.KodeKecamatan, dataEdit));\r\n  }\r\n\r\n  handleEdit(hasil) {\r\n    const data = {\r\n      nama_kecamatan: hasil.NamaKecamatan,\r\n      kode_kota: hasil.kodeKota,\r\n      kode_pos: hasil.kodePos,\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    // return false;\r\n    AxiosMasterPut(\"kecamatan/edit/\" + hasil.KodeKecamatan, data)\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) =>\r\n        berhasil(\"Data Berhasil Diubah\")\r\n          .then(() => this.props.dispatch(getareaList()))\r\n          .then(() => this.props.dispatch(reset(\"Provinsi\")))\r\n      )\r\n      .catch((err) => gagal(\"Data Gagal Diubah\"));\r\n  }\r\n  handleReactive(err, kode, data) {\r\n    this.props.dispatch(hideModal());\r\n    let error = err.response.data;\r\n    let check = error.includes(\"deleted\");\r\n    check\r\n      ? reactive(\r\n          err,\r\n          kode,\r\n          \"kecamatan/reactive/\",\r\n          data,\r\n          \"kecamatan/edit/\"\r\n        ).then(() => this.props.dispatch(getareaList()))\r\n      : gagal(\"Data Gagal Ditambahkan\");\r\n  }\r\n  tambahModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({\r\n      isEdit: false,\r\n    });\r\n  }\r\n  editModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div id=\"notif_alert\" className={this.props.alert} role=\"alert\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n          <strong>Error - </strong> Tidak Bisa Mengambil Data\r\n        </div>\r\n        <TourGuide\r\n          tourConfig={[\r\n            `Untuk Menambahkan Data Kecamatan, Tekan Tombol ini Dan Isi kolom yang disediakan`,\r\n            `Ini adalah data Kecamatan yang sudah tersimpan`,\r\n            `Ini adalah tombol untuk menghapus data pada baris yang dipilih`,\r\n            `Ini adalah tombol untuk mengubah data pada baris yang dipilih`,\r\n          ]}\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\" Data Kecamatan\" />\r\n              <div className=\"card-body\">\r\n                <ModalGlobal\r\n                  content={\r\n                    this.state.isEdit ? (\r\n                      <FormAreaEdit\r\n                        nama=\"Nama Kecamatan\"\r\n                        kode=\"Kode Kecamatan\"\r\n                        kode_ext=\"Nama Kota\"\r\n                        onSubmit={(data) => this.handleEdit(data)}\r\n                        from=\"area\"\r\n                        onSend={this.props.onSend}\r\n                      />\r\n                    ) : (\r\n                      <AreaProvinsiKota\r\n                        nama=\"Nama Kecamatan\"\r\n                        kode=\"Kode Kecamatan\"\r\n                        kode_ext=\"Nama Kota\"\r\n                        updateStatus={this.updateStatus}\r\n                        onSubmit={(data) => this.handleSubmit(data)}\r\n                        from=\"area\"\r\n                        onSend={this.props.onSend}\r\n                      />\r\n                    )\r\n                  }\r\n                  title={\r\n                    this.state.isEdit\r\n                      ? \"Edit Data Kecamatan\"\r\n                      : \"Tambah Data Kecamatan\"\r\n                  }\r\n                />\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"text-right\">\r\n                    <button\r\n                      name=\"simpan\"\r\n                      id=\"simpan\"\r\n                      type=\"button\"\r\n                      className=\"btn btn-info\"\r\n                      onClick={() => this.tambahModal()}\r\n                      data-tut=\"reactour_1\"\r\n                    >\r\n                      Tambah Data Kecamatan\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-12\" data-tut=\"reactour_2\">\r\n                  {this.props.areaList ? (\r\n                    <Table\r\n                      data={this.props.areaList}\r\n                      columns={this.state.columns}\r\n                      defaultSorted={defaultSorted}\r\n                      namaKey=\"kodeArea\"\r\n                    />\r\n                  ) : (\r\n                    <div>\r\n                      {this.props.error ? (\r\n                        <div className=\"text-center\">\r\n                          <img\r\n                            src={notrespond}\r\n                            style={{ width: \"30%\" }}\r\n                            alt=\"NOT RESPOND\"\r\n                          />\r\n                          <br />\r\n                          <h4>Request API Gagal, Silahkan Refresh</h4>\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton width={\"100%\"} height={180} />\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoState, null)(Area);\r\n","module.exports = __webpack_public_path__ + \"static/media/500.c22f1e39.svg\";","import { Modal } from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { hideModal } from \"../../actions/ModalAction\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    show: state.modal.show,\r\n  };\r\n};\r\nclass ModalGlobal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <Modal\r\n        show={this.props.show}\r\n        onHide={() => this.props.dispatch(hideModal())}\r\n        dialogClassName=\"modal-xl\"\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header\r\n          closeButton\r\n          style={{ backgroundColor: \"#5F76E8\", color: \"#ffffff\" }}\r\n        >\r\n          <Modal.Title>{this.props.title || \"\"}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{this.props.content || \"\"}</Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoState, null)(ModalGlobal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { hideGuide } from \"./actions/ModalAction\";\r\nimport Tour from \"reactour\";\r\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\r\n\r\nconst mapToState = (state) => {\r\n  return {\r\n    showTourGuide: state.provinsi.showTourGuide,\r\n  };\r\n};\r\nclass TourGuide extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  disableBody = (target) => disableBodyScroll(target);\r\n  enableBody = (target) => enableBodyScroll(target);\r\n  render() {\r\n    let tourConfig = this.props.tourConfig.map((list, index) => {\r\n      let data = {\r\n        selector: '[data-tut=\"reactour_' + ++index + '\"]',\r\n        content: list,\r\n      };\r\n      return data;\r\n    });\r\n    console.log(tourConfig);\r\n    return (\r\n      <Tour\r\n        onRequestClose={() => this.props.dispatch(hideGuide())}\r\n        steps={tourConfig}\r\n        isOpen={this.props.showTourGuide}\r\n        maskClassName=\"mask\"\r\n        className=\"helper\"\r\n        rounded={5}\r\n        accentColor=\"#5cb7b7\"\r\n        onAfterOpen={this.disableBody}\r\n        onBeforeClose={this.enableBody}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapToState, null)(TourGuide);\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport,\r\n} from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  // ROW STYLE TABLE\r\n  rowStyle = (row, rowIndex) => {\r\n    row.index = rowIndex;\r\n    const style = {};\r\n    if (rowIndex % 2 === 0) {\r\n      style.backgroundColor = \"transparent\";\r\n    } else {\r\n      style.backgroundColor = \"#DEDEDE\";\r\n    }\r\n    style.borderTop = \"none\";\r\n\r\n    return style;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ToolkitProvider\r\n        bootstrap4\r\n        keyField={this.props.namaKey ? this.props.namaKey : \"kode\"}\r\n        data={this.props.data}\r\n        columns={this.props.columns}\r\n        defaultSorted={this.props.defaultSorted}\r\n        search\r\n      >\r\n        {(props) => (\r\n          <div className=\"col-lg-12 col-md-12 mt-5\">\r\n            <div className=\"text-right\">\r\n              <SearchBar\r\n                {...props.searchProps}\r\n                className=\"form-control\"\r\n                placeholder=\"Tuliskan Kode / Nama\"\r\n                style={{ margin: 0 }}\r\n              />\r\n            </div>\r\n            <BootstrapTable\r\n              {...props.baseProps}\r\n              headerClasses=\"header-table\"\r\n              striped\r\n              hover\r\n              bordered={true}\r\n              pagination={paginationFactory()}\r\n            />\r\n            <ExportCSVButton {...props.csvProps} className=\"btn btn-primary\">\r\n              Export CSV\r\n            </ExportCSVButton>\r\n          </div>\r\n        )}\r\n      </ToolkitProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(Table);\r\n","export const validationProvinsi = (values) => {\r\n  const errors = {}\r\n  // PROVINSI\r\n  if (!values.KodeProvinsi) {\r\n    errors.KodeProvinsi = 'Tidak Boleh kosong'\r\n  } else if (values.KodeProvinsi.length > 5) {\r\n    errors.KodeProvinsi = 'Tidak Boleh Lebih Dari 5 Karakter'\r\n  }\r\n  if (!values.NamaProvinsi) {\r\n    errors.NamaProvinsi = 'Tidak Boleh kosong'\r\n  }\r\n  // Kota\r\n  if (!values.KodeKota) {\r\n    errors.KodeKota = 'Tidak Boleh kosong'\r\n  } else if (values.KodeKota.length > 5) {\r\n    errors.KodeKota = 'Tidak Boleh Lebih Dari 5 Karakter'\r\n  }\r\n  if(!values.kodeProvinsi){\r\n    errors.kodeProvinsi = \"Tidak Boleh Kosong\"\r\n  } else if(values.kodeProvinsi === \"DEFAULT\"){\r\n    errors.kodeProvinsi = \"Silahkan Pilih Provinsi\"\r\n  }\r\n  if(!values.NamaKota){\r\n    errors.NamaKota = \"Tidak Boleh Kosong\"\r\n  }\r\n  // AREA\r\n  if (!values.KodeArea) {\r\n    errors.KodeArea = 'Tidak Boleh kosong'\r\n  } else if (values.KodeArea.length > 5) {\r\n    errors.KodeArea = 'Tidak Boleh Lebih Dari 5 Karakter'\r\n  }\r\n  if(!values.kodeKota){\r\n    errors.kodeKota = \"Tidak Boleh Kosong\"\r\n  } else if(values.kodeKota === \"DEFAULT\"){\r\n    errors.kodeKota = \"Silahkan Pilih Provinsi\"\r\n  }\r\n  if(!values.NamaArea){\r\n    errors.NamaArea = \"Tidak Boleh Kosong\"\r\n  }\r\n\r\n  //LOKASI\r\n  if (!values.KodeLokasi) {\r\n    errors.KodeLokasi = 'Tidak Boleh kosong'\r\n  } else if (values.KodeLokasi.length > 5) {\r\n    errors.KodeLokasi = 'Tidak Boleh Lebih Dari 5 Karakter'\r\n  }\r\n  if(!values.NamaLokasi){\r\n    errors.NamaLokasi = 'Tidak Boleh kosong'\r\n  }\r\n\r\n  return errors\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { validationProvinsi } from \"../../Validations/validationProvinsi\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport { LogData } from \"../../Alert\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    limit: state.config.limit,\r\n    error: state.alert.Error,\r\n    editProvinsi: state.provinsi.editProvinsi,\r\n  };\r\n};\r\n\r\nclass AreaProvinsiKota extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      response: \"\",\r\n      status: \"AKTIF\",\r\n      listProvinsi: [],\r\n      listKota: [],\r\n      isiNama: \"\",\r\n      isikode: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"provinsi/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listProvinsi: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    AxiosMasterGet(\"kota/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listKota: res.data,\r\n        })\r\n      )\r\n      .catch((err) => LogData(\"Error Get Data Kota\"));\r\n  }\r\n\r\n  render() {\r\n    var kodenya = this.props.kode;\r\n    var namanya = this.props.nama;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-2\">\r\n              <Field\r\n                name={kodenya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                limit={5}\r\n                label={this.props.kode}\r\n              />\r\n            </div>\r\n            {this.props.from === \"kota\" ? (\r\n              <div className=\"col-md-3\">\r\n                <div className=\"form-group\">\r\n                  <Field\r\n                    component={renderFieldSelect}\r\n                    label={this.props.kode_ext}\r\n                    name=\"kodeProvinsi\"\r\n                    value={this.props.status}\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    className=\"form-control\"\r\n                    options={this.state.listProvinsi.map((obj) => {\r\n                      var payload = {\r\n                        value: obj.kode_provinsi,\r\n                        name: obj.nama_provinsi,\r\n                      };\r\n                      return payload;\r\n                    })}\r\n                  ></Field>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            {/* AREA */}\r\n            {this.props.from === \"area\" ? (\r\n              <div className=\"col-md-3\">\r\n                <div className=\"form-group\">\r\n                  <Field\r\n                    component={renderFieldSelect}\r\n                    label={this.props.kode_ext}\r\n                    name={\r\n                      this.props.from === \"kota\" ? \"kodeProvinsi\" : \"kodeKota\"\r\n                    }\r\n                    value={this.props.status}\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    className=\"form-control\"\r\n                    options={this.state.listKota.map((obj) => {\r\n                      var payload = {\r\n                        value: obj.kode_kota,\r\n                        name: obj.nama_kota,\r\n                      };\r\n                      return payload;\r\n                    })}\r\n                  ></Field>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            {/* Lokasi */}\r\n            <div className=\"col-md-3\">\r\n              <Field\r\n                name={namanya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                label={this.props.nama}\r\n              />\r\n            </div>\r\n            {this.props.from === \"area\" ? (\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"kodePos\"\r\n                  component={renderField}\r\n                  type=\"number\"\r\n                  label=\"Kode Pos\"\r\n                  placeholder=\"Masukan Kode Pos\"\r\n                />\r\n              </div>\r\n            ) : null}\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  type=\"submit\"\r\n                  id=\"simpan\"\r\n                  className=\"btn btn-primary\"\r\n                  disabled={this.props.onSend}\r\n                >\r\n                  {this.props.onSend ? (\r\n                    <span\r\n                      className=\"spinner-border spinner-border-sm mr-3\"\r\n                      aria-hidden=\"true\"\r\n                    ></span>\r\n                  ) : null}\r\n                  Submit\r\n                  <i className=\"fa fa-paper-plane ml-3\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAreaProvinsiKota = reduxForm({\r\n  form: \"Provinsi\", // a unique identifier for this form\r\n  validate: validationProvinsi, // <--- validation function given to redux-form\r\n  enableReinitialize: true,\r\n})(AreaProvinsiKota);\r\nexport default connect(maptoState, null)(AreaProvinsiKota);\r\n","import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;"],"sourceRoot":""}