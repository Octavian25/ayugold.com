{"version":3,"sources":["FICO/KelolaUangBank.jsx","HeaderCard.jsx","Stocking/Component/PrintNota.jsx","FICO/Component/FormKelolaUangBank.jsx"],"names":["serverNonMaster","process","REACT_APP_BACKEND_URL_NON_MASTER","KelolaUangBank","props","state","listKategori","this","dispatch","getUUID","data","undefined","tanggal","warning","rekening","jumlah","kategori","keperluan","isi","alatBayarTunai","tunaiKurs","tunaiRp","tunaiNetto","tunaiTipe","alatBayarTrf","transferTanggalJanji","transferRp","parseFloat","transferTipe","accFrom","accTo","transferKurs","transferNetto","noBon","noFaktur","tipeFaktur","keterangan","footerDocument","inputBy","username","console","log","progressSend","tableRows","ticketData","toLocaleString","push","columTable","Axios","post","then","Swal","fire","position","icon","text","showConfirmButton","timer","finishSend","localStorage","removeItem","PrintNota","reset","catch","res","err","className","title","href","data-toggle","aria-expanded","id","onSubmit","handleSubmitTambah","from","onSend","handleSubmitAmbil","Component","connect","provinsi","HeaderCard","style","fontSize","backgroundColor","borderTopLeftRadius","borderTopRightRadius","height","color","row1name","row1isi","row2name","row2isi","row3name","row3isi","row4name","row4isi","validby","tableColumn","doc","jsPDF","autoTable","startY","finalY","lastAutoTable","setFontSize","string","output","embed","x","window","open","document","write","close","currencyMask","createNumberMask","prefix","suffix","locale","renderField","input","label","type","limit","readOnly","meta","touched","error","htmlFor","min","step","maxLength","server","FormKelolaUangBank","listRekening","get","setState","handleSubmit","name","component","value","map","list","noRekening","key","atasNama","kodeParameter","disabled","aria-hidden","reduxForm","form","enableReinitialize"],"mappings":"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","file":"static/js/90.0e1c5530.chunk.js","sourcesContent":["import Axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport FormKelolaUangBank from \"./Component/FormKelolaUangBank\";\r\nimport { connect } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport PrintNota from \"../Stocking/Component/PrintNota\";\r\nimport { warning } from \"../Alert\";\r\nimport { reset } from \"redux-form\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\nimport HeaderCard from \"../HeaderCard\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    noFaktur: state.provinsi.noFaktur,\r\n    username: state.provinsi.username,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\nconst serverNonMaster = process.env.REACT_APP_BACKEND_URL_NON_MASTER;\r\nclass KelolaUangBank extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listKategori: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getUUID());\r\n  }\r\n  handleSubmitTambah(data) {\r\n    if (data.tanggal === undefined) {\r\n      warning(\"Mohon isi tanggal\");\r\n      return false;\r\n    } else if (data.rekening === undefined) {\r\n      warning(\"Mohon isi Rekening\");\r\n      return false;\r\n    } else if (data.jumlah === undefined) {\r\n      warning(\"Mohon isi Jumlah\");\r\n      return false;\r\n    } else if (data.kategori === undefined) {\r\n      warning(\"Mohon isi Kategori\");\r\n      return false;\r\n    } else if (data.keperluan === undefined) {\r\n      warning(\"Mohon isi Keperluan\");\r\n      return false;\r\n    }\r\n    const isi = {\r\n      alatBayarTunai: [\r\n        {\r\n          tunaiKurs: 0,\r\n          tunaiRp: 0,\r\n          tunaiNetto: 0,\r\n          tunaiTipe: \"-\",\r\n        },\r\n      ],\r\n      alatBayarTrf: [\r\n        {\r\n          transferTanggalJanji: data.tanggal,\r\n          transferRp: parseFloat(data.jumlah),\r\n          transferTipe: \"-\",\r\n          accFrom: data.rekening,\r\n          accTo: \"-\",\r\n          transferKurs: 0,\r\n          transferNetto: parseFloat(data.jumlah),\r\n        },\r\n      ],\r\n      noBon: this.props.noFaktur,\r\n      tanggal: data.tanggal,\r\n      noFaktur: this.props.noFaktur,\r\n      tipeFaktur: \"TAMBAH UANG BANK\",\r\n      keterangan: data.keperluan,\r\n      footerDocument: {\r\n        inputBy: this.props.username, //INPUT BY DEFAULT\r\n      },\r\n    };\r\n    console.log(isi);\r\n    this.props.dispatch(progressSend());\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    // for each ticket pass all its data into an array\r\n    const ticketData = [\r\n      \"1\",\r\n      data.tanggal,\r\n      parseFloat(data.jumlah).toLocaleString(\"id-ID\"),\r\n      data.rekening,\r\n      parseFloat(data.jumlah).toLocaleString(\"id-ID\"),\r\n      data.keperluan,\r\n    ];\r\n    // push each tickcet's info into a row\r\n    tableRows.push(ticketData);\r\n    console.log(tableRows);\r\n    var columTable = [\r\n      \"No\",\r\n      \"Tanggal Janji\",\r\n      \"Transfer nominal\",\r\n      \"Nomor Rekening\",\r\n      \"Transfer Netto\",\r\n      \"Keperluan\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    Axios.post(serverNonMaster + \"fico/dc/fico\", isi)\r\n      .then(() =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Transaksi Berhasil\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => localStorage.removeItem(\"noFaktur\"))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() =>\r\n            PrintNota(\r\n              \"Tanggal\",\r\n              data.tanggal,\r\n              \"\",\r\n              \"\",\r\n              \"Nomor Bon\",\r\n              this.props.noFaktur,\r\n              \"\",\r\n              \"\",\r\n              \"ADMIN\",\r\n              data.tanggal,\r\n              \"\",\r\n              columTable,\r\n              \"TAMBAH UANG BANK\",\r\n              tableRows\r\n            )\r\n          )\r\n          .then(() => this.props.dispatch(reset(\"FormKelolaUangBank\")))\r\n      )\r\n      .catch(() =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text:\r\n            \"Sepertinya terjadi kesalahan, silahkan check koneksi anda dan ulangi lagi transaksi\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        }).then(() => this.props.dispatch(finishSend()))\r\n      );\r\n  }\r\n  handleSubmitAmbil(data) {\r\n    if (data.tanggal === undefined) {\r\n      warning(\"Mohon isi tanggal\");\r\n      return false;\r\n    } else if (data.rekening === undefined) {\r\n      warning(\"Mohon isi Rekening\");\r\n      return false;\r\n    } else if (data.jumlah === undefined) {\r\n      warning(\"Mohon isi Jumlah\");\r\n      return false;\r\n    } else if (data.kategori === undefined) {\r\n      warning(\"Mohon isi Kategori\");\r\n      return false;\r\n    } else if (data.keperluan === undefined) {\r\n      warning(\"Mohon isi Keperluan\");\r\n      return false;\r\n    }\r\n    const isi = {\r\n      alatBayarTunai: [\r\n        {\r\n          tunaiKurs: 0,\r\n          tunaiRp: 0,\r\n          tunaiNetto: 0,\r\n          tunaiTipe: \"-\",\r\n        },\r\n      ],\r\n      alatBayarTrf: [\r\n        {\r\n          transferTanggalJanji: data.tanggal,\r\n          transferRp: parseFloat(data.jumlah),\r\n          transferTipe: \"-\",\r\n          accFrom: data.rekening,\r\n          accTo: \"-\",\r\n          transferKurs: 0,\r\n          transferNetto: parseFloat(data.jumlah),\r\n        },\r\n      ],\r\n      noBon: this.props.noFaktur,\r\n      tanggal: data.tanggal,\r\n      noFaktur: this.props.noFaktur,\r\n      tipeFaktur: \"AMBIL UANG BANK\",\r\n      keterangan: data.keperluan,\r\n      footerDocument: {\r\n        inputBy: this.props.username, //INPUT BY DEFAULT\r\n      },\r\n    };\r\n    console.log(isi);\r\n    this.props.dispatch(progressSend());\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    // for each ticket pass all its data into an array\r\n    const ticketData = [\r\n      \"1\",\r\n      data.tanggal,\r\n      parseFloat(data.jumlah).toLocaleString(\"id-ID\"),\r\n      data.rekening,\r\n      parseFloat(data.jumlah).toLocaleString(\"id-ID\"),\r\n      data.keperluan,\r\n    ];\r\n    // push each tickcet's info into a row\r\n    tableRows.push(ticketData);\r\n    console.log(tableRows);\r\n    var columTable = [\r\n      \"No\",\r\n      \"Tanggal Janji\",\r\n      \"Transfer nominal\",\r\n      \"Nomor Rekening\",\r\n      \"Transfer Netto\",\r\n      \"Keperluan\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    Axios.post(serverNonMaster + \"fico/dc/fico\", isi)\r\n      .then((res) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Transaksi Berhasil\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => localStorage.removeItem(\"noFaktur\"))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() =>\r\n            PrintNota(\r\n              \"Tanggal\",\r\n              data.tanggal,\r\n              \"\",\r\n              \"\",\r\n              \"Nomor Bon\",\r\n              this.props.noFaktur,\r\n              \"\",\r\n              \"\",\r\n              \"ADMIN\",\r\n              data.tanggal,\r\n              \"\",\r\n              columTable,\r\n              \"AMBIL UANG BANK\",\r\n              tableRows\r\n            )\r\n          )\r\n          .then(() => this.props.dispatch(reset(\"FormKelolaUangBank\")))\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text:\r\n            \"Sepertinya terjadi kesalahan, silahkan check koneksi anda dan ulangi lagi transaksi\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n      );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"col-lg-12 col-md-12\">\r\n          <div className=\"card\">\r\n            <HeaderCard title=\"Kelola Uang Bank\" />\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <ul className=\"nav nav-pills bg-nav-pills nav-justified mb-3\">\r\n                    <li className=\"nav-item\">\r\n                      <a\r\n                        href=\"#tambah-uang-bank\"\r\n                        data-toggle=\"tab\"\r\n                        aria-expanded=\"true\"\r\n                        className=\"nav-link active\"\r\n                      >\r\n                        <i className=\"mdi mdi-home-variant d-lg-none d-block mr-1\" />\r\n                        <span className=\"d-none d-lg-block\">\r\n                          Tambah Uang Bank\r\n                        </span>\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <a\r\n                        href=\"#ambil-uang-bank\"\r\n                        data-toggle=\"tab\"\r\n                        aria-expanded=\"false\"\r\n                        className=\"nav-link \"\r\n                      >\r\n                        <i className=\"mdi mdi-account-circle d-lg-none d-block mr-1\" />\r\n                        <span className=\"d-none d-lg-block\">\r\n                          Ambil Uang Bank\r\n                        </span>\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                  <div className=\"tab-content\">\r\n                    <div className=\"tab-pane show active\" id=\"tambah-uang-bank\">\r\n                      <FormKelolaUangBank\r\n                        onSubmit={(data) => this.handleSubmitTambah(data)}\r\n                        from=\"bank\"\r\n                        onSend={this.props.onSend}\r\n                      />\r\n                    </div>\r\n                    <div className=\"tab-pane \" id=\"ambil-uang-bank\">\r\n                      <FormKelolaUangBank\r\n                        onSubmit={(data) => this.handleSubmitAmbil(data)}\r\n                        from=\"bank\"\r\n                        onSend={this.props.onSend}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(KelolaUangBank);\r\n","import React, { Component } from \"react\";\r\n\r\nclass HeaderCard extends Component {\r\n  render() {\r\n    return (\r\n      <h4\r\n        className=\"card-header mb-3\"\r\n        style={{\r\n          fontSize: 25,\r\n          backgroundColor: \"#394867\",\r\n          borderTopLeftRadius: 10,\r\n          borderTopRightRadius: 10,\r\n          height: 50,\r\n          color: \"#ffffff\",\r\n        }}\r\n      >\r\n        {this.props.title}\r\n      </h4>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderCard;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst PrintNota = (\r\n  row1name = \"\",\r\n  row1isi = \"\",\r\n  row2name = \"\",\r\n  row2isi = \"\",\r\n  row3name = \"\",\r\n  row3isi = \"\",\r\n  row4name = \"\",\r\n  row4isi = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n  validby = \"\",\r\n  tableColumn = [],\r\n  title = \"\",\r\n  tableRows\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  // var tickets = JSON.parse(data);\r\n  // define the columns we want and their titles\r\n\r\n  // // define an empty array of rows\r\n  // const tableRows = [];\r\n\r\n  // // for each ticket pass all its data into an array\r\n  // tickets.forEach((ticket, i) => {\r\n  //   const ticketData = [\r\n  //     i++,\r\n  //     ticket.kodeJenis01,\r\n  //     ticket.bruto01,\r\n  //     ticket.kadarTransaksi01,\r\n  //     ticket.netto01,\r\n  //     ticket.kodeJenis02,\r\n  //     ticket.bruto02,\r\n  //     ticket.kadarTransaksi02,\r\n  //     ticket.netto02,\r\n  //   ];\r\n  //   // push each tickcet's info into a row\r\n  //   tableRows.push(ticketData);\r\n  // });\r\n\r\n  // startY is basically margin-top\r\n  doc.autoTable(tableColumn, tableRows, { startY: 40 });\r\n  let finalY = doc.lastAutoTable.finalY + 10;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(title, 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(row1name, 14, 25);\r\n  doc.text(\":\", 37, 25);\r\n  doc.text(row1isi, 40, 25);\r\n  doc.text(row2name, 120, 25);\r\n  doc.text(\":\", 141, 25);\r\n  doc.text(row2isi, 145, 25);\r\n  //row 2\r\n  doc.text(row3name, 14, 30);\r\n  doc.text(\":\", 37, 30);\r\n  doc.text(row3isi, 40, 30);\r\n  doc.text(row4name, 120, 30);\r\n  doc.text(\":\", 141, 30);\r\n  doc.text(row4isi, 145, 30);\r\n\r\n  //Stamp\r\n  doc.text(\"User\", 160, finalY + 10);\r\n  doc.text(\":\", 168, finalY + 10);\r\n  doc.text(username, 170, finalY + 10);\r\n  doc.text(\"Cetak\", 160, finalY + 15);\r\n  doc.text(\":\", 168, finalY + 15);\r\n  doc.text(tanggal, 170, finalY + 15);\r\n  doc.text(\"Valid\", 160, finalY + 20);\r\n  doc.text(\":\", 168, finalY + 20);\r\n  doc.text(validby, 170, finalY + 20);\r\n  // doc.autoPrint();\r\n  // doc.save(`${title}_${dateStr}.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  x.document.close();\r\n};\r\n\r\nexport default PrintNota;\r\n","import Axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nclass FormKelolaUangBank extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listKategori: [],\r\n      listRekening: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Axios.get(server + \"parameteruangs\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listKategori: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    Axios.get(server + \"banks\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listRekening: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <Field\r\n              name=\"tanggal\"\r\n              label=\"Tanggal\"\r\n              type=\"date\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          {this.props.from === \"bank\" ? (\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              <label htmlFor=\"\">Rekening</label>\r\n              <Field\r\n                name=\"rekening\"\r\n                className=\"form-control\"\r\n                component=\"select\"\r\n              >\r\n                <option value=\"DEFAULT\">SILAHKAN PILIH</option>\r\n                {this.state.listRekening.map((list) => (\r\n                  <option value={list.noRekening} key={list.noRekening}>\r\n                    {list.atasNama}\r\n                  </option>\r\n                ))}\r\n              </Field>\r\n            </div>\r\n          ) : (\r\n            <div className=\"col-md-4 col-lg-4\"></div>\r\n          )}\r\n          <div className=\"col-md-4 col-lg-4\"></div>\r\n          <div className=\"col-lg-4 col-md-4\">\r\n            <label htmlFor=\"\">Jumlah</label>\r\n            <Field\r\n              name=\"jumlah\"\r\n              component=\"input\"\r\n              type=\"tel\"\r\n              className=\"form-control\"\r\n              {...currencyMask}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <label htmlFor=\"\">Kategori</label>\r\n            <Field name=\"kategori\" className=\"form-control\" component=\"select\">\r\n              <option value=\"DEFAULT\">SILAHKAN PILIH</option>\r\n              {this.state.listKategori.map((list) => (\r\n                <option value={list.kodeParameter} key={list.kodeParameter}>\r\n                  {list.kodeParameter}\r\n                </option>\r\n              ))}\r\n            </Field>\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <Field\r\n              name=\"keperluan\"\r\n              label=\"Untuk Keperluan\"\r\n              type=\"text\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12 col-md-12\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\"\r\n                disabled={this.props.onSend}\r\n              >\r\n                {this.props.onSend ? (\r\n                  <span\r\n                    className=\"spinner-border spinner-border-sm mr-3\"\r\n                    aria-hidden=\"true\"\r\n                  ></span>\r\n                ) : null}\r\n                Simpan\r\n                <i className=\"fa fa-paper-plane ml-3\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormKelolaUangBank = reduxForm({\r\n  form: \"FormKelolaUangBank\",\r\n  enableReinitialize: true,\r\n})(FormKelolaUangBank);\r\nexport default connect()(FormKelolaUangBank);\r\n"],"sourceRoot":""}