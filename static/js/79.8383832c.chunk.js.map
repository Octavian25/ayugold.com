{"version":3,"sources":["Transaksi/ReturnSupplier.jsx","../node_modules/redux-form/es/index.js","HeaderCard.jsx","Stocking/Component/PrintNota.jsx","deleteLocalStorage.js"],"names":["FormTerimaSupplier","lazy","ModalMasterData","ReturnSupplier","props","date","Date","formatedDate","getFullYear","getMonth","getDate","inputChange","input","e","setState","target","value","pilihSupplier","result_explode","split","kodeSupplier","namaSupplier","state","listSupplier","DataSupplier","tanggal","noReturn","noBon","status","totalNW","totalOngkir","dateStart","tampungBarang","tampungBarangLocal","columns","dataField","text","formatter","cell","parseFloat","toLocaleString","csvExport","rowContent","row","rowIndex","className","data-tip","data-for","onClick","deleteIndex","dispatch","getListReturnSupplier","id","type","effect","urutan","localStorage","getItem","this","getsupplierList","AxiosMasterGet","then","res","data","catch","err","alert","getUUID","setTotalOngkir","setTotalNW","kodeJenis","simpan","noFaktur","toUpperCase","nettoDiscGlobalExt","gross","netto","qty","k","rp","undefined","kadarCetak","keterangan","discGlobalPr","kodeKategori","kadarTransaksi","noBarcode","p","discGlobalGr","pkg","bruto","nettoDiscGlobal","array","JSON","parse","push","setItem","stringify","Swal","fire","position","icon","showConfirmButton","timer","reset","getReturnSupplierTemp","document","getElementById","click","getNetto","getBruto","getRp","getPkg","getQty","explode","warning","footerItem","totalNettoExt","totalBruto","sumBruto","totalNetto","sumNetto","totalQty","totalP","totalK","totalpkg","sumPkg","totalGross","totalRp","sumRp","footerDocument","inputBy","username","barangDetails","console","log","progressSend","tableRows","table","forEach","ticket","i","ticketData","toFixed","footer","map","list","reduce","a","b","columTable","AxiosMasterPost","PrintNota","finishSend","clear","style","color","title","content","fallback","width","height","count","from","onSubmit","handleSubmit","htmlFor","name","defaultValue","onChange","key","showModal","class","aria-hidden","keyField","search","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","noDataIndication","disabled","onSend","kirimData","Component","connect","supplierList","provinsi","supplier","returnSupplier","error","perhitungan","sumQty","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","change","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors","HeaderCard","fontSize","backgroundColor","borderTopLeftRadius","borderTopRightRadius","row1name","row1isi","row2name","row2isi","row3name","row3isi","row4name","row4isi","validby","tableColumn","doc","jsPDF","autoTable","startY","finalY","lastAutoTable","setFontSize","string","output","embed","x","window","open","write","close","deleteLocalStorage","keyRemove","removeItem","nama","index","func","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","splice","deleteIndexUpdatetotalNW","Promise","resolve","reject"],"mappings":"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","file":"static/js/79.8383832c.chunk.js","sourcesContent":["import React, { Component, lazy, Suspense } from \"react\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport { connect } from \"react-redux\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { reset } from \"redux-form\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  getReturnSupplierTemp,\r\n  setTotalNW,\r\n  setTotalOngkir,\r\n} from \"../actions/terimaSupplierAction\";\r\nimport { getsupplierList } from \"../actions/supplierAction\";\r\nimport PrintNota from \"../Stocking/Component/PrintNota\";\r\nimport { warning } from \"../Alert\";\r\n// import { Link } from \"react-router-dom\";\r\nimport { deleteIndex } from \"../deleteLocalStorage\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { getListReturnSupplier } from \"../actions/returnSupplier\";\r\nimport {\r\n  finishSend,\r\n  getBruto,\r\n  getNetto,\r\n  getPkg,\r\n  getQty,\r\n  getRp,\r\n  progressSend,\r\n} from \"../actions/LogicAction\";\r\nimport { AxiosMasterGet, AxiosMasterPost } from \"../Axios\";\r\nimport { showModal } from \"../actions/ModalAction\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport HeaderCard from \"../HeaderCard\";\r\n\r\nconst FormTerimaSupplier = lazy(() => import(\"./Component/FormTerimaSupplier\"));\r\nconst ModalMasterData = lazy(() =>\r\n  import(\"../DataMaster/Component/ModalMasterData\")\r\n);\r\nconst maptostate = (state) => {\r\n  return {\r\n    supplierList: state.provinsi.supplier,\r\n    tampungBarang: state.provinsi.returnSupplier,\r\n    noFaktur: state.provinsi.noFaktur,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n    username: state.provinsi.username,\r\n    sumBruto: state.perhitungan.sumBruto,\r\n    sumNetto: state.perhitungan.sumNetto,\r\n    sumRp: state.perhitungan.sumRp,\r\n    sumPkg: state.perhitungan.sumPkg,\r\n    sumQty: state.perhitungan.sumQty,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\nclass ReturnSupplier extends Component {\r\n  constructor(props) {\r\n    var date = new Date();\r\n    var formatedDate = `${date.getFullYear()}-${\r\n      date.getMonth() + 1\r\n    }-${date.getDate()}`;\r\n    super(props);\r\n    this.state = {\r\n      listSupplier: [],\r\n      DataSupplier: [],\r\n      kodeSupplier: \"\",\r\n      namaSupplier: \"\",\r\n      tanggal: formatedDate,\r\n      noReturn: \"\",\r\n      noBon: \"\",\r\n      status: \"\",\r\n      totalNW: 0,\r\n      totalOngkir: 0,\r\n      dateStart: formatedDate,\r\n      tampungBarang: [],\r\n      tampungBarangLocal: [],\r\n      columns: [\r\n        {\r\n          dataField: \"kodeJenis\",\r\n          text: \"Kode Barang\",\r\n        },\r\n        {\r\n          dataField: \"kadarCetak\",\r\n          text: \"Kadar Cetak(%)\",\r\n        },\r\n        {\r\n          dataField: \"p\",\r\n          text: \"P\",\r\n        },\r\n        {\r\n          dataField: \"k\",\r\n          text: \"K\",\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Bungkus(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Berat(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"kadarTransaksi\",\r\n          text: \"Harga(%)\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Murni(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"rp\",\r\n          text: \"Ongkos(RP)\",\r\n          formatter: (cell) => (\r\n            <span>Rp. {parseFloat(cell).toLocaleString(\"ID-id\")}</span>\r\n          ),\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row, rowIndex) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  data-tip\r\n                  data-for=\"hapus\"\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() =>\r\n                    deleteIndex(\r\n                      \"ReturnSupplier\",\r\n                      rowIndex,\r\n                      this.props.dispatch,\r\n                      getListReturnSupplier()\r\n                    )\r\n                  }\r\n                >\r\n                  <ReactTooltip id=\"hapus\" type=\"dark\" effect=\"solid\">\r\n                    <span>Hapus</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                </button>\r\n                <br />\r\n                {/* <button\r\n                  data-tip\r\n                  data-for=\"edit\"\r\n                  className=\"btn btn-warning mr-2\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#editModal\"\r\n                  onClick={() => this.setEdit(row)}\r\n                >\r\n                  <ReactTooltip id=\"edit\" type=\"dark\" effect=\"solid\">\r\n                    <span>Edit</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-edit mr-1\"></i>\r\n                </button> */}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      urutan: localStorage.getItem(\"urutan\") || 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getsupplierList());\r\n    AxiosMasterGet(\"suppliers\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listSupplier: res.data,\r\n        })\r\n      )\r\n      .catch((err) => alert(err));\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getListReturnSupplier());\r\n    this.props.dispatch(setTotalOngkir());\r\n    this.props.dispatch(setTotalNW());\r\n  }\r\n\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  pilihSupplier = (input) => (e) => {\r\n    var supp = e.target.value ? e.target.value : \"DEFALT | DEFAULT\";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeSupplier: result_explode[0],\r\n      namaSupplier: result_explode[1],\r\n    });\r\n  };\r\n\r\n  handleSubmit(data) {\r\n    var jenis = data.kodeJenis ? data.kodeJenis : \"DEFALT | DEFAULT\";\r\n    var result_explode = jenis.split(\"|\");\r\n    let simpan = {\r\n      noFaktur: this.props.noFaktur.toUpperCase(), //\r\n      nettoDiscGlobalExt: 0,\r\n      gross: parseFloat(data.gross), //berat + bungkus\r\n      netto: parseFloat(data.netto), //murni\r\n      qty: 0,\r\n      k: parseFloat(data.k),\r\n      rp: data.rp === undefined ? 0 : parseFloat(data.rp), //ongkos\r\n      kadarCetak: result_explode[2],\r\n      keterangan: data.keterangan.toUpperCase(),\r\n      discGlobalPr: 0,\r\n      kodeKategori: \"-\",\r\n      kadarTransaksi: parseFloat(data.kadarTransaksi), //harga%\r\n      kodeJenis: result_explode[0], //kodebarang\r\n      noBarcode: \"-\",\r\n      p: parseFloat(data.p),\r\n      discGlobalGr: 0,\r\n      pkg: parseFloat(data.pkg),\r\n      bruto: parseFloat(data.bruto), //berat\r\n      nettoDiscGlobal: 0,\r\n    };\r\n    let array = JSON.parse(localStorage.getItem(\"ReturnSupplier\")) || [];\r\n    array.push(simpan);\r\n    localStorage.setItem(\"ReturnSupplier\", JSON.stringify(array));\r\n    this.props.dispatch(getListReturnSupplier());\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      text: \"Data Berhasil Ditambahkan!\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    })\r\n      .then(() => this.props.dispatch(reset(\"TerimaSupplier\")))\r\n      .then(() => this.props.dispatch(getReturnSupplierTemp()))\r\n      .then(() => this.props.dispatch(setTotalNW()))\r\n      .then(() => this.props.dispatch(setTotalOngkir()))\r\n      .then(() => document.getElementById(\"dismiss_modal\").click());\r\n  }\r\n  getSumData() {\r\n    this.props.dispatch(getNetto(\"ReturnSupplier\"));\r\n    this.props.dispatch(getBruto(\"ReturnSupplier\"));\r\n    this.props.dispatch(getRp(\"ReturnSupplier\"));\r\n    this.props.dispatch(getPkg(\"ReturnSupplier\"));\r\n    this.props.dispatch(getQty(\"ReturnSupplier\"));\r\n  }\r\n\r\n  kirimData() {\r\n    var supplier = this.state.kodeSupplier\r\n      ? this.state.kodeSupplier\r\n      : \"DEFAULT|DEFUALT\";\r\n    var explode = supplier.split(\"|\");\r\n    if (localStorage.getItem(\"ReturnSupplier\") === null) {\r\n      warning(\"Barang masih kosong, Mohon tambahkan barang\");\r\n      return false;\r\n    } else if (this.state.noBon === \"\") {\r\n      warning(\"Mohon isi nomor bon\");\r\n      return false;\r\n    } else if (this.state.noReturn === \"\") {\r\n      warning(\"Mohon isi nomor Return\");\r\n      return false;\r\n    } else if (this.state.tanggal === \"\") {\r\n      warning(\"Mohon isi tanggal\");\r\n      return false;\r\n    } else if (this.state.kodeSupplier === \"\") {\r\n      warning(\"Mohon pilih supplier\");\r\n      return false;\r\n    }\r\n    var simpan = {\r\n      footerItem: {\r\n        totalNettoExt: 0,\r\n        totalBruto: this.props.sumBruto,\r\n        totalNetto: this.props.sumNetto,\r\n        totalQty: 0,\r\n        totalP: 0,\r\n        totalK: 0,\r\n        totalpkg: this.props.sumPkg,\r\n        totalGross: 0,\r\n        totalRp: this.props.sumRp,\r\n      },\r\n      footerDocument: {\r\n        inputBy: this.props.username,\r\n      },\r\n      barangDetails: JSON.parse(localStorage.getItem(\"ReturnSupplier\")),\r\n      noFaktur: this.props.noFaktur.toUpperCase(),\r\n      tanggal: this.state.tanggal,\r\n      noBon: this.state.noBon.toUpperCase(),\r\n      kodeSupplier: explode[0],\r\n      namaSupplier: explode[1],\r\n    };\r\n    console.log(JSON.stringify(simpan));\r\n    this.props.dispatch(progressSend());\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    var table = JSON.parse(localStorage.getItem(\"ReturnSupplier\"));\r\n    // for each ticket pass all its data into an array\r\n    table.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        ++i,\r\n        ticket.kodeJenis,\r\n        ticket.kadarCetak,\r\n        ticket.p,\r\n        ticket.k,\r\n        ticket.pkg,\r\n        ticket.bruto,\r\n        ticket.kadarTransaksi,\r\n        parseFloat(ticket.netto).toFixed(3),\r\n        \"Rp.\" + parseFloat(ticket.rp).toLocaleString(\"id-ID\"),\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    const footer = [\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      table.map((list) => list.pkg).reduce((a, b) => a + b, 0),\r\n      table.map((list) => list.bruto).reduce((a, b) => a + b, 0),\r\n      \"\",\r\n      table\r\n        .map((list) => list.netto)\r\n        .reduce((a, b) => a + b, 0)\r\n        .toFixed(3),\r\n      \"Rp.\" +\r\n        table\r\n          .map((list) => list.rp)\r\n          .reduce((a, b) => a + b, 0)\r\n          .toLocaleString(\"id-ID\"),\r\n    ];\r\n    tableRows.push(footer);\r\n    console.log(JSON.stringify(tableRows));\r\n    var columTable = [\r\n      \"No\",\r\n      \"Kode Barang\",\r\n      \"Kadar Cetak\\n(%)\",\r\n      \"P\",\r\n      \"K\",\r\n      \"Bungkus\\n(Gr)\",\r\n      \"Berat\\n(Gr)\",\r\n      \"Harga\\n(Gr)\",\r\n      \"Murni\\n(Gr)\",\r\n      \"Ongkos\\n(Rp)\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    AxiosMasterPost(\"/spp/dc/rtr\", simpan)\r\n      .then((res) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Data Berhasil Ditambahkan!\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() =>\r\n            PrintNota(\r\n              \"no Return\",\r\n              this.state.noReturn.toUpperCase(),\r\n              \"Tanggal\",\r\n              this.state.tanggal,\r\n              \"No Bon\",\r\n              this.state.noBon.toUpperCase(),\r\n              \"Supplier\",\r\n              this.state.kodeSupplier.toUpperCase(),\r\n              \"ADMIN\",\r\n              this.state.tanggal,\r\n              \"\",\r\n              columTable,\r\n              \"Return Barang Supplier\",\r\n              tableRows\r\n            )\r\n          )\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => localStorage.clear())\r\n          .then(() => this.props.dispatch(getReturnSupplierTemp()))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() => localStorage.setItem(\"isLogin\", true))\r\n          .then(() => this.props.dispatch(getListReturnSupplier()))\r\n          .then(() =>\r\n            this.setState({\r\n              noBon: \"\",\r\n              noReturn: \"\",\r\n            })\r\n          )\r\n          .then(() => document.getElementById(\"myForm\").reset())\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text: \"Data Gagal Ditambahkan\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        }).then(() => this.props.dispatch(finishSend()))\r\n      );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Return Barang Supplier\" />\r\n              <div className=\"card-body\">\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-9\"></div>\r\n                    {/* <div className=\"col-lg-3\">\r\n                      <div className=\"text-right\">\r\n                        <Link to=\"/EditForm/returnSupplier\">\r\n                          <button\r\n                            className=\"btn btn-warning\"\r\n                            // data-target=\"#editModal\"\r\n                            // data-toggle=\"modal\"\r\n                          >\r\n                            Edit Return Barang\r\n                          </button>\r\n                        </Link>\r\n                      </div>\r\n                    </div> */}\r\n                    <div className=\"col-lg-12\">\r\n                      <br />\r\n                    </div>\r\n                    <ModalMasterData\r\n                      content={\r\n                        <Suspense\r\n                          fallback={\r\n                            <Skeleton width={\"100%\"} height={50} count={5} />\r\n                          }\r\n                        >\r\n                          <FormTerimaSupplier\r\n                            from=\"return\"\r\n                            onSubmit={(data) => this.handleSubmit(data)}\r\n                          />\r\n                        </Suspense>\r\n                      }\r\n                      title=\"Tambah Data Barang\"\r\n                    />\r\n                    <div className=\"col-lg-12\">\r\n                      <form id=\"myForm\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-lg-4 col-md-4\">\r\n                            <label htmlFor=\"\">Supplier</label>\r\n                            <select\r\n                              name=\"supplier\"\r\n                              id=\"supplier\"\r\n                              className=\"form-control\"\r\n                              defaultValue=\"DEFAULT | DEFAULT\"\r\n                              onChange={this.pilihSupplier()}\r\n                            >\r\n                              <option value=\"DEFAULT | DEFAULT\" key=\"DEFAULT\">\r\n                                Silahkan Pilih\r\n                              </option>\r\n                              {this.state.listSupplier.map((list) => (\r\n                                <option\r\n                                  value={\r\n                                    list.kodeSupplier + \"|\" + list.namaSupplier\r\n                                  }\r\n                                >\r\n                                  {list.namaSupplier}\r\n                                </option>\r\n                              ))}\r\n                            </select>\r\n                          </div>\r\n                          <div className=\"col-md-4 col-lg-4\">\r\n                            <label htmlFor=\"\">Tanggal</label>\r\n                            <input\r\n                              type=\"date\"\r\n                              id=\"tanggal\"\r\n                              name=\"tanggal\"\r\n                              defaultValue={this.state.dateStart}\r\n                              className=\"form-control\"\r\n                              onChange={this.inputChange(\"tanggalInvoice\")}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-md-4 col-lg-4\">\r\n                            <label htmlFor=\"\">No Return</label>\r\n                            <input\r\n                              type=\"text\"\r\n                              id=\"no_return\"\r\n                              name=\"no_return\"\r\n                              className=\"form-control\"\r\n                              onChange={this.inputChange(\"noReturn\")}\r\n                              value={this.state.noReturn}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-md-4 col-lg-4 mt-3\">\r\n                            <label htmlFor=\"\">No Bon</label>\r\n                            <input\r\n                              type=\"text\"\r\n                              id=\"bon_return\"\r\n                              name=\"bon_return\"\r\n                              className=\"form-control\"\r\n                              onChange={this.inputChange(\"noBon\")}\r\n                              value={this.state.noBon}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                    <div className=\"col-md-12 col-lg-12 mt-3 mb-3\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-6 col-md-6\"></div>\r\n                        <div className=\"col-lg-6 col-md-6\">\r\n                          <div className=\"text-right\">\r\n                            <button\r\n                              className=\"btn btn-primary\"\r\n                              onClick={() => this.props.dispatch(showModal())}\r\n                            >\r\n                              Tambah Data\r\n                              <i class=\"fa fa-plus ml-3\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {this.props.tampungBarang ? (\r\n                    <ToolkitProvider\r\n                      keyField=\"id\"\r\n                      data={this.props.tampungBarang}\r\n                      columns={this.state.columns}\r\n                      search\r\n                    >\r\n                      {(props) => (\r\n                        <div className=\"form-group\">\r\n                          <BootstrapTable\r\n                            {...props.baseProps}\r\n                            striped\r\n                            hover\r\n                            condensed\r\n                            bordered={true}\r\n                            headerClasses=\"header-table\"\r\n                            pagination={paginationFactory()}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </ToolkitProvider>\r\n                  ) : (\r\n                    <ToolkitProvider\r\n                      keyField=\"id\"\r\n                      data={[]}\r\n                      columns={this.state.columns}\r\n                      search\r\n                    >\r\n                      {(props) => (\r\n                        <div className=\"form-group\">\r\n                          <BootstrapTable\r\n                            {...props.baseProps}\r\n                            striped\r\n                            hover\r\n                            condensed\r\n                            bordered={true}\r\n                            headerClasses=\"header-table\"\r\n                            pagination={paginationFactory()}\r\n                            noDataIndication=\"Tidak Ada Data\"\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </ToolkitProvider>\r\n                  )}\r\n                  <div className=\"text-right\">\r\n                    <button\r\n                      className=\"btn btn-primary\"\r\n                      disabled={this.props.onSend}\r\n                      onClick={() => this.kirimData()}\r\n                    >\r\n                      {this.props.onSend ? (\r\n                        <span\r\n                          className=\"spinner-border spinner-border-sm mr-3\"\r\n                          aria-hidden=\"true\"\r\n                        ></span>\r\n                      ) : null}\r\n                      Simpan\r\n                      <i class=\"fa fa-paper-plane ml-3\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(ReturnSupplier);\r\n","import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;","import React, { Component } from \"react\";\r\n\r\nclass HeaderCard extends Component {\r\n  render() {\r\n    return (\r\n      <h4\r\n        className=\"card-header mb-3\"\r\n        style={{\r\n          fontSize: 25,\r\n          backgroundColor: \"#394867\",\r\n          borderTopLeftRadius: 10,\r\n          borderTopRightRadius: 10,\r\n          height: 50,\r\n          color: \"#ffffff\",\r\n        }}\r\n      >\r\n        {this.props.title}\r\n      </h4>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderCard;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst PrintNota = (\r\n  row1name = \"\",\r\n  row1isi = \"\",\r\n  row2name = \"\",\r\n  row2isi = \"\",\r\n  row3name = \"\",\r\n  row3isi = \"\",\r\n  row4name = \"\",\r\n  row4isi = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n  validby = \"\",\r\n  tableColumn = [],\r\n  title = \"\",\r\n  tableRows\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  // var tickets = JSON.parse(data);\r\n  // define the columns we want and their titles\r\n\r\n  // // define an empty array of rows\r\n  // const tableRows = [];\r\n\r\n  // // for each ticket pass all its data into an array\r\n  // tickets.forEach((ticket, i) => {\r\n  //   const ticketData = [\r\n  //     i++,\r\n  //     ticket.kodeJenis01,\r\n  //     ticket.bruto01,\r\n  //     ticket.kadarTransaksi01,\r\n  //     ticket.netto01,\r\n  //     ticket.kodeJenis02,\r\n  //     ticket.bruto02,\r\n  //     ticket.kadarTransaksi02,\r\n  //     ticket.netto02,\r\n  //   ];\r\n  //   // push each tickcet's info into a row\r\n  //   tableRows.push(ticketData);\r\n  // });\r\n\r\n  // startY is basically margin-top\r\n  doc.autoTable(tableColumn, tableRows, { startY: 40 });\r\n  let finalY = doc.lastAutoTable.finalY + 10;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(title, 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(row1name, 14, 25);\r\n  doc.text(\":\", 37, 25);\r\n  doc.text(row1isi, 40, 25);\r\n  doc.text(row2name, 120, 25);\r\n  doc.text(\":\", 141, 25);\r\n  doc.text(row2isi, 145, 25);\r\n  //row 2\r\n  doc.text(row3name, 14, 30);\r\n  doc.text(\":\", 37, 30);\r\n  doc.text(row3isi, 40, 30);\r\n  doc.text(row4name, 120, 30);\r\n  doc.text(\":\", 141, 30);\r\n  doc.text(row4isi, 145, 30);\r\n\r\n  //Stamp\r\n  doc.text(\"User\", 160, finalY + 10);\r\n  doc.text(\":\", 168, finalY + 10);\r\n  doc.text(username, 170, finalY + 10);\r\n  doc.text(\"Cetak\", 160, finalY + 15);\r\n  doc.text(\":\", 168, finalY + 15);\r\n  doc.text(tanggal, 170, finalY + 15);\r\n  doc.text(\"Valid\", 160, finalY + 20);\r\n  doc.text(\":\", 168, finalY + 20);\r\n  doc.text(validby, 170, finalY + 20);\r\n  // doc.autoPrint();\r\n  // doc.save(`${title}_${dateStr}.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  x.document.close();\r\n};\r\n\r\nexport default PrintNota;\r\n","import Swal from \"sweetalert2\";\r\n\r\nexport const deleteLocalStorage = (keyRemove) => {\r\n  keyRemove.forEach((e) => {\r\n    localStorage.removeItem(e);\r\n  });\r\n};\r\n\r\nexport const deleteIndex = (nama, index, dispatch, func) => {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      const array = JSON.parse(localStorage.getItem(nama)) || [];\r\n      array.splice(index, 1);\r\n      localStorage.setItem(nama, JSON.stringify(array));\r\n      Swal.fire({\r\n        text: \"Berhasil\",\r\n        timer: 2000,\r\n        showConfirmButton: false,\r\n        position: \"top-right\",\r\n        icon: \"success\",\r\n      }).then(() => dispatch(func));\r\n    }\r\n  });\r\n};\r\nexport const deleteIndexUpdatetotalNW = (nama, index, dispatch, func) => {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      title: \"Anda Yakin ?\",\r\n      text: \"Anda Akan Menghapus Data Ini ?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        const array = JSON.parse(localStorage.getItem(nama)) || [];\r\n        array.splice(index, 1);\r\n        localStorage.setItem(nama, JSON.stringify(array));\r\n        Swal.fire({\r\n          text: \"Berhasil\",\r\n          timer: 2000,\r\n          showConfirmButton: false,\r\n          position: \"top-right\",\r\n          icon: \"success\",\r\n        })\r\n          .then(() => dispatch(func))\r\n          .then(resolve(\"Berhasil\"))\r\n          .catch(\"Gagal\");\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexport const deleteIndexUpdateNettoNW = (\r\n  nama,\r\n  index,\r\n  dispatch,\r\n  func,\r\n  nilai,\r\n  func2,\r\n  state\r\n) => {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      const array = JSON.parse(localStorage.getItem(nama)) || [];\r\n      array.splice(index, 1);\r\n      localStorage.setItem(nama, JSON.stringify(array));\r\n      var awal = localStorage.getItem(\"GrandTotalNetto\");\r\n      var hasil = parseFloat(awal) - parseFloat(nilai);\r\n      localStorage.setItem(\"GrandTotalNetto\", parseFloat(hasil).toFixed(3));\r\n      Swal.fire({\r\n        text: \"Berhasil\",\r\n        timer: 2000,\r\n        showConfirmButton: false,\r\n        position: \"top-right\",\r\n        icon: \"success\",\r\n      })\r\n        .then(() => dispatch(func))\r\n        .then(() => dispatch(func2));\r\n    }\r\n  });\r\n};\r\n"],"sourceRoot":""}