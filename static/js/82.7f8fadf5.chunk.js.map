{"version":3,"sources":["firebase.js","GetTimbangan.js","Validations/validationTerimaSupplier.js","Totalan/Element/FormModalTransaksiLM.jsx"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","namaTimbangan","localStorage","getItem","enableTimbangan","getTimbangan","props","database","ref","on","snapshot","data","val","nilai","console","log","getTimbanganValidasi","coba","Object","keys","map","list","getTimbanganGross","validationTerimaSupplier","value","errors","kodeBarang","pkg","p","k","bruto","currencyMask","createNumberMask","prefix","suffix","locale","renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","min","step","maxLength","FormModalTransaksiLM","pilihBarang","e","result_explode","target","split","setState","kodeJenis","namaJenis","kadarCetak","kadarBeli","onclick1","bind","state","DataSupplier","kode_barang","keterangan","kadar","P","K","bungkus","berat","harga","murni","ongkos","status","axios","get","server","then","res","catch","err","this","change","netto","noFaktur","gross","totalHargaLM","toFixed","onSubmit","handleSubmit","name","component","defaultValue","normalize","toUpperCase","onChange","onBlur","setKadar","key","kode","style","from","visibility","setHargaLM","disabled","submitting","Component","reduxForm","form","validate","enableReinitialize","selector","formValueSelector","connect","kadarTransaksi","parseFloat"],"mappings":"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","file":"static/js/82.7f8fadf5.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDZH49wStpEG3wK8IdFwUpt9QHfbliYtdk\",\r\n  authDomain: \"timbangannagatech.firebaseapp.com\",\r\n  databaseURL: \"https://timbangannagatech-default-rtdb.firebaseio.com\",\r\n  projectId: \"timbangannagatech\",\r\n  storageBucket: \"timbangannagatech.appspot.com\",\r\n  messagingSenderId: \"266997300577\",\r\n  appId: \"1:266997300577:web:8f4d8441b9267ed6d3d920\",\r\n  measurementId: \"G-SXVC6P8KNE\",\r\n};\r\n\r\nexport default firebase.initializeApp(firebaseConfig);\r\n","import firebase from \"./firebase\";\r\n\r\nconst namaTimbangan = localStorage.getItem(\"namaTimbangan\");\r\nlet enableTimbangan = localStorage.getItem(\"enableTimbangan\");\r\nexport const getTimbangan = (props) => {\r\n  if (enableTimbangan) {\r\n    firebase\r\n      .database()\r\n      .ref(namaTimbangan)\r\n      .on(\"value\", (snapshot) => {\r\n        let data = snapshot.val();\r\n        props(\"bruto\", data.nilai);\r\n        console.log(data.nilai);\r\n      });\r\n  } else {\r\n    console.log(\"TIMBANGAN TIDAK AKTIF\");\r\n  }\r\n};\r\nexport const getTimbanganValidasi = (props) => {\r\n  if (enableTimbangan) {\r\n    firebase\r\n      .database()\r\n      .ref(namaTimbangan)\r\n      .on(\"value\", (snapshot) => {\r\n        let data = snapshot.val();\r\n        props(\"jumlah\", data.nilai);\r\n        console.log(data.nilai);\r\n        let coba = Object.keys(data).map((list) => data[list]);\r\n        console.log(coba);\r\n      });\r\n  } else {\r\n    console.log(\"TIMBANGAN TIDAK AKTIF\");\r\n  }\r\n};\r\nexport const getTimbanganGross = (props) => {\r\n  if (enableTimbangan) {\r\n    firebase\r\n      .database()\r\n      .ref(namaTimbangan)\r\n      .on(\"value\", (snapshot) => {\r\n        let data = snapshot.val();\r\n        props(\"gross\", data.nilai);\r\n        console.log(data.nilai);\r\n        let coba = Object.keys(data).map((list) => data[list]);\r\n        console.log(coba);\r\n      });\r\n  } else {\r\n    console.log(\"TIMBANGAN TIDAK AKTIF\");\r\n  }\r\n};\r\n","const validationTerimaSupplier = (value) => {\r\n  const errors = {};\r\n  if (!value.kodeBarang) {\r\n    errors.kodeBarang = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.pkg) {\r\n    errors.pkg = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.p) {\r\n    errors.p = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.k) {\r\n    errors.k = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.bruto) {\r\n    errors.bruto = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default validationTerimaSupplier;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Field, reduxForm, formValueSelector } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport validationTerimaSupplier from \"../../Validations/validationTerimaSupplier\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport { getTimbangan } from \"../../GetTimbangan\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\n\r\nclass FormModalTransaksiLM extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onclick1 = this.onclick1.bind(this);\r\n    this.state = {\r\n      kodeBarang: [],\r\n      DataSupplier: [],\r\n      kode_barang: \"\",\r\n      keterangan: \"INI KETERANGAN\",\r\n      kadar: \"\",\r\n      P: \"\",\r\n      K: \"\",\r\n      bungkus: \"\",\r\n      berat: \"\",\r\n      harga: \"\",\r\n      murni: \"\",\r\n      ongkos: \"\",\r\n      status: \"\",\r\n      kadarCetak: \"\",\r\n      kadarBeli: \"\",\r\n      namaJenis: \"\",\r\n      kodeJenis: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(server + \"subcategorys2?kodeKelompok=CIOK\")\r\n      .then((res) =>\r\n        this.setState({\r\n          kodeBarang: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    getTimbangan(this.props.change);\r\n  }\r\n\r\n  onclick1() {\r\n    this.props.change(\"netto\", this.props.netto);\r\n    this.props.change(\"noFaktur\", this.props.noFaktur);\r\n    this.props.change(\"gross\", this.props.gross);\r\n  }\r\n\r\n  pilihBarang = (input) => (e) => {\r\n    var supp = e.target.value\r\n      ? e.target.value\r\n      : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n      namaJenis: result_explode[1],\r\n      kadarCetak: result_explode[2],\r\n      kadarBeli: result_explode[3],\r\n    });\r\n  };\r\n\r\n  setKadar() {\r\n    this.props.change(\"keterangan\", this.state.namaJenis);\r\n    this.props.change(\"kadar\", this.state.kadarCetak);\r\n    this.props.change(\"kadarTransaksi\", this.state.kadarBeli);\r\n  }\r\n  setHargaLM() {\r\n    var harga = this.props.totalHargaLM ? this.props.totalHargaLM : 0;\r\n    var netto = this.props.netto ? this.props.netto : 0;\r\n    this.props.change(\"totalHargaLM\", (harga * netto).toFixed(3));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 col-lg-12 d-none\">\r\n            <Field\r\n              name=\"noFaktur\"\r\n              label={this.props.noFaktur}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              component={renderField}\r\n              defaultValue={this.props.noFaktur}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 form-group\">\r\n            <label htmlFor=\"\">Kode Barang</label>\r\n            <Field\r\n              name=\"kodeJenis\"\r\n              component=\"select\"\r\n              className=\"form-control\"\r\n              onChange={this.pilihBarang()}\r\n              onBlur={this.setKadar()}\r\n            >\r\n              <option\r\n                value=\"DEFAULT | DEFAULT | DEFAULT | DEFAULT\"\r\n                key=\"DEFAULT\"\r\n              >\r\n                Silahkan Pilih\r\n              </option>\r\n              {this.state.kodeBarang === [] ? (\r\n                <option>TIDAK ADA DATA</option>\r\n              ) : (\r\n                this.state.kodeBarang.map((kode) => (\r\n                  <option\r\n                    value={\r\n                      kode.kodeJenis +\r\n                      \"|\" +\r\n                      kode.namaJenis +\r\n                      \"|\" +\r\n                      kode.kadarCetak +\r\n                      \"|\" +\r\n                      kode.kadarBeli\r\n                    }\r\n                  >\r\n                    {kode.namaJenis}\r\n                  </option>\r\n                ))\r\n              )}\r\n            </Field>\r\n          </div>\r\n          <div\r\n            className=\"col-md-8 form-group\"\r\n            style={\r\n              this.props.from === \"terima\" ? null : { visibility: \"hidden\" }\r\n            }\r\n          >\r\n            <Field\r\n              name=\"keterangan\"\r\n              label=\"Keterangan\"\r\n              type=\"text\"\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"kadar\"\r\n              label=\"Kadar (%)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field name=\"p\" label=\"P\" type=\"number\" component={renderField} />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field name=\"k\" label=\"K\" type=\"number\" component={renderField} />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"pkg\"\r\n              label=\"Bungkus (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"bruto\"\r\n              label=\"Berat (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"kadarTransaksi\"\r\n              label=\"Harga (%)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"gross\"\r\n              label=\"Gross (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"netto\"\r\n              label=\"Murni (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <label htmlFor=\"\">Harga (Rp)</label>\r\n            <Field\r\n              name=\"harga\"\r\n              component=\"input\"\r\n              type=\"tel\"\r\n              className=\"form-control\"\r\n              onChange={this.setHargaLM()}\r\n              {...currencyMask}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <label htmlFor=\"\">Total Harga (Rp)</label>\r\n            <Field\r\n              name=\"totalHargaLM\"\r\n              component=\"input\"\r\n              type=\"tel\"\r\n              className=\"form-control\"\r\n              {...currencyMask}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 form-group mt-3\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\"\r\n                disabled={this.props.submitting}\r\n              >\r\n                Simpan\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormModalTransaksiLM = reduxForm({\r\n  form: \"TerimaSupplier\",\r\n  validate: validationTerimaSupplier,\r\n  enableReinitialize: true,\r\n})(FormModalTransaksiLM);\r\nconst selector = formValueSelector(\"TerimaSupplier\"); // <-- same as form name\r\n\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi, pkg, harga } = selector(\r\n    state,\r\n    \"bruto\",\r\n    \"kadarTransaksi\",\r\n    \"pkg\",\r\n    \"harga\"\r\n  );\r\n  return {\r\n    netto: (parseFloat(bruto) * (parseFloat(kadarTransaksi) / 100)).toFixed(3),\r\n    gross: parseFloat(bruto) + parseFloat(pkg),\r\n    totalHargaLM: parseFloat(harga),\r\n  };\r\n})(FormModalTransaksiLM);\r\n"],"sourceRoot":""}