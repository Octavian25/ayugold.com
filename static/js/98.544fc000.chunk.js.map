{"version":3,"sources":["Supervisory/CetakUlangForm/FormLaporanPindahBarang.jsx","HeaderCard.jsx","Images/500.svg","Stocking/Component/PrintNota.jsx"],"names":["SearchBar","Search","ExportCSVButton","CSVExport","FormLaporanPindahBarang","props","inputChange","input","e","setState","target","value","pilihSupplier","result_explode","split","kodeSupplier","namaSupplier","state","listSupplier","columns","dataField","text","csvExport","formatter","rowContent","row","className","onClick","getDetails","noFaktur","data","listPenerimaan","this","dispatch","getsupplierList","Axios","get","server","then","res","catch","err","alert","getUUID","getCetakUlang","faktur","serverNonMaster","setLocal","gagal","localStorage","setItem","JSON","stringify","barangDetails","print","tanggal","kodeLokasiAsal","kodeLokasiTujuan","noBon","dari","ke","tableRows","parse","getItem","forEach","ticket","i","ticketData","kodeJenis","bruto","kadarTransaksi","netto","pkg","gross","rp","qty","push","console","log","PrintNota","params","tglFrom","tglTo","kodeLokasiFrom","asal","kodeLokasiTo","tujuan","to","type","clear","aria-hidden","title","htmlFor","id","name","defaultValue","startingDate","onChange","map","kode","getData","bootstrap4","keyField","namaKey","search","searchProps","placeholder","style","margin","baseProps","headerClasses","striped","hover","bordered","pagination","paginationFactory","csvProps","error","src","notrespond","width","alt","height","Component","connect","HeaderCard","fontSize","backgroundColor","borderTopLeftRadius","borderTopRightRadius","color","module","exports","row1name","row1isi","row2name","row2isi","row3name","row3isi","row4name","row4isi","username","validby","tableColumn","doc","jsPDF","autoTable","startY","finalY","lastAutoTable","setFontSize","string","output","embed","x","window","open","document","write","close"],"mappings":"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","file":"static/js/98.544fc000.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getCetakUlang } from \"../../actions/cetakUlangAction\";\r\nimport { getUUID } from \"../../actions/fakturAction\";\r\nimport { getsupplierList } from \"../../actions/supplierAction\";\r\nimport Axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport,\r\n} from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport notrespond from \"../../Images/500.svg\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { gagal } from \"../../Alert\";\r\nimport PrintNota from \"../../Stocking/Component/PrintNota\";\r\nimport HeaderCard from \"../../HeaderCard\";\r\n\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nconst serverNonMaster = process.env.REACT_APP_BACKEND_URL_NON_MASTER;\r\nclass FormLaporanPindahBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listSupplier: [],\r\n      columns: [\r\n        {\r\n          dataField: \"tanggal\",\r\n          text: \"Tanggal\",\r\n        },\r\n        {\r\n          dataField: \"noBon\",\r\n          text: \"Nomor Bon\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Bruto(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Netto\",\r\n        },\r\n        {\r\n          dataField: \"rp\",\r\n          text: \"Ongkos(Rp)\",\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-warning mr-2\"\r\n                  onClick={() => this.getDetails(row.noFaktur)}\r\n                >\r\n                  <i className=\"fa fa-print mr-1\"></i>\r\n                  Print\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      data: [],\r\n      listPenerimaan: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getsupplierList());\r\n    Axios.get(server + \"suppliers\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listSupplier: res.data,\r\n        })\r\n      )\r\n      .catch((err) => alert(err));\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getCetakUlang());\r\n  }\r\n  getDetails(faktur) {\r\n    Axios.get(\r\n      serverNonMaster + \"item/dc/pindahbarang/detail?noFaktur=\" + faktur\r\n    )\r\n      .then((res) => this.setLocal(res.data))\r\n      .catch(() =>\r\n        gagal(\"Sepertinya ada kesalahan, Mohon Periksa Koneksi anda\")\r\n      );\r\n  }\r\n  setLocal(data) {\r\n    localStorage.setItem(\"pindahBarang\", JSON.stringify(data.barangDetails));\r\n    this.print(\r\n      data.tanggal,\r\n      data.kodeLokasiAsal,\r\n      data.kodeLokasiTujuan,\r\n      data.noBon\r\n    );\r\n  }\r\n  print(tanggal, dari, ke, noBon) {\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    var table = JSON.parse(localStorage.getItem(\"pindahBarang\"));\r\n    // for each ticket pass all its data into an array\r\n    table.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        i++,\r\n        ticket.kodeJenis,\r\n        ticket.bruto,\r\n        ticket.kadarTransaksi,\r\n        ticket.netto,\r\n        ticket.pkg,\r\n        ticket.gross,\r\n        ticket.rp,\r\n        ticket.qty,\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    console.log(tableRows);\r\n    var columTable = [\r\n      \"No\",\r\n      \"Kode Jenis\",\r\n      \"Bruto (Gr)\",\r\n      \"Harga (%)\",\r\n      \"Netto (Gr)\",\r\n      \"Pkg (Gr)\",\r\n      \"Gross (Gr)\",\r\n      \"Ongkos (Rp)\",\r\n      \"Qty\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    PrintNota(\r\n      \"Tanggal\",\r\n      tanggal,\r\n      \"Lokasi\",\r\n      dari + \" - \" + ke,\r\n      \"Nomor Bon\",\r\n      noBon,\r\n      \"\",\r\n      \"\",\r\n      \"ADMIN\",\r\n      tanggal,\r\n      \"\",\r\n      columTable,\r\n      \"PINDAH BARANG\",\r\n      tableRows\r\n    );\r\n  }\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n  getData() {\r\n    Axios.get(serverNonMaster + \"item/dc/pindahbarang/heads?\", {\r\n      params: {\r\n        tglFrom: this.state.tglFrom,\r\n        tglTo: this.state.tglTo,\r\n        kodeLokasiFrom: this.state.asal,\r\n        kodeLokasiTo: this.state.tujuan,\r\n      },\r\n    })\r\n      .then((res) =>\r\n        this.setState({\r\n          listPenerimaan: res.data,\r\n        })\r\n      )\r\n      .catch(() =>\r\n        gagal(\"Sepertinya ada gangguan, tidak bisa mengambil data dari server\")\r\n      );\r\n  }\r\n  pilihSupplier = (input) => (e) => {\r\n    var supp = e.target.value ? e.target.value : \"DEFALT | DEFAULT\";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeSupplier: result_explode[0],\r\n      namaSupplier: result_explode[1],\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"container-fluid\">\r\n          <ol className=\"breadcrumb mb-2\">\r\n            <Link to=\"/cetakUlangBukti\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                onClick={() => localStorage.clear()}\r\n              >\r\n                <i className=\"fa fa-angle-left mr-3\" aria-hidden=\"true\"></i>{\" \"}\r\n                Back\r\n              </button>\r\n            </Link>\r\n          </ol>\r\n          <div className=\"card\">\r\n            <HeaderCard title=\"Cetak Ulang Butki Pindah Barang\" />\r\n            <div className=\"card-body\">\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <label htmlFor=\"\">Tanggal Awal</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    id=\"tanggal\"\r\n                    name=\"tanggalAwal\"\r\n                    className=\"form-control\"\r\n                    defaultValue={this.state.startingDate}\r\n                    onChange={this.inputChange(\"tglFrom\")}\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4 col-md-4\">\r\n                  <div className=\"text-center\">\r\n                    <i className=\"fas fa-exchange-alt\"></i>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <label htmlFor=\"\">Tanggal Akhir</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    id=\"tanggal\"\r\n                    name=\"tanggalAkhir\"\r\n                    className=\"form-control\"\r\n                    defaultValue={this.state.startingDate}\r\n                    onChange={this.inputChange(\"tglTo\")}\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4 col-md-4 mt-3\">\r\n                  <label htmlFor=\"\">Kelompok</label>\r\n                  <select\r\n                    name=\"supplier\"\r\n                    id=\"kodeSupplier\"\r\n                    className=\"form-control\"\r\n                    onChange={this.pilihSupplier(\"kodeSupplier\")}\r\n                  >\r\n                    <option value=\"DEFAULT | DEFAULT\">SILAHKAN PILIH</option>\r\n                    {this.state.listSupplier.map((kode) => (\r\n                      <option\r\n                        value={kode.kodeSupplier + \"|\" + kode.namaSupplier}\r\n                      >\r\n                        {kode.namaSupplier}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4 mt-3\">\r\n                  <label htmlFor=\"\">Asal</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"asal\"\r\n                    name=\"asal\"\r\n                    className=\"form-control\"\r\n                    onChange={this.inputChange(\"asal\")}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4 mt-3\">\r\n                  <label htmlFor=\"\">Tujuan</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"tujuan\"\r\n                    name=\"tujuan\"\r\n                    className=\"form-control\"\r\n                    onChange={this.inputChange(\"tujuan\")}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-12 col-lg-12 mt-3\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-6 col-md-6\">\r\n                      <div className=\"text-left\">\r\n                        {/* <Link to=\"/ViewPDF\">\r\n                              <button className=\"btn btn-primary\" type=\"button\">\r\n                                PDF\r\n                              </button>\r\n                            </Link> */}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-lg-6 col-md-6\">\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          onClick={() => this.getData()}\r\n                        >\r\n                          <i className=\"fa fa-search mr-1\"></i>\r\n                          Cari Data\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      {this.state.listPenerimaan ? (\r\n                        <ToolkitProvider\r\n                          bootstrap4\r\n                          keyField={\r\n                            this.props.namaKey ? this.props.namaKey : \"kode\"\r\n                          }\r\n                          data={this.state.listPenerimaan}\r\n                          columns={this.state.columns}\r\n                          search\r\n                        >\r\n                          {(props) => (\r\n                            <div className=\"col-lg-12 col-md-12 mt-5\">\r\n                              <div className=\"text-right\">\r\n                                <SearchBar\r\n                                  {...props.searchProps}\r\n                                  className=\"form-control\"\r\n                                  placeholder=\"Tuliskan Kode / Nama\"\r\n                                  style={{ margin: 0 }}\r\n                                />\r\n                              </div>\r\n                              <BootstrapTable\r\n                                {...props.baseProps}\r\n                                headerClasses=\"header-table\"\r\n                                striped\r\n                                hover\r\n                                bordered={true}\r\n                                pagination={paginationFactory()}\r\n                              />\r\n                              <ExportCSVButton\r\n                                {...props.csvProps}\r\n                                className=\"btn btn-primary\"\r\n                              >\r\n                                Export CSV\r\n                              </ExportCSVButton>\r\n                            </div>\r\n                          )}\r\n                        </ToolkitProvider>\r\n                      ) : (\r\n                        <div>\r\n                          {this.props.error ? (\r\n                            <div className=\"text-center\">\r\n                              <img\r\n                                src={notrespond}\r\n                                style={{ width: \"30%\" }}\r\n                                alt=\"NOT RESPOND\"\r\n                              />\r\n                              <br />\r\n                              <h4>Request API Gagal, Silahkan Refresh</h4>\r\n                            </div>\r\n                          ) : (\r\n                            <Skeleton width=\"100%\" height={180} />\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(FormLaporanPindahBarang);\r\n","import React, { Component } from \"react\";\r\n\r\nclass HeaderCard extends Component {\r\n  render() {\r\n    return (\r\n      <h4\r\n        className=\"card-header mb-3\"\r\n        style={{\r\n          fontSize: 25,\r\n          backgroundColor: \"#394867\",\r\n          borderTopLeftRadius: 10,\r\n          borderTopRightRadius: 10,\r\n          height: 50,\r\n          color: \"#ffffff\",\r\n        }}\r\n      >\r\n        {this.props.title}\r\n      </h4>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderCard;\r\n","module.exports = __webpack_public_path__ + \"static/media/500.c22f1e39.svg\";","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst PrintNota = (\r\n  row1name = \"\",\r\n  row1isi = \"\",\r\n  row2name = \"\",\r\n  row2isi = \"\",\r\n  row3name = \"\",\r\n  row3isi = \"\",\r\n  row4name = \"\",\r\n  row4isi = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n  validby = \"\",\r\n  tableColumn = [],\r\n  title = \"\",\r\n  tableRows\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  // var tickets = JSON.parse(data);\r\n  // define the columns we want and their titles\r\n\r\n  // // define an empty array of rows\r\n  // const tableRows = [];\r\n\r\n  // // for each ticket pass all its data into an array\r\n  // tickets.forEach((ticket, i) => {\r\n  //   const ticketData = [\r\n  //     i++,\r\n  //     ticket.kodeJenis01,\r\n  //     ticket.bruto01,\r\n  //     ticket.kadarTransaksi01,\r\n  //     ticket.netto01,\r\n  //     ticket.kodeJenis02,\r\n  //     ticket.bruto02,\r\n  //     ticket.kadarTransaksi02,\r\n  //     ticket.netto02,\r\n  //   ];\r\n  //   // push each tickcet's info into a row\r\n  //   tableRows.push(ticketData);\r\n  // });\r\n\r\n  // startY is basically margin-top\r\n  doc.autoTable(tableColumn, tableRows, { startY: 40 });\r\n  let finalY = doc.lastAutoTable.finalY + 10;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(title, 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(row1name, 14, 25);\r\n  doc.text(\":\", 37, 25);\r\n  doc.text(row1isi, 40, 25);\r\n  doc.text(row2name, 120, 25);\r\n  doc.text(\":\", 141, 25);\r\n  doc.text(row2isi, 145, 25);\r\n  //row 2\r\n  doc.text(row3name, 14, 30);\r\n  doc.text(\":\", 37, 30);\r\n  doc.text(row3isi, 40, 30);\r\n  doc.text(row4name, 120, 30);\r\n  doc.text(\":\", 141, 30);\r\n  doc.text(row4isi, 145, 30);\r\n\r\n  //Stamp\r\n  doc.text(\"User\", 160, finalY + 10);\r\n  doc.text(\":\", 168, finalY + 10);\r\n  doc.text(username, 170, finalY + 10);\r\n  doc.text(\"Cetak\", 160, finalY + 15);\r\n  doc.text(\":\", 168, finalY + 15);\r\n  doc.text(tanggal, 170, finalY + 15);\r\n  doc.text(\"Valid\", 160, finalY + 20);\r\n  doc.text(\":\", 168, finalY + 20);\r\n  doc.text(validby, 170, finalY + 20);\r\n  // doc.autoPrint();\r\n  // doc.save(`${title}_${dateStr}.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  x.document.close();\r\n};\r\n\r\nexport default PrintNota;\r\n"],"sourceRoot":""}