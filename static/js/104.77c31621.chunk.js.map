{"version":3,"sources":["Transaksi/ReturnPenjualan.jsx","../node_modules/redux-form/es/index.js","HeaderCard.jsx","Stocking/Component/PrintNota.jsx"],"names":["ModalMasterData","lazy","FormTransaksiPenjualan","server","process","serverNonMaster","REACT_APP_BACKEND_URL_NON_MASTER","ReturnPenjualan","props","inputChange","input","e","setState","target","value","discount","hasil","parseFloat","localStorage","getItem","discGlobalGr","toFixed","discGlobalPr","GrandTotalNetto","state","listLokasi","listSales","listCustomer","columns","dataField","text","footerClasses","csvExport","formatter","rowContent","row","rowIndex","className","data-tip","data-for","onClick","deleteRow","nettoDiscGlobalExt","id","type","effect","totalNWExt","noBon","namaCustomer","lokasi","sales","namaToko","tanggal","dihapus","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","array","JSON","parse","splice","setItem","stringify","awal","timer","showConfirmButton","position","dispatch","getTotalNW","getListReturnPenjualan","axios","get","res","data","this","getUUID","getBruto","getNetto","getPkg","getRp","getGross","getP","getK","getQty","result_explode","kodeBarang","split","simpan","noFaktur","gross","netto","qty","k","rp","undefined","kadarCetak","toUpperCase","keterangan","kodeKategori","kadarTransaksi","kodeJenis","noBarcode","p","pkg","bruto","nettoDiscGlobal","push","map","list","reduce","a","b","reset","document","getElementById","click","warning","headDiscount","totalNettoExt","totalNettoFaktur","discPr","discGr","totalNettoAkhir","footerItem","totalBruto","sumBruto","totalNetto","sumNetto","totalGross","sumGross","totalRp","sumRp","totalQty","sumQty","totalK","sumK","totalP","sumP","totalpkg","sumPkg","kodeLokasi","kodeSales","kodeSupplier","kodeCustomer","namaSupplier","barangDetails","footerDocument","inputBy","username","console","log","progressSend","tableRows","table","forEach","ticket","i","ticketData","toLocaleString","footer","columTable","post","PrintNota","finishSend","removeItem","toko","catch","err","obj","name","namaLokasi","onKeyDown","key","htmlFor","label","onChange","options","search","placeholder","onSubmit","onSubmitToko","defaultValue","min","step","totalNW","readOnly","showModal","class","aria-hidden","returnPenjualan","keyField","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","noDataIndication","disabled","onSend","transaksiPenjualanSubmit","content","fallback","width","height","count","handleSubmit","Component","reduxForm","form","enableReinitialize","connect","provinsi","customer","salesman","perhitungan","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","change","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors","HeaderCard","style","fontSize","backgroundColor","borderTopLeftRadius","borderTopRightRadius","color","row1name","row1isi","row2name","row2isi","row3name","row3isi","row4name","row4isi","validby","tableColumn","doc","jsPDF","autoTable","startY","finalY","lastAutoTable","setFontSize","string","output","embed","x","window","open","write","close"],"mappings":"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","file":"static/js/104.77c31621.chunk.js","sourcesContent":["import React, { Component, lazy, Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm, reset } from \"redux-form\";\r\nimport axios from \"axios\";\r\n\r\nimport SelectSearch from \"react-select-search\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport Swal from \"sweetalert2\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport {\r\n  finishSend,\r\n  getBruto,\r\n  getGross,\r\n  getK,\r\n  getNetto,\r\n  getP,\r\n  getPkg,\r\n  getQty,\r\n  getRp,\r\n  progressSend,\r\n} from \"../actions/LogicAction\";\r\nimport {\r\n  getListReturnPenjualan,\r\n  getTotalNW,\r\n} from \"../actions/returnPenjualanAction\";\r\nimport { warning } from \"../Alert\";\r\nimport PrintNota from \"../Stocking/Component/PrintNota\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { showModal } from \"../actions/ModalAction\";\r\nimport HeaderCard from \"../HeaderCard\";\r\n\r\nconst ModalMasterData = lazy(() =>\r\n  import(\"../DataMaster/Component/ModalMasterData\")\r\n);\r\nconst FormTransaksiPenjualan = lazy(() =>\r\n  import(\"./Component/FormTranskasiPenjualan\")\r\n);\r\nconst maptostate = (state) => {\r\n  return {\r\n    noFaktur: state.provinsi.noFaktur,\r\n    username: state.provinsi.username,\r\n    returnPenjualan: state.provinsi.returnPenjualan,\r\n    listCustomer: state.provinsi.customer,\r\n    listLokasi: state.provinsi.lokasi,\r\n    listSales: state.provinsi.salesman,\r\n    totalNW: state.provinsi.totalNW,\r\n    sumNetto: state.perhitungan.sumNetto,\r\n    sumBruto: state.perhitungan.sumBruto,\r\n    sumPkg: state.perhitungan.sumPkg,\r\n    sumP: state.perhitungan.sumP,\r\n    sumK: state.perhitungan.sumK,\r\n    sumQty: state.perhitungan.sumNetto,\r\n    sumGross: state.perhitungan.sumGross,\r\n    sumRp: state.perhitungan.sumRp,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nconst serverNonMaster = process.env.REACT_APP_BACKEND_URL_NON_MASTER;\r\nclass ReturnPenjualan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listLokasi: [],\r\n      listSales: [],\r\n      listCustomer: [],\r\n      columns: [\r\n        {\r\n          dataField: \"kodeJenis\",\r\n          text: \"Kode Barang\",\r\n        },\r\n        {\r\n          dataField: \"kadarCetak\",\r\n          text: \"Kadar Cetak(%)\",\r\n        },\r\n        {\r\n          dataField: \"p\",\r\n          text: \"P\",\r\n        },\r\n        {\r\n          dataField: \"k\",\r\n          text: \"K\",\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Bungkus(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Berat(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"kadarTransaksi\",\r\n          text: \"Harga(%)\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Murni(Gr)\",\r\n\r\n          footerClasses: \"sum-netto-terima-supplier\",\r\n        },\r\n        {\r\n          dataField: \"discGlobalPr\",\r\n          text: \"%\",\r\n\r\n          footerClasses: \"sum-netto-terima-supplier\",\r\n        },\r\n        {\r\n          dataField: \"discGlobalGr\",\r\n          text: \"Disc (Gr)\",\r\n\r\n          footerClasses: \"sum-netto-terima-supplier\",\r\n        },\r\n        {\r\n          dataField: \"nettoDiscGlobalExt\",\r\n          text: \"Netto Disc(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row, rowIndex) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  data-tip\r\n                  data-for=\"hapus\"\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() =>\r\n                    this.deleteRow(rowIndex, row.nettoDiscGlobalExt)\r\n                  }\r\n                >\r\n                  <ReactTooltip id=\"hapus\" type=\"dark\" effect=\"solid\">\r\n                    <span>Hapus</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                </button>\r\n                <br />\r\n                {/* <button\r\n                  data-tip\r\n                  data-for=\"edit\"\r\n                  className=\"btn btn-warning mr-2\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#editModal\"\r\n                  onClick={() => this.setEdit(row)}\r\n                >\r\n                  <ReactTooltip id=\"edit\" type=\"dark\" effect=\"solid\">\r\n                    <span>Edit</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-edit mr-1\"></i>\r\n                </button> */}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      discGlobalGr: 0,\r\n      discGlobalPr: 0,\r\n      totalNWExt: 0,\r\n      noBon: \"\",\r\n      namaCustomer: \"\",\r\n      lokasi: \"\",\r\n      sales: \"\",\r\n      namaToko: \"\",\r\n      tanggal: \"\",\r\n    };\r\n  }\r\n  deleteRow(rowIndex, dihapus) {\r\n    Swal.fire({\r\n      title: \"Anda Yakin ?\",\r\n      text: \"Anda Akan Menghapus Data Ini ?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        const array = JSON.parse(localStorage.getItem(\"returnPenjualan\")) || [];\r\n        array.splice(rowIndex, 1);\r\n        localStorage.setItem(\"returnPenjualan\", JSON.stringify(array));\r\n        var awal = localStorage.getItem(\"GrandTotalNetto\");\r\n        var hasil = parseFloat(awal) - parseFloat(dihapus);\r\n        localStorage.setItem(\"GrandTotalNetto\", parseFloat(hasil).toFixed(3));\r\n        Swal.fire({\r\n          text: \"Berhasil\",\r\n          timer: 2000,\r\n          showConfirmButton: false,\r\n          position: \"top-right\",\r\n          icon: \"success\",\r\n        })\r\n          .then(() => this.props.dispatch(getTotalNW()))\r\n          .then(() => this.props.dispatch(getListReturnPenjualan()))\r\n          .then(() =>\r\n            this.setState({\r\n              GrandTotalNetto: (\r\n                parseFloat(localStorage.getItem(\"GrandTotalNetto\") || 0) - 0\r\n              ).toFixed(3),\r\n            })\r\n          );\r\n      }\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    axios.get(server + \"storages2?tipeData=LOKASI\").then((res) =>\r\n      this.setState({\r\n        listLokasi: res.data,\r\n      })\r\n    );\r\n    axios.get(server + \"storages2?tipeData=SALES\").then((res) =>\r\n      this.setState({\r\n        listSales: res.data,\r\n      })\r\n    );\r\n    axios.get(server + \"customers\").then((res) =>\r\n      this.setState({\r\n        listCustomer: res.data,\r\n      })\r\n    );\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getTotalNW());\r\n    this.props.dispatch(getListReturnPenjualan());\r\n    this.props.dispatch(getBruto(\"returnPenjualan\"));\r\n    this.props.dispatch(getNetto(\"returnPenjualan\"));\r\n    this.props.dispatch(getPkg(\"returnPenjualan\"));\r\n    this.props.dispatch(getRp(\"returnPenjualan\"));\r\n    this.props.dispatch(getGross(\"returnPenjualan\"));\r\n    this.props.dispatch(getP(\"returnPenjualan\"));\r\n    this.props.dispatch(getK(\"returnPenjualan\"));\r\n    this.props.dispatch(getQty(\"returnPenjualan\"));\r\n    this.setState({\r\n      GrandTotalNetto: (\r\n        parseFloat(localStorage.getItem(\"GrandTotalNetto\") || 0) - 0\r\n      ).toFixed(3),\r\n    });\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    var barang = data.kodeBarang\r\n      ? data.kodeBarang\r\n      : \"DEFAULT|DEFAULT|DEFAULT|DEFAULT\";\r\n    var result_explode = barang.split(\"|\");\r\n    var simpan = {\r\n      noFaktur: this.props.noFaktur, //\r\n      nettoDiscGlobalExt: data.nettoDiscGlobalExt,\r\n      gross: parseFloat(data.gross), //berat + bungkus\r\n      netto: parseFloat(data.netto), //murni\r\n      qty: 1,\r\n      k: parseFloat(data.k),\r\n      rp: parseFloat(data.rp === undefined ? 0 : data.rp), //ongkos\r\n      kadarCetak: result_explode[2].toUpperCase(),\r\n      keterangan: data.keterangan.toUpperCase(),\r\n      discGlobalPr: data.discGlobalPr,\r\n      kodeKategori: \"-\",\r\n      kadarTransaksi: parseFloat(data.kadarTransaksi), //harga%\r\n      kodeJenis: result_explode[0].toUpperCase(), //kodebarang\r\n      noBarcode: \"-\",\r\n      p: parseFloat(data.p),\r\n      discGlobalGr: data.discGlobalGr,\r\n      pkg: parseFloat(data.pkg),\r\n      bruto: parseFloat(data.bruto), //berat\r\n      nettoDiscGlobal: 0,\r\n    };\r\n    var array = JSON.parse(localStorage.getItem(\"returnPenjualan\")) || [];\r\n    array.push(simpan);\r\n    var GrandTotalNetto = array\r\n      .map((list) => parseFloat(list.nettoDiscGlobalExt))\r\n      .reduce((a, b) => a + b, 0)\r\n      .toFixed(3);\r\n    localStorage.setItem(\"GrandTotalNetto\", GrandTotalNetto);\r\n    localStorage.setItem(\"returnPenjualan\", JSON.stringify(array));\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      text: \"Data Berhasil Ditambahkan!\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n    this.props.dispatch(getListReturnPenjualan());\r\n    this.props.dispatch(getTotalNW());\r\n    this.props.dispatch(reset(\"FormTransaksiPenjualan\"));\r\n    document.getElementById(\"dismissModal\").click();\r\n    this.setState({\r\n      discGlobalGr:\r\n        (parseFloat(0) / 100) *\r\n        parseFloat(localStorage.getItem(\"GrandTotalNetto\")),\r\n      discGlobalPr: 0,\r\n      GrandTotalNetto: (\r\n        parseFloat(localStorage.getItem(\"GrandTotalNetto\")) - 0\r\n      ).toFixed(3),\r\n    });\r\n  }\r\n\r\n  transaksiPenjualanSubmit() {\r\n    if (localStorage.getItem(\"returnPenjualan\") === null) {\r\n      warning(\"Barang masih kosong, Silahkan tambah barang\");\r\n      return false;\r\n    } else if (this.state.noBon === \"\") {\r\n      warning(\"Mohon isi Nomor bon\");\r\n      return false;\r\n    } else if (this.state.lokasi === \"\") {\r\n      warning(\"Mohon pilih lokasi\");\r\n      return false;\r\n    } else if (this.state.sales === \"\") {\r\n      warning(\"Mohon pilih Sales\");\r\n      return false;\r\n    } else if (this.state.namaToko === \"\") {\r\n      warning(\"Mohon pilih toko\");\r\n      return false;\r\n    } else if (this.state.discGlobalPr === \"\") {\r\n      warning(\"Mohon isi Discount\");\r\n      return false;\r\n    } else if (this.state.discGlobalGr === \"\") {\r\n      warning(\"Mohon isi Discount Gr\");\r\n      return false;\r\n    } else if (this.state.totalNWExt === 0) {\r\n      warning(\"Mohon isi Grand Total\");\r\n      return false;\r\n    } else if (this.state.tanggal === \"\") {\r\n      warning(\"Mohon isi Tanggal\");\r\n      return false;\r\n    }\r\n    var headDiscount = {\r\n      totalNettoExt: this.state.totalNWExt, // grand total NW ext\r\n      totalNettoFaktur: this.props.gross, // total NW\r\n      discPr: this.state.discGlobalPr, //dic global\r\n      discGr: this.state.discGlobalGr, //gramasi dic global ( disc global x bruto )\r\n      totalNettoAkhir:\r\n        parseFloat(this.props.gross) - parseFloat(this.state.discGlobalGr), // grand total NW\r\n    };\r\n    var footerItem = {\r\n      totalBruto: this.props.sumBruto,\r\n      totalNetto: this.props.sumNetto,\r\n      totalNettoExt: 0, // penjualan tidakada\r\n      totalGross: this.props.sumGross,\r\n      totalRp: this.props.sumRp,\r\n      totalQty: this.props.sumQty,\r\n      totalK: this.props.sumK,\r\n      totalP: this.props.sumP,\r\n      totalpkg: this.props.sumPkg,\r\n    };\r\n    var simpan = {\r\n      noBon: this.state.noBon.toUpperCase(),\r\n      noFaktur: this.props.noFaktur.toUpperCase(),\r\n      tanggal: this.state.tanggal,\r\n      kodeLokasi: this.state.lokasi,\r\n      kodeSales: this.state.sales,\r\n      namaToko: this.state.kodeSupplier,\r\n      kodeCustomer: this.state.namaSupplier,\r\n      barangDetails: JSON.parse(localStorage.getItem(\"returnPenjualan\")),\r\n      headDiscount: headDiscount,\r\n      footerItem: footerItem,\r\n      footerDocument: {\r\n        inputBy: this.props.username, //INPUT BY DEFAULT\r\n      },\r\n    };\r\n    console.log(JSON.stringify(simpan));\r\n    this.props.dispatch(progressSend());\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    var table = JSON.parse(localStorage.getItem(\"returnPenjualan\"));\r\n    // for each ticket pass all its data into an array\r\n    table.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        i++,\r\n        ticket.kadarCetak,\r\n        ticket.kodeJenis,\r\n        ticket.keterangan,\r\n        parseFloat(ticket.bruto).toFixed(3),\r\n        ticket.kadarTransaksi,\r\n        ticket.discGlobalGr,\r\n        parseFloat(ticket.netto).toFixed(3),\r\n        ticket.pkg,\r\n        ticket.qty,\r\n        \"Rp. \" + parseFloat(ticket.rp).toLocaleString(\"id-ID\"),\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    const footer = [\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      table\r\n        .map((list) => parseFloat(list.bruto))\r\n        .reduce((a, b) => a + b, 0)\r\n        .toFixed(3),\r\n      \"\",\r\n      table\r\n        .map((list) => parseFloat(list.discGlobalGr))\r\n        .reduce((a, b) => a + b, 0)\r\n        .toFixed(3),\r\n      table\r\n        .map((list) => parseFloat(list.netto))\r\n        .reduce((a, b) => a + b, 0)\r\n        .toFixed(3),\r\n      table.map((list) => parseFloat(list.pkg)).reduce((a, b) => a + b, 0),\r\n      table.map((list) => parseFloat(list.qty)).reduce((a, b) => a + b, 0),\r\n      \"Rp. \" +\r\n        table\r\n          .map((list) => parseFloat(list.rp))\r\n          .reduce((a, b) => a + b, 0)\r\n          .toLocaleString(\"id-ID\"),\r\n    ];\r\n    tableRows.push(footer);\r\n    console.log(JSON.stringify(tableRows));\r\n    var columTable = [\r\n      \"No\",\r\n      \"Kadar\",\r\n      \"Kode\",\r\n      \"Keterangan\",\r\n      \"Bruto (Gr)\",\r\n      \"Harga(%)\",\r\n      \"Diskon\",\r\n      \"Netto(Gr)\",\r\n      \"Pkg\",\r\n      \"Qty\",\r\n      \"Ongkos(Rp)\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    axios\r\n      .post(serverNonMaster + \"cst/dc/rtr\", simpan)\r\n      .then(() =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Data Berhasil Ditambahkan!\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() =>\r\n            PrintNota(\r\n              \"no Return\",\r\n              this.props.noFaktur.toUpperCase(),\r\n              \"Tanggal\",\r\n              this.state.tanggal,\r\n              \"No Bon\",\r\n              this.state.noBon.toUpperCase(),\r\n              \"Sales\",\r\n              this.state.sales.toUpperCase(),\r\n              \"ADMIN\",\r\n              this.state.tanggal,\r\n              \"\",\r\n              columTable,\r\n              \"Return Penjualan\",\r\n              tableRows\r\n            )\r\n          )\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => localStorage.removeItem(\"returnPenjualan\"))\r\n          .then(() => localStorage.removeItem(\"GrandTotalNetto\"))\r\n          .then(() => localStorage.removeItem(\"noFaktur\"))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() => this.props.dispatch(getTotalNW()))\r\n          .then(() => this.props.dispatch(getListReturnPenjualan()))\r\n          .then(() => document.getElementById(\"myForm\").reset())\r\n          .then(() =>\r\n            this.setState({\r\n              discGlobalGr: 0,\r\n              discGlobalPr: 0,\r\n              totalNWExt: 0,\r\n              noBon: \"\",\r\n              namaCustomer: \"\",\r\n              lokasi: \"\",\r\n              sales: \"\",\r\n              namaToko: \"\",\r\n              tanggal: \"\",\r\n              GrandTotalNetto: 0,\r\n              toko: \"\",\r\n            })\r\n          )\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text: \"Data Gagal Ditambahkan!\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        }).then(() => this.props.dispatch(finishSend()))\r\n      );\r\n    console.log(simpan);\r\n  }\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n  discount = (input) => (e) => {\r\n    var hasil =\r\n      (parseFloat(e.target.value) / 100) *\r\n      parseFloat(localStorage.getItem(\"GrandTotalNetto\"));\r\n    this.setState({\r\n      discGlobalGr: hasil.toFixed(3),\r\n      discGlobalPr: e.target.value,\r\n      GrandTotalNetto: (\r\n        parseFloat(localStorage.getItem(\"GrandTotalNetto\")) - hasil.toFixed(3)\r\n      ).toFixed(3),\r\n    });\r\n  };\r\n  onSubmit(data, input) {\r\n    this.setState({\r\n      [input]: data,\r\n    });\r\n  }\r\n  onSubmitToko(data, input) {\r\n    var split = data.split(\"|\");\r\n    this.setState({\r\n      kodeCustomer: split[0],\r\n      namaCustomer: split[1],\r\n      namaToko: split[2],\r\n      toko: data,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    var namaToko = this.state.listCustomer.map((obj) => {\r\n      var payload = {\r\n        value: obj.kodeCustomer + \"|\" + obj.namaCustomer,\r\n        name: obj.namaToko,\r\n      };\r\n      return payload;\r\n    });\r\n    var sales = this.state.listSales.map((obj) => {\r\n      var payload = {\r\n        value: obj.kodeLokasi,\r\n        name: obj.namaLokasi,\r\n      };\r\n      return payload;\r\n    });\r\n    var lokasi = this.state.listLokasi.map((obj) => {\r\n      var payload = {\r\n        value: obj.kodeLokasi,\r\n        name: obj.namaLokasi,\r\n      };\r\n      return payload;\r\n    });\r\n    console.log(namaToko);\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"card\">\r\n            <HeaderCard title=\"Return Penjualan\" />\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                  <form\r\n                    id=\"myForm\"\r\n                    onKeyDown={(e) => {\r\n                      return e.key !== \"Enter\";\r\n                    }}\r\n                  >\r\n                    <div className=\"row\">\r\n                      <div className=\"col-lg-4 col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"\">Tanggal</label>\r\n                          <input\r\n                            name=\"tanggal\"\r\n                            type=\"date\"\r\n                            label=\"Tanggal\"\r\n                            className=\"form-control\"\r\n                            onChange={this.inputChange(\"tanggal\")}\r\n                            value={this.state.tanggal}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-4 col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"\">No Bon</label>\r\n                          <input\r\n                            name=\"noBon\"\r\n                            type=\"text\"\r\n                            label=\"No Bon\"\r\n                            className=\"form-control\"\r\n                            onChange={this.inputChange(\"noBon\")}\r\n                            value={this.state.noBon}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-4 col-md-4\"></div>\r\n                      <div className=\"col-lg-3 col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"\">Lokasi</label>\r\n                          <SelectSearch\r\n                            options={lokasi}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                            onChange={(data) => this.onSubmit(data, \"lokasi\")}\r\n                            value={this.state.lokasi}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-3 col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"\">Sales</label>\r\n                          <SelectSearch\r\n                            options={sales}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                            onChange={(data) => this.onSubmit(data, \"sales\")}\r\n                            value={this.state.sales}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-3 col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"\">Nama Toko</label>\r\n                          <SelectSearch\r\n                            options={namaToko}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                            onChange={(data) =>\r\n                              this.onSubmitToko(data, \"namaToko\")\r\n                            }\r\n                            value={this.state.toko}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-3 col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"\">Customer</label>\r\n                          <input\r\n                            name=\"customer\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            label=\"Customer\"\r\n                            onChange={this.inputChange(\"customer\")}\r\n                            defaultValue={this.state.namaCustomer}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-3 mb-3\">\r\n                        <label htmlFor=\"\">Total NW</label>\r\n                        <input\r\n                          name=\"totalNW\"\r\n                          type=\"number\"\r\n                          className=\"form-control\"\r\n                          min={0}\r\n                          step={0.01}\r\n                          label=\"totalNW\"\r\n                          value={this.props.totalNW}\r\n                          readOnly={true}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-lg-3\">\r\n                        <label htmlFor=\"\">Disc Global (%)</label>\r\n                        <input\r\n                          name=\"discGlobal\"\r\n                          type=\"number\"\r\n                          className=\"form-control\"\r\n                          min={0}\r\n                          step={0.01}\r\n                          label=\"discGlobal\"\r\n                          onChange={this.discount(\"discGlobal\")}\r\n                          value={this.state.discGlobalPr}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-lg-3\">\r\n                        <label htmlFor=\"\">Disc (Gr)</label>\r\n                        <input\r\n                          name=\"discGlobal\"\r\n                          type=\"number\"\r\n                          className=\"form-control\"\r\n                          label=\"discGlobal\"\r\n                          value={this.state.discGlobalGr}\r\n                          readOnly={true}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-lg-3\">\r\n                        <label htmlFor=\"\">Grand Total Netto</label>\r\n                        <input\r\n                          name=\"totalNW\"\r\n                          type=\"number\"\r\n                          className=\"form-control\"\r\n                          label=\"totalNW\"\r\n                          value={this.state.GrandTotalNetto}\r\n                          readOnly={true}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-lg-3\">\r\n                        <label htmlFor=\"\">Grand Total Netto Ext</label>\r\n                        <input\r\n                          name=\"totalNWExt\"\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          label=\"totalNWExt\"\r\n                          onChange={this.inputChange(\"totalNWExt\")}\r\n                          value={this.state.totalNWExt}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n                <div className=\"col-lg-12 col-md-12 mt-3\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-6\"></div>\r\n                    <div className=\"col-lg-6\">\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          onClick={() => this.props.dispatch(showModal())}\r\n                        >\r\n                          Tambah Barang\r\n                          <i class=\"fa fa-plus ml-3\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-12 mt-5\">\r\n                  {this.props.returnPenjualan ? (\r\n                    <ToolkitProvider\r\n                      keyField=\"id\"\r\n                      data={this.props.returnPenjualan}\r\n                      columns={this.state.columns}\r\n                      search\r\n                    >\r\n                      {(props) => (\r\n                        <div className=\"form-group\">\r\n                          <BootstrapTable\r\n                            {...props.baseProps}\r\n                            striped\r\n                            hover\r\n                            condensed\r\n                            bordered={true}\r\n                            headerClasses=\"header-table\"\r\n                            pagination={paginationFactory()}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </ToolkitProvider>\r\n                  ) : (\r\n                    <ToolkitProvider\r\n                      keyField=\"id\"\r\n                      data={[]}\r\n                      columns={this.state.columns}\r\n                      search\r\n                    >\r\n                      {(props) => (\r\n                        <div className=\"form-group\">\r\n                          <BootstrapTable\r\n                            {...props.baseProps}\r\n                            striped\r\n                            hover\r\n                            condensed\r\n                            bordered={true}\r\n                            headerClasses=\"header-table\"\r\n                            pagination={paginationFactory()}\r\n                            noDataIndication=\"Tidak Ada Data\"\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </ToolkitProvider>\r\n                  )}\r\n                  <div className=\"text-right\">\r\n                    <button\r\n                      className=\"btn btn-primary\"\r\n                      disabled={this.props.onSend}\r\n                      onClick={() => this.transaksiPenjualanSubmit()}\r\n                    >\r\n                      {this.props.onSend ? (\r\n                        <span\r\n                          className=\"spinner-border spinner-border-sm mr-3\"\r\n                          aria-hidden=\"true\"\r\n                        ></span>\r\n                      ) : null}\r\n                      Simpan\r\n                      <i class=\"fa fa-paper-plane ml-3\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ModalMasterData\r\n          content={\r\n            <Suspense\r\n              fallback={<Skeleton width={\"100%\"} height={50} count={5} />}\r\n            >\r\n              <FormTransaksiPenjualan\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n              />\r\n            </Suspense>\r\n          }\r\n          title=\"Tambah Barang\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReturnPenjualan = reduxForm({\r\n  form: \"ReturnPenjualan\",\r\n  enableReinitialize: true,\r\n})(ReturnPenjualan);\r\nexport default connect(maptostate, null)(ReturnPenjualan);\r\n","import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;","import React, { Component } from \"react\";\r\n\r\nclass HeaderCard extends Component {\r\n  render() {\r\n    return (\r\n      <h4\r\n        className=\"card-header mb-3\"\r\n        style={{\r\n          fontSize: 25,\r\n          backgroundColor: \"#394867\",\r\n          borderTopLeftRadius: 10,\r\n          borderTopRightRadius: 10,\r\n          height: 50,\r\n          color: \"#ffffff\",\r\n        }}\r\n      >\r\n        {this.props.title}\r\n      </h4>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderCard;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst PrintNota = (\r\n  row1name = \"\",\r\n  row1isi = \"\",\r\n  row2name = \"\",\r\n  row2isi = \"\",\r\n  row3name = \"\",\r\n  row3isi = \"\",\r\n  row4name = \"\",\r\n  row4isi = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n  validby = \"\",\r\n  tableColumn = [],\r\n  title = \"\",\r\n  tableRows\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  // var tickets = JSON.parse(data);\r\n  // define the columns we want and their titles\r\n\r\n  // // define an empty array of rows\r\n  // const tableRows = [];\r\n\r\n  // // for each ticket pass all its data into an array\r\n  // tickets.forEach((ticket, i) => {\r\n  //   const ticketData = [\r\n  //     i++,\r\n  //     ticket.kodeJenis01,\r\n  //     ticket.bruto01,\r\n  //     ticket.kadarTransaksi01,\r\n  //     ticket.netto01,\r\n  //     ticket.kodeJenis02,\r\n  //     ticket.bruto02,\r\n  //     ticket.kadarTransaksi02,\r\n  //     ticket.netto02,\r\n  //   ];\r\n  //   // push each tickcet's info into a row\r\n  //   tableRows.push(ticketData);\r\n  // });\r\n\r\n  // startY is basically margin-top\r\n  doc.autoTable(tableColumn, tableRows, { startY: 40 });\r\n  let finalY = doc.lastAutoTable.finalY + 10;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(title, 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(row1name, 14, 25);\r\n  doc.text(\":\", 37, 25);\r\n  doc.text(row1isi, 40, 25);\r\n  doc.text(row2name, 120, 25);\r\n  doc.text(\":\", 141, 25);\r\n  doc.text(row2isi, 145, 25);\r\n  //row 2\r\n  doc.text(row3name, 14, 30);\r\n  doc.text(\":\", 37, 30);\r\n  doc.text(row3isi, 40, 30);\r\n  doc.text(row4name, 120, 30);\r\n  doc.text(\":\", 141, 30);\r\n  doc.text(row4isi, 145, 30);\r\n\r\n  //Stamp\r\n  doc.text(\"User\", 160, finalY + 10);\r\n  doc.text(\":\", 168, finalY + 10);\r\n  doc.text(username, 170, finalY + 10);\r\n  doc.text(\"Cetak\", 160, finalY + 15);\r\n  doc.text(\":\", 168, finalY + 15);\r\n  doc.text(tanggal, 170, finalY + 15);\r\n  doc.text(\"Valid\", 160, finalY + 20);\r\n  doc.text(\":\", 168, finalY + 20);\r\n  doc.text(validby, 170, finalY + 20);\r\n  // doc.autoPrint();\r\n  // doc.save(`${title}_${dateStr}.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  x.document.close();\r\n};\r\n\r\nexport default PrintNota;\r\n"],"sourceRoot":""}