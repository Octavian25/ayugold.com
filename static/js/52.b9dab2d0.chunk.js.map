{"version":3,"sources":["Validations/validationKelompok.js","DataMaster/Component/FormKelompok.jsx","DataMaster/Kelompok.jsx","../node_modules/redux-form/es/index.js","DataMaster/Component/ModalMasterData.jsx","TourGuide.jsx"],"names":["validationKelompok","value","errors","kodeKelompok","keterangan","FormKelompok","props","state","response","kategori","onSubmit","this","handleSubmit","className","Field","name","type","normalize","toUpperCase","component","renderField","label","disabled","onSend","aria-hidden","Component","reduxForm","form","validate","enableReinitialize","connect","SearchBar","Search","ExportCSVButton","CSVExport","Kelompok","columns","dataField","text","csvExport","formatter","rowContent","row","data-tut","onClick","dispatch","kode","kode_group","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","AxiosMasterDelete","res","berhasil","getListKelompok","catch","err","gagal","headerStyle","width","hasil","data","nama_group","progressSend","AxiosMasterPost","finishSend","hideModal","reset","handleReactive","includes","reactive","style","color","id","alert","role","data-dismiss","aria-label","to","TourGuide","tourConfig","HeaderCard","ModalMasterData","content","action","showModal","listKelompok","keyField","search","searchProps","placeholder","margin","top","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","csvProps","height","provinsi","error","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","change","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors","ModalGlobal","show","onHide","dialogClassName","backdrop","keyboard","Header","closeButton","backgroundColor","Title","Body","modal","disableBody","target","disableBodyScroll","enableBody","enableBodyScroll","map","list","index","selector","console","log","onRequestClose","hideGuide","steps","isOpen","showTourGuide","maskClassName","rounded","accentColor","onAfterOpen","onBeforeClose"],"mappings":"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","file":"static/js/52.b9dab2d0.chunk.js","sourcesContent":["const validationKelompok = (value) => {\r\n    const errors = {}\r\n    if (!value.kodeKelompok) {\r\n        errors.kodeKelompok = \"Tidak Boleh kosong\"\r\n    }\r\n    if (!value.keterangan) {\r\n        errors.keterangan = \"Tidak Boleh kosong\"\r\n    }\r\n    return errors\r\n}\r\n\r\nexport default validationKelompok;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport validationKelompok from \"../../Validations/validationKelompok\";\r\nimport { renderField } from \"../../renderField\";\r\n\r\nclass FormKelompok extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      response: \"\",\r\n      kategori: \"\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <Field\r\n              name=\"kodeKelompok\"\r\n              type=\"text\"\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              component={renderField}\r\n              label=\"Kode Kelompok\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <Field\r\n              name=\"keterangan\"\r\n              type=\"text\"\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              component={renderField}\r\n              label=\"Keterangan\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 col-lg-12\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-info\"\r\n                disabled={this.props.onSend}\r\n              >\r\n                {this.props.onSend ? (\r\n                  <span\r\n                    className=\"spinner-border spinner-border-sm mr-3\"\r\n                    aria-hidden=\"true\"\r\n                  ></span>\r\n                ) : null}\r\n                Submit\r\n                <i className=\"fa fa-paper-plane ml-3\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormKelompok = reduxForm({\r\n  form: \"KelompokTambah\",\r\n  validate: validationKelompok,\r\n  enableReinitialize: true,\r\n})(FormKelompok);\r\nexport default connect()(FormKelompok);\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport,\r\n} from \"react-bootstrap-table2-toolkit\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getListKelompok } from \"../actions/kelompokAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FormKelompok from \"./Component/FormKelompok\";\r\nimport { reset } from \"redux-form\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { AxiosMasterDelete, AxiosMasterPost } from \"../Axios\";\r\nimport { berhasil, gagal, reactive } from \"../Alert\";\r\nimport { hideModal, showModal } from \"../actions/ModalAction\";\r\nimport ModalMasterData from \"./Component/ModalMasterData\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport TourGuide from \"../TourGuide\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\n\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\nfunction hapus(dispatch, kode) {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      AxiosMasterDelete(\"group/delete/by-kode-group/\" + kode)\r\n        .then((res) =>\r\n          berhasil(\"Data Berhasil Dihapus!\").then(() =>\r\n            dispatch(getListKelompok())\r\n          )\r\n        )\r\n        .catch((err) => gagal(\"Data Gagal Dihapus!\"));\r\n    }\r\n  });\r\n}\r\nconst maptoState = (state) => {\r\n  return {\r\n    listKelompok: state.provinsi.Kelompok,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\n\r\nclass Kelompok extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Kelompok: [],\r\n      response: \"\",\r\n      columns: [\r\n        {\r\n          dataField: \"kode_group\",\r\n          text: \"Kode Kelompok\",\r\n        },\r\n        {\r\n          dataField: \"nama_group\",\r\n          text: \"Nama Group\",\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-danger mr-2\"\r\n                  data-tut=\"reactour_3\"\r\n                  onClick={() => hapus(this.props.dispatch, row.kode_group)}\r\n                >\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                  HAPUS\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n          headerStyle: () => {\r\n            return { width: \"20%\" };\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListKelompok());\r\n  }\r\n\r\n  handleSubmit(hasil) {\r\n    let data = {\r\n      kode_group: hasil.kodeKelompok,\r\n      nama_group: hasil.keterangan,\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    AxiosMasterPost(\"group/add\", data)\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) =>\r\n        berhasil(\"Data Berhasil Ditambah!\")\r\n          .then(() => this.props.dispatch(getListKelompok()))\r\n          .then(() => this.props.dispatch(reset(\"KelompokTambah\")))\r\n      )\r\n      .catch((err) =>\r\n        this.handleReactive(\r\n          err,\r\n          hasil.kodeKelompok,\r\n          {\r\n            nama_group: hasil.keterangan,\r\n          },\r\n          this.props.dispatch(hideModal()),\r\n          this.props.dispatch(finishSend())\r\n        )\r\n      );\r\n  }\r\n  handleReactive(err, kode, data) {\r\n    this.props.dispatch(hideModal());\r\n    let error = err.response.data;\r\n    let check = error.includes(\"DELETED\");\r\n    check\r\n      ? reactive(\r\n          err,\r\n          kode,\r\n          \"group/reactive/by-kode-group/\",\r\n          data,\r\n          \"group/edit/by-kode-group/\"\r\n        ).then(() => this.props.dispatch(getListKelompok()))\r\n      : gagal(\"Data Gagal Ditambahkan\");\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div id=\"notif_alert\" className={this.props.alert} role=\"alert\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n          <strong>Error - </strong> Tidak Bisa Mengambil Data\r\n        </div>\r\n        <ol className=\"breadcrumb mb-2\">\r\n          <Link to=\"/KlasifikasiBarang\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-tut=\"reactour_4\"\r\n            >\r\n              <i className=\"fa fa-angle-left mr-3\" aria-hidden=\"true\"></i> Back\r\n            </button>\r\n          </Link>\r\n        </ol>\r\n        <TourGuide\r\n          tourConfig={[\r\n            `Untuk Menambahkan Data Kelompok, Tekan Tombol ini Dan Isi kolom yang disediakan`,\r\n            `Ini adalah Data Kelompok yang sudah tersimpan`,\r\n            `Ini adalah tombol untuk menghapus data pada baris yang dipilih`,\r\n            `Ini adalah tombol navigasi untuk kembali`,\r\n          ]}\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Data Kelompok\" />\r\n              <div className=\"card-body\">\r\n                <ModalMasterData\r\n                  content={\r\n                    <FormKelompok\r\n                      onSubmit={(data) => this.handleSubmit(data)}\r\n                      onSend={this.props.onSend}\r\n                    />\r\n                  }\r\n                  title=\"Tambah Data Kelompok\"\r\n                />\r\n                <form action=\"#\">\r\n                  <div className=\"form-body\">\r\n                    <div className=\"col-lg-12 col-md-12\">\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          name=\"simpan\"\r\n                          id=\"simpan\"\r\n                          data-tut=\"reactour_1\"\r\n                          type=\"button\"\r\n                          className=\"btn btn-info\"\r\n                          onClick={() => this.props.dispatch(showModal())}\r\n                        >\r\n                          Tambah Data Kelompok\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <div data-tut=\"reactour_2\">\r\n                  {this.props.listKelompok ? (\r\n                    <ToolkitProvider\r\n                      keyField=\"kode_kelompok\"\r\n                      data={this.props.listKelompok}\r\n                      columns={this.state.columns}\r\n                      search\r\n                    >\r\n                      {(props) => (\r\n                        <div className=\"form-group\">\r\n                          <div className=\"text-right mt-5 mb-3\">\r\n                            <SearchBar\r\n                              {...props.searchProps}\r\n                              className=\"form-control\"\r\n                              placeholder=\"Tuliskan Kode / Nama\"\r\n                              style={{ margin: 0, top: \"50%\" }}\r\n                            />\r\n                          </div>\r\n                          <BootstrapTable\r\n                            {...props.baseProps}\r\n                            striped\r\n                            hover\r\n                            condensed\r\n                            bordered={true}\r\n                            headerClasses=\"header-table\"\r\n                            pagination={paginationFactory()}\r\n                          />\r\n                          <ExportCSVButton\r\n                            {...props.csvProps}\r\n                            className=\"btn btn-primary\"\r\n                          >\r\n                            Export CSV\r\n                          </ExportCSVButton>\r\n                        </div>\r\n                      )}\r\n                    </ToolkitProvider>\r\n                  ) : (\r\n                    <Skeleton width={\"100%\"} height={180} />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoState, null)(Kelompok);\r\n","import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;","import { Modal } from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { hideModal } from \"../../actions/ModalAction\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    show: state.modal.show,\r\n  };\r\n};\r\nclass ModalGlobal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <Modal\r\n        show={this.props.show}\r\n        onHide={() => this.props.dispatch(hideModal())}\r\n        dialogClassName=\"modal-xl\"\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header\r\n          closeButton\r\n          style={{ backgroundColor: \"#5F76E8\", color: \"#ffffff\" }}\r\n        >\r\n          <Modal.Title>{this.props.title || \"\"}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{this.props.content || \"\"}</Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoState, null)(ModalGlobal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { hideGuide } from \"./actions/ModalAction\";\r\nimport Tour from \"reactour\";\r\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\r\n\r\nconst mapToState = (state) => {\r\n  return {\r\n    showTourGuide: state.provinsi.showTourGuide,\r\n  };\r\n};\r\nclass TourGuide extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  disableBody = (target) => disableBodyScroll(target);\r\n  enableBody = (target) => enableBodyScroll(target);\r\n  render() {\r\n    let tourConfig = this.props.tourConfig.map((list, index) => {\r\n      let data = {\r\n        selector: '[data-tut=\"reactour_' + ++index + '\"]',\r\n        content: list,\r\n      };\r\n      return data;\r\n    });\r\n    console.log(tourConfig);\r\n    return (\r\n      <Tour\r\n        onRequestClose={() => this.props.dispatch(hideGuide())}\r\n        steps={tourConfig}\r\n        isOpen={this.props.showTourGuide}\r\n        maskClassName=\"mask\"\r\n        className=\"helper\"\r\n        rounded={5}\r\n        accentColor=\"#5cb7b7\"\r\n        onAfterOpen={this.disableBody}\r\n        onBeforeClose={this.enableBody}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapToState, null)(TourGuide);\r\n"],"sourceRoot":""}