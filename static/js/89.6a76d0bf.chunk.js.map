{"version":3,"sources":["Validations/validasiHeadMutasiBarang.js","Stocking/Component/HeadMutasiBarang.jsx","Stocking/MutasiBarang.jsx","deleteLocalStorage.js","../node_modules/redux-form/es/index.js"],"names":["validasiHeadMutasiBarang","value","errors","tanggal","noMutasi","bonMutasi","kategori","lokasi","HeadMutasiBarang","props","state","listKategori","nama","this","dispatch","getLokasi","change","getToday","localStorage","getItem","onSubmit","handleSubmit","className","Field","component","renderField","normalize","toUpperCase","label","type","name","readOnly","id","renderFieldSelect","options","map","list","onKeyPress","e","key","preventDefault","kode_lokasi","nama_lokasi","disabled","onSend","onClick","aria-hidden","Component","reduxForm","form","enableReinitialize","validate","connect","provinsi","FormMutasiBarang","lazy","ModalMasterData","expandRow","renderer","row","kode_jenis2","kadar_beli2","kadar_cetak2","pkg2","bruto2","netto2","MutasiBarang","onChange","input","setState","target","kodeJenis","kodeJenisTujuan","kodeLokasi","keterangan","noBon","columns","dataField","isDummyField","text","formatter","csvExport","rowContent","rowIndex","data-tip","data-for","deleteIndex","getListMutasiBarang","effect","getUUID","getBruto","getNetto","getPkg","getQty","getGross","data","result_explode","kodeBarang","split","result","kodeBarangTujuan","barang1","JSON","parse","simpan","bruto","parseFloat","toFixed","brutoTujuan","kadar_cetak","kadar","kadarTujuan","kadar_beli","kadar_beliTujuan","kadar_jual","kadar_jual2","kadar_jualTujuan","netto","nettoTujuan","pkg","pkgTujuan","qty","qty2","gross","gross2","kode_jenis","kode_kategori","kode_kategori2","kategoriTujuan","push","setItem","stringify","Swal","fire","position","icon","showConfirmButton","timer","then","reset","warning","total","reduce","a","b","total_bruto","total_netto","total_netto2","no_mutasi","noFaktur","no_bon","tgl_mutasi","lokasi_asal","lokasi_tujuan","total_gross","total_pkg","deskripsi","detail_barang","console","log","progressSend","tableRows","forEach","ticket","i","ticketData","columTable","AxiosMasterPost","finishSend","removeItem","PrintNota","forceUpdate","catch","err","style","color","HeaderCard","title","submitMutasiBarang","data-toggle","showModal","listBarang","keyField","bordered","headerClasses","noDataIndication","content","fallback","width","height","count","mutasiBarang","username","sumBruto","perhitungan","sumNetto","sumPkg","sumQty","sumGross","deleteLocalStorage","keyRemove","index","func","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","array","splice","deleteIndexUpdatetotalNW","Promise","resolve","reject","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors"],"mappings":"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","file":"static/js/89.6a76d0bf.chunk.js","sourcesContent":["const validasiHeadMutasiBarang = (value) => {\r\n  const errors = {};\r\n  if (!value.tanggal) {\r\n    errors.tanggal = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.noMutasi) {\r\n    errors.noMutasi = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.bonMutasi) {\r\n    errors.bonMutasi = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.kategori) {\r\n    errors.kategori = \"Tidak Boleh kosong\";\r\n  }\r\n\r\n  if (!value.lokasi) {\r\n    errors.lokasi = \"Tidak Boleh kosong\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default validasiHeadMutasiBarang;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { getLokasi } from \"../../actions/lokasiAction\";\r\nimport { getToday, SkeletonLoading } from \"../../getDate\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport validasiHeadMutasiBarang from \"../../Validations/validasiHeadMutasiBarang\";\r\n\r\nclass HeadMutasiBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lokasi: false,\r\n      listKategori: [\r\n        {\r\n          nama: \"AMBIL BARANG\",\r\n        },\r\n        {\r\n          nama: \"KEMBALI STOK\",\r\n        },\r\n        {\r\n          nama: \"KOREKSI STOK\",\r\n        },\r\n        {\r\n          nama: \"MUTASI BAHAN\",\r\n        },\r\n        {\r\n          nama: \"PENGAMBILAN SALES\",\r\n        },\r\n        {\r\n          nama: \"PINDAH\",\r\n        },\r\n        {\r\n          nama: \"PINDAH GUDANG REPARASI\",\r\n        },\r\n        {\r\n          nama: \"RETURN SALES\",\r\n        },\r\n        {\r\n          nama: \"SALAH INPUT\",\r\n        },\r\n        {\r\n          nama: \"SALAH PINDAH\",\r\n        },\r\n        {\r\n          nama: \"STOK AWAL\",\r\n        },\r\n        {\r\n          nama: \"TAMBAH BARANG\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getLokasi());\r\n    this.props.change(\"tanggal\", getToday);\r\n    this.props.change(\"noMutasi\", localStorage.getItem(\"noFaktur\"));\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              label=\"Nomor Mutasi\"\r\n              type=\"text\"\r\n              name=\"noMutasi\"\r\n              className=\"form-control\"\r\n              readOnly\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              type=\"date\"\r\n              label=\"Tanggal\"\r\n              id=\"tanggal\"\r\n              name=\"tanggal\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              label=\"Bon Mutasi\"\r\n              type=\"text\"\r\n              id=\"bonMutasi\"\r\n              name=\"bonMutasi\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              id=\"kategori\"\r\n              label=\"Kategori\"\r\n              name=\"kategori\"\r\n              component={renderFieldSelect}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              options={this.state.listKategori.map((list) => {\r\n                let data = {\r\n                  value: list.nama,\r\n                  name: list.nama,\r\n                };\r\n                return data;\r\n              })}\r\n            ></Field>\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              label=\"Keterangan\"\r\n              type=\"text\"\r\n              id=\"keterangan\"\r\n              name=\"keterangan\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            {this.props.lokasi ? (\r\n              <Field\r\n                label=\"Lokasi\"\r\n                component={renderFieldSelect}\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                type=\"text\"\r\n                id=\"lokasi\"\r\n                name=\"lokasi\"\r\n                onKeyPress={(e) => {\r\n                  e.key === \"Enter\" && e.preventDefault();\r\n                }}\r\n                options={this.props.lokasi.map((list) => {\r\n                  let data = {\r\n                    value: list.kode_lokasi,\r\n                    name: list.nama_lokasi,\r\n                  };\r\n                  return data;\r\n                })}\r\n              ></Field>\r\n            ) : (\r\n              <SkeletonLoading label=\"Lokasi\" />\r\n            )}\r\n          </div>\r\n          <div className=\"col-lg-3\"></div>\r\n          {/* <div className=\"col-md-3 form-group\">\r\n            {this.props.lokasi ? (\r\n              <Field\r\n                label=\"Lokasi\"\r\n                component={renderFieldSelect}\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                type=\"text\"\r\n                id=\"lokasi\"\r\n                name=\"lokasi_tujuan\"\r\n                onKeyPress={(e) => {\r\n                  e.key === \"Enter\" && e.preventDefault();\r\n                }}\r\n                options={this.props.lokasi.map((list) => {\r\n                  let data = {\r\n                    value: list.kode_lokasi,\r\n                    name: list.nama_lokasi,\r\n                  };\r\n                  return data;\r\n                })}\r\n              ></Field>\r\n            ) : (\r\n              <SkeletonLoading label=\"Lokasi\" />\r\n            )}\r\n          </div> */}\r\n          <div className=\"col-lg-4 col-md-3 mb-3\">\r\n            <div className=\"text-left\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                disabled={this.props.onSend}\r\n                type=\"button\"\r\n                onClick={this.props.handleSubmit}\r\n              >\r\n                {this.props.onSend ? (\r\n                  <span\r\n                    className=\"spinner-border spinner-border-sm mr-3\"\r\n                    aria-hidden=\"true\"\r\n                  ></span>\r\n                ) : null}\r\n                SIMPAN\r\n                <i className=\"fa fa-paper-plane ml-3\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadMutasiBarang = reduxForm({\r\n  form: \"HeadMutasiBarang\",\r\n  enableReinitialize: true,\r\n  validate: validasiHeadMutasiBarang,\r\n})(HeadMutasiBarang);\r\nexport default connect((state) => {\r\n  return {\r\n    lokasi: state.provinsi.lokasi,\r\n  };\r\n})(HeadMutasiBarang);\r\n","import React, { Component, lazy, Suspense } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\n\r\nimport { getListMutasiBarang } from \"../actions/mutasiBarangAction\";\r\nimport Swal from \"sweetalert2\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset } from \"redux-form\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport {\r\n  finishSend,\r\n  getBruto,\r\n  getGross,\r\n  getNetto,\r\n  getPkg,\r\n  getQty,\r\n  progressSend,\r\n} from \"../actions/LogicAction\";\r\nimport PrintNota from \"./Component/PrintNota\";\r\nimport { warning } from \"../Alert\";\r\nimport { deleteIndex } from \"../deleteLocalStorage\";\r\nimport HeadMutasiBarang from \"./Component/HeadMutasiBarang\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { showModal } from \"../actions/ModalAction\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport { AxiosMasterPost } from \"../Axios\";\r\n\r\nconst FormMutasiBarang = lazy(() => import(\"./Component/FormMutasiBarang\"));\r\nconst ModalMasterData = lazy(() =>\r\n  import(\"../DataMaster/Component/ModalMasterData\")\r\n);\r\nconst expandRow = {\r\n  renderer: (row) => (\r\n    <div>\r\n      <p>{`Tujuan`}</p>\r\n      <p>{`Kode Tujuan : ${row.kode_jenis2} | Kat Harga : ${row.kadar_beli2} | Kadar : ${row.kadar_cetak2} | Pkg (Gr) : ${row.pkg2}`}</p>\r\n      <p>{`Bruto (Gr) : ${row.bruto2} | Harga Tujuan : ${row.kadar_beli2} | Netto : ${row.netto2}`}</p>\r\n    </div>\r\n  ),\r\n};\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    listBarang: state.provinsi.mutasiBarang,\r\n    noFaktur: state.provinsi.noFaktur,\r\n    username: state.provinsi.username,\r\n    sumBruto: state.perhitungan.sumBruto,\r\n    sumNetto: state.perhitungan.sumBruto,\r\n    sumPkg: state.perhitungan.sumPkg,\r\n    sumQty: state.perhitungan.sumQty,\r\n    sumGross: state.perhitungan.sumGross,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\n\r\nclass MutasiBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lokasi: [],\r\n      kodeJenis: \"\",\r\n      kodeJenisTujuan: \"\",\r\n      noMutasi: \"\",\r\n      kodeLokasi: \"\",\r\n      tanggal: \"\",\r\n      keterangan: \"\",\r\n      kategori: \"\",\r\n      noBon: \"\",\r\n      columns: [\r\n        {\r\n          dataField: \"Lihat Detail\",\r\n          isDummyField: true,\r\n          text: \"Lihat Detail\",\r\n          formatter: (row) => {\r\n            return (\r\n              <span>\r\n                <i className=\"fa fa-chevron-down\"></i>\r\n              </span>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          dataField: \"kode_jenis\",\r\n          text: \"Kode Barang\",\r\n        },\r\n        {\r\n          dataField: \"kadar_beli\",\r\n          text: \"Kat Harga\",\r\n        },\r\n        {\r\n          dataField: \"kadar_cetak\",\r\n          text: \"Kadar\",\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Pkg (Gr)\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Bruto (Gr)\",\r\n        },\r\n        {\r\n          dataField: \"kadar_beli\",\r\n          text: \"Harga\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Netto (Gr)\",\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row, rowIndex) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  data-tip\r\n                  data-for=\"hapus\"\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() =>\r\n                    deleteIndex(\r\n                      \"mutasiBarang\",\r\n                      rowIndex,\r\n                      this.props.dispatch,\r\n                      getListMutasiBarang()\r\n                    )\r\n                  }\r\n                >\r\n                  <ReactTooltip id=\"hapus\" type=\"dark\" effect=\"solid\">\r\n                    <span>Hapus</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-trash\"></i>\r\n                </button>\r\n                <br />\r\n                {/* <button\r\n                  data-tip\r\n                  data-for=\"edit\"\r\n                  className=\"btn btn-warning mr-2\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#editModal\"\r\n                  onClick={() => console.log(\"EDIT\")}\r\n                >\r\n                  <ReactTooltip id=\"edit\" type=\"dark\" effect=\"solid\">\r\n                    <span>Edit</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-edit mr-1\"></i>\r\n                </button> */}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListMutasiBarang());\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getBruto(\"mutasiBarang\"));\r\n    this.props.dispatch(getNetto(\"mutasiBarang\"));\r\n    this.props.dispatch(getPkg(\"mutasiBarang\"));\r\n    this.props.dispatch(getQty(\"mutasiBarang\"));\r\n    this.props.dispatch(getGross(\"mutasiBarang\"));\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    var supp = data.kodeBarang\r\n      ? data.kodeBarang\r\n      : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n    });\r\n    var supp1 = data.kodeBarangTujuan\r\n      ? data.kodeBarangTujuan\r\n      : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result = supp1.split(\"|\");\r\n    this.setState({\r\n      kodeJenisTujuan: result[0],\r\n    });\r\n    var barang1 = JSON.parse(localStorage.getItem(\"mutasiBarang\")) || [];\r\n    var simpan = {\r\n      bruto: parseFloat(data.bruto).toFixed(3),\r\n      bruto2: parseFloat(data.brutoTujuan).toFixed(3),\r\n      kadar_cetak: parseFloat(data.kadar),\r\n      kadar_cetak2: parseFloat(data.kadarTujuan),\r\n      kadar_beli: parseFloat(data.kadar_beli),\r\n      kadar_beli2: parseFloat(data.kadar_beliTujuan),\r\n      kadar_jual: parseFloat(data.kadar_jual),\r\n      kadar_jual2: parseFloat(data.kadar_jualTujuan),\r\n      netto: parseFloat(data.netto).toFixed(3),\r\n      netto2: parseFloat(data.nettoTujuan).toFixed(3),\r\n      pkg: parseFloat(data.pkg).toFixed(3),\r\n      pkg2: parseFloat(data.pkgTujuan).toFixed(3),\r\n      qty: 1,\r\n      qty2: 1,\r\n      gross: (parseFloat(data.bruto) + parseFloat(data.pkg)).toFixed(3),\r\n      gross2: (\r\n        parseFloat(data.brutoTujuan) + parseFloat(data.pkgTujuan)\r\n      ).toFixed(3),\r\n      kode_jenis: result_explode[0].toUpperCase(),\r\n      kode_jenis2: result[0].toUpperCase(),\r\n      kode_kategori: data.kategori,\r\n      kode_kategori2: data.kategoriTujuan,\r\n    };\r\n    barang1.push(simpan);\r\n    localStorage.setItem(\"mutasiBarang\", JSON.stringify(barang1));\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      text: \"Data Berhasil Ditambahkan!\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    })\r\n      .then(() => this.props.dispatch(reset(\"FormMutasiBarang\")))\r\n      .then(() => this.props.dispatch(getListMutasiBarang()));\r\n  }\r\n  onChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  submitMutasiBarang(data) {\r\n    if (localStorage.getItem(\"mutasiBarang\") === null) {\r\n      warning(\"Mohon Tambahkan Barang Yang akan dipindahkan\");\r\n      return false;\r\n    }\r\n    var total = JSON.parse(localStorage.getItem(\"mutasiBarang\")) || [];\r\n    var pkg =\r\n      total &&\r\n      total\r\n        .map((list) => parseFloat(list.pkg))\r\n        .reduce((a, b) => a + b, 0)\r\n        .toFixed(3);\r\n    var total_bruto =\r\n      total &&\r\n      total\r\n        .map((list) => parseFloat(list.bruto))\r\n        .reduce((a, b) => a + b, 0)\r\n        .toFixed(3);\r\n    var total_netto =\r\n      total &&\r\n      total\r\n        .map((list) => parseFloat(list.netto))\r\n        .reduce((a, b) => a + b, 0)\r\n        .toFixed(3);\r\n    var total_netto2 =\r\n      total &&\r\n      total\r\n        .map((list) => parseFloat(list.netto2))\r\n        .reduce((a, b) => a + b, 0)\r\n        .toFixed(3);\r\n    var gross = parseFloat(total_bruto) + parseFloat(pkg);\r\n    var simpan = {\r\n      no_mutasi: this.props.noFaktur,\r\n      no_bon: data.bonMutasi,\r\n      tgl_mutasi: data.tanggal,\r\n      lokasi_asal: data.lokasi,\r\n      lokasi_tujuan: data.lokasi,\r\n      total_gross: gross,\r\n      total_pkg: pkg,\r\n      total_bruto: total_bruto,\r\n      total_netto: total_netto,\r\n      total_netto2: total_netto2,\r\n      keterangan: data.keterangan,\r\n      deskripsi: data.kategori,\r\n      detail_barang: JSON.parse(localStorage.getItem(\"mutasiBarang\")),\r\n    };\r\n    console.log(JSON.stringify(simpan));\r\n    this.props.dispatch(progressSend());\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    var table = JSON.parse(localStorage.getItem(\"mutasiBarang\"));\r\n    // for each ticket pass all its data into an array\r\n    table.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        i++,\r\n        ticket.kode_jenis,\r\n        ticket.bruto,\r\n        ticket.kadar_jual,\r\n        ticket.netto,\r\n        \"<=====>\",\r\n        ticket.kode_jenis,\r\n        ticket.kadar_jual2,\r\n        ticket.netto2,\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    console.log(tableRows);\r\n    var columTable = [\r\n      \"No\",\r\n      \"Kode Jenis\",\r\n      \"Bruto\",\r\n      \"Harga (%)\",\r\n      \"Netto\",\r\n      \"<====>\",\r\n      \"Kode Jenis 2\",\r\n      \"Harga 2\",\r\n      \"Netto 2\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    AxiosMasterPost(\"mutasi-stock/simpan\", simpan)\r\n      .then(() =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Transaksi Berhasil\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => localStorage.removeItem(\"noFaktur\"))\r\n          .then(() => this.props.dispatch(reset(\"HeadMutasiBarang\")))\r\n          .then(() =>\r\n            PrintNota(\r\n              \"Tanggal\",\r\n              data.tanggal,\r\n              \"\",\r\n              \"\",\r\n              \"Nomor Bon\",\r\n              data.noBon,\r\n              \"\",\r\n              \"\",\r\n              \"ADMIN\",\r\n              data.tanggal,\r\n              \"\",\r\n              columTable,\r\n              \"MUTASI BARANG\",\r\n              tableRows\r\n            )\r\n          )\r\n          .then(() => localStorage.removeItem(\"mutasiBarang\"))\r\n          .then(() => this.props.dispatch(getListMutasiBarang()))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() =>\r\n            this.setState({\r\n              kodeJenis: \"\",\r\n              kodeJenisTujuan: \"\",\r\n              noMutasi: \"\",\r\n              kodeLokasi: \"\",\r\n              tanggal: \"\",\r\n              keterangan: \"\",\r\n              kategori: \"\",\r\n              noBon: \"\",\r\n            })\r\n          )\r\n          .then(() => this.forceUpdate())\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text: \"Sepertinya ada kendala, silahkan cek koneksi\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() => console.log(err))\r\n          .then(() => this.props.dispatch(finishSend()))\r\n      );\r\n    this.props.dispatch(getListMutasiBarang());\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Mutasi Barang\" />\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <HeadMutasiBarang\r\n                      onSubmit={(data) => this.submitMutasiBarang(data)}\r\n                      onSend={this.props.onSend}\r\n                      noFaktur={this.props.noFaktur}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-lg-4\"></div>\r\n                  <div className=\"col-lg-4 col-md-4 mb-3\">\r\n                    <div className=\"text-center\">\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        disabled\r\n                      >\r\n                        BARCODE (+)\r\n                      </button>\r\n                      <button\r\n                        className=\"btn btn-primary ml-2\"\r\n                        data-toggle=\"modal\"\r\n                        disabled\r\n                      >\r\n                        BARCODE (-)\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-4 col-md-4 mb-3\">\r\n                    <div className=\"text-right\">\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        onClick={() => this.props.dispatch(showModal())}\r\n                      >\r\n                        TAMBAH BARANG\r\n                        <i className=\"fa fa-plus ml-3\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-12\">\r\n                    {this.props.listBarang ? (\r\n                      <BootstrapTable\r\n                        keyField=\"id\"\r\n                        data={this.props.listBarang}\r\n                        columns={this.state.columns}\r\n                        bordered={true}\r\n                        headerClasses=\"header-table\"\r\n                        expandRow={expandRow}\r\n                      />\r\n                    ) : (\r\n                      <BootstrapTable\r\n                        keyField=\"id\"\r\n                        data={[]}\r\n                        columns={this.state.columns}\r\n                        bordered={true}\r\n                        headerClasses=\"header-table\"\r\n                        expandRow={expandRow}\r\n                        noDataIndication=\"Tidak Ada Data\"\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ModalMasterData\r\n          content={\r\n            <Suspense\r\n              fallback={<Skeleton width={\"100%\"} height={50} count={5} />}\r\n            >\r\n              <FormMutasiBarang onSubmit={(data) => this.handleSubmit(data)} />\r\n            </Suspense>\r\n          }\r\n          title=\"Tambah Data Mutasi Barang\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(MutasiBarang);\r\n","import Swal from \"sweetalert2\";\r\n\r\nexport const deleteLocalStorage = (keyRemove) => {\r\n  keyRemove.forEach((e) => {\r\n    localStorage.removeItem(e);\r\n  });\r\n};\r\n\r\nexport const deleteIndex = (nama, index, dispatch, func) => {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      const array = JSON.parse(localStorage.getItem(nama)) || [];\r\n      array.splice(index, 1);\r\n      localStorage.setItem(nama, JSON.stringify(array));\r\n      Swal.fire({\r\n        text: \"Berhasil\",\r\n        timer: 2000,\r\n        showConfirmButton: false,\r\n        position: \"top-right\",\r\n        icon: \"success\",\r\n      }).then(() => dispatch(func));\r\n    }\r\n  });\r\n};\r\nexport const deleteIndexUpdatetotalNW = (nama, index, dispatch, func) => {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      title: \"Anda Yakin ?\",\r\n      text: \"Anda Akan Menghapus Data Ini ?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        const array = JSON.parse(localStorage.getItem(nama)) || [];\r\n        array.splice(index, 1);\r\n        localStorage.setItem(nama, JSON.stringify(array));\r\n        Swal.fire({\r\n          text: \"Berhasil\",\r\n          timer: 2000,\r\n          showConfirmButton: false,\r\n          position: \"top-right\",\r\n          icon: \"success\",\r\n        })\r\n          .then(() => dispatch(func))\r\n          .then(resolve(\"Berhasil\"))\r\n          .catch(\"Gagal\");\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexport const deleteIndexUpdateNettoNW = (\r\n  nama,\r\n  index,\r\n  dispatch,\r\n  func,\r\n  nilai,\r\n  func2,\r\n  state\r\n) => {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      const array = JSON.parse(localStorage.getItem(nama)) || [];\r\n      array.splice(index, 1);\r\n      localStorage.setItem(nama, JSON.stringify(array));\r\n      var awal = localStorage.getItem(\"GrandTotalNetto\");\r\n      var hasil = parseFloat(awal) - parseFloat(nilai);\r\n      localStorage.setItem(\"GrandTotalNetto\", parseFloat(hasil).toFixed(3));\r\n      Swal.fire({\r\n        text: \"Berhasil\",\r\n        timer: 2000,\r\n        showConfirmButton: false,\r\n        position: \"top-right\",\r\n        icon: \"success\",\r\n      })\r\n        .then(() => dispatch(func))\r\n        .then(() => dispatch(func2));\r\n    }\r\n  });\r\n};\r\n","import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;"],"sourceRoot":""}