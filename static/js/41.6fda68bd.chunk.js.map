{"version":3,"sources":["Validations/validaitonRekening.js","DataMaster/Component/FormRekening.jsx","DataMaster/Component/FormRekeningEdit.jsx","DataMaster/DaftarRekening.jsx","../node_modules/redux-form/es/index.js","Images/500.svg","DataMaster/Component/ModalMasterData.jsx","TourGuide.jsx","DataMaster/Component/Table.jsx"],"names":["validaitonRekening","values","errors","noRekening","length","namaBank","atasNama","mataUang","FormRekening","props","state","response","no_rekening","nama_bank","atas_nama","mata_uang","className","onSubmit","this","handleSubmit","Field","name","type","component","renderField","label","onChange","change","normalize","value","toUpperCase","disabled","onSend","aria-hidden","Component","reduxForm","form","validate","enableReinitialize","connect","FormRekeningEdit","readOnly","initialValues","provinsi","editDataRekening","defaultSorted","dataField","order","DaftarRekening","updateStatus","input","console","log","setState","dispatch","getrekeningList","Rekening","columns","text","csvExport","formatter","rowContent","row","data-tut","onClick","kode","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","data","AxiosMasterDelete","hideModal","res","berhasil","LogData","catch","err","gagal","editRekening","edithModal","hasil","progressSend","AxiosMasterPost","finishSend","reset","handleReactive","includes","reactive","AxiosMasterPut","showModal","isEdit","style","color","id","alert","role","data-dismiss","aria-label","TourGuide","tourConfig","HeaderCard","ModalMasterData","content","handleEdit","tambahModal","daftarList","Table","namaKey","error","src","notrespond","width","alt","height","rekening","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors","module","exports","ModalGlobal","show","onHide","dialogClassName","backdrop","keyboard","Header","closeButton","backgroundColor","Title","Body","modal","disableBody","target","disableBodyScroll","enableBody","enableBodyScroll","map","list","index","selector","onRequestClose","hideGuide","steps","isOpen","showTourGuide","maskClassName","rounded","accentColor","onAfterOpen","onBeforeClose","SearchBar","Search","ExportCSVButton","CSVExport","rowStyle","rowIndex","borderTop","bootstrap4","keyField","search","searchProps","placeholder","margin","baseProps","headerClasses","striped","hover","bordered","pagination","paginationFactory","csvProps"],"mappings":"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","file":"static/js/41.6fda68bd.chunk.js","sourcesContent":["const validaitonRekening = (values) => {\r\n  const errors = {};\r\n  if (!values.noRekening) {\r\n    errors.noRekening = \"Tidak Boleh Kosong\";\r\n  } else if (values.noRekening.length < 8) {\r\n    errors.noRekening = \"Sepertinya Norekening Salah\";\r\n  }\r\n  if (!values.namaBank) {\r\n    errors.namaBank = \"Tidak Boleh Kosong\";\r\n  } else if (values.namaBank.length > 30) {\r\n    errors.namaBank = \"Nama Terlalu Panjang\";\r\n  }\r\n  if (!values.atasNama) {\r\n    errors.atasNama = \"Tidak Boleh Kosong\";\r\n  } else if (values.atasNama > 30) {\r\n    errors.atasNama = \"Nama Terlalu Panjang\";\r\n  }\r\n  if (values.mataUang === \"DEFAULT\") {\r\n    errors.mataUang = \"Tidak Boleh Kosong\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default validaitonRekening;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport validaitonRekening from \"../../Validations/validaitonRekening\";\r\nimport { renderField } from \"../../renderField\";\r\n\r\nclass FormRekening extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      response: \"\",\r\n      no_rekening: \"\",\r\n      nama_bank: \"\",\r\n      atas_nama: \"\",\r\n      mata_uang: \"RUPIAH\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-12 col-md-12\">\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-4 col-md-4\">\r\n              <Field\r\n                name=\"noRekening\"\r\n                type=\"tel\"\r\n                component={renderField}\r\n                label=\"Nomor Rekening\"\r\n                onChange={() => this.props.change(\"mataUang\", \"DEFAULT\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4 col-md-4\">\r\n              <Field\r\n                name=\"namaBank\"\r\n                type=\"telp\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                label=\"Nama Bank\"\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4 col-md-4\">\r\n              <Field\r\n                name=\"atasNama\"\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                label=\"Atas Nama\"\r\n              />\r\n            </div>\r\n            {/* <div className=\"col-lg-4 col-md-4\">\r\n              <label htmlFor=\"\">Mata Uang</label>\r\n              <Field\r\n                name=\"mataUang\"\r\n                component=\"select\"\r\n                className=\"form-control\"\r\n                label=\"Mata Uang\"\r\n                value=\"DEFAULT\"\r\n              >\r\n                <option value=\"DEFAULT\">SILAHKAN PILIH</option>\r\n                <option value=\"RUPIAH\">RUPIAH</option>\r\n                <option value=\"USD\">USD</option>\r\n              </Field>\r\n            </div> */}\r\n            <div className=\"col-md-12 col-lg-12 mt-5\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary\"\r\n                  disabled={this.props.onSend}\r\n                >\r\n                  {this.props.onSend ? (\r\n                    <span\r\n                      className=\"spinner-border spinner-border-sm mr-3\"\r\n                      aria-hidden=\"true\"\r\n                    ></span>\r\n                  ) : null}\r\n                  Simpan\r\n                  <i className=\"fa fa-paper-plane ml-3\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormRekening = reduxForm({\r\n  form: \"DataRekening\",\r\n  validate: validaitonRekening,\r\n  enableReinitialize: true,\r\n})(FormRekening);\r\nexport default connect()(FormRekening);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport validaitonRekening from \"../../Validations/validaitonRekening\";\r\nimport { renderField } from \"../../renderField\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    initialValues: {\r\n      noRekening: state.provinsi.editDataRekening.noRekening,\r\n      atasNama: state.provinsi.editDataRekening.atasNama,\r\n      namaBank: state.provinsi.editDataRekening.namaBank,\r\n      mataUang: state.provinsi.editDataRekening.mataUang,\r\n    },\r\n  };\r\n};\r\nclass FormRekeningEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      response: \"\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-12 col-md-12\">\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-4 col-md-4\">\r\n              <Field\r\n                name=\"noRekening\"\r\n                type=\"tel\"\r\n                component={renderField}\r\n                label=\"Nomor Rekening\"\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4 col-md-4\">\r\n              <Field\r\n                name=\"namaBank\"\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                label=\"Nama Bank\"\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4 col-md-4\">\r\n              <Field\r\n                name=\"atasNama\"\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                label=\"Atas Nama\"\r\n              />\r\n            </div>\r\n            {/* <div className=\"col-lg-4 col-md-4\">\r\n              <label htmlFor=\"\">Mata Uang</label>\r\n              <Field\r\n                name=\"mataUang\"\r\n                component=\"select\"\r\n                className=\"form-control\"\r\n                label=\"Mata Uang\"\r\n              >\r\n                <option value=\"RUPIAH\">RUPIAH</option>\r\n                <option value=\"USD\">USD</option>\r\n              </Field>\r\n            </div> */}\r\n            <div className=\"col-md-12 col-lg-12 mt-5\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary\"\r\n                  disabled={this.props.onSend}\r\n                >\r\n                  {this.props.onSend ? (\r\n                    <span\r\n                      className=\"spinner-border spinner-border-sm mr-3\"\r\n                      aria-hidden=\"true\"\r\n                    ></span>\r\n                  ) : null}\r\n                  Simpan\r\n                  <i className=\"fa fa-paper-plane ml-3\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormRekeningEdit = reduxForm({\r\n  form: \"FormRekeningEdit\",\r\n  validate: validaitonRekening,\r\n  enableReinitialize: true,\r\n})(FormRekeningEdit);\r\nexport default connect(maptoState, null)(FormRekeningEdit);\r\n","import React, { Component } from \"react\";\r\nimport FormRekening from \"./Component/FormRekening\";\r\nimport Table from \"./Component/Table\";\r\nimport { connect } from \"react-redux\";\r\nimport notrespond from \"../Images/500.svg\";\r\nimport { editRekening, getrekeningList } from \"../actions/rekeningAction\";\r\nimport Swal from \"sweetalert2\";\r\nimport FormRekeningEdit from \"./Component/FormRekeningEdit\";\r\nimport { reset } from \"redux-form\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { berhasil, gagal, LogData, reactive } from \"../Alert\";\r\nimport { AxiosMasterDelete, AxiosMasterPost, AxiosMasterPut } from \"../Axios\";\r\nimport { hideModal, showModal } from \"../actions/ModalAction\";\r\nimport ModalMasterData from \"./Component/ModalMasterData\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport TourGuide from \"../TourGuide\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\n\r\nfunction hapus(dispatch, kode) {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      let data = {\r\n        data: {\r\n          noRekening: kode,\r\n        },\r\n      };\r\n      AxiosMasterDelete(\"rekening/delete/\" + kode)\r\n        .then(() => dispatch(hideModal()))\r\n        .then((res) =>\r\n          berhasil(\"Data Berhasil Dihapus!\")\r\n            .then(() => LogData(\"Data Berhasil Dihapus Dari Rekening\", data))\r\n            .then(() => dispatch(getrekeningList()))\r\n        )\r\n        .catch((err) => gagal(\"Data Gagal Dihapus!\"));\r\n    }\r\n  });\r\n}\r\n\r\nconst defaultSorted = [\r\n  {\r\n    dataField: \"nomorRekening\",\r\n    order: \"asc\",\r\n  },\r\n];\r\nconst maptoState = (state) => {\r\n  return {\r\n    daftarList: state.provinsi.rekening,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\n\r\nclass DaftarRekening extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Rekening: [],\r\n      response: \"\",\r\n      columns: [\r\n        {\r\n          dataField: \"no_rekening\",\r\n          text: \"Nomor Rekening\",\r\n        },\r\n        {\r\n          dataField: \"nama_bank\",\r\n          text: \"Nama Bank\",\r\n        },\r\n        {\r\n          dataField: \"atas_nama\",\r\n          text: \"Atas Nama\",\r\n        },\r\n\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-danger mr-2\"\r\n                  data-tut=\"reactour_3\"\r\n                  onClick={() => hapus(this.props.dispatch, row.no_rekening)}\r\n                >\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                  HAPUS\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-warning\"\r\n                  data-tut=\"reactour_4\"\r\n                  onClick={() =>\r\n                    this.props.dispatch(\r\n                      editRekening(\r\n                        row.no_rekening,\r\n                        row.atas_nama,\r\n                        row.nama_bank,\r\n                        this.edithModal()\r\n                      )\r\n                    )\r\n                  }\r\n                >\r\n                  <i className=\"fa fa-edit mr-2\"></i>\r\n                  EDIT\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getrekeningList());\r\n  }\r\n\r\n  updateStatus = (input) => {\r\n    console.log(input);\r\n    this.setState({\r\n      response: input,\r\n    });\r\n    this.props.dispatch(getrekeningList());\r\n  };\r\n\r\n  handleSubmit(hasil) {\r\n    let data = {\r\n      atas_nama: hasil.atasNama,\r\n      nama_bank: hasil.namaBank,\r\n      no_rekening: hasil.noRekening,\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    AxiosMasterPost(\"rekening/add\", data)\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) =>\r\n        berhasil(\"Data Berhasil Disimpan!\")\r\n          .then(() => LogData(\"Data Berhasil Disimpan Di Rekening\", data))\r\n          .then(() => this.props.dispatch(getrekeningList()))\r\n          .then(() => this.props.dispatch(reset(\"DataRekening\")))\r\n      )\r\n      .catch((err) =>\r\n        this.handleReactive(err, hasil.noRekening, {\r\n          atas_nama: hasil.atasNama,\r\n          nama_bank: hasil.namaBank,\r\n        })\r\n      );\r\n  }\r\n  handleReactive(err, kode, data) {\r\n    this.props.dispatch(hideModal());\r\n    let error = err.response.data;\r\n    let check = error.includes(\"deleted\");\r\n    check\r\n      ? reactive(\r\n          err,\r\n          kode,\r\n          \"rekening/reactive/\",\r\n          data,\r\n          \"rekening/edit/\"\r\n        ).then(() => this.props.dispatch(getrekeningList()))\r\n      : gagal(\"Data Gagal Ditambahkan\");\r\n  }\r\n  handleEdit(hasil) {\r\n    let data = {\r\n      atas_nama: hasil.atasNama,\r\n      nama_bank: hasil.namaBank,\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    AxiosMasterPut(\"rekening/edit/\" + hasil.noRekening, data)\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) =>\r\n        berhasil(\"Data Berhasil Diubah!\")\r\n          .then(() => LogData(\"Data Berhasil Diubah Di Rekneing\", data))\r\n          .then(() => this.props.dispatch(getrekeningList()))\r\n      )\r\n      .catch((err) =>\r\n        gagal(\"Data Gagal Diubah!\").then(() =>\r\n          LogData(\"Data Gagal Diubah di rekening\", data, err)\r\n        )\r\n      );\r\n  }\r\n  tambahModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({\r\n      isEdit: false,\r\n    });\r\n  }\r\n  edithModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div id=\"notif_alert\" className={this.props.alert} role=\"alert\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n          <strong>Error - </strong> Tidak Bisa Mengambil Data\r\n        </div>\r\n        <TourGuide\r\n          tourConfig={[\r\n            `Untuk Menambahkan Data Rekening Bank, Tekan Tombol ini Dan Isi kolom yang disediakan`,\r\n            `Ini adalah data Rekening Bank yang sudah tersimpan`,\r\n            `Ini adalah tombol untuk menghapus data pada baris yang dipilih`,\r\n            `Ini adalah tombol untuk mengubah data pada baris yang dipilih`,\r\n          ]}\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Data Rekening\" />\r\n              <div className=\"card-body\">\r\n                <ModalMasterData\r\n                  content={\r\n                    this.state.isEdit ? (\r\n                      <FormRekeningEdit\r\n                        updateStatus={this.updateStatus}\r\n                        onSubmit={(data) => this.handleEdit(data)}\r\n                        onSend={this.props.onSend}\r\n                      />\r\n                    ) : (\r\n                      <FormRekening\r\n                        updateStatus={this.updateStatus}\r\n                        onSubmit={(data) => this.handleSubmit(data)}\r\n                        onSend={this.props.onSend}\r\n                      />\r\n                    )\r\n                  }\r\n                  title={\r\n                    this.state.isEdit\r\n                      ? \"Edit Data Rekening\"\r\n                      : \"Tambah Data Rekening\"\r\n                  }\r\n                />\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"text-right\">\r\n                    <button\r\n                      name=\"simpan\"\r\n                      id=\"simpan\"\r\n                      type=\"button\"\r\n                      className=\"btn btn-info\"\r\n                      onClick={() => this.tambahModal()}\r\n                      data-tut=\"reactour_1\"\r\n                    >\r\n                      Tambah Data Rekening\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-12\" data-tut=\"reactour_2\">\r\n                  {this.props.daftarList ? (\r\n                    <Table\r\n                      data={this.props.daftarList}\r\n                      columns={this.state.columns}\r\n                      defaultSorted={defaultSorted}\r\n                      namaKey=\"noRekening\"\r\n                    />\r\n                  ) : (\r\n                    <div>\r\n                      {this.props.error ? (\r\n                        <div className=\"text-center\">\r\n                          <img\r\n                            src={notrespond}\r\n                            style={{ width: \"30%\" }}\r\n                            alt=\"ERROR GET DATA\"\r\n                          />\r\n                          <br />\r\n                          <h4>Request API Gagal, Silahkan Refresh</h4>\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton width={\"100%\"} height={180} />\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoState, null)(DaftarRekening);\r\n","import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;","module.exports = __webpack_public_path__ + \"static/media/500.c22f1e39.svg\";","import { Modal } from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { hideModal } from \"../../actions/ModalAction\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    show: state.modal.show,\r\n  };\r\n};\r\nclass ModalGlobal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <Modal\r\n        show={this.props.show}\r\n        onHide={() => this.props.dispatch(hideModal())}\r\n        dialogClassName=\"modal-xl\"\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header\r\n          closeButton\r\n          style={{ backgroundColor: \"#5F76E8\", color: \"#ffffff\" }}\r\n        >\r\n          <Modal.Title>{this.props.title || \"\"}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{this.props.content || \"\"}</Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoState, null)(ModalGlobal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { hideGuide } from \"./actions/ModalAction\";\r\nimport Tour from \"reactour\";\r\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\r\n\r\nconst mapToState = (state) => {\r\n  return {\r\n    showTourGuide: state.provinsi.showTourGuide,\r\n  };\r\n};\r\nclass TourGuide extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  disableBody = (target) => disableBodyScroll(target);\r\n  enableBody = (target) => enableBodyScroll(target);\r\n  render() {\r\n    let tourConfig = this.props.tourConfig.map((list, index) => {\r\n      let data = {\r\n        selector: '[data-tut=\"reactour_' + ++index + '\"]',\r\n        content: list,\r\n      };\r\n      return data;\r\n    });\r\n    console.log(tourConfig);\r\n    return (\r\n      <Tour\r\n        onRequestClose={() => this.props.dispatch(hideGuide())}\r\n        steps={tourConfig}\r\n        isOpen={this.props.showTourGuide}\r\n        maskClassName=\"mask\"\r\n        className=\"helper\"\r\n        rounded={5}\r\n        accentColor=\"#5cb7b7\"\r\n        onAfterOpen={this.disableBody}\r\n        onBeforeClose={this.enableBody}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapToState, null)(TourGuide);\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport,\r\n} from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  // ROW STYLE TABLE\r\n  rowStyle = (row, rowIndex) => {\r\n    row.index = rowIndex;\r\n    const style = {};\r\n    if (rowIndex % 2 === 0) {\r\n      style.backgroundColor = \"transparent\";\r\n    } else {\r\n      style.backgroundColor = \"#DEDEDE\";\r\n    }\r\n    style.borderTop = \"none\";\r\n\r\n    return style;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ToolkitProvider\r\n        bootstrap4\r\n        keyField={this.props.namaKey ? this.props.namaKey : \"kode\"}\r\n        data={this.props.data}\r\n        columns={this.props.columns}\r\n        defaultSorted={this.props.defaultSorted}\r\n        search\r\n      >\r\n        {(props) => (\r\n          <div className=\"col-lg-12 col-md-12 mt-5\">\r\n            <div className=\"text-right\">\r\n              <SearchBar\r\n                {...props.searchProps}\r\n                className=\"form-control\"\r\n                placeholder=\"Tuliskan Kode / Nama\"\r\n                style={{ margin: 0 }}\r\n              />\r\n            </div>\r\n            <BootstrapTable\r\n              {...props.baseProps}\r\n              headerClasses=\"header-table\"\r\n              striped\r\n              hover\r\n              bordered={true}\r\n              pagination={paginationFactory()}\r\n            />\r\n            <ExportCSVButton {...props.csvProps} className=\"btn btn-primary\">\r\n              Export CSV\r\n            </ExportCSVButton>\r\n          </div>\r\n        )}\r\n      </ToolkitProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(Table);\r\n"],"sourceRoot":""}