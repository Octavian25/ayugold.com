{"version":3,"sources":["Validations/validasiHeadMutasiBarang.js","Stocking/Component/HeadMutasiBarang.jsx","Stocking/MutasiBarang.jsx"],"names":["validasiHeadMutasiBarang","value","errors","tanggal","noMutasi","bonMutasi","kategori","lokasi","HeadMutasiBarang","props","state","listKategori","nama","columns","dataField","isDummyField","text","formatter","row","className","csvExport","rowContent","rowIndex","data-tip","data-for","onClick","deleteIndex","dispatch","getListMutasiBarang","id","type","effect","this","getLokasi","change","getToday","localStorage","getItem","onSubmit","handleSubmit","Field","component","renderField","normalize","toUpperCase","label","name","readOnly","renderFieldSelect","options","map","list","onKeyPress","e","key","preventDefault","kode_lokasi","nama_lokasi","data-toggle","disabled","showModal","GlobalTabel","keyField","data","listBarang","onSend","aria-hidden","Component","reduxForm","form","enableReinitialize","validate","connect","provinsi","mutasiBarang","FormMutasiBarang","lazy","ModalMasterData","MutasiBarang","onChange","input","setState","target","kodeJenis","kodeJenisTujuan","kodeLokasi","keterangan","noBon","getUUID","getBruto","getNetto","getPkg","getQty","getGross","result_explode","kodeBarang","split","result","kodeBarangTujuan","barang1","JSON","parse","simpan","bruto","parseFloat","toFixed","bruto2","brutoTujuan","kadar_cetak","kadar","kadar_cetak2","kadarTujuan","kadar_beli","kadar_beli2","kadar_beliTujuan","kadar_jual","kadar_jual2","kadar_jualTujuan","netto","netto2","nettoTujuan","pkg","pkg2","pkgTujuan","qty","qty2","gross","gross2","kode_jenis","kode_jenis2","kode_kategori","kode_kategori2","kategoriTujuan","push","setItem","stringify","Swal","fire","position","icon","showConfirmButton","timer","then","reset","warning","total","reduce","a","b","total_bruto","total_netto","total_netto2","no_mutasi","noFaktur","no_bon","tgl_mutasi","lokasi_asal","lokasi_tujuan","total_gross","total_pkg","deskripsi","detail_barang","console","log","progressSend","tableRows","forEach","ticket","i","ticketData","columTable","AxiosMasterPost","finishSend","removeItem","PrintNota","forceUpdate","catch","err","style","color","HeaderCard","title","submitMutasiBarang","content","fallback","width","height","count","username","sumBruto","perhitungan","sumNetto","sumPkg","sumQty","sumGross"],"mappings":"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","file":"static/js/122.9cc8d45f.chunk.js","sourcesContent":["const validasiHeadMutasiBarang = (value) => {\r\n  const errors = {};\r\n  if (!value.tanggal) {\r\n    errors.tanggal = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.noMutasi) {\r\n    errors.noMutasi = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.bonMutasi) {\r\n    errors.bonMutasi = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.kategori) {\r\n    errors.kategori = \"Tidak Boleh kosong\";\r\n  }\r\n\r\n  if (!value.lokasi) {\r\n    errors.lokasi = \"Tidak Boleh kosong\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default validasiHeadMutasiBarang;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { getLokasi } from \"../../actions/lokasiAction\";\r\nimport { showModal } from \"../../actions/ModalAction\";\r\nimport { getListMutasiBarang } from \"../../actions/mutasiBarangAction\";\r\nimport { deleteIndex } from \"../../deleteLocalStorage\";\r\nimport { getToday, SkeletonLoading } from \"../../getDate\";\r\nimport GlobalTabel from \"../../GlobalComponent/GlobalTabel\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport validasiHeadMutasiBarang from \"../../Validations/validasiHeadMutasiBarang\";\r\n\r\nclass HeadMutasiBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lokasi: false,\r\n      listKategori: [\r\n        {\r\n          nama: \"AMBIL BARANG\",\r\n        },\r\n        {\r\n          nama: \"KEMBALI STOK\",\r\n        },\r\n        {\r\n          nama: \"KOREKSI STOK\",\r\n        },\r\n        {\r\n          nama: \"MUTASI BAHAN\",\r\n        },\r\n        {\r\n          nama: \"PENGAMBILAN SALES\",\r\n        },\r\n        {\r\n          nama: \"PINDAH\",\r\n        },\r\n        {\r\n          nama: \"PINDAH GUDANG REPARASI\",\r\n        },\r\n        {\r\n          nama: \"RETURN SALES\",\r\n        },\r\n        {\r\n          nama: \"SALAH INPUT\",\r\n        },\r\n        {\r\n          nama: \"SALAH PINDAH\",\r\n        },\r\n        {\r\n          nama: \"STOK AWAL\",\r\n        },\r\n        {\r\n          nama: \"TAMBAH BARANG\",\r\n        },\r\n      ],\r\n      columns: [\r\n        {\r\n          dataField: \"Lihat Detail\",\r\n          isDummyField: true,\r\n          text: \"Lihat Detail\",\r\n          formatter: (row) => {\r\n            return (\r\n              <span>\r\n                <i className=\"fa fa-chevron-down\"></i>\r\n              </span>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          dataField: \"kode_jenis\",\r\n          text: \"Kode Barang\",\r\n        },\r\n        {\r\n          dataField: \"kadar_beli\",\r\n          text: \"Kat Harga\",\r\n        },\r\n        {\r\n          dataField: \"kadar_cetak\",\r\n          text: \"Kadar\",\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Pkg (Gr)\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Bruto (Gr)\",\r\n        },\r\n        {\r\n          dataField: \"kadar_beli\",\r\n          text: \"Harga\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Netto (Gr)\",\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row, rowIndex) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  data-tip\r\n                  data-for=\"hapus\"\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() =>\r\n                    deleteIndex(\r\n                      \"mutasiBarang\",\r\n                      rowIndex,\r\n                      this.props.dispatch,\r\n                      getListMutasiBarang()\r\n                    )\r\n                  }\r\n                >\r\n                  <ReactTooltip id=\"hapus\" type=\"dark\" effect=\"solid\">\r\n                    <span>Hapus</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-trash\"></i>\r\n                </button>\r\n                <br />\r\n                {/* <button\r\n                  data-tip\r\n                  data-for=\"edit\"\r\n                  className=\"btn btn-warning mr-2\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#editModal\"\r\n                  onClick={() => console.log(\"EDIT\")}\r\n                >\r\n                  <ReactTooltip id=\"edit\" type=\"dark\" effect=\"solid\">\r\n                    <span>Edit</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-edit mr-1\"></i>\r\n                </button> */}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getLokasi());\r\n    this.props.change(\"tanggal\", getToday);\r\n    this.props.change(\"noMutasi\", localStorage.getItem(\"noFaktur\"));\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              label=\"Nomor Mutasi\"\r\n              type=\"text\"\r\n              name=\"noMutasi\"\r\n              className=\"form-control\"\r\n              readOnly\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              type=\"date\"\r\n              label=\"Tanggal\"\r\n              id=\"tanggal\"\r\n              name=\"tanggal\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              label=\"Bon Mutasi\"\r\n              type=\"text\"\r\n              id=\"bonMutasi\"\r\n              name=\"bonMutasi\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              id=\"kategori\"\r\n              label=\"Kategori\"\r\n              name=\"kategori\"\r\n              component={renderFieldSelect}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              options={this.state.listKategori.map((list) => {\r\n                let data = {\r\n                  value: list.nama,\r\n                  name: list.nama,\r\n                };\r\n                return data;\r\n              })}\r\n            ></Field>\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              label=\"Keterangan\"\r\n              type=\"text\"\r\n              id=\"keterangan\"\r\n              name=\"keterangan\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            {this.props.lokasi ? (\r\n              <Field\r\n                label=\"Lokasi\"\r\n                component={renderFieldSelect}\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                type=\"text\"\r\n                id=\"lokasi\"\r\n                name=\"lokasi\"\r\n                onKeyPress={(e) => {\r\n                  e.key === \"Enter\" && e.preventDefault();\r\n                }}\r\n                options={this.props.lokasi.map((list) => {\r\n                  let data = {\r\n                    value: list.kode_lokasi,\r\n                    name: list.nama_lokasi,\r\n                  };\r\n                  return data;\r\n                })}\r\n              ></Field>\r\n            ) : (\r\n              <SkeletonLoading label=\"Lokasi\" />\r\n            )}\r\n          </div>\r\n          <div className=\"col-lg-3\"></div>\r\n          <div className=\"col-lg-4\"></div>\r\n          <div className=\"col-lg-4 col-md-4 mb-3\">\r\n            <div className=\"text-center\">\r\n              <button className=\"btn btn-primary\" data-toggle=\"modal\" disabled>\r\n                BARCODE (+)\r\n              </button>\r\n              <button\r\n                className=\"btn btn-primary ml-2\"\r\n                data-toggle=\"modal\"\r\n                disabled\r\n              >\r\n                BARCODE (-)\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-4 mb-3\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                onClick={() => this.props.dispatch(showModal())}\r\n              >\r\n                TAMBAH BARANG\r\n                <i className=\"fa fa-plus ml-3\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <GlobalTabel\r\n              keyField=\"id\"\r\n              data={this.props.listBarang}\r\n              columns={this.state.columns}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12 col-md-3 mb-3\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                disabled={this.props.onSend}\r\n                type=\"button\"\r\n                onClick={this.props.handleSubmit}\r\n              >\r\n                {this.props.onSend ? (\r\n                  <span\r\n                    className=\"spinner-border spinner-border-sm mr-3\"\r\n                    aria-hidden=\"true\"\r\n                  ></span>\r\n                ) : null}\r\n                SIMPAN\r\n                <i className=\"fa fa-paper-plane ml-3\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadMutasiBarang = reduxForm({\r\n  form: \"HeadMutasiBarang\",\r\n  enableReinitialize: true,\r\n  validate: validasiHeadMutasiBarang,\r\n})(HeadMutasiBarang);\r\nexport default connect((state) => {\r\n  return {\r\n    listBarang: state.provinsi.mutasiBarang,\r\n    lokasi: state.provinsi.lokasi,\r\n  };\r\n})(HeadMutasiBarang);\r\n","import React, { Component, lazy, Suspense } from \"react\";\r\n\r\nimport { getListMutasiBarang } from \"../actions/mutasiBarangAction\";\r\nimport Swal from \"sweetalert2\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset } from \"redux-form\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport {\r\n  finishSend,\r\n  getBruto,\r\n  getGross,\r\n  getNetto,\r\n  getPkg,\r\n  getQty,\r\n  progressSend,\r\n} from \"../actions/LogicAction\";\r\nimport PrintNota from \"./Component/PrintNota\";\r\nimport { warning } from \"../Alert\";\r\nimport { deleteIndex } from \"../deleteLocalStorage\";\r\nimport HeadMutasiBarang from \"./Component/HeadMutasiBarang\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport { AxiosMasterPost } from \"../Axios\";\r\n\r\nconst FormMutasiBarang = lazy(() => import(\"./Component/FormMutasiBarang\"));\r\nconst ModalMasterData = lazy(() =>\r\n  import(\"../DataMaster/Component/ModalMasterData\")\r\n);\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    listBarang: state.provinsi.mutasiBarang,\r\n    noFaktur: state.provinsi.noFaktur,\r\n    username: state.provinsi.username,\r\n    sumBruto: state.perhitungan.sumBruto,\r\n    sumNetto: state.perhitungan.sumBruto,\r\n    sumPkg: state.perhitungan.sumPkg,\r\n    sumQty: state.perhitungan.sumQty,\r\n    sumGross: state.perhitungan.sumGross,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\n\r\nclass MutasiBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lokasi: [],\r\n      kodeJenis: \"\",\r\n      kodeJenisTujuan: \"\",\r\n      noMutasi: \"\",\r\n      kodeLokasi: \"\",\r\n      tanggal: \"\",\r\n      keterangan: \"\",\r\n      kategori: \"\",\r\n      noBon: \"\",\r\n      columns: [\r\n        {\r\n          dataField: \"Lihat Detail\",\r\n          isDummyField: true,\r\n          text: \"Lihat Detail\",\r\n          formatter: (row) => {\r\n            return (\r\n              <span>\r\n                <i className=\"fa fa-chevron-down\"></i>\r\n              </span>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          dataField: \"kode_jenis\",\r\n          text: \"Kode Barang\",\r\n        },\r\n        {\r\n          dataField: \"kadar_beli\",\r\n          text: \"Kat Harga\",\r\n        },\r\n        {\r\n          dataField: \"kadar_cetak\",\r\n          text: \"Kadar\",\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Pkg (Gr)\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Bruto (Gr)\",\r\n        },\r\n        {\r\n          dataField: \"kadar_beli\",\r\n          text: \"Harga\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Netto (Gr)\",\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row, rowIndex) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  data-tip\r\n                  data-for=\"hapus\"\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() =>\r\n                    deleteIndex(\r\n                      \"mutasiBarang\",\r\n                      rowIndex,\r\n                      this.props.dispatch,\r\n                      getListMutasiBarang()\r\n                    )\r\n                  }\r\n                >\r\n                  <ReactTooltip id=\"hapus\" type=\"dark\" effect=\"solid\">\r\n                    <span>Hapus</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-trash\"></i>\r\n                </button>\r\n                <br />\r\n                {/* <button\r\n                  data-tip\r\n                  data-for=\"edit\"\r\n                  className=\"btn btn-warning mr-2\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#editModal\"\r\n                  onClick={() => console.log(\"EDIT\")}\r\n                >\r\n                  <ReactTooltip id=\"edit\" type=\"dark\" effect=\"solid\">\r\n                    <span>Edit</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-edit mr-1\"></i>\r\n                </button> */}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListMutasiBarang());\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getBruto(\"mutasiBarang\"));\r\n    this.props.dispatch(getNetto(\"mutasiBarang\"));\r\n    this.props.dispatch(getPkg(\"mutasiBarang\"));\r\n    this.props.dispatch(getQty(\"mutasiBarang\"));\r\n    this.props.dispatch(getGross(\"mutasiBarang\"));\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    var supp = data.kodeBarang\r\n      ? data.kodeBarang\r\n      : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n    });\r\n    var supp1 = data.kodeBarangTujuan\r\n      ? data.kodeBarangTujuan\r\n      : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result = supp1.split(\"|\");\r\n    this.setState({\r\n      kodeJenisTujuan: result[0],\r\n    });\r\n    var barang1 = JSON.parse(localStorage.getItem(\"mutasiBarang\")) || [];\r\n    var simpan = {\r\n      bruto: parseFloat(data.bruto).toFixed(3),\r\n      bruto2: parseFloat(data.brutoTujuan).toFixed(3),\r\n      kadar_cetak: parseFloat(data.kadar),\r\n      kadar_cetak2: parseFloat(data.kadarTujuan),\r\n      kadar_beli: parseFloat(data.kadar_beli),\r\n      kadar_beli2: parseFloat(data.kadar_beliTujuan),\r\n      kadar_jual: parseFloat(data.kadar_jual),\r\n      kadar_jual2: parseFloat(data.kadar_jualTujuan),\r\n      netto: parseFloat(data.netto).toFixed(3),\r\n      netto2: parseFloat(data.nettoTujuan).toFixed(3),\r\n      pkg: parseFloat(data.pkg).toFixed(3),\r\n      pkg2: parseFloat(data.pkgTujuan).toFixed(3),\r\n      qty: 1,\r\n      qty2: 1,\r\n      gross: (parseFloat(data.bruto) + parseFloat(data.pkg)).toFixed(3),\r\n      gross2: (\r\n        parseFloat(data.brutoTujuan) + parseFloat(data.pkgTujuan)\r\n      ).toFixed(3),\r\n      kode_jenis: result_explode[0].toUpperCase(),\r\n      kode_jenis2: result[0].toUpperCase(),\r\n      kode_kategori: data.kategori,\r\n      kode_kategori2: data.kategoriTujuan,\r\n    };\r\n    barang1.push(simpan);\r\n    localStorage.setItem(\"mutasiBarang\", JSON.stringify(barang1));\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      text: \"Data Berhasil Ditambahkan!\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    })\r\n      .then(() => this.props.dispatch(reset(\"FormMutasiBarang\")))\r\n      .then(() => this.props.dispatch(getListMutasiBarang()));\r\n  }\r\n  onChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  submitMutasiBarang(data) {\r\n    if (localStorage.getItem(\"mutasiBarang\") === null) {\r\n      warning(\"Mohon Tambahkan Barang Yang akan dipindahkan\");\r\n      return false;\r\n    }\r\n    var total = JSON.parse(localStorage.getItem(\"mutasiBarang\")) || [];\r\n    var pkg =\r\n      total &&\r\n      total\r\n        .map((list) => parseFloat(list.pkg))\r\n        .reduce((a, b) => a + b, 0)\r\n        .toFixed(3);\r\n    var total_bruto =\r\n      total &&\r\n      total\r\n        .map((list) => parseFloat(list.bruto))\r\n        .reduce((a, b) => a + b, 0)\r\n        .toFixed(3);\r\n    var total_netto =\r\n      total &&\r\n      total\r\n        .map((list) => parseFloat(list.netto))\r\n        .reduce((a, b) => a + b, 0)\r\n        .toFixed(3);\r\n    var total_netto2 =\r\n      total &&\r\n      total\r\n        .map((list) => parseFloat(list.netto2))\r\n        .reduce((a, b) => a + b, 0)\r\n        .toFixed(3);\r\n    var gross = parseFloat(total_bruto) + parseFloat(pkg);\r\n    var simpan = {\r\n      no_mutasi: this.props.noFaktur,\r\n      no_bon: data.bonMutasi,\r\n      tgl_mutasi: data.tanggal,\r\n      lokasi_asal: data.lokasi,\r\n      lokasi_tujuan: data.lokasi,\r\n      total_gross: gross,\r\n      total_pkg: pkg,\r\n      total_bruto: total_bruto,\r\n      total_netto: total_netto,\r\n      total_netto2: total_netto2,\r\n      keterangan: data.keterangan,\r\n      deskripsi: data.kategori,\r\n      detail_barang: JSON.parse(localStorage.getItem(\"mutasiBarang\")),\r\n    };\r\n    console.log(JSON.stringify(simpan));\r\n    this.props.dispatch(progressSend());\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    var table = JSON.parse(localStorage.getItem(\"mutasiBarang\"));\r\n    // for each ticket pass all its data into an array\r\n    table.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        i++,\r\n        ticket.kode_jenis,\r\n        ticket.bruto,\r\n        ticket.kadar_jual,\r\n        ticket.netto,\r\n        \"<=====>\",\r\n        ticket.kode_jenis,\r\n        ticket.kadar_jual2,\r\n        ticket.netto2,\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    console.log(tableRows);\r\n    var columTable = [\r\n      \"No\",\r\n      \"Kode Jenis\",\r\n      \"Bruto\",\r\n      \"Harga (%)\",\r\n      \"Netto\",\r\n      \"<====>\",\r\n      \"Kode Jenis 2\",\r\n      \"Harga 2\",\r\n      \"Netto 2\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    AxiosMasterPost(\"mutasi-stock/simpan\", simpan)\r\n      .then(() =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Transaksi Berhasil\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => localStorage.removeItem(\"noFaktur\"))\r\n          .then(() => this.props.dispatch(reset(\"HeadMutasiBarang\")))\r\n          .then(() =>\r\n            PrintNota(\r\n              \"Tanggal\",\r\n              data.tanggal,\r\n              \"\",\r\n              \"\",\r\n              \"Nomor Bon\",\r\n              data.noMutasi,\r\n              \"\",\r\n              \"\",\r\n              \"ADMIN\",\r\n              data.tanggal,\r\n              \"\",\r\n              columTable,\r\n              \"MUTASI BARANG\",\r\n              tableRows\r\n            )\r\n          )\r\n          .then(() => localStorage.removeItem(\"mutasiBarang\"))\r\n          .then(() => this.props.dispatch(getListMutasiBarang()))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() =>\r\n            this.setState({\r\n              kodeJenis: \"\",\r\n              kodeJenisTujuan: \"\",\r\n              noMutasi: \"\",\r\n              kodeLokasi: \"\",\r\n              tanggal: \"\",\r\n              keterangan: \"\",\r\n              kategori: \"\",\r\n              noBon: \"\",\r\n            })\r\n          )\r\n          .then(() => this.forceUpdate())\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text: \"Sepertinya ada kendala, silahkan cek koneksi\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() => console.log(err))\r\n          .then(() => this.props.dispatch(finishSend()))\r\n      );\r\n    this.props.dispatch(getListMutasiBarang());\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Mutasi Barang\" />\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <HeadMutasiBarang\r\n                      onSubmit={(data) => this.submitMutasiBarang(data)}\r\n                      onSend={this.props.onSend}\r\n                      noFaktur={this.props.noFaktur}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ModalMasterData\r\n          content={\r\n            <Suspense\r\n              fallback={<Skeleton width={\"100%\"} height={50} count={5} />}\r\n            >\r\n              <FormMutasiBarang onSubmit={(data) => this.handleSubmit(data)} />\r\n            </Suspense>\r\n          }\r\n          title=\"Tambah Data Mutasi Barang\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(MutasiBarang);\r\n"],"sourceRoot":""}