{"version":3,"sources":["renderField.jsx","firebase.js","GetTimbangan.js","Validations/validasiTransaksiPenjualan.js","Transaksi/Component/FormTranskasiPenjualan.jsx"],"names":["renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","maxLength","onKeyPress","e","key","preventDefault","renderFieldSelect","options","disabled","placeholder","value","search","emptyMessage","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","namaTimbangan","localStorage","getItem","enableTimbangan","getTimbangan","props","database","ref","on","snapshot","data","val","nilai","console","log","getTimbanganValidasi","coba","Object","keys","map","list","getTimbanganGross","validasiTransaksiPenjualan","errors","kodeBarang","pkg","p","k","bruto","discGlobalPr","currencyMask","createNumberMask","prefix","suffix","locale","FormTransaksiPenjualan","state","this","dispatch","getListBarang","change","netto","noFaktur","gross","discGlobalGr","toFixed","result_explode","split","setState","kodeJenis","namaJenis","kadarCetak","kadarJual","onSubmit","handleSubmit","Field","name","component","defaultValue","normalize","toUpperCase","onChange","pilihBarang","onBlur","setKadar","KodeBarangList","kode","kode_jenis","nama_jenis","kadar_cetak","kadar_jual","kadar_beli","width","height","onclick1","Component","reduxForm","form","enableReinitialize","validate","selector","formValueSelector","connect","kadarTransaksi","parseFloat","provinsi"],"mappings":"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","file":"static/js/20.f7477281.chunk.js","sourcesContent":["import React from \"react\";\r\nimport SelectSearch from \"react-select-search\";\r\n\r\nexport const renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n      onKeyPress={(e) => {\r\n        e.key === \"Enter\" && e.preventDefault();\r\n      }}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nexport const renderFieldSelect = ({\r\n  input,\r\n  label,\r\n  options,\r\n  placeholder,\r\n  disabled,\r\n  value,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <SelectSearch\r\n      {...input}\r\n      options={options}\r\n      search\r\n      emptyMessage=\"Tidak Ada Data\"\r\n      placeholder=\"Silahkan Pilih\"\r\n      disabled={disabled}\r\n      onKeyPress={(e) => {\r\n        e.key === \"Enter\" && e.preventDefault();\r\n      }}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\n","import firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDZH49wStpEG3wK8IdFwUpt9QHfbliYtdk\",\r\n  authDomain: \"timbangannagatech.firebaseapp.com\",\r\n  databaseURL: \"https://timbangannagatech-default-rtdb.firebaseio.com\",\r\n  projectId: \"timbangannagatech\",\r\n  storageBucket: \"timbangannagatech.appspot.com\",\r\n  messagingSenderId: \"266997300577\",\r\n  appId: \"1:266997300577:web:8f4d8441b9267ed6d3d920\",\r\n  measurementId: \"G-SXVC6P8KNE\",\r\n};\r\n\r\nexport default firebase.initializeApp(firebaseConfig);\r\n","import firebase from \"./firebase\";\r\n\r\nconst namaTimbangan = localStorage.getItem(\"namaTimbangan\");\r\nlet enableTimbangan = localStorage.getItem(\"enableTimbangan\");\r\nexport const getTimbangan = (props) => {\r\n  if (enableTimbangan) {\r\n    firebase\r\n      .database()\r\n      .ref(namaTimbangan)\r\n      .on(\"value\", (snapshot) => {\r\n        let data = snapshot.val();\r\n        props(\"bruto\", data.nilai);\r\n        console.log(data.nilai);\r\n      });\r\n  } else {\r\n    console.log(\"TIMBANGAN TIDAK AKTIF\");\r\n  }\r\n};\r\nexport const getTimbanganValidasi = (props) => {\r\n  if (enableTimbangan) {\r\n    firebase\r\n      .database()\r\n      .ref(namaTimbangan)\r\n      .on(\"value\", (snapshot) => {\r\n        let data = snapshot.val();\r\n        props(\"jumlah\", data.nilai);\r\n        console.log(data.nilai);\r\n        let coba = Object.keys(data).map((list) => data[list]);\r\n        console.log(coba);\r\n      });\r\n  } else {\r\n    console.log(\"TIMBANGAN TIDAK AKTIF\");\r\n  }\r\n};\r\nexport const getTimbanganGross = (props) => {\r\n  if (enableTimbangan) {\r\n    firebase\r\n      .database()\r\n      .ref(namaTimbangan)\r\n      .on(\"value\", (snapshot) => {\r\n        let data = snapshot.val();\r\n        props(\"gross\", data.nilai);\r\n        console.log(data.nilai);\r\n        let coba = Object.keys(data).map((list) => data[list]);\r\n        console.log(coba);\r\n      });\r\n  } else {\r\n    console.log(\"TIMBANGAN TIDAK AKTIF\");\r\n  }\r\n};\r\n","const validasiTransaksiPenjualan = (value) => {\r\n  const errors = {};\r\n  if (!value.kodeBarang) {\r\n    errors.kodeBarang = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.pkg) {\r\n    errors.pkg = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.p) {\r\n    errors.p = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.k) {\r\n    errors.k = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.bruto) {\r\n    errors.bruto = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.discGlobalPr) {\r\n    errors.discGlobalPr = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default validasiTransaksiPenjualan;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm, formValueSelector } from \"redux-form\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport validasiTransaksiPenjualan from \"../../Validations/validasiTransaksiPenjualan\";\r\nimport { getTimbangan } from \"../../GetTimbangan\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { getListBarang } from \"../../actions/kodeBarangAction\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\n\r\nclass FormTransaksiPenjualan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      kodeBarang: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListBarang());\r\n    // getTimbangan(this.props.change);\r\n  }\r\n\r\n  onclick1() {\r\n    this.props.change(\"netto\", this.props.netto);\r\n    this.props.change(\"noFaktur\", this.props.noFaktur);\r\n    this.props.change(\"gross\", this.props.gross);\r\n    this.props.change(\"discGlobalGr\", this.props.discGlobalGr);\r\n    this.props.change(\r\n      \"nettoDiscGlobalExt\",\r\n      (this.props.netto - this.props.discGlobalGr).toFixed(3)\r\n    );\r\n  }\r\n\r\n  pilihBarang(data) {\r\n    var supp = data ? data : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n      namaJenis: result_explode[1],\r\n      kadarCetak: result_explode[2],\r\n      kadarJual: result_explode[3],\r\n    });\r\n  }\r\n\r\n  setKadar() {\r\n    this.props.change(\"keterangan\", this.state.namaJenis);\r\n    this.props.change(\"kadar\", this.state.kadarCetak);\r\n    this.props.change(\"kadarTransaksi\", this.state.kadarJual);\r\n  }\r\n\r\n  setBruto() {\r\n    this.props.change(\"bruto\", localStorage.getItem(\"Timbangan\"));\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 col-lg-12 d-none\">\r\n            <Field\r\n              name=\"noFaktur\"\r\n              label={this.props.noFaktur}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              component={renderField}\r\n              defaultValue={this.props.noFaktur}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            {this.state.kodeBarang ? (\r\n              <Field\r\n                name=\"kodeBarang\"\r\n                label=\"Kode Barang\"\r\n                component={renderFieldSelect}\r\n                className=\"form-control\"\r\n                onChange={(data) => this.pilihBarang(data)}\r\n                onBlur={this.setKadar()}\r\n                options={this.props.KodeBarangList.map((kode) => {\r\n                  let data = {\r\n                    value:\r\n                      kode.kode_jenis +\r\n                      \"|\" +\r\n                      kode.nama_jenis +\r\n                      \"|\" +\r\n                      kode.kadar_cetak +\r\n                      \"|\" +\r\n                      kode.kadar_jual +\r\n                      \"|\" +\r\n                      kode.kadar_beli,\r\n                    name: kode.nama_jenis,\r\n                  };\r\n                  return data;\r\n                })}\r\n              />\r\n            ) : (\r\n              <Skeleton width={\"100%\"} height={50} />\r\n            )}\r\n          </div>\r\n          <div className=\"col-md-8 col-lg-8\">\r\n            <Field\r\n              name=\"keterangan\"\r\n              label=\"Keterangan\"\r\n              type=\"text\"\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <Field\r\n              name=\"kadar\"\r\n              label=\"Kadar (%)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <Field name=\"p\" label=\"P\" type=\"number\" component={renderField} />\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <Field name=\"k\" label=\"K\" type=\"number\" component={renderField} />\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <Field\r\n              name=\"pkg\"\r\n              label=\"Pkg (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <Field\r\n              name=\"bruto\"\r\n              label=\"Berat (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onChange={this.onclick1()}\r\n              // onChange={this.setBruto()}\r\n              // onBlur={this.setBruto()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <Field\r\n              name=\"kadarTransaksi\"\r\n              label=\"Harga (%)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <Field\r\n              name=\"netto\"\r\n              label=\"Netto (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <Field\r\n              name=\"gross\"\r\n              label=\"Gross (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <Field\r\n              name=\"discGlobalPr\"\r\n              label=\"Diskon (%)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <Field\r\n              name=\"discGlobalGr\"\r\n              label=\"Diskon (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <Field\r\n              name=\"nettoDiscGlobalExt\"\r\n              label=\"Netto - Diskon (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 col-lg-3\">\r\n            <label htmlFor=\"\">Ongkos (Rp)</label>\r\n            <Field\r\n              name=\"rp\"\r\n              component=\"input\"\r\n              type=\"tel\"\r\n              className=\"form-control\"\r\n              {...currencyMask}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12 col-md-12\">\r\n            <div className=\"text-right\">\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Simpan\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormTransaksiPenjualan = reduxForm({\r\n  form: \"FormTransaksiPenjualan\",\r\n  enableReinitialize: true,\r\n  validate: validasiTransaksiPenjualan,\r\n})(FormTransaksiPenjualan);\r\nconst selector = formValueSelector(\"FormTransaksiPenjualan\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi, pkg, discGlobalPr } = selector(\r\n    state,\r\n    \"bruto\",\r\n    \"kadarTransaksi\",\r\n    \"pkg\",\r\n    \"discGlobalPr\"\r\n  );\r\n  return {\r\n    netto: (parseFloat(bruto) * (parseFloat(kadarTransaksi) / 100)).toFixed(3),\r\n    gross: parseFloat(bruto) + parseFloat(pkg),\r\n    discGlobalGr: (\r\n      parseFloat(bruto) *\r\n      (parseFloat(discGlobalPr) / 100)\r\n    ).toFixed(3),\r\n    KodeBarangList: state.provinsi.kodeBarang,\r\n  };\r\n})(FormTransaksiPenjualan);\r\n"],"sourceRoot":""}