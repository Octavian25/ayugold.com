{"version":3,"sources":["../node_modules/redux-form/es/index.js","DataMaster/Component/FormParameter.jsx","DataMaster/ParameterTransaksi.jsx","DataMaster/Component/ModalMasterData.jsx","TourGuide.jsx"],"names":["reset","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","change","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors","FormParameter","props","state","response","kategori","onSubmit","this","handleSubmit","className","Field","name","type","normalize","value","toUpperCase","component","renderField","label","disabled","onSend","aria-hidden","Component","reduxForm","form","validationkodeParameter","errors","kodeParameter","enableReinitialize","connect","SearchBar","Search","ExportCSVButton","CSVExport","ParameterTransaksi","columns","dataField","text","csvExport","formatter","rowContent","row","data-tut","onClick","dispatch","kode","kategori_transaksi","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","AxiosMasterDelete","res","berhasil","getListParameter","catch","err","gagal","headerStyle","width","hasil","data","progressSend","AxiosMasterPost","finishSend","hideModal","LogData","showModal","setState","isEdit","style","color","id","alert","role","data-dismiss","aria-label","TourGuide","tourConfig","HeaderCard","ModalMasterData","content","action","tambahModal","keyField","search","searchProps","placeholder","margin","top","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","csvProps","provinsi","parameterTransaksi","error","ModalGlobal","show","onHide","dialogClassName","backdrop","keyboard","Header","closeButton","backgroundColor","Title","Body","modal","disableBody","target","disableBodyScroll","enableBody","enableBodyScroll","map","list","index","selector","console","log","onRequestClose","hideGuide","steps","isOpen","showTourGuide","maskClassName","rounded","accentColor","onAfterOpen","onBeforeClose"],"mappings":"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","file":"static/js/53.5a3ceff8.chunk.js","sourcesContent":["import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { renderField } from \"../../renderField\";\r\n\r\nconst validationkodeParameter = (value) => {\r\n  const errors = {};\r\n  if (!value.kodeParameter) {\r\n    errors.kodeParameter = \"Tidak Boleh kosong\";\r\n  }\r\n  return errors;\r\n};\r\nclass FormParameter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      response: \"\",\r\n      kategori: \"\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3 col-md-3\"></div>\r\n          <div className=\"col-md-6 text-center\">\r\n            <Field\r\n              name=\"kodeParameter\"\r\n              type=\"text\"\r\n              normalize={(value) => value && value.toUpperCase()}\r\n              component={renderField}\r\n              label=\"Kode Parameter\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3\"></div>\r\n          <div className=\"col-md-12 col-lg-12\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-info\"\r\n                disabled={this.props.onSend}\r\n              >\r\n                {this.props.onSend ? (\r\n                  <span\r\n                    className=\"spinner-border spinner-border-sm mr-3\"\r\n                    aria-hidden=\"true\"\r\n                  ></span>\r\n                ) : null}\r\n                Submit\r\n                <i className=\"fa fa-paper-plane ml-3\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormParameter = reduxForm({\r\n  form: \"Parameter\",\r\n  validationkodeParameter,\r\n  enableReinitialize: true,\r\n})(FormParameter);\r\nexport default connect()(FormParameter);\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport,\r\n} from \"react-bootstrap-table2-toolkit\";\r\n\r\nimport FormParameter from \"./Component/FormParameter\";\r\nimport { getListParameter } from \"../actions/parameterTransaksiAction\";\r\nimport { connect } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { reset } from \"redux-form\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { berhasil, gagal, LogData } from \"../Alert\";\r\nimport { AxiosMasterDelete, AxiosMasterPost } from \"../Axios\";\r\nimport { hideModal, showModal } from \"../actions/ModalAction\";\r\nimport ModalMasterData from \"./Component/ModalMasterData\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport TourGuide from \"../TourGuide\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\n\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\nfunction hapus(dispatch, kode) {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      AxiosMasterDelete(\"transaksi-kas/delete/\" + kode)\r\n        .then((res) =>\r\n          berhasil(\"Data Berhasil Dihapus!\").then(() =>\r\n            dispatch(getListParameter())\r\n          )\r\n        )\r\n        .catch((err) => gagal(\"Data Gagal Dihapus!\"));\r\n    }\r\n  });\r\n}\r\nconst maptoState = (state) => {\r\n  return {\r\n    kodeParameter: state.provinsi.parameterTransaksi,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\n\r\nclass ParameterTransaksi extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ParameterTransaksi: [],\r\n      response: \"\",\r\n      columns: [\r\n        {\r\n          dataField: \"kategori_transaksi\",\r\n          text: \"Kode Parameter Transaksi\",\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-danger mr-2\"\r\n                  data-tut=\"reactour_3\"\r\n                  onClick={() =>\r\n                    hapus(this.props.dispatch, row.kategori_transaksi)\r\n                  }\r\n                >\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                  HAPUS\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListParameter());\r\n  }\r\n\r\n  handleSubmit(hasil) {\r\n    let data = {\r\n      kategori_transaksi: hasil.kodeParameter,\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    AxiosMasterPost(\"transaksi-kas/add\", data)\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) =>\r\n        berhasil(\"Data Berhasil Ditambah!\")\r\n          .then(() => this.props.dispatch(getListParameter()))\r\n          .then(() => this.props.dispatch(reset(\"Parameter\")))\r\n      )\r\n      .catch((err) =>\r\n        gagal(\"Data Gagal Ditambah!\")\r\n          .then(() =>\r\n            LogData(\"Data Gagal Ditambah Di Parameter Transaksi\", data, err)\r\n          )\r\n          .then(() => this.props.dispatch(hideModal()))\r\n      );\r\n  }\r\n  tambahModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({ isEdit: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div id=\"notif_alert\" className={this.props.alert} role=\"alert\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n          <strong>Error - </strong> Tidak Bisa Mengambil Data\r\n        </div>\r\n        <TourGuide\r\n          tourConfig={[\r\n            `Untuk Menambahkan Data Parameter Transaksi, Tekan Tombol ini Dan Isi kolom yang disediakan`,\r\n            `Ini adalah data Parameter Transaksi yang sudah tersimpan`,\r\n            `Ini adalah tombol untuk menghapus data pada baris yang dipilih`,\r\n          ]}\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\" Data ParameterTransaksi\" />\r\n              <div className=\"card-body\">\r\n                <ModalMasterData\r\n                  content={\r\n                    <FormParameter\r\n                      onSubmit={(data) => this.handleSubmit(data)}\r\n                      onSend={this.props.onSend}\r\n                    />\r\n                  }\r\n                  title=\"Tambah Data Parameter Transaksi\"\r\n                />\r\n                <form action=\"#\">\r\n                  <div className=\"form-body\">\r\n                    <div className=\"col-lg-12 col-md-12\">\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          name=\"simpan\"\r\n                          id=\"simpan\"\r\n                          type=\"button\"\r\n                          className=\"btn btn-info\"\r\n                          onClick={() => this.tambahModal()}\r\n                          data-tut=\"reactour_1\"\r\n                        >\r\n                          Tambah Data Parameter\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <div data-tut=\"reactour_2\">\r\n                  {this.props.kodeParameter ? (\r\n                    <ToolkitProvider\r\n                      keyField=\"kodeParameter\"\r\n                      data={this.props.kodeParameter}\r\n                      columns={this.state.columns}\r\n                      search\r\n                    >\r\n                      {(props) => (\r\n                        <div className=\"form-group\">\r\n                          <div className=\"text-right mt-5 mb-3\">\r\n                            <SearchBar\r\n                              {...props.searchProps}\r\n                              className=\"form-control\"\r\n                              placeholder=\"Tuliskan Kode / Nama\"\r\n                              style={{ margin: 0, top: \"50%\" }}\r\n                            />\r\n                          </div>\r\n                          <BootstrapTable\r\n                            {...props.baseProps}\r\n                            striped\r\n                            hover\r\n                            condensed\r\n                            bordered={true}\r\n                            headerClasses=\"header-table\"\r\n                            pagination={paginationFactory()}\r\n                          />\r\n                          <ExportCSVButton\r\n                            {...props.csvProps}\r\n                            className=\"btn btn-primary\"\r\n                          >\r\n                            Export CSV\r\n                          </ExportCSVButton>\r\n                        </div>\r\n                      )}\r\n                    </ToolkitProvider>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoState, null)(ParameterTransaksi);\r\n","import { Modal } from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { hideModal } from \"../../actions/ModalAction\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    show: state.modal.show,\r\n  };\r\n};\r\nclass ModalGlobal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <Modal\r\n        show={this.props.show}\r\n        onHide={() => this.props.dispatch(hideModal())}\r\n        dialogClassName=\"modal-xl\"\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header\r\n          closeButton\r\n          style={{ backgroundColor: \"#5F76E8\", color: \"#ffffff\" }}\r\n        >\r\n          <Modal.Title>{this.props.title || \"\"}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{this.props.content || \"\"}</Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoState, null)(ModalGlobal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { hideGuide } from \"./actions/ModalAction\";\r\nimport Tour from \"reactour\";\r\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\r\n\r\nconst mapToState = (state) => {\r\n  return {\r\n    showTourGuide: state.provinsi.showTourGuide,\r\n  };\r\n};\r\nclass TourGuide extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  disableBody = (target) => disableBodyScroll(target);\r\n  enableBody = (target) => enableBodyScroll(target);\r\n  render() {\r\n    let tourConfig = this.props.tourConfig.map((list, index) => {\r\n      let data = {\r\n        selector: '[data-tut=\"reactour_' + ++index + '\"]',\r\n        content: list,\r\n      };\r\n      return data;\r\n    });\r\n    console.log(tourConfig);\r\n    return (\r\n      <Tour\r\n        onRequestClose={() => this.props.dispatch(hideGuide())}\r\n        steps={tourConfig}\r\n        isOpen={this.props.showTourGuide}\r\n        maskClassName=\"mask\"\r\n        className=\"helper\"\r\n        rounded={5}\r\n        accentColor=\"#5cb7b7\"\r\n        onAfterOpen={this.disableBody}\r\n        onBeforeClose={this.enableBody}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapToState, null)(TourGuide);\r\n"],"sourceRoot":""}