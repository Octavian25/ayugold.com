{"version":3,"sources":["Supervisory/CetakUlangForm/FormLaporanReturnCustomer.jsx"],"names":["FormLaporanReturnCustomer","props","inputChange","input","e","setState","target","value","pilihSupplier","result_explode","split","kodeSupplier","namaSupplier","state","listSupplier","columns","dataField","text","csvExport","formatter","rowContent","row","className","onClick","getDetails","data","tanggal","listPenerimaan","this","dispatch","getsupplierList","getcustomerList","getUUID","getCetakUlang","AxiosMasterGet","kode_customer","tanggal_awal","tanggal_akhir","then","res","checkLaporan","hasilDataGet","detail","tableRows","table","detail_barang","forEach","ticket","i","ticketData","kadar_cetak","kode_jenis","parseFloat","bruto","toFixed","kadar_jual","disc","netto","pkg","qty","ongkos_rp","toLocaleString","push","footer","map","list","reduce","a","b","totalNWExt","PrintNota","no_bon","toUpperCase","tanggal_invoice","to","type","aria-hidden","title","name","component","renderFieldSelect","options","customer","nama_customer","label","placeholder","renderField","caridata","keyField","search","Component","reduxForm","form","selector","formValueSelector","connect","provinsi"],"mappings":"mSAeMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAkERC,YAAc,SAACC,GAAD,OAAW,SAACC,GACxB,EAAKC,SAAL,eACGF,EAAQC,EAAEE,OAAOC,UArEH,EAyEnBC,cAAgB,SAACL,GAAD,OAAW,SAACC,GAC1B,IACIK,GADOL,EAAEE,OAAOC,MAAQH,EAAEE,OAAOC,MAAQ,oBACnBG,MAAM,KAChC,EAAKL,SAAS,CACZM,aAAcF,EAAe,GAC7BG,aAAcH,EAAe,OA5E/B,EAAKI,MAAQ,CACXC,aAAc,GACdC,QAAS,CACP,CACEC,UAAW,kBACXC,KAAM,WAGR,CACED,UAAW,SACXC,KAAM,aAER,CACED,UAAW,cACXC,KAAM,mBAER,CACED,UAAW,YACXC,KAAM,iBAER,CACED,UAAW,cACXC,KAAM,mBAER,CACED,UAAW,WACXC,KAAM,gBAER,CACED,UAAW,QACXC,KAAM,aAER,CACED,UAAW,OACXC,KAAM,OACNC,WAAW,EACXC,UAAW,SAACC,EAAYC,GACtB,OACE,yBAAKC,UAAU,eACb,4BACEA,UAAU,uBACVC,QAAS,kBAAM,EAAKC,WAAWH,KAE/B,uBAAGC,UAAU,qBAJf,aAYVG,KAAM,CACJ,CACEC,QAAS,eAGbC,eAAgB,OA1DD,E,gEA8DjBC,KAAK3B,MAAM4B,SAASC,eACpBF,KAAK3B,MAAM4B,SAASE,eACpBH,KAAK3B,MAAM4B,SAASG,eACpBJ,KAAK3B,MAAM4B,SAASI,iB,iCAgBV,IAAD,OACTC,YAAe,gCAAD,OACoBN,KAAK3B,MAAMkC,cAD/B,YACgDP,KAAK3B,MAAMmC,aAD3D,YAC2ER,KAAK3B,MAAMoC,gBAClGC,MAAK,SAACC,GACFC,YAAaD,EAAId,OACnB,EAAKpB,SAAS,CACZoC,aAAcF,EAAId,MAAQc,EAAId,KAAK,GAAGiB,c,iCAMnCjB,GAET,IAAMkB,EAAY,GACdC,EAAQnB,EAAKoB,cAEjBD,EAAME,SAAQ,SAACC,EAAQC,GACrB,IAAMC,EAAa,GACfD,EACFD,EAAOG,YACPH,EAAOI,WACPC,WAAWL,EAAOM,OAAOC,QAAQ,GACjCP,EAAOQ,WACPH,WAAWL,EAAOS,MAAMF,QAAQ,GAChCF,WAAWL,EAAOU,OAAOH,QAAQ,GACjCP,EAAOW,IACPX,EAAOY,IACPP,WAAWL,EAAOa,WAAWC,eAAe,SAC5C,IAGFlB,EAAUmB,KAAKb,MAEjB,IAAMc,EAAS,CACb,GACA,GACA,GACAnB,EACGoB,KAAI,SAACC,GAAD,OAAUb,WAAWa,EAAKZ,UAC9Ba,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GACxBd,QAAQ,GACX,GACAV,EACGoB,KAAI,SAACC,GAAD,OAAUb,WAAWa,EAAKT,SAC9BU,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GACxBd,QAAQ,GACXV,EACGoB,KAAI,SAACC,GAAD,OAAUb,WAAWa,EAAKR,UAC9BS,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GACxBd,QAAQ,GACXV,EAAMoB,KAAI,SAACC,GAAD,OAAUb,WAAWa,EAAKP,QAAMQ,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAClExB,EAAMoB,KAAI,SAACC,GAAD,OAAUb,WAAWa,EAAKN,QAAMO,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAClExB,EACGoB,KAAI,SAACC,GAAD,OAAUb,WAAWa,EAAKL,cAC9BM,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GACxBP,eAAe,SAClBjC,KAAKf,MAAMwD,YAEb1B,EAAUmB,KAAKC,GAefO,YACE,SACA7C,EAAK8C,OAAOC,cACZ,UACA/C,EAAKgD,gBACL,GACA,GACA,GACA,GACA,QACA7C,KAAKf,MAAMa,QACX,GAzBe,CACf,KACA,QACA,OACA,eACA,cACA,SACA,eACA,MACA,MACA,gBACA,0BAgBA,6BACAiB,K,+BAGM,IAAD,OACP,OACE,oCACE,yBAAKrB,UAAU,mBACb,wBAAIA,UAAU,mBACZ,kBAAC,IAAD,CAAMoD,GAAG,oBACP,4BAAQC,KAAK,SAASrD,UAAU,qBAC9B,uBAAGA,UAAU,wBAAwBsD,cAAY,SAAY,IAD/D,UAMJ,yBAAKtD,UAAU,QACb,kBAAC,UAAD,CAAYuD,MAAM,6BAClB,yBAAKvD,UAAU,aACb,6BACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,CACEwD,KAAK,gBACLC,UAAWC,IACXC,QAASrD,KAAK3B,MAAMiF,SAASlB,KAAI,SAACvC,GAKhC,MAJY,CACVlB,MAAOkB,EAAKU,cACZ2C,KAAMrD,EAAK0D,kBAIfR,KAAK,OACLS,MAAM,gBACNC,YAAY,2BAGhB,yBAAK/D,UAAU,YACb,kBAAC,IAAD,CACEwD,KAAK,eACLC,UAAWO,IACXX,KAAK,OACLS,MAAM,aACNC,YAAY,wBAGhB,yBAAK/D,UAAU,YACb,kBAAC,IAAD,CACEwD,KAAK,gBACLC,UAAWO,IACXX,KAAK,OACLS,MAAM,gBACNC,YAAY,2BAGhB,yBAAK/D,UAAU,4BACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,eAQjB,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,cACb,4BACEA,UAAU,kBACVC,QAAS,kBAAM,EAAKgE,aAEpB,uBAAGjE,UAAU,sBAJf,eASJ,yBAAKA,UAAU,aACb,kBAAC,IAAD,CACEkE,SAAS,SACT/D,KAAMG,KAAKf,MAAM4B,aACjB1B,QAASa,KAAKf,MAAME,QACpB0E,QAAM,gB,GA3PUC,aAyQxC1F,EAA4B2F,YAAU,CACpCC,KAAM,6BADoBD,CAEzB3F,GACH,IAAM6F,EAAWC,YAAkB,6BACpBC,uBAAQ,SAAClF,GAAW,IAAD,EACuBgF,EACrDhF,EACA,gBACA,eACA,iBAJMsB,EADwB,EACxBA,cAAeC,EADS,EACTA,aAAcC,EADL,EACKA,cAMrC,MAAO,CACL6C,SAAUrE,EAAMmF,SAASd,SACzB/C,cAAeA,EACfE,cAAeA,EACfD,aAAcA,KAXH2D,CAaZ/F","file":"static/js/116.8fd9894e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getCetakUlang } from \"../../actions/cetakUlangAction\";\r\nimport { getUUID } from \"../../actions/fakturAction\";\r\nimport { getsupplierList } from \"../../actions/supplierAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HeaderCard from \"../../HeaderCard\";\r\nimport GlobalTabel from \"../../GlobalComponent/GlobalTabel\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { getcustomerList } from \"../../actions/customerAction\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport PrintNota from \"../../Stocking/Component/PrintNota\";\r\nimport { checkLaporan } from \"../../helper\";\r\n\r\nclass FormLaporanReturnCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listSupplier: [],\r\n      columns: [\r\n        {\r\n          dataField: \"tanggal_invoice\",\r\n          text: \"Tanggal\",\r\n        },\r\n\r\n        {\r\n          dataField: \"no_bon\",\r\n          text: \"Nomor Bon\",\r\n        },\r\n        {\r\n          dataField: \"total_bruto\",\r\n          text: \"Total Bruto(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"total_ext\",\r\n          text: \"Total Ext(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"total_netto\",\r\n          text: \"Total Netto(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"total_rp\",\r\n          text: \"Total Rp(Rp)\",\r\n        },\r\n        {\r\n          dataField: \"total\",\r\n          text: \"Total(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-warning mr-2\"\r\n                  onClick={() => this.getDetails(row)}\r\n                >\r\n                  <i className=\"fa fa-print mr-1\"></i>\r\n                  Print\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      data: [\r\n        {\r\n          tanggal: \"2020-11-12\",\r\n        },\r\n      ],\r\n      listPenerimaan: \"ada\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getsupplierList());\r\n    this.props.dispatch(getcustomerList());\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getCetakUlang());\r\n  }\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  pilihSupplier = (input) => (e) => {\r\n    var supp = e.target.value ? e.target.value : \"DEFALT | DEFAULT\";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeSupplier: result_explode[0],\r\n      namaSupplier: result_explode[1],\r\n    });\r\n  };\r\n  caridata() {\r\n    AxiosMasterGet(\r\n      `report/retur-customer/DETAIL&${this.props.kode_customer}&${this.props.tanggal_awal}&${this.props.tanggal_akhir}`\r\n    ).then((res) => {\r\n      if (checkLaporan(res.data)) {\r\n        this.setState({\r\n          hasilDataGet: res.data && res.data[0].detail,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  getDetails(data) {\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    var table = data.detail_barang;\r\n    // for each ticket pass all its data into an array\r\n    table.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        ++i,\r\n        ticket.kadar_cetak,\r\n        ticket.kode_jenis,\r\n        parseFloat(ticket.bruto).toFixed(3),\r\n        ticket.kadar_jual,\r\n        parseFloat(ticket.disc).toFixed(3),\r\n        parseFloat(ticket.netto).toFixed(3),\r\n        ticket.pkg,\r\n        ticket.qty,\r\n        parseFloat(ticket.ongkos_rp).toLocaleString(\"id-ID\"),\r\n        \"\",\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    const footer = [\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      table\r\n        .map((list) => parseFloat(list.bruto))\r\n        .reduce((a, b) => a + b, 0)\r\n        .toFixed(3),\r\n      \"\",\r\n      table\r\n        .map((list) => parseFloat(list.disc))\r\n        .reduce((a, b) => a + b, 0)\r\n        .toFixed(3),\r\n      table\r\n        .map((list) => parseFloat(list.netto))\r\n        .reduce((a, b) => a + b, 0)\r\n        .toFixed(3),\r\n      table.map((list) => parseFloat(list.pkg)).reduce((a, b) => a + b, 0),\r\n      table.map((list) => parseFloat(list.qty)).reduce((a, b) => a + b, 0),\r\n      table\r\n        .map((list) => parseFloat(list.ongkos_rp))\r\n        .reduce((a, b) => a + b, 0)\r\n        .toLocaleString(\"id-ID\"),\r\n      this.state.totalNWExt,\r\n    ];\r\n    tableRows.push(footer);\r\n    var columTable = [\r\n      \"No\",\r\n      \"Kadar\",\r\n      \"Kode\",\r\n      \"Bruto \\n(Gr)\",\r\n      \"Harga \\n(%)\",\r\n      \"Diskon\",\r\n      \"Netto \\n(Gr)\",\r\n      \"Pkg\",\r\n      \"Qty\",\r\n      \"Ongkos \\n(Rp)\",\r\n      \"Grand Total\\nNetto Ext\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    PrintNota(\r\n      \"No Bon\",\r\n      data.no_bon.toUpperCase(),\r\n      \"Tanggal\",\r\n      data.tanggal_invoice,\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"ADMIN\",\r\n      this.state.tanggal,\r\n      \"\",\r\n      columTable,\r\n      \"Return Transaksi Penjualan\",\r\n      tableRows\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"container-fluid\">\r\n          <ol className=\"breadcrumb mb-2\">\r\n            <Link to=\"/cetakUlangBukti\">\r\n              <button type=\"button\" className=\"btn btn-secondary\">\r\n                <i className=\"fa fa-angle-left mr-3\" aria-hidden=\"true\"></i>{\" \"}\r\n                Back\r\n              </button>\r\n            </Link>\r\n          </ol>\r\n          <div className=\"card\">\r\n            <HeaderCard title=\"Cetak Ulang Bukti Return\" />\r\n            <div className=\"card-body\">\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"kode_customer\"\r\n                    component={renderFieldSelect}\r\n                    options={this.props.customer.map((data) => {\r\n                      let hasil = {\r\n                        value: data.kode_customer,\r\n                        name: data.nama_customer,\r\n                      };\r\n                      return hasil;\r\n                    })}\r\n                    type=\"text\"\r\n                    label=\"Nama Customer\"\r\n                    placeholder=\"Masukan Nama Customer\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"tanggal_awal\"\r\n                    component={renderField}\r\n                    type=\"date\"\r\n                    label=\"Mulai Dari\"\r\n                    placeholder=\"Masukan Mulai Dari\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"tanggal_akhir\"\r\n                    component={renderField}\r\n                    type=\"date\"\r\n                    label=\"Sampai Dengan\"\r\n                    placeholder=\"Masukan Sampai Dengan\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-12 col-lg-12 mt-3\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-6 col-md-6\">\r\n                      <div className=\"text-left\">\r\n                        {/* <Link to=\"/ViewPDF\">\r\n                              <button className=\"btn btn-primary\" type=\"button\">\r\n                                PDF\r\n                              </button>\r\n                            </Link> */}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-lg-6 col-md-6\">\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          onClick={() => this.caridata()}\r\n                        >\r\n                          <i className=\"fa fa-search mr-1\"></i>\r\n                          Cari Data\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <GlobalTabel\r\n                        keyField=\"no_bon\"\r\n                        data={this.state.hasilDataGet}\r\n                        columns={this.state.columns}\r\n                        search\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nFormLaporanReturnCustomer = reduxForm({\r\n  form: \"FormLaporanReturnCustomer\",\r\n})(FormLaporanReturnCustomer);\r\nconst selector = formValueSelector(\"FormLaporanReturnCustomer\");\r\nexport default connect((state) => {\r\n  const { kode_customer, tanggal_awal, tanggal_akhir } = selector(\r\n    state,\r\n    \"kode_customer\",\r\n    \"tanggal_awal\",\r\n    \"tanggal_akhir\"\r\n  );\r\n  return {\r\n    customer: state.provinsi.customer,\r\n    kode_customer: kode_customer,\r\n    tanggal_akhir: tanggal_akhir,\r\n    tanggal_awal: tanggal_awal,\r\n  };\r\n})(FormLaporanReturnCustomer);\r\n"],"sourceRoot":""}