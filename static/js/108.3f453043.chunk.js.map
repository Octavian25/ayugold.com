{"version":3,"sources":["Transaksi/TransaksiPenjualan.jsx","../node_modules/redux-form/es/index.js","HeaderCard.jsx","Stocking/Component/PrintNota.jsx"],"names":["ModalMasterData","lazy","FormTransaksiPenjualan","TransaksiPenjualan","process","REACT_APP_BACKEND_URL_NON_MASTER","props","inputChange","input","e","setState","target","value","inputGrandTotal","GrandNetto","sumGross","parseFloat","state","discGlobalGr","grandTotal","console","log","warning","discount","hasil","localStorage","getItem","toFixed","discGlobalPr","GrandTotalNetto","listLokasi","listSales","listCustomer","columns","dataField","text","footerClasses","csvExport","formatter","rowContent","row","rowIndex","className","data-tip","data-for","onClick","deleteRow","netto_disc","id","type","effect","totalNWExt","noBon","namaCustomer","lokasi","sales","namaToko","tanggal","data","dihapus","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","array","JSON","parse","splice","setItem","stringify","awal","timer","showConfirmButton","position","dispatch","getTotalNW","getListTransaksiPenjualan","this","getLokasi","getsalesmanList","getcustomerList","getUUID","getBruto","getNetto","getPkg","getRp","getGross","getP","getK","getQty","result_explode","kodeBarang","split","simpan","nettoDiscGlobalExt","gross","netto","qty","kulit","k","ongkos_rp","undefined","rp","kadar_cetak","disc_persen","kadar_jual","kadarTransaksi","kadar_modal","kode_jenis","no_barcode","plastik","p","disc","pkg","bruto","push","map","list","reduce","a","b","reset","no_bon","toUpperCase","no_penjualan","noFaktur","no_po","kode_lokasi","kode_sales","kode_customer","kodeCustomer","detail_barang","total_netto","totalNW","total_netto_disc","total_netto_disc_ext","progressSend","tableRows","table","forEach","ticket","i","ticketData","toLocaleString","footer","columTable","AxiosMasterPost","PrintNota","finishSend","removeItem","toko","document","getElementById","catch","err","response","onKeyDown","event","key","htmlFor","name","label","onChange","options","obj","nama_lokasi","search","placeholder","onSubmit","nama_sales","nama_customer","nama_toko","onSubmitToko","onBlur","defaultValue","min","step","readOnly","showModal","class","aria-hidden","transaksiPenjualan","keyField","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","noDataIndication","disabled","onSend","transaksiPenjualanSubmit","content","fallback","width","height","count","handleSubmit","Component","reduxForm","form","enableReinitialize","connect","provinsi","customer","salesman","sumNetto","perhitungan","sumBruto","sumPkg","sumP","sumK","sumQty","sumRp","username","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","change","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors","HeaderCard","style","fontSize","backgroundColor","borderTopLeftRadius","borderTopRightRadius","color","row1name","row1isi","row2name","row2isi","row3name","row3isi","row4name","row4isi","validby","tableColumn","doc","jsPDF","autoTable","startY","finalY","lastAutoTable","setFontSize","string","output","embed","x","window","open","write","close"],"mappings":"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","file":"static/js/108.3f453043.chunk.js","sourcesContent":["import React, { Component, lazy, Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm, reset } from \"redux-form\";\r\nimport axios from \"axios\";\r\n\r\nimport SelectSearch from \"react-select-search\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getListTransaksiPenjualan } from \"../actions/transaksiPenjualanAction\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport {\r\n  finishSend,\r\n  getBruto,\r\n  getGross,\r\n  getK,\r\n  getNetto,\r\n  getP,\r\n  getPkg,\r\n  getQty,\r\n  getRp,\r\n  progressSend,\r\n} from \"../actions/LogicAction\";\r\nimport PrintNota from \"../Stocking/Component/PrintNota\";\r\nimport { warning } from \"../Alert\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport {\r\n  getListReturnPenjualan,\r\n  getTotalNW,\r\n} from \"../actions/returnPenjualanAction\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { showModal } from \"../actions/ModalAction\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport { getLokasi } from \"../actions/lokasiAction\";\r\nimport { getsalesmanList } from \"../actions/salesmanAction\";\r\nimport { getcustomerList } from \"../actions/customerAction\";\r\nimport { AxiosMasterPost } from \"../Axios\";\r\n\r\nconst ModalMasterData = lazy(() =>\r\n  import(\"../DataMaster/Component/ModalMasterData\")\r\n);\r\nconst FormTransaksiPenjualan = lazy(() =>\r\n  import(\"./Component/FormTranskasiPenjualan\")\r\n);\r\nconst maptostate = (state) => {\r\n  return {\r\n    noFaktur: state.provinsi.noFaktur,\r\n    transaksiPenjualan: state.provinsi.transaksiPenjualan,\r\n    listCustomer: state.provinsi.customer,\r\n    listLokasi: state.provinsi.lokasi,\r\n    listSales: state.provinsi.salesman,\r\n    totalNW: state.provinsi.totalNW,\r\n    sumNetto: state.perhitungan.sumNetto,\r\n    sumBruto: state.perhitungan.sumBruto,\r\n    sumPkg: state.perhitungan.sumPkg,\r\n    sumP: state.perhitungan.sumP,\r\n    sumK: state.perhitungan.sumK,\r\n    sumQty: state.perhitungan.sumNetto,\r\n    sumGross: state.perhitungan.sumGross,\r\n    sumRp: state.perhitungan.sumRp,\r\n    username: state.provinsi.username,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nconst serverNonMaster = process.env.REACT_APP_BACKEND_URL_NON_MASTER;\r\nclass TransaksiPenjualan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listLokasi: [],\r\n      listSales: [],\r\n      listCustomer: [],\r\n      columns: [\r\n        {\r\n          dataField: \"kode_jenis\",\r\n          text: \"Kode Barang\",\r\n        },\r\n        {\r\n          dataField: \"kadar_cetak\",\r\n          text: \"Kadar Cetak(%)\",\r\n        },\r\n        {\r\n          dataField: \"plastik\",\r\n          text: \"P\",\r\n        },\r\n        {\r\n          dataField: \"kulit\",\r\n          text: \"K\",\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Bungkus(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Berat(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"kadar_jual\",\r\n          text: \"Harga(%)\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Murni(Gr)\",\r\n\r\n          footerClasses: \"sum-netto-terima-supplier\",\r\n        },\r\n        {\r\n          dataField: \"disc_persen\",\r\n          text: \"%\",\r\n\r\n          footerClasses: \"sum-netto-terima-supplier\",\r\n        },\r\n        {\r\n          dataField: \"disc\",\r\n          text: \"Disc (Gr)\",\r\n\r\n          footerClasses: \"sum-netto-terima-supplier\",\r\n        },\r\n        {\r\n          dataField: \"netto_disc\",\r\n          text: \"Netto Disc(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row, rowIndex) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  data-tip\r\n                  data-for=\"hapus\"\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() => this.deleteRow(rowIndex, row.netto_disc)}\r\n                >\r\n                  <ReactTooltip id=\"hapus\" type=\"dark\" effect=\"solid\">\r\n                    <span>Hapus</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                </button>\r\n                <br />\r\n                {/* <button\r\n                  data-tip\r\n                  data-for=\"edit\"\r\n                  className=\"btn btn-warning mr-2\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#editModal\"\r\n                  onClick={() => this.setEdit(row)}\r\n                >\r\n                  <ReactTooltip id=\"edit\" type=\"dark\" effect=\"solid\">\r\n                    <span>Edit</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-edit mr-1\"></i>\r\n                </button> */}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      discGlobalGr: 0,\r\n      discGlobalPr: 0,\r\n      totalNWExt: 0,\r\n      noBon: \"\",\r\n      namaCustomer: \"\",\r\n      lokasi: \"\",\r\n      sales: \"\",\r\n      namaToko: \"\",\r\n      tanggal: \"\",\r\n      data: \"\",\r\n    };\r\n  }\r\n\r\n  deleteRow(rowIndex, dihapus) {\r\n    Swal.fire({\r\n      title: \"Anda Yakin ?\",\r\n      text: \"Anda Akan Menghapus Data Ini ?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        const array =\r\n          JSON.parse(localStorage.getItem(\"transaksiPenjualan\")) || [];\r\n        array.splice(rowIndex, 1);\r\n        localStorage.setItem(\"transaksiPenjualan\", JSON.stringify(array));\r\n        var awal = localStorage.getItem(\"GrandTotalNetto\");\r\n        var hasil = parseFloat(awal) - parseFloat(dihapus);\r\n        localStorage.setItem(\"GrandTotalNetto\", parseFloat(hasil).toFixed(3));\r\n        Swal.fire({\r\n          text: \"Berhasil\",\r\n          timer: 2000,\r\n          showConfirmButton: false,\r\n          position: \"top-right\",\r\n          icon: \"success\",\r\n        })\r\n          .then(() => this.props.dispatch(getTotalNW()))\r\n          .then(() => this.props.dispatch(getListTransaksiPenjualan()))\r\n          .then(() =>\r\n            this.setState({\r\n              GrandTotalNetto: (\r\n                parseFloat(localStorage.getItem(\"GrandTotalNetto\") || 0) - 0\r\n              ).toFixed(3),\r\n            })\r\n          );\r\n      }\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getLokasi());\r\n    this.props.dispatch(getsalesmanList());\r\n    this.props.dispatch(getcustomerList());\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getListTransaksiPenjualan());\r\n    this.props.dispatch(getTotalNW());\r\n    this.props.dispatch(getBruto(\"transaksiPenjualan\"));\r\n    this.props.dispatch(getNetto(\"transaksiPenjualan\"));\r\n    this.props.dispatch(getPkg(\"transaksiPenjualan\"));\r\n    this.props.dispatch(getRp(\"transaksiPenjualan\"));\r\n    this.props.dispatch(getGross(\"transaksiPenjualan\"));\r\n    this.props.dispatch(getP(\"transaksiPenjualan\"));\r\n    this.props.dispatch(getK(\"transaksiPenjualan\"));\r\n    this.props.dispatch(getQty(\"transaksiPenjualan\"));\r\n    this.setState({\r\n      GrandTotalNetto: (\r\n        parseFloat(localStorage.getItem(\"GrandTotalNetto\") || 0) - 0\r\n      ).toFixed(3),\r\n    });\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    var barang = data.kodeBarang\r\n      ? data.kodeBarang\r\n      : \"DEFAULT|DEFAULT|DEFAULT|DEFAULT\";\r\n    var result_explode = barang.split(\"|\");\r\n    var simpan = {\r\n      netto_disc: data.nettoDiscGlobalExt,\r\n      gross: parseFloat(data.gross), //berat + bungkus\r\n      netto: parseFloat(data.netto), //murni\r\n      qty: 1,\r\n      kulit: parseFloat(data.k),\r\n      ongkos_rp: parseFloat(data.rp === undefined ? 0 : data.rp), //ongkos\r\n      kadar_cetak: result_explode[2],\r\n      disc_persen: data.discGlobalPr,\r\n      kadar_jual: parseFloat(data.kadarTransaksi), //harga%\r\n      kadar_modal: result_explode[4], //harga%\r\n      kode_jenis: result_explode[0], //kodebarang\r\n      no_barcode: \"-\",\r\n      plastik: parseFloat(data.p),\r\n      disc: data.discGlobalGr,\r\n      pkg: parseFloat(data.pkg),\r\n      bruto: parseFloat(data.bruto), //berat\r\n    };\r\n    var array = JSON.parse(localStorage.getItem(\"transaksiPenjualan\")) || [];\r\n    array.push(simpan);\r\n    var GrandTotalNetto = array\r\n      .map((list) => parseFloat(list.netto_disc))\r\n      .reduce((a, b) => a + b, 0)\r\n      .toFixed(3);\r\n    localStorage.setItem(\"GrandTotalNetto\", GrandTotalNetto);\r\n    localStorage.setItem(\"transaksiPenjualan\", JSON.stringify(array));\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      text: \"Data Berhasil Ditambahkan!\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n    this.props.dispatch(getListTransaksiPenjualan());\r\n    this.props.dispatch(getTotalNW());\r\n    this.props.dispatch(reset(\"FormTransaksiPenjualan\"));\r\n\r\n    this.props.dispatch(getNetto(\"transaksiPenjualan\"));\r\n    this.setState({\r\n      discGlobalGr:\r\n        (parseFloat(0) / 100) *\r\n        parseFloat(localStorage.getItem(\"GrandTotalNetto\")),\r\n      discGlobalPr: 0,\r\n      GrandTotalNetto: (\r\n        parseFloat(localStorage.getItem(\"GrandTotalNetto\")) - 0\r\n      ).toFixed(3),\r\n    });\r\n  }\r\n\r\n  transaksiPenjualanSubmit() {\r\n    if (localStorage.getItem(\"transaksiPenjualan\") === null) {\r\n      warning(\"Barang masih kosong, Silahkan tambah barang\");\r\n      return false;\r\n    } else if (this.state.noBon === \"\") {\r\n      warning(\"Mohon isi Nomor bon\");\r\n      return false;\r\n    } else if (this.state.lokasi === \"\") {\r\n      warning(\"Mohon pilih lokasi\");\r\n      return false;\r\n    } else if (this.state.sales === \"\") {\r\n      warning(\"Mohon pilih Sales\");\r\n      return false;\r\n    } else if (this.state.namaToko === \"\") {\r\n      warning(\"Mohon pilih toko\");\r\n      return false;\r\n    } else if (this.state.discGlobalPr === \"\") {\r\n      warning(\"Mohon isi Discount\");\r\n      return false;\r\n    } else if (this.state.discGlobalGr === \"\") {\r\n      warning(\"Mohon isi Discount Gr\");\r\n      return false;\r\n    } else if (this.state.totalNWExt === 0) {\r\n      warning(\"Mohon isi Grand Total\");\r\n      return false;\r\n    } else if (this.state.tanggal === \"\") {\r\n      warning(\"Mohon isi Tanggal\");\r\n      return false;\r\n    }\r\n    var simpan = {\r\n      no_bon: this.state.noBon.toUpperCase(),\r\n      no_penjualan: this.props.noFaktur.toUpperCase(),\r\n      no_po: \"-\",\r\n      tanggal: this.state.tanggal,\r\n      kode_lokasi: this.state.lokasi.toUpperCase(),\r\n      kode_sales: this.state.sales.toUpperCase(),\r\n      kode_customer: this.state.kodeCustomer.toUpperCase(),\r\n      detail_barang: JSON.parse(localStorage.getItem(\"transaksiPenjualan\")),\r\n      total_netto: this.props.totalNW,\r\n      disc_persen: this.state.discGlobalPr,\r\n      disc: this.state.discGlobalGr,\r\n      total_netto_disc: this.state.GrandTotalNetto,\r\n      total_netto_disc_ext: this.state.totalNWExt,\r\n    };\r\n    console.log(JSON.stringify(simpan));\r\n    this.props.dispatch(progressSend());\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    var table = JSON.parse(localStorage.getItem(\"transaksiPenjualan\"));\r\n    // for each ticket pass all its data into an array\r\n    table.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        ++i,\r\n        ticket.kadar_cetak,\r\n        ticket.kode_jenis,\r\n        parseFloat(ticket.bruto).toFixed(3),\r\n        ticket.kadar_jual,\r\n        parseFloat(ticket.disc).toFixed(3),\r\n        parseFloat(ticket.netto).toFixed(3),\r\n        ticket.pkg,\r\n        ticket.qty,\r\n        parseFloat(ticket.ongkos_rp).toLocaleString(\"id-ID\"),\r\n        \"\",\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    const footer = [\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      table\r\n        .map((list) => parseFloat(list.bruto))\r\n        .reduce((a, b) => a + b, 0)\r\n        .toFixed(3),\r\n      \"\",\r\n      table\r\n        .map((list) => parseFloat(list.disc))\r\n        .reduce((a, b) => a + b, 0)\r\n        .toFixed(3),\r\n      table\r\n        .map((list) => parseFloat(list.netto))\r\n        .reduce((a, b) => a + b, 0)\r\n        .toFixed(3),\r\n      table.map((list) => parseFloat(list.pkg)).reduce((a, b) => a + b, 0),\r\n      table.map((list) => parseFloat(list.qty)).reduce((a, b) => a + b, 0),\r\n      table\r\n        .map((list) => parseFloat(list.ongkos_rp))\r\n        .reduce((a, b) => a + b, 0)\r\n        .toLocaleString(\"id-ID\"),\r\n      this.state.totalNWExt,\r\n    ];\r\n    tableRows.push(footer);\r\n    console.log(JSON.stringify(tableRows));\r\n    var columTable = [\r\n      \"No\",\r\n      \"Kadar\",\r\n      \"Kode\",\r\n      \"Bruto \\n(Gr)\",\r\n      \"Harga \\n(%)\",\r\n      \"Diskon\",\r\n      \"Netto \\n(Gr)\",\r\n      \"Pkg\",\r\n      \"Qty\",\r\n      \"Ongkos \\n(Rp)\",\r\n      \"Grand Total\\nNetto Ext\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    AxiosMasterPost(\"penjualan/simpan\", simpan)\r\n      .then(() =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Data Berhasil Ditambahkan!\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() =>\r\n            PrintNota(\r\n              \"no Trx\",\r\n              this.props.noFaktur.toUpperCase(),\r\n              \"Tanggal\",\r\n              this.state.tanggal,\r\n              \"No Bon\",\r\n              this.state.noBon.toUpperCase(),\r\n              \"Sales\",\r\n              this.state.namaToko.toUpperCase(),\r\n              \"ADMIN\",\r\n              this.state.tanggal,\r\n              \"\",\r\n              columTable,\r\n              \"Transaksi Penjualan\",\r\n              tableRows\r\n            )\r\n          )\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => localStorage.removeItem(\"transaksiPenjualan\"))\r\n          .then(() => localStorage.removeItem(\"GrandTotalNetto\"))\r\n          .then(() => localStorage.removeItem(\"noFaktur\"))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() => this.props.dispatch(getTotalNW()))\r\n          .then(() => this.props.dispatch(getListTransaksiPenjualan()))\r\n          .then(() =>\r\n            this.setState({\r\n              noBon: \"\",\r\n              namaCustomer: \"\",\r\n              lokasi: \"\",\r\n              sales: \"\",\r\n              namaToko: \"\",\r\n              tanggal: \"\",\r\n              toko: \"\",\r\n              GrandTotalNetto: 0,\r\n            })\r\n          )\r\n          .then(() => document.getElementById(\"myForm\").reset())\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text: `${err.response.data}`,\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        }).then(() => this.props.dispatch(finishSend()))\r\n      );\r\n    console.log(JSON.stringify(simpan));\r\n  }\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  inputGrandTotal = (input) => (e) => {\r\n    var GrandNetto = this.props.sumGross - parseFloat(this.state.discGlobalGr);\r\n    var grandTotal = e.target.value;\r\n    console.log(GrandNetto + \"-\" + grandTotal);\r\n    if (GrandNetto - grandTotal < -1) {\r\n      warning(\"Selisih lebih dari 1\");\r\n      e.target.value = \"\";\r\n      return false;\r\n    } else {\r\n      if (GrandNetto - grandTotal <= 1) {\r\n        this.setState({\r\n          [input]: e.target.value,\r\n        });\r\n      } else {\r\n        warning(\"Selisih lebih dari 1\");\r\n        e.target.value = \"\";\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n  discount = (input) => (e) => {\r\n    var hasil =\r\n      (parseFloat(e.target.value) / 100) *\r\n      parseFloat(localStorage.getItem(\"GrandTotalNetto\"));\r\n    this.setState({\r\n      discGlobalGr: hasil.toFixed(3),\r\n      discGlobalPr: e.target.value,\r\n      GrandTotalNetto: (\r\n        parseFloat(localStorage.getItem(\"GrandTotalNetto\")) - hasil.toFixed(3)\r\n      ).toFixed(3),\r\n    });\r\n  };\r\n  onSubmit(data, input) {\r\n    this.setState({\r\n      [input]: data,\r\n    });\r\n  }\r\n  onSubmitToko(data, input) {\r\n    var split = data.split(\"|\");\r\n    this.setState({\r\n      kodeCustomer: split[0],\r\n      namaCustomer: split[1],\r\n      namaToko: split[2],\r\n      toko: data,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"card\">\r\n            <HeaderCard title=\"Transaksi Penjualan\" />\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-9\"></div>\r\n                {/* <div className=\"col-lg-3\">\r\n                  <div className=\"text-right\">\r\n                    <Link to=\"/EditForm/transaksiPenjualan\">\r\n                      <button\r\n                        className=\"btn btn-warning\"\r\n                        // data-target=\"#editModal\"\r\n                        // data-toggle=\"modal\"\r\n                      >\r\n                        Edit Transaksi Penjualan\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </div> */}\r\n                <div className=\"col-lg-12\">\r\n                  <br />\r\n                </div>\r\n\r\n                <div className=\"col-lg-12\">\r\n                  <form\r\n                    id=\"myForm\"\r\n                    onKeyDown={(event) => {\r\n                      return event.key !== \"Enter\";\r\n                    }}\r\n                  >\r\n                    <div className=\"row\">\r\n                      <div className=\"col-lg-4 col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"\">Tanggal</label>\r\n                          <input\r\n                            name=\"tanggal\"\r\n                            type=\"date\"\r\n                            label=\"Tanggal\"\r\n                            className=\"form-control\"\r\n                            onChange={this.inputChange(\"tanggal\")}\r\n                            value={this.state.tanggal}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-4 col-md-4\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"\">No Bon</label>\r\n                          <input\r\n                            name=\"noBon\"\r\n                            type=\"text\"\r\n                            label=\"No Bon\"\r\n                            className=\"form-control\"\r\n                            onChange={this.inputChange(\"noBon\")}\r\n                            value={this.state.noBon}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-4 col-md-4\"></div>\r\n                      <div className=\"col-lg-3 col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"\">Lokasi</label>\r\n                          <SelectSearch\r\n                            options={this.props.listLokasi.map((obj) => {\r\n                              var payload = {\r\n                                value: obj.kode_lokasi,\r\n                                name: obj.nama_lokasi,\r\n                              };\r\n                              return payload;\r\n                            })}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                            onChange={(data) => this.onSubmit(data, \"lokasi\")}\r\n                            value={this.state.lokasi}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-3 col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"\">Sales</label>\r\n                          <SelectSearch\r\n                            options={this.props.listSales.map((obj) => {\r\n                              var payload = {\r\n                                value: obj.kode_sales,\r\n                                name: obj.nama_sales,\r\n                              };\r\n                              return payload;\r\n                            })}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                            onChange={(data) => this.onSubmit(data, \"sales\")}\r\n                            value={this.state.sales}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-3 col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"\">Nama Toko</label>\r\n                          <SelectSearch\r\n                            options={this.props.listCustomer.map((obj) => {\r\n                              var payload = {\r\n                                value:\r\n                                  obj.kode_customer +\r\n                                  \"|\" +\r\n                                  obj.nama_customer +\r\n                                  \"|\" +\r\n                                  obj.nama_toko,\r\n                                name: obj.nama_toko,\r\n                              };\r\n                              return payload;\r\n                            })}\r\n                            search\r\n                            placeholder=\"Silahkan Pilih\"\r\n                            onChange={(data) =>\r\n                              this.onSubmitToko(data, \"namaToko\")\r\n                            }\r\n                            onBlur={(data) => this.onSubmit(data, \"toko\")}\r\n                            value={this.state.toko}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-3 col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"\">Customer</label>\r\n                          <input\r\n                            name=\"customer\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            label=\"Customer\"\r\n                            onChange={this.inputChange(\"namaCustomer\")}\r\n                            defaultValue={this.state.namaCustomer}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-3 mb-3\">\r\n                        <label htmlFor=\"\">Total NW</label>\r\n                        <input\r\n                          name=\"totalNW\"\r\n                          type=\"number\"\r\n                          className=\"form-control\"\r\n                          min={0}\r\n                          step={0.01}\r\n                          label=\"totalNW\"\r\n                          value={this.props.totalNW}\r\n                          readOnly={true}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-lg-3\">\r\n                        <label htmlFor=\"\">Disc Global (%)</label>\r\n                        <input\r\n                          name=\"discGlobal\"\r\n                          type=\"number\"\r\n                          className=\"form-control\"\r\n                          min={0}\r\n                          step={0.001}\r\n                          label=\"discGlobal\"\r\n                          onChange={this.discount(\"discGlobalPr\")}\r\n                          value={this.state.discGlobalPr}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-lg-3\">\r\n                        <label htmlFor=\"\">Disc (Gr)</label>\r\n                        <input\r\n                          name=\"discGlobal\"\r\n                          type=\"number\"\r\n                          className=\"form-control\"\r\n                          label=\"discGlobal\"\r\n                          value={this.state.discGlobalGr}\r\n                          readOnly={true}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-lg-3\">\r\n                        <label htmlFor=\"\">Grand Total Netto</label>\r\n                        <input\r\n                          name=\"totalNW\"\r\n                          type=\"number\"\r\n                          className=\"form-control\"\r\n                          label=\"totalNW\"\r\n                          value={this.state.GrandTotalNetto}\r\n                          readOnly={true}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-lg-3\">\r\n                        <label htmlFor=\"\">Grand Total Netto Ext</label>\r\n                        <input\r\n                          name=\"totalNWExt\"\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          label=\"totalNWExt\"\r\n                          onChange={this.inputChange(\"totalNWExt\")}\r\n                          // onBlur={this.inputGrandTotal(\"totalNWExt\")}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n                <div className=\"col-lg-12 col-md-12 mt-3\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-6\"></div>\r\n                    <div className=\"col-lg-6\">\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          onClick={() => this.props.dispatch(showModal())}\r\n                        >\r\n                          Tambah Barang\r\n                          <i class=\"fa fa-plus ml-3\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-12 mt-5\">\r\n                  {this.props.transaksiPenjualan ? (\r\n                    <ToolkitProvider\r\n                      keyField=\"id\"\r\n                      data={this.props.transaksiPenjualan}\r\n                      columns={this.state.columns}\r\n                      search\r\n                    >\r\n                      {(props) => (\r\n                        <div className=\"form-group\">\r\n                          <BootstrapTable\r\n                            {...props.baseProps}\r\n                            striped\r\n                            hover\r\n                            condensed\r\n                            bordered={true}\r\n                            headerClasses=\"header-table\"\r\n                            pagination={paginationFactory()}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </ToolkitProvider>\r\n                  ) : (\r\n                    <ToolkitProvider\r\n                      keyField=\"id\"\r\n                      data={[]}\r\n                      columns={this.state.columns}\r\n                      search\r\n                    >\r\n                      {(props) => (\r\n                        <div className=\"form-group\">\r\n                          <BootstrapTable\r\n                            {...props.baseProps}\r\n                            striped\r\n                            hover\r\n                            condensed\r\n                            bordered={true}\r\n                            headerClasses=\"header-table\"\r\n                            pagination={paginationFactory()}\r\n                            noDataIndication=\"Tidak Ada Data\"\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </ToolkitProvider>\r\n                  )}\r\n                  <div className=\"text-right\">\r\n                    <button\r\n                      className=\"btn btn-primary\"\r\n                      disabled={this.props.onSend}\r\n                      onClick={() => this.transaksiPenjualanSubmit()}\r\n                    >\r\n                      {this.props.onSend ? (\r\n                        <span\r\n                          className=\"spinner-border spinner-border-sm mr-3\"\r\n                          aria-hidden=\"true\"\r\n                        ></span>\r\n                      ) : null}\r\n                      Simpan\r\n                      <i class=\"fa fa-paper-plane ml-3\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ModalMasterData\r\n          content={\r\n            <Suspense\r\n              fallback={<Skeleton width={\"100%\"} height={50} count={4} />}\r\n            >\r\n              <FormTransaksiPenjualan\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n              />\r\n            </Suspense>\r\n          }\r\n          title=\"Tambah Data\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTransaksiPenjualan = reduxForm({\r\n  form: \"TransaksiPenjualan\",\r\n  enableReinitialize: true,\r\n})(TransaksiPenjualan);\r\nexport default connect(maptostate, null)(TransaksiPenjualan);\r\n","import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;","import React, { Component } from \"react\";\r\n\r\nclass HeaderCard extends Component {\r\n  render() {\r\n    return (\r\n      <h4\r\n        className=\"card-header mb-3\"\r\n        style={{\r\n          fontSize: 25,\r\n          backgroundColor: \"#394867\",\r\n          borderTopLeftRadius: 10,\r\n          borderTopRightRadius: 10,\r\n          height: 50,\r\n          color: \"#ffffff\",\r\n        }}\r\n      >\r\n        {this.props.title}\r\n      </h4>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderCard;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst PrintNota = (\r\n  row1name = \"\",\r\n  row1isi = \"\",\r\n  row2name = \"\",\r\n  row2isi = \"\",\r\n  row3name = \"\",\r\n  row3isi = \"\",\r\n  row4name = \"\",\r\n  row4isi = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n  validby = \"\",\r\n  tableColumn = [],\r\n  title = \"\",\r\n  tableRows\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  // var tickets = JSON.parse(data);\r\n  // define the columns we want and their titles\r\n\r\n  // // define an empty array of rows\r\n  // const tableRows = [];\r\n\r\n  // // for each ticket pass all its data into an array\r\n  // tickets.forEach((ticket, i) => {\r\n  //   const ticketData = [\r\n  //     i++,\r\n  //     ticket.kodeJenis01,\r\n  //     ticket.bruto01,\r\n  //     ticket.kadarTransaksi01,\r\n  //     ticket.netto01,\r\n  //     ticket.kodeJenis02,\r\n  //     ticket.bruto02,\r\n  //     ticket.kadarTransaksi02,\r\n  //     ticket.netto02,\r\n  //   ];\r\n  //   // push each tickcet's info into a row\r\n  //   tableRows.push(ticketData);\r\n  // });\r\n\r\n  // startY is basically margin-top\r\n  doc.autoTable(tableColumn, tableRows, { startY: 40 });\r\n  let finalY = doc.lastAutoTable.finalY + 10;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(title, 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(row1name, 14, 25);\r\n  doc.text(\":\", 37, 25);\r\n  doc.text(row1isi, 40, 25);\r\n  doc.text(row2name, 120, 25);\r\n  doc.text(\":\", 141, 25);\r\n  doc.text(row2isi, 145, 25);\r\n  //row 2\r\n  doc.text(row3name, 14, 30);\r\n  doc.text(\":\", 37, 30);\r\n  doc.text(row3isi, 40, 30);\r\n  doc.text(row4name, 120, 30);\r\n  doc.text(\":\", 141, 30);\r\n  doc.text(row4isi, 145, 30);\r\n\r\n  //Stamp\r\n  doc.text(\"User\", 160, finalY + 10);\r\n  doc.text(\":\", 168, finalY + 10);\r\n  doc.text(username, 170, finalY + 10);\r\n  doc.text(\"Cetak\", 160, finalY + 15);\r\n  doc.text(\":\", 168, finalY + 15);\r\n  doc.text(tanggal, 170, finalY + 15);\r\n  doc.text(\"Valid\", 160, finalY + 20);\r\n  doc.text(\":\", 168, finalY + 20);\r\n  doc.text(validby, 170, finalY + 20);\r\n  // doc.autoPrint();\r\n  // doc.save(`${title}_${dateStr}.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  x.document.close();\r\n};\r\n\r\nexport default PrintNota;\r\n"],"sourceRoot":""}