{"version":3,"sources":["DataMaster/Component/FormAreaEdit.jsx","DataMaster/Area.jsx"],"names":["renderField","input","label","type","readOnly","meta","touched","error","warning","className","htmlFor","FormAreaEdit","props","state","response","status","listProvinsi","axios","get","server","then","res","setState","data","catch","err","console","log","kodenya","this","kode","namanya","nama","onSubmit","handleSubmit","Field","name","replace","normalize","value","toUpperCase","component","kode_ext","from","map","kodeKota","key","namaKota","id","disabled","submitting","Component","reduxForm","form","validate","validationProvinsi","enableReinitialize","connect","initialValues","provinsi","editArea","Status","KodeArea","kodeArea","NamaArea","namaArea","cell","row","statusAktif","src","activelogo","style","width","height","alt","nonactive","process","defaultSorted","dataField","order","Area","updateStatus","dispatch","getareaList","AreaArray","columns","text","sort","headerStyle","formatter","csvExport","rowContent","onClick","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","delete","position","showConfirmButton","timer","data-toggle","data-target","editarea","post","document","getElementById","click","reset","isi","put","color","alert","role","data-dismiss","aria-label","aria-hidden","fontSize","areaList","Table","namaKey","notrespond","tabIndex","aria-labelledby","AreaProvinsiKota","handleEdit","area"],"mappings":"8SAOMA,EAAc,SAAC,GAAD,IAClBC,EADkB,EAClBA,MACAC,EAFkB,EAElBA,MACAC,EAHkB,EAGlBA,KACAC,EAJkB,EAIlBA,SAJkB,IAKlBC,KAAQC,EALU,EAKVA,QAASC,EALC,EAKDA,MAAOC,EALN,EAKMA,QALN,OAOlB,yBAAKC,UAAU,cACb,2BAAOC,QAAQ,GAAGD,UAAU,cACzBP,GAEH,2CACMD,EADN,CAEEE,KAAMA,EACNM,UAAU,eACVL,SAAUA,KAEXE,IACGC,GAAS,uBAAGE,UAAU,oBAAoBF,IACzCC,GAAW,2BAAIA,MAalBG,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAU,GACVC,OAAQ,QACRC,aAAc,IALC,E,gEASE,IAAD,OAClBC,IACGC,IAAIC,2CACJC,MAAK,SAACC,GAAD,OACJ,EAAKC,SAAS,CACZN,aAAcK,EAAIE,UAGrBC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,Q,+BAI9B,IAAIG,EAAUC,KAAKjB,MAAMkB,KACrBC,EAAUF,KAAKjB,MAAMoB,KACzB,OACE,6BACE,0BAAMC,SAAUJ,KAAKjB,MAAMsB,cACzB,yBAAKzB,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC0B,EAAA,EAAD,CACEC,KAAMR,EAAQS,QAAQ,MAAO,IAC7BlC,KAAK,OACLmC,UAAW,SAACC,GAAD,OAAWA,GAASA,EAAMC,eACrCC,UAAWzC,EACXI,UAAU,EACVF,MAAO2B,KAAKjB,MAAMkB,QAGtB,yBAAKrB,UAAU,YACb,yBAAKA,UAAU,cACb,2BAAOC,QAAQ,GAAGD,UAAU,cACzBoB,KAAKjB,MAAM8B,UAEd,kBAACP,EAAA,EAAD,CACEM,UAAU,SACVL,KACsB,SAApBP,KAAKjB,MAAM+B,KAAkB,eAAiB,WAEhDxC,KAAK,OACLmC,UAAW,SAACC,GAAD,OAAWA,GAASA,EAAMC,eACrC/B,UAAU,gBAEV,4BAAQ8B,MAAM,WAAd,kBACCV,KAAKhB,MAAMG,aAAa4B,KAAI,SAACvB,GAAD,OAC3B,4BAAQkB,MAAOlB,EAAIwB,SAAUC,IAAKzB,EAAIwB,UACnCxB,EAAI0B,gBAMf,yBAAKtC,UAAU,YACb,kBAAC0B,EAAA,EAAD,CACEC,KAAML,EAAQM,QAAQ,MAAO,IAC7BlC,KAAK,OACLmC,UAAW,SAACC,GAAD,OAAWA,GAASA,EAAMC,eACrCC,UAAWzC,EACXE,MAAO2B,KAAKjB,MAAMoB,QAGtB,yBAAKvB,UAAU,YACb,yBAAKA,UAAU,cACb,2BAAOC,QAAQ,GAAGD,UAAU,cAA5B,UAGA,kBAAC0B,EAAA,EAAD,CACEM,UAAU,SACVL,KAAK,SACLjC,KAAK,OACLmC,UAAW,SAACC,GAAD,OAAWA,GAASA,EAAMC,eACrC/B,UAAU,gBAEV,4BAAQ8B,MAAM,QAAQO,IAAI,SAA1B,SAGA,4BAAQP,MAAM,YAAYO,IAAI,aAA9B,gBAMN,yBAAKrC,UAAU,uBACb,yBAAKA,UAAU,cACb,4BACEN,KAAK,SACL6C,GAAG,SACHvC,UAAU,kBACVwC,SAAUpB,KAAKjB,MAAMsC,YAJvB,mB,GA7FWC,aA8G3BxC,EAAeyC,YAAU,CACvBC,KAAM,WACNC,SAAUC,IACVC,oBAAoB,GAHPJ,CAIZzC,GACY8C,mBA7HI,SAAC5C,GAClB,MAAO,CACL6C,cAAe,CACb3C,OAAQF,EAAM8C,SAASC,SAASC,OAChCC,SAAUjD,EAAM8C,SAASC,SAASG,SAClCC,SAAUnD,EAAM8C,SAASC,SAASK,SAClCpB,SAAUhC,EAAM8C,SAASC,SAASf,aAuHL,KAApBY,CAA0B9C,G,0BC5IzC,SAASI,EAAOmD,EAAMC,GACpB,MAAwB,UAApBA,EAAIC,YAEJ,6BACE,yBAAKC,IAAKC,IAAYC,MAAO,CAAEC,MAAO,GAAIC,OAAQ,IAAMC,IAAI,YAK9D,6BACE,yBACEL,IAAKM,IACLD,IAAI,aACJH,MAAO,CAAEC,MAAO,GAAIC,OAAQ,OAMtC,IAAMtD,EAASyD,qCAyCf,IAAMC,EAAgB,CACpB,CACEC,UAAW,WACXC,MAAO,QAWLC,E,kDACJ,WAAYpE,GAAQ,IAAD,8BACjB,cAAMA,IA6ERqE,aAAe,SAAChF,GACdyB,QAAQC,IAAI1B,GACZ,EAAKqB,SAAS,CACZR,SAAUb,IAEZ,EAAKW,MAAMsE,SAASC,gBAjFpB,EAAKtE,MAAQ,CACXmE,KAAM,GACNI,UAAW,GACXtE,SAAU,GACVuE,QAAS,CACP,CACEP,UAAW,WACXQ,KAAM,YACNC,MAAM,EACNC,YAAa,WACX,MAAO,CAAEhB,MAAO,SAGpB,CACEM,UAAW,WACXQ,KAAM,YACNC,MAAM,GAER,CACET,UAAW,WACXQ,KAAM,YACNC,MAAM,GAER,CACET,UAAW,cACXQ,KAAM,SACNC,MAAM,EACNE,UAAW1E,EACXyE,YAAa,WACX,MAAO,CAAEhB,MAAO,SAGpB,CACEM,UAAW,OACXQ,KAAM,OACNI,WAAW,EACXD,UAAW,SAACE,EAAYxB,GACtB,OACE,yBAAK1D,UAAU,eACb,4BACEA,UAAU,sBACVmF,QAAS,kBAlGZV,EAkGwB,EAAKtE,MAAMsE,SAlGzBpD,EAkGmCqC,EAAIJ,cAjG9D8B,IAAKC,KAAK,CACRC,MAAO,eACPT,KAAM,iCACNU,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClBhF,MAAK,SAACiF,GACHA,EAAOC,aACTrF,IACGsF,OAAOpF,EAAS,OAAQ,CACvBI,KAAM,CACJwC,SAAUjC,KAGbV,MAAK,SAACC,GAAD,OACJwE,IAAKC,KAAK,CACRU,SAAU,UACVR,KAAM,UACNV,KAAM,yBACNmB,mBAAmB,EACnBC,MAAO,UAGVlF,OAAM,SAACC,GAAD,OACLoE,IAAKC,KAAK,CACRU,SAAU,UACVR,KAAM,QACNV,KAAM,sBACNmB,mBAAmB,EACnBC,MAAO,UAGVtF,MAAK,kBAAM8D,EAASC,qBAnC7B,IAAeD,EAAUpD,IAoGP,uBAAGrB,UAAU,qBAJf,SAOA,4BACEA,UAAU,uBACVkG,cAAY,QACZC,cAAY,aACZhB,QAAS,kBACP,EAAKhF,MAAMsE,SACT2B,YACE1C,EAAIJ,SACJI,EAAIF,SACJE,EAAItB,SACJsB,EAAIC,gBAKV,uBAAG3D,UAAU,oBAff,aAhDK,E,gEA2EjBoB,KAAKjB,MAAMsE,SAASC,iB,mCAWT5D,GAAO,IAAD,OACjBN,IACG6F,KAAK3F,EAAS,OAAQ,CACrBiD,YAAa7C,EAAKR,OAASQ,EAAKR,OAAS,QACzCkD,SAAU1C,EAAKyC,SACfD,SAAUxC,EAAKuC,SACfjB,SAAUtB,EAAKsB,WAEhBzB,MACC,SAACC,GAAD,OACEwE,IAAKC,KAAK,CACRU,SAAU,UACVR,KAAM,UACNV,KAAM,0BACNmB,mBAAmB,EACnBC,MAAO,SAEXK,SAASC,eAAe,iBAAiBC,SAE1CzF,OAAM,SAACC,GAAD,OACLoE,IAAKC,KAAK,CACRU,SAAU,UACVR,KAAM,QACNV,KAAM,uBACNmB,mBAAmB,EACnBC,MAAO,UAGVtF,MAAK,kBAAM,EAAKR,MAAMsE,SAASC,kBAC/B/D,MAAK,kBAAM,EAAKR,MAAMsE,SAASgC,YAAM,kB,iCAG/B3F,GAAO,IAAD,OACT4F,EAAM,CACV/C,YAAa7C,EAAKR,OAASQ,EAAKR,OAAS,QACzCkD,SAAU1C,EAAKyC,SACfD,SAAUxC,EAAKuC,SACfjB,SAAUtB,EAAKsB,UAEjBnB,QAAQC,IAAIwF,GAEZlG,IACGmG,IAAIjG,EAAS,OAAQgG,GACrB/F,MACC,SAACC,GAAD,OACEwE,IAAKC,KAAK,CACRU,SAAU,UACVR,KAAM,UACNV,KAAM,wBACNmB,mBAAmB,EACnBC,MAAO,SAEXK,SAASC,eAAe,kBAAkBC,SAE3CzF,OAAM,SAACC,GAAD,OACLoE,IAAKC,KAAK,CACRU,SAAU,UACVR,KAAM,QACNV,KAAM,qBACNmB,mBAAmB,EACnBC,MAAO,UAGVtF,MAAK,kBAAM,EAAKR,MAAMsE,SAASC,kBAC/B/D,MAAK,kBAAM,EAAKR,MAAMsE,SAASgC,YAAM,kB,+BAGhC,IAAD,OACP,OACE,yBAAKzG,UAAU,kBAAkB8D,MAAO,CAAE8C,MAAO,UAC/C,yBAAKrE,GAAG,cAAcvC,UAAWoB,KAAKjB,MAAM0G,MAAOC,KAAK,SACtD,4BACEpH,KAAK,SACLM,UAAU,QACV+G,eAAa,QACbC,aAAW,SAEX,0BAAMC,cAAY,QAAlB,SAEF,4CATF,8BAWA,yBAAKjH,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,kBAAkB8D,MAAO,CAAEoD,SAAU,KAAnD,aAGA,yBAAKlH,UAAU,uBACb,yBAAKA,UAAU,cACb,4BACE2B,KAAK,SACLY,GAAG,SACH7C,KAAK,SACLM,UAAU,eACVkG,cAAY,QACZC,cAAY,yBANd,sBAYH/E,KAAKjB,MAAMgH,SACV,kBAACC,EAAA,EAAD,CACEtG,KAAMM,KAAKjB,MAAMgH,SACjBvC,QAASxD,KAAKhB,MAAMwE,QACpBR,cAAeA,EACfiD,QAAQ,aAGV,6BACGjG,KAAKjB,MAAML,MACV,yBAAKE,UAAU,eACb,yBACE4D,IAAK0D,IACLxD,MAAO,CAAEC,MAAO,OAChBE,IAAI,gBAEN,6BACA,oEAGF,kBAAC,IAAD,CAAUF,MAAO,KAAMC,OAAQ,WAQ7C,yBACEzB,GAAG,uBACHvC,UAAU,aACVuH,SAAS,KACTT,KAAK,SACLU,kBAAgB,4BAChBP,cAAY,QAEZ,yBAAKjH,UAAU,yBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gDACb,wBAAIA,UAAU,cAAcuC,GAAG,6BAA/B,oBAGA,4BACEA,GAAG,gBACHZ,KAAK,gBACLjC,KAAK,SACLM,UAAU,QACV+G,eAAa,QACbE,cAAY,QANd,SAWF,yBAAKjH,UAAU,cACb,kBAACyH,EAAA,EAAD,CACElG,KAAK,YACLF,KAAK,YACLY,SAAS,YACTuC,aAAcpD,KAAKoD,aACnBhD,SAAU,SAACV,GAAD,OAAU,EAAKW,aAAaX,IACtCoB,KAAK,UAGT,yBAAKlC,UAAU,gBACb,4BACEN,KAAK,SACLM,UAAU,gBACV+G,eAAa,SAHf,aAWR,yBACExE,GAAG,YACHvC,UAAU,aACVuH,SAAS,KACTT,KAAK,SACLU,kBAAgB,4BAChBP,cAAY,QAEZ,yBAAKjH,UAAU,yBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gDACb,wBAAIA,UAAU,cAAcuC,GAAG,6BAA/B,kBAGA,4BACEA,GAAG,iBACHZ,KAAK,iBACLjC,KAAK,SACLM,UAAU,QACV+G,eAAa,QACbE,cAAY,QANd,SAWF,yBAAKjH,UAAU,cACb,kBAAC,EAAD,CACEuB,KAAK,YACLF,KAAK,YACLY,SAAS,YACTT,SAAU,SAACV,GAAD,OAAU,EAAK4G,WAAW5G,IACpCoB,KAAK,UAGT,yBAAKlC,UAAU,gBACb,4BACEN,KAAK,SACLM,UAAU,gBACV+G,eAAa,SAHf,kB,GA3SGrE,aA2TJM,uBAnUI,SAAC5C,GAClB,MAAO,CACL+G,SAAU/G,EAAM8C,SAASyE,KACzBd,MAAOzG,EAAM8C,SAAS2D,MACtB/G,MAAOM,EAAM8C,SAASpD,SA+TS,KAApBkD,CAA0BuB","file":"static/js/130.87bf9b53.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { validationProvinsi } from \"../../Validations/validationProvinsi\";\r\n\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nconst maptoState = (state) => {\r\n  return {\r\n    initialValues: {\r\n      status: state.provinsi.editArea.Status,\r\n      KodeArea: state.provinsi.editArea.kodeArea,\r\n      NamaArea: state.provinsi.editArea.namaArea,\r\n      kodeKota: state.provinsi.editArea.kodeKota,\r\n    },\r\n  };\r\n};\r\nclass FormAreaEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      response: \"\",\r\n      status: \"AKTIF\",\r\n      listProvinsi: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(server + \"citys\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listProvinsi: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    var kodenya = this.props.kode;\r\n    var namanya = this.props.nama;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-2\">\r\n              <Field\r\n                name={kodenya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                readOnly={true}\r\n                label={this.props.kode}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\" className=\"text-black\">\r\n                  {this.props.kode_ext}\r\n                </label>\r\n                <Field\r\n                  component=\"select\"\r\n                  name={\r\n                    this.props.from === \"kota\" ? \"kodeProvinsi\" : \"kodeKota\"\r\n                  }\r\n                  type=\"text\"\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option value=\"DEFAULT\">SILAHKAN PILIH</option>\r\n                  {this.state.listProvinsi.map((res) => (\r\n                    <option value={res.kodeKota} key={res.kodeKota}>\r\n                      {res.namaKota}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <Field\r\n                name={namanya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                label={this.props.nama}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\" className=\"text-black\">\r\n                  Status\r\n                </label>\r\n                <Field\r\n                  component=\"select\"\r\n                  name=\"status\"\r\n                  type=\"text\"\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option value=\"AKTIF\" key=\"AKTIF\">\r\n                    Aktif\r\n                  </option>\r\n                  <option value=\"NON-AKTIF\" key=\"NON-AKTIF\">\r\n                    Non Aktif\r\n                  </option>\r\n                </Field>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  type=\"submit\"\r\n                  id=\"simpan\"\r\n                  className=\"btn btn-primary\"\r\n                  disabled={this.props.submitting}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormAreaEdit = reduxForm({\r\n  form: \"KotaEdit\", // a unique identifier for this form\r\n  validate: validationProvinsi, // <--- validation function given to redux-form\r\n  enableReinitialize: true,\r\n})(FormAreaEdit);\r\nexport default connect(maptoState, null)(FormAreaEdit);\r\n","import React, { Component } from \"react\";\r\nimport AreaProvinsiKota from \"./Component/AreaProvinsiKota\";\r\nimport Table from \"./Component/Table\";\r\nimport activelogo from \"../Images/active.png\";\r\nimport nonactive from \"../Images/nonactive.png\";\r\nimport { connect } from \"react-redux\";\r\nimport notrespond from \"../Images/500.svg\";\r\nimport { editarea, getareaList } from \"../actions/areaAction\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport FormAreaEdit from \"./Component/FormAreaEdit\";\r\nimport { reset } from \"redux-form\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nfunction status(cell, row) {\r\n  if (row.statusAktif === \"AKTIF\") {\r\n    return (\r\n      <div>\r\n        <img src={activelogo} style={{ width: 50, height: 50 }} alt=\"ACTIVE\" />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <img\r\n          src={nonactive}\r\n          alt=\"NON ACTIVE\"\r\n          style={{ width: 50, height: 50 }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nfunction hapus(dispatch, kode) {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      axios\r\n        .delete(server + \"area\", {\r\n          data: {\r\n            kodeArea: kode,\r\n          },\r\n        })\r\n        .then((res) =>\r\n          Swal.fire({\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            text: \"Data Berhasil Dihapus!\",\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n        )\r\n        .catch((err) =>\r\n          Swal.fire({\r\n            position: \"top-end\",\r\n            icon: \"error\",\r\n            text: \"Data Gagal Dihapus!\",\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n        )\r\n        .then(() => dispatch(getareaList()));\r\n    }\r\n  });\r\n}\r\n\r\nconst defaultSorted = [\r\n  {\r\n    dataField: \"kodeArea\",\r\n    order: \"asc\",\r\n  },\r\n];\r\nconst maptoState = (state) => {\r\n  return {\r\n    areaList: state.provinsi.area,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n  };\r\n};\r\n\r\nclass Area extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Area: [],\r\n      AreaArray: [],\r\n      response: \"\",\r\n      columns: [\r\n        {\r\n          dataField: \"kodeArea\",\r\n          text: \"Kode Area\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"15%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"namaArea\",\r\n          text: \"Nama Area\",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"kodeKota\",\r\n          text: \"Kode Kota\",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"statusAktif\",\r\n          text: \"Status\",\r\n          sort: true,\r\n          formatter: status,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() => hapus(this.props.dispatch, row.kodeArea)}\r\n                >\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                  HAPUS\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-warning mr-2\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#editModal\"\r\n                  onClick={() =>\r\n                    this.props.dispatch(\r\n                      editarea(\r\n                        row.kodeArea,\r\n                        row.namaArea,\r\n                        row.kodeKota,\r\n                        row.statusAktif\r\n                      )\r\n                    )\r\n                  }\r\n                >\r\n                  <i className=\"fa fa-edit mr-1\"></i>\r\n                  EDIT\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getareaList());\r\n  }\r\n\r\n  updateStatus = (input) => {\r\n    console.log(input);\r\n    this.setState({\r\n      response: input,\r\n    });\r\n    this.props.dispatch(getareaList());\r\n  };\r\n\r\n  handleSubmit(data) {\r\n    axios\r\n      .post(server + \"area\", {\r\n        statusAktif: data.status ? data.status : \"AKTIF\",\r\n        namaArea: data.NamaArea,\r\n        kodeArea: data.KodeArea,\r\n        kodeKota: data.kodeKota,\r\n      })\r\n      .then(\r\n        (res) =>\r\n          Swal.fire({\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            text: \"Data Berhasil Disimpan!\",\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          }),\r\n        document.getElementById(\"dismiss_modal\").click()\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text: \"Data Gagal Disimpan!\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n      )\r\n      .then(() => this.props.dispatch(getareaList()))\r\n      .then(() => this.props.dispatch(reset(\"Provinsi\")));\r\n  }\r\n\r\n  handleEdit(data) {\r\n    const isi = {\r\n      statusAktif: data.status ? data.status : \"AKTIF\",\r\n      namaArea: data.NamaArea,\r\n      kodeArea: data.KodeArea,\r\n      kodeKota: data.kodeKota,\r\n    };\r\n    console.log(isi);\r\n    // return false;\r\n    axios\r\n      .put(server + \"area\", isi)\r\n      .then(\r\n        (res) =>\r\n          Swal.fire({\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            text: \"Data Berhasil Diubah!\",\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          }),\r\n        document.getElementById(\"dismiss_modal1\").click()\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text: \"Data Gagal Diubah!\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n      )\r\n      .then(() => this.props.dispatch(getareaList()))\r\n      .then(() => this.props.dispatch(reset(\"Provinsi\")));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div id=\"notif_alert\" className={this.props.alert} role=\"alert\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n          <strong>Error - </strong> Tidak Bisa Mengambil Data\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title mb-3\" style={{ fontSize: 30 }}>\r\n                  Data Area\r\n                </h4>\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"text-right\">\r\n                    <button\r\n                      name=\"simpan\"\r\n                      id=\"simpan\"\r\n                      type=\"button\"\r\n                      className=\"btn btn-info\"\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#primary-header-modal\"\r\n                    >\r\n                      Tambah Data Area\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                {this.props.areaList ? (\r\n                  <Table\r\n                    data={this.props.areaList}\r\n                    columns={this.state.columns}\r\n                    defaultSorted={defaultSorted}\r\n                    namaKey=\"kodeArea\"\r\n                  />\r\n                ) : (\r\n                  <div>\r\n                    {this.props.error ? (\r\n                      <div className=\"text-center\">\r\n                        <img\r\n                          src={notrespond}\r\n                          style={{ width: \"30%\" }}\r\n                          alt=\"NOT RESPOND\"\r\n                        />\r\n                        <br />\r\n                        <h4>Request API Gagal, Silahkan Refresh</h4>\r\n                      </div>\r\n                    ) : (\r\n                      <Skeleton width={1100} height={180} />\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          id=\"primary-header-modal\"\r\n          className=\"modal fade\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"primary-header-modalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header modal-colored-header bg-primary\">\r\n                <h4 className=\"modal-title\" id=\"primary-header-modalLabel\">\r\n                  Tambah Data Area\r\n                </h4>\r\n                <button\r\n                  id=\"dismiss_modal\"\r\n                  name=\"dismiss_modal\"\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <AreaProvinsiKota\r\n                  nama=\"Nama Area\"\r\n                  kode=\"Kode Area\"\r\n                  kode_ext=\"Nama Kota\"\r\n                  updateStatus={this.updateStatus}\r\n                  onSubmit={(data) => this.handleSubmit(data)}\r\n                  from=\"area\"\r\n                />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-light\"\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          id=\"editModal\"\r\n          className=\"modal fade\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"primary-header-modalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header modal-colored-header bg-primary\">\r\n                <h4 className=\"modal-title\" id=\"primary-header-modalLabel\">\r\n                  Edit Data Area\r\n                </h4>\r\n                <button\r\n                  id=\"dismiss_modal1\"\r\n                  name=\"dismiss_modal1\"\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <FormAreaEdit\r\n                  nama=\"Nama Area\"\r\n                  kode=\"Kode Area\"\r\n                  kode_ext=\"Nama Kota\"\r\n                  onSubmit={(data) => this.handleEdit(data)}\r\n                  from=\"area\"\r\n                />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-light\"\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoState, null)(Area);\r\n"],"sourceRoot":""}