{"version":3,"sources":["FICO/Component/FormCash.jsx"],"names":["currencyMask","createNumberMask","prefix","suffix","locale","renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","min","step","maxLength","FormCash","props","state","kodeBarang","kodeJenis","namaJenis","kadarCetak","kadarBeli","columns","dataField","text","columnsTransfer","columnsGiro","tampungCiok","this","change","netto","from","onSubmit","handleSubmit","name","component","onBlur","onChange","disabled","submitting","data","keyField","search","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","Component","reduxForm","form","enableReinitialize","selector","formValueSelector","connect","bruto","kadarTransaksi","parseFloat","toFixed"],"mappings":"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","file":"static/js/137.e14cdf11.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\n\r\nclass FormCash extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      kodeBarang: [],\r\n      kodeJenis: \"\",\r\n      namaJenis: \"\",\r\n      kadarCetak: \"\",\r\n      kadarBeli: \"\",\r\n      columns: [\r\n        {\r\n          dataField: \"tunaiRp\",\r\n          text: \"Jumlah(Rp)\",\r\n        },\r\n        {\r\n          dataField: \"tunaiKurs\",\r\n          text: \"Harga\",\r\n        },\r\n        {\r\n          dataField: \"tunaiNetto\",\r\n          text: \"Netto (Gr)\",\r\n        },\r\n      ],\r\n      columnsTransfer: [\r\n        {\r\n          dataField: \"transferRp\",\r\n          text: \"Jumlah(Rp)\",\r\n        },\r\n        {\r\n          dataField: \"transferKurs\",\r\n          text: \"Harga\",\r\n        },\r\n        {\r\n          dataField: \"transferNetto\",\r\n          text: \"Netto (Gr)\",\r\n        },\r\n      ],\r\n      columnsGiro: [\r\n        {\r\n          dataField: \"giroRp\",\r\n          text: \"Jumlah(Rp)\",\r\n        },\r\n        {\r\n          dataField: \"giroKurs\",\r\n          text: \"Harga\",\r\n        },\r\n        {\r\n          dataField: \"giroNetto\",\r\n          text: \"Netto (Gr)\",\r\n        },\r\n      ],\r\n      tampungCiok: [],\r\n    };\r\n  }\r\n\r\n  onChange() {\r\n    this.props.change(\"netto\", this.props.netto);\r\n  }\r\n\r\n  render() {\r\n    switch (this.props.from) {\r\n      case \"cash\":\r\n        return (\r\n          <form onSubmit={this.props.handleSubmit} className=\"col-lg-12\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3 form-group\">\r\n                <label htmlFor=\"\">Jumlah</label>\r\n                <Field\r\n                  name=\"bruto\"\r\n                  component=\"input\"\r\n                  type=\"tel\"\r\n                  className=\"form-control\"\r\n                  onBlur={this.onChange()}\r\n                  {...currencyMask}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3 form-group\">\r\n                <label htmlFor=\"\">Harga</label>\r\n                <Field\r\n                  name=\"kadarTransaksi\"\r\n                  component=\"input\"\r\n                  type=\"tel\"\r\n                  className=\"form-control\"\r\n                  onBlur={this.onChange()}\r\n                  {...currencyMask}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3 form-group\">\r\n                <Field\r\n                  name=\"netto\"\r\n                  label=\"Netto\"\r\n                  component={renderField}\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  onBlur={this.onChange()}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12 mb-3\">\r\n                <div className=\"text-right\">\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    type=\"submit\"\r\n                    disabled={this.props.submitting}\r\n                  >\r\n                    Simpan\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              {this.props.data ? (\r\n                <ToolkitProvider\r\n                  keyField=\"id\"\r\n                  data={this.props.data}\r\n                  columns={this.state.columns}\r\n                  search\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"form-group\">\r\n                      <BootstrapTable\r\n                        {...props.baseProps}\r\n                        striped\r\n                        hover\r\n                        condensed\r\n                        bordered={true}\r\n                        headerClasses=\"header-table\"\r\n                        pagination={paginationFactory()}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              ) : null}\r\n            </div>\r\n          </form>\r\n        );\r\n      case \"transfer\":\r\n        return (\r\n          <form onSubmit={this.props.handleSubmit} className=\"col-lg-12\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3 form-group\">\r\n                <label htmlFor=\"\">Jumlah</label>\r\n                <Field\r\n                  name=\"bruto\"\r\n                  component=\"input\"\r\n                  type=\"tel\"\r\n                  className=\"form-control\"\r\n                  onBlur={this.onChange()}\r\n                  {...currencyMask}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3 form-group\">\r\n                <label htmlFor=\"\">Harga</label>\r\n                <Field\r\n                  name=\"kadarTransaksi\"\r\n                  component=\"input\"\r\n                  type=\"tel\"\r\n                  className=\"form-control\"\r\n                  onBlur={this.onChange()}\r\n                  {...currencyMask}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3 form-group\">\r\n                <Field\r\n                  name=\"netto\"\r\n                  label=\"Netto\"\r\n                  component={renderField}\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  onBlur={this.onChange()}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12 mb-3\">\r\n                <div className=\"text-right\">\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    type=\"submit\"\r\n                    disabled={this.props.submitting}\r\n                  >\r\n                    Simpan\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              {this.props.data ? (\r\n                <ToolkitProvider\r\n                  keyField=\"id\"\r\n                  data={this.props.data}\r\n                  columns={this.state.columnsTransfer}\r\n                  search\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"form-group\">\r\n                      <BootstrapTable\r\n                        {...props.baseProps}\r\n                        striped\r\n                        hover\r\n                        condensed\r\n                        bordered={true}\r\n                        headerClasses=\"header-table\"\r\n                        pagination={paginationFactory()}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              ) : null}\r\n            </div>\r\n          </form>\r\n        );\r\n      case \"giro\":\r\n        return (\r\n          <form onSubmit={this.props.handleSubmit} className=\"col-lg-12\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3 form-group\">\r\n                <label htmlFor=\"\">Jumlah</label>\r\n                <Field\r\n                  name=\"bruto\"\r\n                  component=\"input\"\r\n                  type=\"tel\"\r\n                  className=\"form-control\"\r\n                  onBlur={this.onChange()}\r\n                  {...currencyMask}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3 form-group\">\r\n                <label htmlFor=\"\">Harga</label>\r\n                <Field\r\n                  name=\"kadarTransaksi\"\r\n                  component=\"input\"\r\n                  type=\"tel\"\r\n                  className=\"form-control\"\r\n                  onBlur={this.onChange()}\r\n                  {...currencyMask}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3 form-group\">\r\n                <Field\r\n                  name=\"netto\"\r\n                  label=\"Netto\"\r\n                  component={renderField}\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  onBlur={this.onChange()}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12 mb-3\">\r\n                <div className=\"text-right\">\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    type=\"submit\"\r\n                    disabled={this.props.submitting}\r\n                  >\r\n                    Simpan\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              {this.props.data ? (\r\n                <ToolkitProvider\r\n                  keyField=\"id\"\r\n                  data={this.props.data}\r\n                  columns={this.state.columnsGiro}\r\n                  search\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"form-group\">\r\n                      <BootstrapTable\r\n                        {...props.baseProps}\r\n                        striped\r\n                        hover\r\n                        condensed\r\n                        bordered={true}\r\n                        headerClasses=\"header-table\"\r\n                        pagination={paginationFactory()}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              ) : null}\r\n            </div>\r\n          </form>\r\n        );\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nFormCash = reduxForm({\r\n  form: \"FormCash\",\r\n  enableReinitialize: true,\r\n})(FormCash);\r\nconst selector = formValueSelector(\"FormCash\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi } = selector(state, \"bruto\", \"kadarTransaksi\");\r\n  return {\r\n    netto: (parseFloat(bruto) / parseFloat(kadarTransaksi)).toFixed(3),\r\n  };\r\n})(FormCash);\r\n"],"sourceRoot":""}