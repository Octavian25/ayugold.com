{"version":3,"sources":["DataMaster/Component/FormProvinsiEdit.jsx","DataMaster/Provinsi.jsx"],"names":["renderField","input","label","type","readOnly","meta","touched","error","warning","className","htmlFor","FormProvinsiEdit","props","state","response","status","kodenya","this","kode","namanya","nama","onSubmit","handleSubmit","Field","name","replace","normalize","value","toUpperCase","component","key","id","disabled","submitting","Component","reduxForm","form","validate","validationProvinsi","enableReinitialize","connect","initialValues","NamaProvinsi","provinsi","editProvinsi","namaProvinsi","KodeProvinsi","kodeProvinsi","cell","row","statusAktif","src","activelogo","style","width","height","alt","nonactive","server","process","defaultSorted","dataField","order","Provinsi","updateStatus","console","log","setState","dispatch","getProvinsiLIst","edit","e","target","provinsi_array","columns","text","sort","headerStyle","formatter","csvExport","rowContent","onClick","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","axios","delete","data","res","position","showConfirmButton","timer","catch","err","data-toggle","data-target","editProvinsiList","post","document","getElementById","click","reset","put","color","alert","role","data-dismiss","aria-label","aria-hidden","fontSize","provinsiList","Table","namaKey","notrespond","tabIndex","aria-labelledby","AreaProvinsiKota","isiNama","isikode","from","handleEdit"],"mappings":"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","file":"static/js/133.ad427b11.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { validationProvinsi } from \"../../Validations/validationProvinsi\";\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nconst maptoState = (state) => {\r\n  return {\r\n    initialValues: {\r\n      NamaProvinsi: state.provinsi.editProvinsi.namaProvinsi,\r\n      KodeProvinsi: state.provinsi.editProvinsi.kodeProvinsi,\r\n      status: \"AKTIF\",\r\n    },\r\n  };\r\n};\r\nclass FormProvinsiEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      response: \"\",\r\n      status: \"AKTIF\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    var kodenya = this.props.kode;\r\n    var namanya = this.props.nama;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-2\">\r\n              <Field\r\n                name={kodenya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                readOnly={true}\r\n                label={this.props.kode}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <Field\r\n                name={namanya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                label={this.props.nama}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\" className=\"text-black\">\r\n                  Status\r\n                </label>\r\n                <Field\r\n                  component=\"select\"\r\n                  name=\"status\"\r\n                  type=\"text\"\r\n                  normalize={(value) => value && value.toUpperCase()}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option value=\"AKTIF\" key=\"AKTIF\">\r\n                    Aktif\r\n                  </option>\r\n                  <option value=\"NON-AKTIF\" key=\"NON-AKTIF\">\r\n                    Non Aktif\r\n                  </option>\r\n                </Field>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  type=\"submit\"\r\n                  id=\"simpan\"\r\n                  className=\"btn btn-primary\"\r\n                  disabled={this.props.submitting}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormProvinsiEdit = reduxForm({\r\n  form: \"ProvinsiEdit\", // a unique identifier for this form\r\n  validate: validationProvinsi, // <--- validation function given to redux-form\r\n  enableReinitialize: true,\r\n})(FormProvinsiEdit);\r\nexport default connect(maptoState, null)(FormProvinsiEdit);\r\n","import React, { Component } from \"react\";\r\nimport notrespond from \"../Images/500.svg\";\r\nimport AreaProvinsiKota from \"./Component/AreaProvinsiKota\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport Table from \"./Component/Table\";\r\nimport activelogo from \"../Images/active.png\";\r\nimport nonactive from \"../Images/nonactive.png\";\r\nimport { connect } from \"react-redux\";\r\nimport { editProvinsiList, getProvinsiLIst } from \"../actions/provinsiAction\";\r\nimport FormProvinsiEdit from \"./Component/FormProvinsiEdit\";\r\nimport { reset } from \"redux-form\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nfunction status(cell, row) {\r\n  if (row.statusAktif === \"AKTIF\") {\r\n    return (\r\n      <div>\r\n        <img src={activelogo} style={{ width: 50, height: 50 }} alt=\"AKTIF\" />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <img\r\n          src={nonactive}\r\n          style={{ width: 50, height: 50 }}\r\n          alt=\"NON-AKTIF\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nfunction hapus(dispatch, kode) {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      axios\r\n        .delete(server + \"province\", {\r\n          data: {\r\n            kodeProvinsi: kode,\r\n          },\r\n        })\r\n        .then((res) =>\r\n          Swal.fire({\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            text: \"Data Berhasil Dihapus!\",\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n        )\r\n        .catch((err) =>\r\n          Swal.fire({\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            text: \"Data Gagal Dihapus!\",\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          }).then(console.log(err))\r\n        )\r\n        .then(() => dispatch(getProvinsiLIst()));\r\n    }\r\n  });\r\n}\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    provinsiList: state.provinsi.provinsi,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n    status: state.provinsi.status,\r\n  };\r\n};\r\n\r\nconst defaultSorted = [\r\n  {\r\n    dataField: \"kodeProvinsi\",\r\n    order: \"asc\",\r\n  },\r\n];\r\n\r\nclass Provinsi extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      provinsi: [],\r\n      provinsi_array: [],\r\n      response: \"\",\r\n      namaProvinsi: \"\",\r\n      kodeProvinsi: \"\",\r\n      columns: [\r\n        {\r\n          dataField: \"kodeProvinsi\",\r\n          text: \"Kode Provinsi\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"15%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"namaProvinsi\",\r\n          text: \"Nama Provinsi\",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"statusAktif\",\r\n          text: \"Status\",\r\n          sort: true,\r\n          formatter: status,\r\n          headerStyle: () => {\r\n            return { width: \"10%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() => hapus(this.props.dispatch, row.kodeProvinsi)}\r\n                >\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                  HAPUS\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-warning mr-2\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#editModal\"\r\n                  onClick={() =>\r\n                    this.props.dispatch(\r\n                      editProvinsiList(row.namaProvinsi, row.kodeProvinsi)\r\n                    )\r\n                  }\r\n                >\r\n                  <i className=\"fa fa-edit mr-1\"></i>\r\n                  Edit\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getProvinsiLIst());\r\n  }\r\n\r\n  updateStatus = (input) => {\r\n    console.log(input);\r\n    this.setState({\r\n      response: input,\r\n    });\r\n    this.props.dispatch(getProvinsiLIst());\r\n  };\r\n\r\n  edit = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit(data) {\r\n    axios\r\n      .post(server + \"province\", {\r\n        statusAktif: data.status ? data.status : \"AKTIF\",\r\n        namaProvinsi: data.NamaProvinsi,\r\n        kodeProvinsi: data.KodeProvinsi,\r\n      })\r\n      .then(\r\n        (res) =>\r\n          Swal.fire({\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            text: \"Data Berhasil Disimpan!\",\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          }),\r\n        document.getElementById(\"dismiss_modal\").click()\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text: \"Data Gagal Disimpan!\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        }).then(console.log(err))\r\n      )\r\n      .then(() => this.props.dispatch(getProvinsiLIst()))\r\n      .then(() => this.props.dispatch(reset(\"Provinsi\")));\r\n  }\r\n  handleEdit(data) {\r\n    axios\r\n      .put(server + \"province\", {\r\n        statusAktif: data.status ? data.status : \"AKTIF\",\r\n        namaProvinsi: data.NamaProvinsi,\r\n        kodeProvinsi: data.KodeProvinsi,\r\n      })\r\n      .then(\r\n        (res) =>\r\n          Swal.fire({\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            text: \"Data Berhasil Disimpan!\",\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          }),\r\n        document.getElementById(\"dismiss_modal1\").click()\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text: \"Data Gagal Disimpan!\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        }).then(console.log(err))\r\n      )\r\n      .then(() => this.props.dispatch(getProvinsiLIst()));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div id=\"notif_alert\" className={this.props.alert} role=\"alert\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n          <strong>Error - </strong> Tidak Bisa Mengambil Data\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title mb-3\" style={{ fontSize: 30 }}>\r\n                  Data Provinsi\r\n                </h4>\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"text-right\">\r\n                    <button\r\n                      name=\"simpan\"\r\n                      id=\"simpan\"\r\n                      className=\"btn btn-info\"\r\n                      data-toggle=\"modal\"\r\n                      data-target=\"#primary-header-modal\"\r\n                    >\r\n                      Tambah Data Provinsi\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-12 col-md-12 mt-5\">\r\n                  {this.props.provinsiList ? (\r\n                    <Table\r\n                      columns={this.state.columns}\r\n                      data={this.props.provinsiList}\r\n                      defaultSorted={defaultSorted}\r\n                      namaKey=\"kodeProvinsi\"\r\n                    />\r\n                  ) : (\r\n                    <div>\r\n                      {this.props.error ? (\r\n                        <div className=\"text-center\">\r\n                          <img\r\n                            src={notrespond}\r\n                            style={{ width: \"30%\" }}\r\n                            alt=\"NOT RESPOND\"\r\n                          />\r\n                          <br />\r\n                          <h4>Request API Gagal, Silahkan Refresh</h4>\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton width={1100} height={180} />\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          id=\"primary-header-modal\"\r\n          className=\"modal fade\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"primary-header-modalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header modal-colored-header bg-primary\">\r\n                <h4 className=\"modal-title\" id=\"primary-header-modalLabel\">\r\n                  Tambah Data Provinsi\r\n                </h4>\r\n                <button\r\n                  id=\"dismiss_modal\"\r\n                  name=\"dismiss_modal\"\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <AreaProvinsiKota\r\n                  nama=\"Nama Provinsi\"\r\n                  isiNama={this.state.namaProvinsi}\r\n                  kode=\"Kode Provinsi\"\r\n                  isikode={this.state.kodeProvinsi}\r\n                  from=\"provinsi\"\r\n                  edit={this.edit}\r\n                  updateStatus={this.updateStatus}\r\n                  onSubmit={(data) => this.handleSubmit(data)}\r\n                />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-light\"\r\n                  data-dismiss=\"modal\"\r\n                  id=\"close_modal\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          id=\"editModal\"\r\n          className=\"modal fade\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"primary-header-modalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header modal-colored-header bg-primary\">\r\n                <h4 className=\"modal-title\" id=\"primary-header-modalLabel\">\r\n                  Edit Data Provinsi\r\n                </h4>\r\n                <button\r\n                  id=\"dismiss_modal1\"\r\n                  name=\"dismiss_modal1\"\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <FormProvinsiEdit\r\n                  nama=\"Nama Provinsi\"\r\n                  kode=\"Kode Provinsi\"\r\n                  from=\"provinsi\"\r\n                  edit={this.edit}\r\n                  updateStatus={this.updateStatus}\r\n                  onSubmit={(data) => this.handleEdit(data)}\r\n                />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-light\"\r\n                  data-dismiss=\"modal\"\r\n                  id=\"close_modal\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoState, null)(Provinsi);\r\n"],"sourceRoot":""}