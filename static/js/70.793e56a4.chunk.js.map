{"version":3,"sources":["Transaksi/TerimaSupplier.jsx","../node_modules/redux-form/es/index.js","HeaderCard.jsx","Alert.jsx","Stocking/Component/PrintNota.jsx","deleteLocalStorage.js"],"names":["FormTerimaSupplier","lazy","ModalMasterData","TerimaSupplier","props","inputChange","input","e","setState","target","value","localStorage","setItem","date","Date","formatedDate","getFullYear","getMonth","getDate","state","listSupplier","onDelete","columns","dataField","text","footerClasses","formatter","cell","parseFloat","toLocaleString","csvExport","rowContent","row","rowIndex","className","data-tip","data-for","onClick","deleteIndexUpdatetotalNW","dispatch","getTerimaSupplierTemp","then","barang","JSON","parse","getItem","map","list","netto","reduce","a","b","toFixed","totalNW","id","type","effect","tanggal_invoice","tanggal_barang","noBon","totalBruto","totalPkg","totalGross","totalOngkir","kodeSupplier","namaSupplier","keterangan","startingDate","tampungBarang","tampungBarangLocal","urutan","this","getsupplierList","AxiosMasterGet","res","data","catch","err","alert","getUUID","getSumData","result_explode","split","kodeJenis","isi","noFaktur","toUpperCase","nettoDiscGlobalExt","gross","qty","k","rp","kadarCetak","discGlobalPr","kodeKategori","kadarTransaksi","noBarcode","p","discGlobalGr","pkg","bruto","nettoDiscGlobal","push","stringify","Swal","fire","position","icon","showConfirmButton","timer","reset","getNetto","getBruto","getRp","getPkg","getQty","warning","tanggalBarang","tanggal","simpan","barangDetails","footerItem","totalNettoExt","sumBruto","totalNetto","sumNetto","totalQty","totalP","totalK","totalpkg","sumPkg","totalRp","sumRp","footerDocument","inputBy","username","console","log","tableRows","table","forEach","ticket","i","ticketData","footer","columTable","AxiosTransactionPost","removeItem","PrintNota","document","getElementById","style","color","title","htmlFor","name","options","kode","search","onChange","pilihSupplier","width","height","step","min","content","fallback","from","onSubmit","handleSubmit","showModal","keyField","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","noDataIndication","kirimData","Component","connect","supplierList","provinsi","supplier","terimaSupplierTemp","error","perhitungan","sumQty","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","change","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors","HeaderCard","fontSize","backgroundColor","borderTopLeftRadius","borderTopRightRadius","pesan","Promise","resolve","reject","berhasil","gagal","reactive","endpoint","response","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","isConfirmed","AxiosMasterUpdate","LogData","toLocaleDateString","datanya","row1name","row1isi","row2name","row2isi","row3name","row3isi","row4name","row4isi","validby","tableColumn","doc","jsPDF","autoTable","startY","finalY","lastAutoTable","setFontSize","string","output","embed","x","window","open","write","close","deleteLocalStorage","keyRemove","deleteIndex","nama","index","func","array","splice"],"mappings":"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","file":"static/js/70.793e56a4.chunk.js","sourcesContent":["import React, { Component, lazy, Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getsupplierList } from \"../actions/supplierAction\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { reset } from \"redux-form\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getTerimaSupplierTemp } from \"../actions/terimaSupplierAction\";\r\nimport { warning } from \"../Alert\";\r\nimport PrintNota from \"../Stocking/Component/PrintNota\";\r\n// import { Link } from \"react-router-dom\";\r\nimport {\r\n  getBruto,\r\n  getNetto,\r\n  getPkg,\r\n  getQty,\r\n  getRp,\r\n} from \"../actions/LogicAction\";\r\nimport { deleteIndexUpdatetotalNW } from \"../deleteLocalStorage\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport SelectSearch from \"react-select-search\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { showModal } from \"../actions/ModalAction\";\r\nimport { AxiosMasterGet, AxiosTransactionPost } from \"../Axios\";\r\nimport HeaderCard from \"../HeaderCard\";\r\n\r\nconst FormTerimaSupplier = lazy(() => import(\"./Component/FormTerimaSupplier\"));\r\nconst ModalMasterData = lazy(() =>\r\n  import(\"../DataMaster/Component/ModalMasterData\")\r\n);\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    supplierList: state.provinsi.supplier,\r\n    tampungBarang: state.provinsi.terimaSupplierTemp,\r\n    noFaktur: state.provinsi.noFaktur,\r\n    username: state.provinsi.username,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n    totalNW: state.provinsi.totalNW,\r\n    sumBruto: state.perhitungan.sumBruto,\r\n    sumNetto: state.perhitungan.sumNetto,\r\n    sumRp: state.perhitungan.sumRp,\r\n    sumPkg: state.perhitungan.sumPkg,\r\n    sumQty: state.perhitungan.sumQty,\r\n  };\r\n};\r\n\r\nclass TerimaSupplier extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var date = new Date();\r\n    var formatedDate = `${date.getFullYear()}-${\r\n      date.getMonth() + 1\r\n    }-${date.getDate()}`;\r\n    this.state = {\r\n      listSupplier: [],\r\n      onDelete: false,\r\n      columns: [\r\n        {\r\n          dataField: \"kodeJenis\",\r\n          text: \"Kode Barang\",\r\n        },\r\n        {\r\n          dataField: \"kadarCetak\",\r\n          text: \"Kadar Cetak(%)\",\r\n        },\r\n        {\r\n          dataField: \"p\",\r\n          text: \"P\",\r\n        },\r\n        {\r\n          dataField: \"k\",\r\n          text: \"K\",\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Bungkus(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Berat(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"kadarTransaksi\",\r\n          text: \"Harga(%)\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Murni(Gr)\",\r\n\r\n          footerClasses: \"sum-netto-terima-supplier\",\r\n        },\r\n        {\r\n          dataField: \"rp\",\r\n          text: \"Ongkos(RP)\",\r\n          formatter: (cell) => (\r\n            <span>Rp. {parseFloat(cell).toLocaleString(\"ID-id\")}</span>\r\n          ),\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row, rowIndex) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  data-tip\r\n                  data-for=\"hapus\"\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() =>\r\n                    deleteIndexUpdatetotalNW(\r\n                      \"TerimaSupplier\",\r\n                      rowIndex,\r\n                      this.props.dispatch,\r\n                      getTerimaSupplierTemp()\r\n                    )\r\n                      .then(() => {\r\n                        var barang =\r\n                          JSON.parse(localStorage.getItem(\"TerimaSupplier\")) ||\r\n                          [];\r\n                        localStorage.setItem(\r\n                          \"totalNW\",\r\n                          barang\r\n                            .map((list) => list.netto)\r\n                            .reduce((a, b) => a + b, 0)\r\n                            .toFixed(3)\r\n                        );\r\n                      })\r\n                      .then(() =>\r\n                        this.setState({\r\n                          totalNW: localStorage.getItem(\"totalNW\") || 0,\r\n                        })\r\n                      )\r\n                  }\r\n                >\r\n                  <ReactTooltip id=\"hapus\" type=\"dark\" effect=\"solid\">\r\n                    <span>Hapus</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                </button>\r\n                <br />\r\n                {/* <button\r\n                  data-tip\r\n                  data-for=\"edit\"\r\n                  className=\"btn btn-warning mr-2\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#editModal\"\r\n                  onClick={() => this.setEdit(row)}\r\n                >\r\n                  <ReactTooltip id=\"edit\" type=\"dark\" effect=\"solid\">\r\n                    <span>Edit</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-edit mr-1\"></i>\r\n                </button> */}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      tanggal_invoice: formatedDate,\r\n      tanggal_barang: formatedDate,\r\n      noBon: \"\",\r\n      totalNW: localStorage.getItem(\"totalNW\") || 0,\r\n      totalBruto: 0,\r\n      totalPkg: 0,\r\n      totalGross: 0,\r\n      totalOngkir: 0,\r\n      kodeSupplier: \"\",\r\n      namaSupplier: \"\",\r\n      keterangan: \"\",\r\n      startingDate: formatedDate,\r\n      tampungBarang: [],\r\n      tampungBarangLocal: [],\r\n      urutan: localStorage.getItem(\"urutan\") || 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getsupplierList());\r\n    AxiosMasterGet(\"suppliers\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listSupplier: res.data,\r\n        })\r\n      )\r\n      .catch((err) => alert(err));\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getTerimaSupplierTemp());\r\n    this.getSumData();\r\n  }\r\n\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n    localStorage.setItem([input], e.target.value);\r\n  };\r\n\r\n  pilihSupplier(data) {\r\n    var supp = data ? data : \"DEFALT | DEFAULT\";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeSupplier: result_explode[0],\r\n      namaSupplier: result_explode[1],\r\n    });\r\n    localStorage.setItem(\"namaSupplier\", result_explode[0]);\r\n    localStorage.setItem(\"kodeSupplier\", result_explode[1]);\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    var barang = JSON.parse(localStorage.getItem(\"TerimaSupplier\")) || [];\r\n    var jenis = data.kodeJenis ? data.kodeJenis : \"DEFALT | DEFAULT\";\r\n    var result_explode = jenis.split(\"|\");\r\n    let isi = {\r\n      noFaktur: this.props.noFaktur.toUpperCase(), //\r\n      nettoDiscGlobalExt: 0,\r\n      gross: parseFloat(data.gross), //berat + bungkus\r\n      netto: parseFloat(data.netto), //murni\r\n      qty: 0,\r\n      k: parseFloat(data.k),\r\n      rp: parseFloat(data.rp || 0), //ongkos\r\n      kadarCetak: result_explode[2],\r\n      keterangan: data.keterangan.toUpperCase(),\r\n      discGlobalPr: 0,\r\n      kodeKategori: \"-\",\r\n      kadarTransaksi: parseFloat(data.kadarTransaksi), //harga%\r\n      kodeJenis: result_explode[0], //kodebarang\r\n      noBarcode: \"-\",\r\n      p: parseFloat(data.p),\r\n      discGlobalGr: 0,\r\n      pkg: parseFloat(data.pkg),\r\n      bruto: parseFloat(data.bruto), //berat\r\n      nettoDiscGlobal: 0,\r\n    };\r\n    barang.push(isi);\r\n    localStorage.setItem(\"TerimaSupplier\", JSON.stringify(barang));\r\n    localStorage.setItem(\r\n      \"totalNW\",\r\n      barang\r\n        .map((list) => list.netto)\r\n        .reduce((a, b) => a + b, 0)\r\n        .toFixed(3)\r\n    );\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      text: \"Transaksi Berhasil\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    })\r\n      .then(() => this.props.dispatch(reset(\"TerimaSupplier\")))\r\n      .then(() => this.getSumData())\r\n      .then(() => this.props.dispatch(getTerimaSupplierTemp()))\r\n      .then(() =>\r\n        this.setState({\r\n          totalNW: localStorage.getItem(\"totalNW\") || 0,\r\n        })\r\n      );\r\n  }\r\n  getSumData() {\r\n    this.props.dispatch(getNetto(\"TerimaSupplier\"));\r\n    this.props.dispatch(getBruto(\"TerimaSupplier\"));\r\n    this.props.dispatch(getRp(\"TerimaSupplier\"));\r\n    this.props.dispatch(getPkg(\"TerimaSupplier\"));\r\n    this.props.dispatch(getQty(\"TerimaSupplier\"));\r\n  }\r\n  kirimData() {\r\n    var jenis = this.state.kodeSupplier\r\n      ? this.state.kodeSupplier\r\n      : \"DEFALT | DEFAULT\";\r\n    var result_explode = jenis.split(\"|\");\r\n    if (this.state.kodeSupplier === \"\") {\r\n      warning(\"Mohon pilih Supplier\");\r\n      return false;\r\n    } else if (this.state.keterangan === \"\") {\r\n      warning(\"Mohon isi Keterangan\");\r\n      return false;\r\n    } else if (this.state.noBon === \"\") {\r\n      warning(\"Mohon Isi nomor Bon\");\r\n      return false;\r\n    } else if (localStorage.getItem(\"TerimaSupplier\") === null) {\r\n      warning(\"Barang masih kosong, mohon tambahkan barang\");\r\n      return false;\r\n    } else if (this.state.tanggalBarang === \"\") {\r\n      warning(\"Mohon isi Tanggal\");\r\n      return false;\r\n    } else if (this.state.tanggal === \"\") {\r\n      warning(\"Mohon isi Tanggal Invoice\");\r\n      return false;\r\n    }\r\n    var simpan = {\r\n      noBon: this.props.noFaktur.toUpperCase(),\r\n      namaSupplier: result_explode[1],\r\n      kodeSupplier: result_explode[0],\r\n      tanggalBarang: this.state.tanggalBarang,\r\n      noFaktur: this.props.noFaktur.toUpperCase(),\r\n      tanggal: this.state.tanggal,\r\n      barangDetails: JSON.parse(localStorage.getItem(\"TerimaSupplier\")),\r\n      footerItem: {\r\n        totalNettoExt: localStorage.getItem(\"totalNW\"),\r\n        totalBruto: this.props.sumBruto,\r\n        totalNetto: this.props.sumNetto,\r\n        totalQty: 0,\r\n        totalP: 0,\r\n        totalK: 0,\r\n        totalpkg: this.props.sumPkg,\r\n        totalGross: 0,\r\n        totalRp: this.props.sumRp,\r\n      },\r\n      footerDocument: {\r\n        inputBy: this.props.username,\r\n      },\r\n    };\r\n    console.log(JSON.stringify(simpan));\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    var table = JSON.parse(localStorage.getItem(\"TerimaSupplier\"));\r\n    // for each ticket pass all its data into an array\r\n    table.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        ++i,\r\n        ticket.kodeJenis,\r\n        ticket.kadarCetak,\r\n        ticket.p,\r\n        ticket.k,\r\n        ticket.pkg,\r\n        ticket.bruto,\r\n        ticket.kadarTransaksi,\r\n        ticket.netto,\r\n        parseFloat(ticket.rp).toLocaleString(\"id-ID\"),\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    const footer = [\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      table.map((list) => list.pkg).reduce((a, b) => a + b, 0),\r\n      table.map((list) => list.bruto).reduce((a, b) => a + b, 0),\r\n      \"\",\r\n      table\r\n        .map((list) => list.netto)\r\n        .reduce((a, b) => a + b, 0)\r\n        .toFixed(3),\r\n      table\r\n        .map((list) => list.rp)\r\n        .reduce((a, b) => a + b, 0)\r\n        .toLocaleString(\"id-ID\"),\r\n    ];\r\n    tableRows.push(footer);\r\n    console.log(JSON.stringify(tableRows));\r\n    var columTable = [\r\n      \"No\",\r\n      \"Kode Barang\",\r\n      \"Kadar Cetak (%)\",\r\n      \"P\",\r\n      \"K\",\r\n      \"Bungkus(Gr)\",\r\n      \"Berat(Gr)\",\r\n      \"Harga(Gr)\",\r\n      \"Murni(Gr)\",\r\n      \"Ongkos(Rp)\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    AxiosTransactionPost(\"/spp/dc/trm\", simpan)\r\n      .then((res) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Data Berhasil Ditambahkan!\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() => this.props.dispatch(getTerimaSupplierTemp()))\r\n          .then(() => localStorage.removeItem(\"noFaktur\"))\r\n          .then(() =>\r\n            PrintNota(\r\n              \"no Terima\",\r\n              this.props.noFaktur.toUpperCase(),\r\n              \"Tanggal\",\r\n              this.state.tanggal_invoice,\r\n              \"No Bon\",\r\n              this.state.noBon.toUpperCase(),\r\n              \"Supplier\",\r\n              this.state.kodeSupplier.toUpperCase(),\r\n              \"ADMIN\",\r\n              this.state.tanggal,\r\n              \"\",\r\n              columTable,\r\n              \"Terima Barang Supplier\",\r\n              tableRows\r\n            )\r\n          )\r\n          .then(() => localStorage.removeItem(\"TerimaSupplier\"))\r\n          .then(() => localStorage.removeItem(\"noBon\"))\r\n          .then(() => localStorage.removeItem(\"tanggal\"))\r\n          .then(() => localStorage.removeItem(\"tanggalBarang\"))\r\n          .then(() => localStorage.removeItem(\"namaSupplier\"))\r\n          .then(() => localStorage.removeItem(\"kodeSupplier\"))\r\n          .then(() => localStorage.removeItem(\"keterangan\"))\r\n          .then(() => localStorage.removeItem(\"totalNW\"))\r\n          .then(() => localStorage.removeItem(\"noFaktur\"))\r\n          .then(() => localStorage.setItem(\"isLogin\", true))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() =>\r\n            this.setState({\r\n              noBon: \"\",\r\n              keterangan: \"\",\r\n              totalNW: \"\",\r\n              kodeSupplier: \"\",\r\n            })\r\n          )\r\n          .then(() => this.props.dispatch(getTerimaSupplierTemp()))\r\n          .then(() => document.getElementById(\"myForm\").reset())\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text: \"Data Gagal Ditambahkan\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n      );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Terima Barang Supplier\" />\r\n              <div className=\"card-body\">\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-9\"></div>\r\n                    {/* <div className=\"col-lg-3\">\r\n                      <div className=\"text-right\">\r\n                        <Link to=\"/EditForm/terimaSupplier\">\r\n                          <button\r\n                            className=\"btn btn-warning\"\r\n\r\n                            // data-target=\"#editModal\"\r\n                            // data-toggle=\"modal\"\r\n                            // data-backdrop=\"static\"\r\n                            // data-keyboard=\"false\"\r\n                          >\r\n                            Edit Terima Barang\r\n                          </button>\r\n                        </Link>\r\n                      </div>\r\n                    </div> */}\r\n                    <div className=\"col-lg-12\">\r\n                      <br />\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <form id=\"myForm\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-lg-4 col-md-4\">\r\n                            <label htmlFor=\"\">Supplier</label>\r\n\r\n                            {this.state.listSupplier ? (\r\n                              <SelectSearch\r\n                                name=\"supplier\"\r\n                                id=\"kodeSupplier\"\r\n                                options={this.state.listSupplier.map((kode) => {\r\n                                  let data = {\r\n                                    value:\r\n                                      kode.kodeSupplier +\r\n                                      \"|\" +\r\n                                      kode.namaSupplier,\r\n                                    name: kode.namaSupplier,\r\n                                  };\r\n                                  return data;\r\n                                })}\r\n                                search\r\n                                onChange={(data) => this.pilihSupplier(data)}\r\n                              />\r\n                            ) : (\r\n                              <Skeleton width={\"100%\"} height={50} />\r\n                            )}\r\n                          </div>\r\n                          <div className=\"col-md-4 col-lg-4\">\r\n                            <label htmlFor=\"\">Tanggal Invoice</label>\r\n                            <input\r\n                              type=\"date\"\r\n                              id=\"tanggal_invoice\"\r\n                              name=\"tanggal_invoice\"\r\n                              className=\"form-control\"\r\n                              onChange={this.inputChange(\"tanggal\")}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-md-4 col-lg-4\">\r\n                            <label htmlFor=\"\">Tanggal Barang</label>\r\n                            <input\r\n                              type=\"date\"\r\n                              id=\"tanggal_barang\"\r\n                              name=\"tanggal_barang\"\r\n                              className=\"form-control\"\r\n                              onChange={this.inputChange(\"tanggalBarang\")}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-4 mt-3\">\r\n                            <label htmlFor=\"\">Keterangan</label>\r\n                            <input\r\n                              type=\"text\"\r\n                              id=\"keterangan\"\r\n                              name=\"keterangan\"\r\n                              className=\"form-control\"\r\n                              onChange={this.inputChange(\"keterangan\")}\r\n                              value={localStorage.getItem(\"keterangan\") || \"\"}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-md-4 col-lg-4 mt-3\">\r\n                            <label htmlFor=\"\">No Bon</label>\r\n                            <input\r\n                              type=\"text\"\r\n                              id=\"noBon\"\r\n                              name=\"noBon\"\r\n                              className=\"form-control\"\r\n                              onChange={this.inputChange(\"noBon\")}\r\n                              value={localStorage.getItem(\"noBon\") || \"\"}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-md-4 col-lg-4 mt-3\">\r\n                            <label htmlFor=\"\">Total NW Ext</label>\r\n                            <input\r\n                              type=\"number\"\r\n                              step={0.001}\r\n                              min={0}\r\n                              id=\"totalNW\"\r\n                              name=\"totalNW\"\r\n                              className=\"form-control\"\r\n                              onChange={this.inputChange(\"totalNW\")}\r\n                              value={parseFloat(this.state.totalNW) || 0}\r\n                            />\r\n                          </div>\r\n                          <ModalMasterData\r\n                            content={\r\n                              <Suspense\r\n                                fallback={\r\n                                  <Skeleton width={\"100%\"} height={400} />\r\n                                }\r\n                              >\r\n                                <FormTerimaSupplier\r\n                                  from=\"terima\"\r\n                                  onSubmit={(data) => this.handleSubmit(data)}\r\n                                  noFaktur={this.props.noFaktur}\r\n                                />\r\n                              </Suspense>\r\n                            }\r\n                            title=\"Tambah Data Barang\"\r\n                          />\r\n\r\n                          <div className=\"col-md-12 col-lg-12 mt-3\">\r\n                            <div className=\"row\">\r\n                              <div className=\"col-lg-6\"></div>\r\n                              <div className=\"col-lg-6 col-md-6\">\r\n                                <div className=\"text-right\">\r\n                                  <button\r\n                                    className=\"btn btn-primary\"\r\n                                    type=\"button\"\r\n                                    onClick={() =>\r\n                                      this.props.dispatch(showModal())\r\n                                    }\r\n                                  >\r\n                                    Tambah Data\r\n                                    <i className=\"fa fa-plus ml-3\"></i>\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                  {this.props.tampungBarang ? (\r\n                    <ToolkitProvider\r\n                      keyField=\"kodeJenis\"\r\n                      data={this.props.tampungBarang}\r\n                      columns={this.state.columns}\r\n                      search\r\n                    >\r\n                      {(props) => (\r\n                        <div className=\"form-group mt-2\">\r\n                          <BootstrapTable\r\n                            {...props.baseProps}\r\n                            striped\r\n                            hover\r\n                            condensed\r\n                            bordered={true}\r\n                            headerClasses=\"header-table\"\r\n                            pagination={paginationFactory()}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </ToolkitProvider>\r\n                  ) : (\r\n                    <BootstrapTable\r\n                      keyField=\"kodeJenis\"\r\n                      data={[]}\r\n                      columns={this.state.columns}\r\n                      bordered={true}\r\n                      headerClasses=\"header-table\"\r\n                      noDataIndication=\"Tidak Ada Data\"\r\n                    />\r\n                  )}\r\n                  <div className=\"col-lg-12 col-md-12\">\r\n                    <div className=\"text-right\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        onClick={() => this.kirimData()}\r\n                      >\r\n                        Simpan\r\n                        <i className=\"fa fa-paper-plane ml-3\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(TerimaSupplier);\r\n","import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;","import React, { Component } from \"react\";\r\n\r\nclass HeaderCard extends Component {\r\n  render() {\r\n    return (\r\n      <h4\r\n        className=\"card-header mb-3\"\r\n        style={{\r\n          fontSize: 25,\r\n          backgroundColor: \"#394867\",\r\n          borderTopLeftRadius: 10,\r\n          borderTopRightRadius: 10,\r\n          height: 50,\r\n          color: \"#ffffff\",\r\n        }}\r\n      >\r\n        {this.props.title}\r\n      </h4>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderCard;\r\n","import Swal from \"sweetalert2\";\r\nimport { AxiosMasterUpdate } from \"./Axios\";\r\n\r\nexport const warning = (pesan) => {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      position: \"top-right\",\r\n      icon: \"warning\",\r\n      text: pesan,\r\n      timer: 2500,\r\n      showConfirmButton: false,\r\n    })\r\n      .then(() => resolve(\"Berhasil\"))\r\n      .catch(() => reject(\"Gagal\"));\r\n  });\r\n};\r\n\r\nexport const berhasil = (pesan) => {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      position: \"top-right\",\r\n      icon: \"success\",\r\n      text: pesan,\r\n      timer: 2500,\r\n      showConfirmButton: false,\r\n    })\r\n      .then(() => resolve(\"Berhasil\"))\r\n      .catch(() => reject(\"Gagal\"));\r\n  });\r\n};\r\n\r\nexport const gagal = (pesan) => {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      position: \"top-right\",\r\n      icon: \"error\",\r\n      text: pesan,\r\n      timer: 2500,\r\n      showConfirmButton: false,\r\n    })\r\n      .then(() => resolve(\"Berhasil\"))\r\n      .catch((err) => reject(err));\r\n  });\r\n};\r\n\r\nexport const reactive = (err, kode, endpoint, data) => {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      title: \"Oopps..\",\r\n      text: err.response.data,\r\n      icon: \"info\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Re-Activate\",\r\n      cancelButtonText: \"Cancel\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        AxiosMasterUpdate(endpoint + kode, data)\r\n          .then(() => berhasil(\"Data Berhasil Dikembalikan\"))\r\n          .then(() => resolve(\"Berhasil\"))\r\n          .catch((err) => reject(\"Gagal\"));\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexport const LogData = (keterangan, data, err) => {\r\n  let tanggal = new Date().toLocaleDateString();\r\n  let log = JSON.parse(localStorage.getItem(\"LogWebsite\")) || [];\r\n  let datanya = {\r\n    tanggal: tanggal,\r\n    keterangan: keterangan,\r\n    data: data,\r\n    error: err,\r\n  };\r\n  log.push(datanya);\r\n  localStorage.setItem(\"LogWebsite\", JSON.stringify(log));\r\n};\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst PrintNota = (\r\n  row1name = \"\",\r\n  row1isi = \"\",\r\n  row2name = \"\",\r\n  row2isi = \"\",\r\n  row3name = \"\",\r\n  row3isi = \"\",\r\n  row4name = \"\",\r\n  row4isi = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n  validby = \"\",\r\n  tableColumn = [],\r\n  title = \"\",\r\n  tableRows\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  // var tickets = JSON.parse(data);\r\n  // define the columns we want and their titles\r\n\r\n  // // define an empty array of rows\r\n  // const tableRows = [];\r\n\r\n  // // for each ticket pass all its data into an array\r\n  // tickets.forEach((ticket, i) => {\r\n  //   const ticketData = [\r\n  //     i++,\r\n  //     ticket.kodeJenis01,\r\n  //     ticket.bruto01,\r\n  //     ticket.kadarTransaksi01,\r\n  //     ticket.netto01,\r\n  //     ticket.kodeJenis02,\r\n  //     ticket.bruto02,\r\n  //     ticket.kadarTransaksi02,\r\n  //     ticket.netto02,\r\n  //   ];\r\n  //   // push each tickcet's info into a row\r\n  //   tableRows.push(ticketData);\r\n  // });\r\n\r\n  // startY is basically margin-top\r\n  doc.autoTable(tableColumn, tableRows, { startY: 40 });\r\n  let finalY = doc.lastAutoTable.finalY + 10;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(title, 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(row1name, 14, 25);\r\n  doc.text(\":\", 37, 25);\r\n  doc.text(row1isi, 40, 25);\r\n  doc.text(row2name, 120, 25);\r\n  doc.text(\":\", 141, 25);\r\n  doc.text(row2isi, 145, 25);\r\n  //row 2\r\n  doc.text(row3name, 14, 30);\r\n  doc.text(\":\", 37, 30);\r\n  doc.text(row3isi, 40, 30);\r\n  doc.text(row4name, 120, 30);\r\n  doc.text(\":\", 141, 30);\r\n  doc.text(row4isi, 145, 30);\r\n\r\n  //Stamp\r\n  doc.text(\"User\", 160, finalY + 10);\r\n  doc.text(\":\", 168, finalY + 10);\r\n  doc.text(username, 170, finalY + 10);\r\n  doc.text(\"Cetak\", 160, finalY + 15);\r\n  doc.text(\":\", 168, finalY + 15);\r\n  doc.text(tanggal, 170, finalY + 15);\r\n  doc.text(\"Valid\", 160, finalY + 20);\r\n  doc.text(\":\", 168, finalY + 20);\r\n  doc.text(validby, 170, finalY + 20);\r\n  // doc.autoPrint();\r\n  // doc.save(`${title}_${dateStr}.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  x.document.close();\r\n};\r\n\r\nexport default PrintNota;\r\n","import Swal from \"sweetalert2\";\r\n\r\nexport const deleteLocalStorage = (keyRemove) => {\r\n  keyRemove.forEach((e) => {\r\n    localStorage.removeItem(e);\r\n  });\r\n};\r\n\r\nexport const deleteIndex = (nama, index, dispatch, func) => {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      const array = JSON.parse(localStorage.getItem(nama)) || [];\r\n      array.splice(index, 1);\r\n      localStorage.setItem(nama, JSON.stringify(array));\r\n      Swal.fire({\r\n        text: \"Berhasil\",\r\n        timer: 2000,\r\n        showConfirmButton: false,\r\n        position: \"top-right\",\r\n        icon: \"success\",\r\n      }).then(() => dispatch(func));\r\n    }\r\n  });\r\n};\r\nexport const deleteIndexUpdatetotalNW = (nama, index, dispatch, func) => {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      title: \"Anda Yakin ?\",\r\n      text: \"Anda Akan Menghapus Data Ini ?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        const array = JSON.parse(localStorage.getItem(nama)) || [];\r\n        array.splice(index, 1);\r\n        localStorage.setItem(nama, JSON.stringify(array));\r\n        Swal.fire({\r\n          text: \"Berhasil\",\r\n          timer: 2000,\r\n          showConfirmButton: false,\r\n          position: \"top-right\",\r\n          icon: \"success\",\r\n        })\r\n          .then(() => dispatch(func))\r\n          .then(resolve(\"Berhasil\"))\r\n          .catch(\"Gagal\");\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexport const deleteIndexUpdateNettoNW = (\r\n  nama,\r\n  index,\r\n  dispatch,\r\n  func,\r\n  nilai,\r\n  func2,\r\n  state\r\n) => {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      const array = JSON.parse(localStorage.getItem(nama)) || [];\r\n      array.splice(index, 1);\r\n      localStorage.setItem(nama, JSON.stringify(array));\r\n      var awal = localStorage.getItem(\"GrandTotalNetto\");\r\n      var hasil = parseFloat(awal) - parseFloat(nilai);\r\n      localStorage.setItem(\"GrandTotalNetto\", parseFloat(hasil).toFixed(3));\r\n      Swal.fire({\r\n        text: \"Berhasil\",\r\n        timer: 2000,\r\n        showConfirmButton: false,\r\n        position: \"top-right\",\r\n        icon: \"success\",\r\n      })\r\n        .then(() => dispatch(func))\r\n        .then(() => dispatch(func2));\r\n    }\r\n  });\r\n};\r\n"],"sourceRoot":""}