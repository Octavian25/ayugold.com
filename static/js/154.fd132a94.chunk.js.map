{"version":3,"sources":["Validations/validationClosingBarcod.js","Transaksi/ClosePengambilanBarcode.jsx"],"names":["validationClosingBarcod","value","errors","kadar","renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","maxLength","ClosePengambilanBarcode","props","state","items","name","columns","dataField","text","csvExport","formatter","rowContent","row","onClick","dispatch","kode","namaBaki","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","Axios","delete","server","data","kodeCustomer","res","position","showConfirmButton","timer","catch","err","tanggal","console","log","handleSubmit","this","onSubmit","Field","component","options","search","placeholder","onChange","selected","keyField","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","width","height","Component","reduxForm","form","validate","enableReinitialize","connect","closePengambilanBarcode","provinsi"],"mappings":"4SAQeA,EARiB,SAACC,GAC7B,IAAMC,EAAS,GAIf,OAHKD,EAAME,QACPD,EAAOC,MAAQ,sBAEZD,GCYLE,EAAc,SAAC,GAAD,IAClBC,EADkB,EAClBA,MACAC,EAFkB,EAElBA,MACAC,EAHkB,EAGlBA,KACAC,EAJkB,EAIlBA,MACAC,EALkB,EAKlBA,SALkB,IAMlBC,KAAQC,EANU,EAMVA,QAASC,EANC,EAMDA,MAAOC,EANN,EAMMA,QANN,OAQlB,yBAAKC,UAAU,cACb,2BAAOC,QAAQ,GAAGD,UAAU,cACzBR,GAEH,2CACMD,EADN,CAEEE,KAAMA,EACNO,UAAU,eACVE,UAAWR,EACXC,SAAUA,KAEXE,IACGC,GAAS,uBAAGE,UAAU,oBAAoBF,IACzCC,GAAW,2BAAIA,M,IAyClBI,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,CACL,CACEnB,MAAO,kBACPoB,KAAM,mBAER,CACEpB,MAAO,YACPoB,KAAM,aAER,CACEpB,MAAO,gBACPoB,KAAM,iBAER,CACEpB,MAAO,kBACPoB,KAAM,oBAGVC,QAAS,CACP,CACEC,UAAW,UACXC,KAAM,WAER,CACED,UAAW,WACXC,KAAM,aAER,CACED,UAAW,WACXC,KAAM,YAER,CACED,UAAW,SACXC,KAAM,UAER,CACED,UAAW,aACXC,KAAM,eAER,CACED,UAAW,MACXC,KAAM,OAER,CACED,UAAW,QACXC,KAAM,aAER,CACED,UAAW,QACXC,KAAM,aAER,CACED,UAAW,KACXC,KAAM,cAER,CACED,UAAW,KACXC,KAAM,cAER,CACED,UAAW,OACXC,KAAM,OACNC,WAAW,EACXC,UAAW,SAACC,EAAYC,GACtB,OACE,yBAAKd,UAAU,eACb,4BACEA,UAAU,sBACVe,QAAS,kBAAY,EAAKX,MAAMY,SA7GzBC,EA6GmCH,EAAII,cA5G9DC,IAAKC,KAAK,CACRC,MAAO,eACPX,KAAM,iCACNY,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClBC,MAAK,SAACC,GACHA,EAAOC,aACTC,IAAMC,OAAOC,+CAAqB,CAChCC,KAAM,CACJC,aAAcjB,KAGfU,MAAK,SAACQ,GAAD,OACJhB,IAAKC,KAAK,CACRgB,SAAU,UACVd,KAAM,UACNZ,KAAM,yBACN2B,mBAAmB,EACnBC,MAAO,UAGVC,OAAM,SAACC,GAAD,OACLrB,IAAKC,KAAK,CACRgB,SAAU,UACVd,KAAM,QACNZ,KAAM,sBACN2B,mBAAmB,EACnBC,MAAO,aA/BnB,IAAyBrB,IA+GP,uBAAGjB,UAAU,qBAJf,aAYViC,KAAM,CACJ,CACEQ,QAAS,UAnFE,E,yDAyFNR,GACXS,QAAQC,IAAIV,K,+BAELA,GACPS,QAAQC,IAAIV,K,+BAEJ,IAAD,OACCW,EAAiBC,KAAKzC,MAAtBwC,aACR,OACE,yBAAK5C,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,0BAAM8C,SAAUF,GACd,yBAAK5C,UAAU,OACb,yBAAKA,UAAU,qBACb,kBAAC+C,EAAA,EAAD,CACExC,KAAK,cACLf,MAAM,gBACNC,KAAK,OACLuD,UAAW1D,KAGf,yBAAKU,UAAU,qBACb,kBAAC+C,EAAA,EAAD,CACExC,KAAK,WACLf,MAAM,kBACNC,KAAK,OACLuD,UAAW1D,KAGf,yBAAKU,UAAU,qBACb,2BAAOC,QAAQ,IAAf,aACA,kBAAC,IAAD,CACEgD,QAASJ,KAAKxC,MAAMC,MACpB4C,QAAM,EACNC,YAAY,iBACZC,SAAU,SAACnB,GAAD,OAAU,EAAKoB,SAASpB,OAGtC,yBAAKjC,UAAU,uBACZ6C,KAAKxC,MAAM4B,KACV,kBAAC,IAAD,CACEqB,SAAS,KACTrB,KAAMY,KAAKxC,MAAM4B,KACjBzB,QAASqC,KAAKxC,MAAMG,QACpB0C,QAAM,IAEL,SAAC9C,GAAD,OACC,yBAAKJ,UAAU,mBACb,kBAAC,IAAD,iBACMI,EAAMmD,UADZ,CAEEC,SAAO,EACPC,OAAK,EACLC,WAAS,EACTC,UAAU,EACVC,cAAc,eACdC,WAAYC,aAMpB,kBAAC,IAAD,CAAUC,MAAO,OAAQC,OAAQ,kB,GA1JnBC,aAwKtC9D,EAA0B+D,YAAU,CAClCC,KAAM,0BACNC,SAAUlF,EACVmF,oBAAoB,GAHIH,CAIvB/D,GACYmE,uBAhPI,SAACjE,GAClB,MAAO,CACLkE,wBAAyBlE,EAAMmE,SAASD,2BA8OT,KAApBD,CAA0BnE","file":"static/js/154.fd132a94.chunk.js","sourcesContent":["const validationClosingBarcod = (value) => {\r\n    const errors = {}\r\n    if (!value.kadar) {\r\n        errors.kadar = \"Tidak Boleh kosong\"\r\n    }\r\n    return errors\r\n}\r\n\r\nexport default validationClosingBarcod;","import Axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { connect } from \"react-redux\";\r\nimport SelectSearch from \"react-select-search\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport Swal from \"sweetalert2\";\r\nimport validationClosingBarcod from \"../Validations/validationClosingBarcod\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    closePengambilanBarcode: state.provinsi.closePengambilanBarcode,\r\n  };\r\n};\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nfunction hapus(dispatch, kode) {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      Axios.delete(server + \"customer\", {\r\n        data: {\r\n          kodeCustomer: kode,\r\n        },\r\n      })\r\n        .then((res) =>\r\n          Swal.fire({\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            text: \"Data Berhasil Dihapus!\",\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n        )\r\n        .catch((err) =>\r\n          Swal.fire({\r\n            position: \"top-end\",\r\n            icon: \"error\",\r\n            text: \"Data Gagal Dihapus!\",\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          })\r\n        );\r\n    }\r\n  });\r\n}\r\nclass ClosePengambilanBarcode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [\r\n        {\r\n          value: \"TERIMA SUPPLIER\",\r\n          name: \"TERIMA SUPPLIER\",\r\n        },\r\n        {\r\n          value: \"PENJUALAN\",\r\n          name: \"PENJUALAN\",\r\n        },\r\n        {\r\n          value: \"PINDAH BARANG\",\r\n          name: \"PINDAH BARANG\",\r\n        },\r\n        {\r\n          value: \"RETURN CUSTOMER\",\r\n          name: \"RETURN CUSTOMER\",\r\n        },\r\n      ],\r\n      columns: [\r\n        {\r\n          dataField: \"tanggal\",\r\n          text: \"Tanggal\",\r\n        },\r\n        {\r\n          dataField: \"namaBaki\",\r\n          text: \"Nama Baki\",\r\n        },\r\n        {\r\n          dataField: \"supplier\",\r\n          text: \"Supplier\",\r\n        },\r\n        {\r\n          dataField: \"cabang\",\r\n          text: \"Cabang\",\r\n        },\r\n        {\r\n          dataField: \"kodeBarang\",\r\n          text: \"Kode Barang\",\r\n        },\r\n        {\r\n          dataField: \"qty\",\r\n          text: \"Qty\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Berat(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Netto(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"rp\",\r\n          text: \"Ongkos(Rp)\",\r\n        },\r\n        {\r\n          dataField: \"rp\",\r\n          text: \"Ongkos(Rp)\",\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() => hapus(this.props.dispatch, row.namaBaki)}\r\n                >\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                  HAPUS\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      data: [\r\n        {\r\n          tanggal: \"2020\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    console.log(data);\r\n  }\r\n  selected(data) {\r\n    console.log(data);\r\n  }\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <Field\r\n                        name=\"noCloseJual\"\r\n                        label=\"No Close Jual\"\r\n                        type=\"text\"\r\n                        component={renderField}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <Field\r\n                        name=\"jenisTrx\"\r\n                        label=\"Jenis Transaksi\"\r\n                        type=\"text\"\r\n                        component={renderField}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <label htmlFor=\"\">Nama Toko</label>\r\n                      <SelectSearch\r\n                        options={this.state.items}\r\n                        search\r\n                        placeholder=\"Silahkan Pilih\"\r\n                        onChange={(data) => this.selected(data)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-lg-12 col-md-12\">\r\n                      {this.state.data ? (\r\n                        <ToolkitProvider\r\n                          keyField=\"id\"\r\n                          data={this.state.data}\r\n                          columns={this.state.columns}\r\n                          search\r\n                        >\r\n                          {(props) => (\r\n                            <div className=\"form-group mt-2\">\r\n                              <BootstrapTable\r\n                                {...props.baseProps}\r\n                                striped\r\n                                hover\r\n                                condensed\r\n                                bordered={true}\r\n                                headerClasses=\"header-table\"\r\n                                pagination={paginationFactory()}\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        </ToolkitProvider>\r\n                      ) : (\r\n                        <Skeleton width={\"100%\"} height={100} />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nClosePengambilanBarcode = reduxForm({\r\n  form: \"ClosePengambilanBarcode\",\r\n  validate: validationClosingBarcod,\r\n  enableReinitialize: true,\r\n})(ClosePengambilanBarcode);\r\nexport default connect(maptostate, null)(ClosePengambilanBarcode);\r\n"],"sourceRoot":""}