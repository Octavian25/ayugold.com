{"version":3,"sources":["../node_modules/redux-form/es/index.js","DataMaster/Component/FormProvinsiEdit.jsx","DataMaster/Provinsi.jsx","Images/500.svg","DataMaster/Component/ModalMasterData.jsx","TourGuide.jsx","DataMaster/Component/Table.jsx","Validations/validationProvinsi.js","DataMaster/Component/AreaProvinsiKota.jsx"],"names":["reset","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","change","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors","FormProvinsiEdit","props","state","response","status","kodenya","this","kode","namanya","nama","onSubmit","handleSubmit","className","Field","name","replace","type","normalize","value","toUpperCase","component","renderField","readOnly","label","id","disabled","onSend","aria-hidden","Component","reduxForm","form","validate","validationProvinsi","enableReinitialize","connect","initialValues","NamaProvinsi","provinsi","editProvinsi","namaProvinsi","KodeProvinsi","kodeProvinsi","statusAktif","defaultSorted","dataField","order","Provinsi","updateStatus","input","console","log","setState","dispatch","getProvinsiLIst","edit","e","target","openTour","isTourOpen","closeTour","provinsi_array","columns","text","sort","headerStyle","width","csvExport","formatter","rowContent","row","data","nama_provinsi","kode_provinsi","onClick","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","AxiosMasterDelete","res","berhasil","catch","err","gagal","data-tut","data-toggle","data-target","editModal","showModal","hasil","progressSend","AxiosMasterPost","finishSend","hideModal","handleReactive","AxiosMasterPut","LogData","includes","reactive","isEdit","editProvinsiList","style","color","alert","role","data-dismiss","aria-label","TourGuide","tourConfig","ModalMasterData","content","from","handleEdit","AreaProvinsiKota","isiNama","isikode","HeaderCard","tambahModal","provinsiList","Table","namaKey","error","src","notrespond","alt","height","module","exports","ModalGlobal","show","onHide","dialogClassName","backdrop","keyboard","Header","closeButton","backgroundColor","Title","Body","modal","disableBody","disableBodyScroll","enableBody","enableBodyScroll","map","list","index","selector","onRequestClose","hideGuide","steps","isOpen","showTourGuide","maskClassName","rounded","accentColor","onAfterOpen","onBeforeClose","SearchBar","Search","ExportCSVButton","CSVExport","rowStyle","rowIndex","borderTop","bootstrap4","keyField","search","searchProps","placeholder","margin","baseProps","headerClasses","striped","hover","bordered","pagination","paginationFactory","csvProps","values","errors","length","KodeKota","NamaKota","KodeArea","kodeKota","NamaArea","KodeLokasi","NamaLokasi","listProvinsi","listKota","AxiosMasterGet","limit","renderFieldSelect","kode_ext","options","obj","kode_kota","nama_kota","config","Error"],"mappings":"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","file":"static/js/40.2f3ffbe2.chunk.js","sourcesContent":["import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { validationProvinsi } from \"../../Validations/validationProvinsi\";\r\nimport { renderField } from \"../../renderField\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    initialValues: {\r\n      NamaProvinsi: state.provinsi.editProvinsi.namaProvinsi,\r\n      KodeProvinsi: state.provinsi.editProvinsi.kodeProvinsi,\r\n      status: state.provinsi.editProvinsi.statusAktif,\r\n    },\r\n  };\r\n};\r\nclass FormProvinsiEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      response: \"\",\r\n      status: \"AKTIF\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    var kodenya = this.props.kode;\r\n    var namanya = this.props.nama;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-2\">\r\n              <Field\r\n                name={kodenya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                readOnly={true}\r\n                label={this.props.kode}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <Field\r\n                name={namanya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                label={this.props.nama}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  type=\"submit\"\r\n                  id=\"simpan\"\r\n                  className=\"btn btn-primary\"\r\n                  disabled={this.props.onSend}\r\n                >\r\n                  {this.props.onSend ? (\r\n                    <span\r\n                      className=\"spinner-border spinner-border-sm mr-3\"\r\n                      aria-hidden=\"true\"\r\n                    ></span>\r\n                  ) : null}\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormProvinsiEdit = reduxForm({\r\n  form: \"ProvinsiEdit\", // a unique identifier for this form\r\n  validate: validationProvinsi, // <--- validation function given to redux-form\r\n  enableReinitialize: true,\r\n})(FormProvinsiEdit);\r\nexport default connect(maptoState, null)(FormProvinsiEdit);\r\n","import React, { Component } from \"react\";\r\nimport notrespond from \"../Images/500.svg\";\r\nimport AreaProvinsiKota from \"./Component/AreaProvinsiKota\";\r\nimport Swal from \"sweetalert2\";\r\nimport Table from \"./Component/Table\";\r\nimport { connect } from \"react-redux\";\r\nimport { editProvinsiList, getProvinsiLIst } from \"../actions/provinsiAction\";\r\nimport FormProvinsiEdit from \"./Component/FormProvinsiEdit\";\r\nimport { reset } from \"redux-form\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { AxiosMasterDelete, AxiosMasterPost, AxiosMasterPut } from \"../Axios\";\r\nimport { berhasil, gagal, LogData, reactive } from \"../Alert\";\r\nimport ModalMasterData from \"./Component/ModalMasterData\";\r\nimport { hideModal, showModal } from \"../actions/ModalAction\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport TourGuide from \"../TourGuide\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\n\r\nfunction hapus(dispatch, kode) {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      AxiosMasterDelete(\"provinsi/delete/\" + kode)\r\n        .then((res) => berhasil(\"Data Berhasil Dihapus\"))\r\n        .then(() => dispatch(getProvinsiLIst()))\r\n        .catch((err) => gagal(\"Data Gagal Dihapus\"));\r\n    }\r\n  });\r\n}\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    provinsiList: state.provinsi.provinsi,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n    status: state.provinsi.status,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\n\r\nconst defaultSorted = [\r\n  {\r\n    dataField: \"kodeProvinsi\",\r\n    order: \"asc\",\r\n  },\r\n];\r\n\r\nclass Provinsi extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      provinsi: [],\r\n      provinsi_array: [],\r\n      response: \"\",\r\n      namaProvinsi: \"\",\r\n      kodeProvinsi: \"\",\r\n      columns: [\r\n        {\r\n          dataField: \"kode_provinsi\",\r\n          text: \"Kode Provinsi\",\r\n          sort: true,\r\n          headerStyle: () => {\r\n            return { width: \"15%\" };\r\n          },\r\n        },\r\n        {\r\n          dataField: \"nama_provinsi\",\r\n          text: \"Nama Provinsi\",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            let data = {\r\n              namaProvinsi: row.nama_provinsi,\r\n              kodeProvinsi: row.kode_provinsi,\r\n              statusAktif: row.statusAktif,\r\n            };\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() => hapus(this.props.dispatch, row.kode_provinsi)}\r\n                  data-tut=\"reactour_3\"\r\n                >\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                  HAPUS\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-warning mr-2\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#editModal\"\r\n                  onClick={() => this.editModal(data)}\r\n                  data-tut=\"reactour_4\"\r\n                >\r\n                  <i className=\"fa fa-edit mr-1\"></i>\r\n                  Edit\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      showModal: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getProvinsiLIst());\r\n  }\r\n\r\n  updateStatus = (input) => {\r\n    console.log(input);\r\n    this.setState({\r\n      response: input,\r\n    });\r\n    this.props.dispatch(getProvinsiLIst());\r\n  };\r\n\r\n  edit = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit(hasil) {\r\n    let data = {\r\n      nama_provinsi: hasil.NamaProvinsi,\r\n      kode_provinsi: hasil.KodeProvinsi,\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    AxiosMasterPost(\"provinsi/add\", data)\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) => berhasil(\"Data Berhasil Disimpan\"))\r\n      .then(() => this.props.dispatch(getProvinsiLIst()))\r\n      .then(() => this.props.dispatch(reset(\"Provinsi\")))\r\n      .catch((err) =>\r\n        this.handleReactive(err, hasil.KodeProvinsi, {\r\n          nama_provinsi: hasil.NamaProvinsi,\r\n        })\r\n      );\r\n  }\r\n  handleEdit(hasil) {\r\n    let data = {\r\n      statusAktif: hasil.status ? hasil.status : \"AKTIF\",\r\n      nama_provinsi: hasil.NamaProvinsi,\r\n      kode_provinsi: hasil.KodeProvinsi,\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    AxiosMasterPut(\"provinsi/edit/\" + hasil.KodeProvinsi, {\r\n      nama_provinsi: hasil.NamaProvinsi,\r\n    })\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) =>\r\n        berhasil(\"Data Berhasil Diperbaharui\").then(() =>\r\n          this.props.dispatch(getProvinsiLIst())\r\n        )\r\n      )\r\n      .catch((err) =>\r\n        gagal(\"Data Gagal Ditambahkan\").then(() =>\r\n          LogData(\"Gagal Edit Data Provinsi\", data, err)\r\n        )\r\n      );\r\n  }\r\n\r\n  handleReactive(err, kode, data) {\r\n    this.props.dispatch(hideModal());\r\n    let error = err.response.data;\r\n    let check = error.includes(\"deleted\");\r\n    check\r\n      ? reactive(\r\n          err,\r\n          kode,\r\n          \"provinsi/reactive/\",\r\n          data,\r\n          \"provinsi/edit/\"\r\n        ).then(() => this.props.dispatch(getProvinsiLIst()))\r\n      : gagal(\"Data Gagal Ditambahkan\");\r\n  }\r\n\r\n  tambahModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({\r\n      isEdit: false,\r\n    });\r\n  }\r\n  editModal(data) {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(editProvinsiList(data));\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n  openTour = () => {\r\n    this.setState({ isTourOpen: true });\r\n  };\r\n  closeTour = () => {\r\n    this.setState({ isTourOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div id=\"notif_alert\" className={this.props.alert} role=\"alert\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n          <strong>Error - </strong> Tidak Bisa Mengambil Data\r\n        </div>\r\n        <TourGuide\r\n          tourConfig={[\r\n            `Untuk Menambahkan Data Provinsi, Tekan Tombol ini Dan Isi kolom yang disediakan`,\r\n            `Ini adalah data provinsi yang sudah tersimpan`,\r\n            `Ini adalah tombol untuk menghapus data pada baris yang dipilih`,\r\n            `Ini adalah tombol untuk mengubah data pada baris yang dipilih`,\r\n          ]}\r\n        />\r\n        <ModalMasterData\r\n          content={\r\n            this.state.isEdit ? (\r\n              <FormProvinsiEdit\r\n                nama=\"Nama Provinsi\"\r\n                kode=\"Kode Provinsi\"\r\n                from=\"provinsi\"\r\n                edit={this.edit}\r\n                updateStatus={this.updateStatus}\r\n                onSubmit={(data) => this.handleEdit(data)}\r\n                onSend={this.props.onSend}\r\n              />\r\n            ) : (\r\n              <AreaProvinsiKota\r\n                nama=\"Nama Provinsi\"\r\n                isiNama={this.state.namaProvinsi}\r\n                kode=\"Kode Provinsi\"\r\n                isikode={this.state.kodeProvinsi}\r\n                status={this.state.status}\r\n                from=\"provinsi\"\r\n                edit={this.edit}\r\n                updateStatus={this.updateStatus}\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n                showModal={this.state.showModal}\r\n                onSend={this.props.onSend}\r\n              />\r\n            )\r\n          }\r\n          title={\r\n            this.state.isEdit ? \"Edit Data Provinsi\" : \"Tambah Data Provinsi\"\r\n          }\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Data Provinsi\" />\r\n              <div className=\"card-body\">\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"text-right\">\r\n                    <button\r\n                      name=\"simpan\"\r\n                      id=\"simpan\"\r\n                      className=\"btn btn-info\"\r\n                      onClick={() => this.tambahModal()}\r\n                      data-tut=\"reactour_1\"\r\n                    >\r\n                      Tambah Data Provinsi\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-12 col-md-12 mt-5\" data-tut=\"reactour_2\">\r\n                  {this.props.provinsiList ? (\r\n                    <Table\r\n                      columns={this.state.columns}\r\n                      data={this.props.provinsiList}\r\n                      defaultSorted={defaultSorted}\r\n                      namaKey=\"kodeProvinsi\"\r\n                    />\r\n                  ) : (\r\n                    <div>\r\n                      {this.props.error ? (\r\n                        <div className=\"text-center\">\r\n                          <img\r\n                            src={notrespond}\r\n                            style={{ width: \"30%\" }}\r\n                            alt=\"NOT RESPOND\"\r\n                          />\r\n                          <br />\r\n                          <h4>Request API Gagal, Silahkan Refresh</h4>\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton width={\"100%\"} height={180} />\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoState, null)(Provinsi);\r\n","module.exports = __webpack_public_path__ + \"static/media/500.c22f1e39.svg\";","import { Modal } from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { hideModal } from \"../../actions/ModalAction\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    show: state.modal.show,\r\n  };\r\n};\r\nclass ModalGlobal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <Modal\r\n        show={this.props.show}\r\n        onHide={() => this.props.dispatch(hideModal())}\r\n        dialogClassName=\"modal-xl\"\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header\r\n          closeButton\r\n          style={{ backgroundColor: \"#5F76E8\", color: \"#ffffff\" }}\r\n        >\r\n          <Modal.Title>{this.props.title || \"\"}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{this.props.content || \"\"}</Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoState, null)(ModalGlobal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { hideGuide } from \"./actions/ModalAction\";\r\nimport Tour from \"reactour\";\r\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\r\n\r\nconst mapToState = (state) => {\r\n  return {\r\n    showTourGuide: state.provinsi.showTourGuide,\r\n  };\r\n};\r\nclass TourGuide extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  disableBody = (target) => disableBodyScroll(target);\r\n  enableBody = (target) => enableBodyScroll(target);\r\n  render() {\r\n    let tourConfig = this.props.tourConfig.map((list, index) => {\r\n      let data = {\r\n        selector: '[data-tut=\"reactour_' + ++index + '\"]',\r\n        content: list,\r\n      };\r\n      return data;\r\n    });\r\n    console.log(tourConfig);\r\n    return (\r\n      <Tour\r\n        onRequestClose={() => this.props.dispatch(hideGuide())}\r\n        steps={tourConfig}\r\n        isOpen={this.props.showTourGuide}\r\n        maskClassName=\"mask\"\r\n        className=\"helper\"\r\n        rounded={5}\r\n        accentColor=\"#5cb7b7\"\r\n        onAfterOpen={this.disableBody}\r\n        onBeforeClose={this.enableBody}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapToState, null)(TourGuide);\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport,\r\n} from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  // ROW STYLE TABLE\r\n  rowStyle = (row, rowIndex) => {\r\n    row.index = rowIndex;\r\n    const style = {};\r\n    if (rowIndex % 2 === 0) {\r\n      style.backgroundColor = \"transparent\";\r\n    } else {\r\n      style.backgroundColor = \"#DEDEDE\";\r\n    }\r\n    style.borderTop = \"none\";\r\n\r\n    return style;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ToolkitProvider\r\n        bootstrap4\r\n        keyField={this.props.namaKey ? this.props.namaKey : \"kode\"}\r\n        data={this.props.data}\r\n        columns={this.props.columns}\r\n        defaultSorted={this.props.defaultSorted}\r\n        search\r\n      >\r\n        {(props) => (\r\n          <div className=\"col-lg-12 col-md-12 mt-5\">\r\n            <div className=\"text-right\">\r\n              <SearchBar\r\n                {...props.searchProps}\r\n                className=\"form-control\"\r\n                placeholder=\"Tuliskan Kode / Nama\"\r\n                style={{ margin: 0 }}\r\n              />\r\n            </div>\r\n            <BootstrapTable\r\n              {...props.baseProps}\r\n              headerClasses=\"header-table\"\r\n              striped\r\n              hover\r\n              bordered={true}\r\n              pagination={paginationFactory()}\r\n            />\r\n            <ExportCSVButton {...props.csvProps} className=\"btn btn-primary\">\r\n              Export CSV\r\n            </ExportCSVButton>\r\n          </div>\r\n        )}\r\n      </ToolkitProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(Table);\r\n","export const validationProvinsi = (values) => {\r\n  const errors = {}\r\n  // PROVINSI\r\n  if (!values.KodeProvinsi) {\r\n    errors.KodeProvinsi = 'Tidak Boleh kosong'\r\n  } else if (values.KodeProvinsi.length > 5) {\r\n    errors.KodeProvinsi = 'Tidak Boleh Lebih Dari 5 Karakter'\r\n  }\r\n  if (!values.NamaProvinsi) {\r\n    errors.NamaProvinsi = 'Tidak Boleh kosong'\r\n  }\r\n  // Kota\r\n  if (!values.KodeKota) {\r\n    errors.KodeKota = 'Tidak Boleh kosong'\r\n  } else if (values.KodeKota.length > 5) {\r\n    errors.KodeKota = 'Tidak Boleh Lebih Dari 5 Karakter'\r\n  }\r\n  if(!values.kodeProvinsi){\r\n    errors.kodeProvinsi = \"Tidak Boleh Kosong\"\r\n  } else if(values.kodeProvinsi === \"DEFAULT\"){\r\n    errors.kodeProvinsi = \"Silahkan Pilih Provinsi\"\r\n  }\r\n  if(!values.NamaKota){\r\n    errors.NamaKota = \"Tidak Boleh Kosong\"\r\n  }\r\n  // AREA\r\n  if (!values.KodeArea) {\r\n    errors.KodeArea = 'Tidak Boleh kosong'\r\n  } else if (values.KodeArea.length > 5) {\r\n    errors.KodeArea = 'Tidak Boleh Lebih Dari 5 Karakter'\r\n  }\r\n  if(!values.kodeKota){\r\n    errors.kodeKota = \"Tidak Boleh Kosong\"\r\n  } else if(values.kodeKota === \"DEFAULT\"){\r\n    errors.kodeKota = \"Silahkan Pilih Provinsi\"\r\n  }\r\n  if(!values.NamaArea){\r\n    errors.NamaArea = \"Tidak Boleh Kosong\"\r\n  }\r\n\r\n  //LOKASI\r\n  if (!values.KodeLokasi) {\r\n    errors.KodeLokasi = 'Tidak Boleh kosong'\r\n  } else if (values.KodeLokasi.length > 5) {\r\n    errors.KodeLokasi = 'Tidak Boleh Lebih Dari 5 Karakter'\r\n  }\r\n  if(!values.NamaLokasi){\r\n    errors.NamaLokasi = 'Tidak Boleh kosong'\r\n  }\r\n\r\n  return errors\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { validationProvinsi } from \"../../Validations/validationProvinsi\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport { LogData } from \"../../Alert\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    limit: state.config.limit,\r\n    error: state.alert.Error,\r\n    editProvinsi: state.provinsi.editProvinsi,\r\n  };\r\n};\r\n\r\nclass AreaProvinsiKota extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      response: \"\",\r\n      status: \"AKTIF\",\r\n      listProvinsi: [],\r\n      listKota: [],\r\n      isiNama: \"\",\r\n      isikode: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"provinsi/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listProvinsi: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    AxiosMasterGet(\"kota/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listKota: res.data,\r\n        })\r\n      )\r\n      .catch((err) => LogData(\"Error Get Data Kota\"));\r\n  }\r\n\r\n  render() {\r\n    var kodenya = this.props.kode;\r\n    var namanya = this.props.nama;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-2\">\r\n              <Field\r\n                name={kodenya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                limit={5}\r\n                label={this.props.kode}\r\n              />\r\n            </div>\r\n            {this.props.from === \"kota\" ? (\r\n              <div className=\"col-md-3\">\r\n                <div className=\"form-group\">\r\n                  <Field\r\n                    component={renderFieldSelect}\r\n                    label={this.props.kode_ext}\r\n                    name=\"kodeProvinsi\"\r\n                    value={this.props.status}\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    className=\"form-control\"\r\n                    options={this.state.listProvinsi.map((obj) => {\r\n                      var payload = {\r\n                        value: obj.kode_provinsi,\r\n                        name: obj.nama_provinsi,\r\n                      };\r\n                      return payload;\r\n                    })}\r\n                  ></Field>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            {/* AREA */}\r\n            {this.props.from === \"area\" ? (\r\n              <div className=\"col-md-3\">\r\n                <div className=\"form-group\">\r\n                  <Field\r\n                    component={renderFieldSelect}\r\n                    label={this.props.kode_ext}\r\n                    name={\r\n                      this.props.from === \"kota\" ? \"kodeProvinsi\" : \"kodeKota\"\r\n                    }\r\n                    value={this.props.status}\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    className=\"form-control\"\r\n                    options={this.state.listKota.map((obj) => {\r\n                      var payload = {\r\n                        value: obj.kode_kota,\r\n                        name: obj.nama_kota,\r\n                      };\r\n                      return payload;\r\n                    })}\r\n                  ></Field>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            {/* Lokasi */}\r\n            <div className=\"col-md-3\">\r\n              <Field\r\n                name={namanya.replace(/\\s/g, \"\")}\r\n                type=\"text\"\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                component={renderField}\r\n                label={this.props.nama}\r\n              />\r\n            </div>\r\n            {this.props.from === \"area\" ? (\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"kodePos\"\r\n                  component={renderField}\r\n                  type=\"number\"\r\n                  label=\"Kode Pos\"\r\n                  placeholder=\"Masukan Kode Pos\"\r\n                />\r\n              </div>\r\n            ) : null}\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  type=\"submit\"\r\n                  id=\"simpan\"\r\n                  className=\"btn btn-primary\"\r\n                  disabled={this.props.onSend}\r\n                >\r\n                  {this.props.onSend ? (\r\n                    <span\r\n                      className=\"spinner-border spinner-border-sm mr-3\"\r\n                      aria-hidden=\"true\"\r\n                    ></span>\r\n                  ) : null}\r\n                  Submit\r\n                  <i className=\"fa fa-paper-plane ml-3\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAreaProvinsiKota = reduxForm({\r\n  form: \"Provinsi\", // a unique identifier for this form\r\n  validate: validationProvinsi, // <--- validation function given to redux-form\r\n  enableReinitialize: true,\r\n})(AreaProvinsiKota);\r\nexport default connect(maptoState, null)(AreaProvinsiKota);\r\n"],"sourceRoot":""}