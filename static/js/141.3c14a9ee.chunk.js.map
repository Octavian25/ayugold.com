{"version":3,"sources":["Transaksi/Component/FormPengambilanTimbangan.jsx","Transaksi/TransaksiTimbangBarang.jsx"],"names":["currencyMask","createNumberMask","prefix","suffix","locale","FormPengambilanTimbangan","props","onclick1","bind","state","kodeBarang","DataSupplier","kode_barang","keterangan","kadar","P","K","bungkus","berat","harga","murni","ongkos","status","kadarCetak","kadarBeli","namaJenis","kodeJenis","AxiosMasterGet","then","res","setState","data","catch","err","console","log","getTimbangan","this","change","netto","noFaktur","pkg","result_explode","split","kadarJual","barang","onSubmit","handleSubmit","className","Field","name","label","type","readOnly","component","renderField","defaultValue","normalize","value","toUpperCase","renderFieldSelect","options","map","list","kode_jenis","nama_jenis","kadar_cetak","kadar_jual","kadar_beli","onChange","pilihBarang","onBlur","setKadar","placeholder","htmlFor","disabled","submitting","Component","reduxForm","form","validate","validationTerimaSupplier","enableReinitialize","selector","formValueSelector","connect","bruto","kadarTransaksi","gross","parseFloat","toFixed","TransaksiTimbanganBarang","inputChange","input","e","target","jenisTransaksi","columns","dataField","text","footerClasses","csvExport","formatter","rowContent","row","index","data-tut","onClick","hapus_barcode","kode_supplier","kode_customer","kode_lokasi_asal","kode_lokasi_tujuan","tanggal","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","JSON","parse","localStorage","getItem","splice","setItem","stringify","dispatch","getListDataPengambilanBarcode","getUUID","getcustomerList","getsupplierList","getLokasiPindah","str","substring","length","replace","simpan","ongkos_rp","rp","array","push","position","showConfirmButton","timer","reset","document","getElementById","click","warning","instansi","instansi2","local","qty","reduce","a","b","progressSend","no_timbang","jenis_trx","baki","total_qty","total_bruto","total_pkg","total_gross","total_netto","total_ongkos","detail_barang","AxiosMasterPost","berhasil","multipleDeleteLocal","finishSend","window","location","reload","gagal","response","style","color","HeaderCard","id","customer","nama_customer","search","data-toggle","data-target","GlobalTabel","keyField","pengambilanBarcode","textEmpty","pengambilanBarcodeSubmit","onSend","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","provinsi","supplier","lokasi","dataLokasiPindah"],"mappings":"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","file":"static/js/141.3c14a9ee.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Field, reduxForm, formValueSelector } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport validationTerimaSupplier from \"../../Validations/validationTerimaSupplier\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport { getTimbangan } from \"../../GetTimbangan\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\n\r\nclass FormPengambilanTimbangan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onclick1 = this.onclick1.bind(this);\r\n    this.state = {\r\n      kodeBarang: [],\r\n      DataSupplier: [],\r\n      kode_barang: \"\",\r\n      keterangan: \"INI KETERANGAN\",\r\n      kadar: \"\",\r\n      P: \"\",\r\n      K: \"\",\r\n      bungkus: \"\",\r\n      berat: \"\",\r\n      harga: \"\",\r\n      murni: \"\",\r\n      ongkos: \"\",\r\n      status: \"\",\r\n      kadarCetak: \"\",\r\n      kadarBeli: \"\",\r\n      namaJenis: \"\",\r\n      kodeJenis: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"jenis/get/by-kode-kelompok/PERHIASAN\")\r\n      .then((res) =>\r\n        this.setState({\r\n          kodeBarang: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    getTimbangan(this.props.change);\r\n  }\r\n\r\n  onclick1() {\r\n    this.props.change(\"netto\", this.props.netto);\r\n    this.props.change(\"noFaktur\", this.props.noFaktur);\r\n    this.props.change(\"pkg\", this.props.pkg);\r\n  }\r\n\r\n  pilihBarang(data) {\r\n    var supp = data ? data : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n      namaJenis: result_explode[1],\r\n      kadarCetak: result_explode[2],\r\n      kadarJual: result_explode[3],\r\n      kadarBeli: result_explode[4],\r\n      barang: \"terpilih\",\r\n    });\r\n  }\r\n\r\n  setKadar() {\r\n    this.props.change(\"keterangan\", this.state.namaJenis);\r\n    this.props.change(\"kadar\", this.state.kadarCetak);\r\n    this.props.change(\"kadarTransaksi\", this.state.kadarJual);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 col-lg-12 d-none\">\r\n            <Field\r\n              name=\"noFaktur\"\r\n              label={this.props.noFaktur}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              component={renderField}\r\n              defaultValue={this.props.noFaktur}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 form-group\">\r\n            <Field\r\n              label=\"Kode Barang\"\r\n              name=\"kodeJenis\"\r\n              component={renderFieldSelect}\r\n              options={this.state.kodeBarang.map((list) => {\r\n                let data = {\r\n                  value:\r\n                    list.kode_jenis +\r\n                    \"|\" +\r\n                    list.nama_jenis +\r\n                    \"|\" +\r\n                    list.kadar_cetak +\r\n                    \"|\" +\r\n                    list.kadar_jual +\r\n                    \"|\" +\r\n                    list.kadar_beli,\r\n                  name: list.nama_jenis,\r\n                };\r\n                return data;\r\n              })}\r\n              onChange={(data) => this.pilihBarang(data)}\r\n              onBlur={this.setKadar()}\r\n              placeholder=\"Silahkan Pilih\"\r\n            ></Field>\r\n          </div>\r\n          <div className=\"col-md-8 form-group\">\r\n            <Field\r\n              name=\"keterangan\"\r\n              label=\"Keterangan\"\r\n              type=\"text\"\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"kadar\"\r\n              label=\"Kadar (%)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          {/* <div className=\"col-md-3 form-group\">\r\n            <Field name=\"p\" label=\"P\" type=\"number\" component={renderField} />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field name=\"k\" label=\"K\" type=\"number\" component={renderField} />\r\n          </div> */}\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"pkg\"\r\n              label=\"Bungkus (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n              readOnly\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"bruto\"\r\n              label=\"Berat (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"kadarTransaksi\"\r\n              label=\"Harga (%)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"gross\"\r\n              label=\"Gross (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.onclick1()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"netto\"\r\n              label=\"Murni (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <label htmlFor=\"\">Ongkos (Rp)</label>\r\n            <Field\r\n              name=\"rp\"\r\n              component=\"input\"\r\n              type=\"tel\"\r\n              className=\"form-control\"\r\n              {...currencyMask}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 form-group mt-3\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\"\r\n                disabled={this.props.submitting}\r\n              >\r\n                Simpan\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormPengambilanTimbangan = reduxForm({\r\n  form: \"TerimaSupplier\",\r\n  validate: validationTerimaSupplier,\r\n  enableReinitialize: true,\r\n})(FormPengambilanTimbangan);\r\nconst selector = formValueSelector(\"TerimaSupplier\"); // <-- same as form name\r\n\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi, gross } = selector(\r\n    state,\r\n    \"bruto\",\r\n    \"kadarTransaksi\",\r\n    \"gross\"\r\n  );\r\n  return {\r\n    netto: (parseFloat(bruto) * (parseFloat(kadarTransaksi) / 100)).toFixed(3),\r\n    pkg: (parseFloat(gross) - parseFloat(bruto)).toFixed(3),\r\n  };\r\n})(FormPengambilanTimbangan);\r\n","import React, { Component } from \"react\";\r\nimport SelectSearch from \"react-select-search\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getListDataPengambilanBarcode } from \"../actions/pengambilanBarcodeAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { reset } from \"redux-form\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport { getcustomerList } from \"../actions/customerAction\";\r\nimport { getLokasiPindah, getsupplierList } from \"../actions/supplierAction\";\r\nimport { AxiosMasterPost } from \"../Axios\";\r\nimport { berhasil, gagal, warning } from \"../Alert\";\r\nimport { multipleDeleteLocal } from \"../helper\";\r\nimport GlobalTabel from \"../GlobalComponent/GlobalTabel\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\nimport FormPengambilanTimbangan from \"./Component/FormPengambilanTimbangan\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    pengambilanBarcode: state.provinsi.pengambilanBarcode,\r\n    noFaktur: state.provinsi.noFaktur,\r\n    customer: state.provinsi.customer,\r\n    supplier: state.provinsi.supplier,\r\n    lokasi: state.provinsi.dataLokasiPindah,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\nclass TransaksiTimbanganBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jenisTransaksi: [\r\n        {\r\n          value: \"RETUR SUPPLIER\",\r\n          name: \"RETUR SUPPLIER\",\r\n        },\r\n        {\r\n          value: \"PENERIMAAN SUPPLIER\",\r\n          name: \"PENERIMAAN SUPPLIER\",\r\n        },\r\n        {\r\n          value: \"PINDAH BARANG\",\r\n          name: \"PINDAH BARANG\",\r\n        },\r\n        {\r\n          value: \"PENJUALAN\",\r\n          name: \"PENJUALAN\",\r\n        },\r\n        {\r\n          value: \"RETUR CUSTOMER\",\r\n          name: \"RETUR CUSTOMER\",\r\n        },\r\n      ],\r\n      columns: [\r\n        {\r\n          dataField: \"kode_jenis\",\r\n          text: \"Kode Barang\",\r\n        },\r\n        {\r\n          dataField: \"kode_barcode\",\r\n          text: \"Barcode\",\r\n        },\r\n        {\r\n          dataField: \"gross\",\r\n          text: \"Gross\",\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Bungkus(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Berat(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"kadar_cetak\",\r\n          text: \"Kadar\",\r\n        },\r\n        {\r\n          dataField: \"kadar\",\r\n          text: \"Harga(%)\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Murni(Gr)\",\r\n          footerClasses: \"sum-netto-terima-supplier\",\r\n        },\r\n        {\r\n          dataField: \"ongkos_rp\",\r\n          text: \"Ongkos(RP)\",\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row, index) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  className=\"btn btn-danger mr-2\"\r\n                  data-tut=\"reactour_4\"\r\n                  onClick={() => this.hapus_barcode(index)}\r\n                >\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                  HAPUS\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      kode_supplier: \"\",\r\n      kode_customer: \"\",\r\n      kode_lokasi_asal: \"\",\r\n      kode_lokasi_tujuan: \"\",\r\n      tanggal: \"\",\r\n    };\r\n  }\r\n\r\n  hapus_barcode(index) {\r\n    Swal.fire({\r\n      title: \"Anda Yakin ?\",\r\n      text: \"Anda Akan Menghapus Data Ini ?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    })\r\n      .then((result) => {\r\n        if (result.isConfirmed) {\r\n          let data = JSON.parse(\r\n            localStorage.getItem(\"pengambilanBarcode_temp\")\r\n          );\r\n          data.splice(index, 1);\r\n          localStorage.setItem(\"pengambilanBarcode_temp\", JSON.stringify(data));\r\n        }\r\n      })\r\n      .then(() => this.props.dispatch(getListDataPengambilanBarcode()));\r\n  }\r\n\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListDataPengambilanBarcode());\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getcustomerList());\r\n    this.props.dispatch(getsupplierList());\r\n    this.props.dispatch(getLokasiPindah());\r\n  }\r\n  paddingNumberGW(str) {\r\n    var pad = \"0000000\";\r\n    var ans = pad.substring(0, pad.length - str.length) + str;\r\n    return ans.replace(\".\", \"\");\r\n  }\r\n  paddingNumberNW(str) {\r\n    var pad = \"00000\";\r\n    var ans = pad.substring(0, pad.length - str.length) + str;\r\n    return ans.replace(\".\", \"\");\r\n  }\r\n  handleSubmit(data) {\r\n    var supp = data.kodeJenis\r\n      ? data.kodeJenis\r\n      : \"DEFAULT|DEFAULT|DEFAULT|DEFAULT\";\r\n    var split = supp.split(\"|\");\r\n    var simpan = {\r\n      kode_jenis: split[0],\r\n      nama_jenis: split[1],\r\n      kadar_cetak: split[2],\r\n      kadar: split[3],\r\n      pkg: data.pkg,\r\n      gross: data.gross,\r\n      bruto: data.bruto,\r\n      netto: data.netto,\r\n      ongkos_rp: data.rp,\r\n    };\r\n    var array =\r\n      JSON.parse(localStorage.getItem(\"pengambilanBarcode_temp\")) || [];\r\n    array.push(simpan);\r\n    localStorage.setItem(\"pengambilanBarcode_temp\", JSON.stringify(array));\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      text: \"Data Berhasil Ditambahkan!\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n    this.props.dispatch(getListDataPengambilanBarcode());\r\n    this.props.dispatch(reset(\"FormPengambilanBarcode\"));\r\n    document.getElementById(\"dismissModal\").click();\r\n  }\r\n\r\n  pengambilanBarcodeSubmit() {\r\n    if (this.state.kode_customer === \"\") {\r\n      warning(\"Mohon Isi Nama Toko\");\r\n    } else if (this.state.tanggal === \"\") {\r\n      warning(\"Mohon Isi Tanggal\");\r\n    }\r\n    var instansi = this.state.kode_customer;\r\n    var instansi2 = this.state.kode_customer;\r\n    var local = JSON.parse(localStorage.getItem(\"pengambilanBarcode_temp\"));\r\n    var qty = local.length;\r\n    var bruto = local\r\n      .map((list) => parseFloat(list.bruto))\r\n      .reduce((a, b) => a + b, 0);\r\n    var pkg = local\r\n      .map((list) => parseFloat(list.pkg))\r\n      .reduce((a, b) => a + b, 0);\r\n    var gross = local\r\n      .map((list) => parseFloat(list.gross))\r\n      .reduce((a, b) => a + b, 0);\r\n    var netto = local\r\n      .map((list) => parseFloat(list.netto))\r\n      .reduce((a, b) => a + b, 0);\r\n    var ongkos_rp = local\r\n      .map((list) => parseFloat(list.ongkos_rp))\r\n      .reduce((a, b) => a + b, 0);\r\n    this.props.dispatch(progressSend());\r\n    var simpan = {\r\n      no_timbang: this.props.noFaktur,\r\n      jenis_trx: \"PENJUALAN\",\r\n      tanggal: this.state.tanggal,\r\n      baki: \"-\",\r\n      instansi: instansi,\r\n      instansi2: instansi2,\r\n      total_qty: qty,\r\n      total_bruto: bruto,\r\n      total_pkg: pkg,\r\n      total_gross: gross,\r\n      total_netto: netto,\r\n      total_ongkos: ongkos_rp || 0,\r\n      detail_barang: JSON.parse(\r\n        localStorage.getItem(\"pengambilanBarcode_temp\")\r\n      ),\r\n    };\r\n    AxiosMasterPost(\"pengambilan-timbang/simpan\", simpan)\r\n      .then(() => berhasil(\"Simpan Data Berhaisl\"))\r\n      .then(() => multipleDeleteLocal([\"pengambilanBarcode_temp\", \"noFaktur\"]))\r\n      .then(() => this.props.dispatch(getListDataPengambilanBarcode()))\r\n      .then(() => this.props.dispatch(getUUID()))\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => window.location.reload())\r\n      .catch((err) =>\r\n        gagal(`Gagal Simpan Data , Detail : ${err.response.data}`).then(() =>\r\n          this.props.dispatch(finishSend())\r\n        )\r\n      );\r\n  }\r\n  // setJenisTransaksi(e) {\r\n  //   this.setState({\r\n  //     jenisTransaksiSelected: e,\r\n  //   });\r\n  //   localStorage.setItem(\"jenisTransaksi\", e);\r\n  // }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Timbang Barang\" />\r\n              <div className=\"card-body\">\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"row\">\r\n                    {/* <div className=\"col-lg-4\">\r\n                      <Field\r\n                        name=\"jenisTransaksi\"\r\n                        component={renderFieldSelect}\r\n                        options={this.state.jenisTransaksi}\r\n                        type=\"text\"\r\n                        label=\"Jenis Transaksi\"\r\n                        placeholder=\"Masukan Jenis Transaksi\"\r\n                        onChange={(data) => this.setJenisTransaksi(data)}\r\n                      />\r\n                    </div> */}\r\n                    <div className=\"col-md-4 col-lg-4\">\r\n                      <label htmlFor=\"\">Tanggal</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        id=\"tanggal\"\r\n                        name=\"tanggal\"\r\n                        className=\"form-control\"\r\n                        onChange={this.inputChange(\"tanggal\")}\r\n                      />\r\n                    </div>\r\n                    {/* <div className=\"col-md-4 col-lg-4\">\r\n                      <label htmlFor=\"\">Baki</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"baki\"\r\n                        name=\"baki\"\r\n                        className=\"form-control\"\r\n                        onChange={this.inputChange(\"baki\")}\r\n                      />\r\n                    </div> */}\r\n                    <div className=\"col-md-5 col-lg-4\">\r\n                      <label htmlFor=\"\">Nama Toko</label>\r\n                      <SelectSearch\r\n                        options={this.props.customer.map((list) => {\r\n                          let data = {\r\n                            value: list.kode_customer,\r\n                            name: list.nama_customer,\r\n                          };\r\n                          return data;\r\n                        })}\r\n                        search\r\n                        label=\"Nama Toko\"\r\n                        placeholder=\"Silahkan Pilih\"\r\n                        onChange={(data) =>\r\n                          this.setState({\r\n                            kode_customer: data,\r\n                          })\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-lg-12 col-md-12 mt-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-6\"></div>\r\n                        <div className=\"col-lg-6\">\r\n                          <div className=\"text-right\">\r\n                            <button\r\n                              className=\"btn btn-primary\"\r\n                              data-toggle=\"modal\"\r\n                              data-target=\"#primary-header-modal\"\r\n                            >\r\n                              TAMBAH DATA\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <GlobalTabel\r\n                        keyField=\"kodeJenis\"\r\n                        data={this.props.pengambilanBarcode || []}\r\n                        columns={this.state.columns}\r\n                        textEmpty=\"Silahkan Tambah Data Dengan Klik Tombol Biru Diatas\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-lg-12\">\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          onClick={() => this.pengambilanBarcodeSubmit()}\r\n                          disabled={this.props.onSend}\r\n                        >\r\n                          SIMPAN\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          id=\"primary-header-modal\"\r\n          className=\"modal fade\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"primary-header-modalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header modal-colored-header bg-primary\">\r\n                <h4 className=\"modal-title\" id=\"primary-header-modalLabel\">\r\n                  Tambah Data Pengamblan Barcode\r\n                </h4>\r\n                <button\r\n                  type=\"button\"\r\n                  id=\"dismissModal\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <FormPengambilanTimbangan\r\n                  onSubmit={(data) => this.handleSubmit(data)}\r\n                  noFaktur={this.props.noFaktur}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(TransaksiTimbanganBarang);\r\n"],"sourceRoot":""}