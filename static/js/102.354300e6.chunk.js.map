{"version":3,"sources":["FICO/Component/FormTolakanPembayaranCustomer.jsx","FICO/Component/PrintTolakanCustomer.jsx","FICO/Element/FieldTolakanCustomer.jsx","FICO/TolakanPembayaranCustomer.jsx","../node_modules/redux-form/es/index.js"],"names":["renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","min","step","maxLength","server","process","FormTolakanPembayaranCustomer","props","date","Date","formatedDateNow","getFullYear","getMonth","getDate","state","dateNow","columns","dataField","text","footer","columnData","reduce","acc","item","listLokasi","listSales","listCustomer","Axios","get","then","res","setState","data","this","change","noFaktur","nama","nama2","split","namaToko","map","obj","value","namaCustomer","name","sales","kodeLokasi","namaLokasi","lokasi","onSubmit","handleSubmit","Field","component","onBlur","setFaktur","defaultValue","options","search","placeholder","onChange","onSubmitSelect","onSubmitSelectToko","disabled","onSend","aria-hidden","data-target","data-toggle","Component","reduxForm","form","enableReinitialize","connect","PrintTolakanCustomer","row1name","row1isi","row2name","row2isi","row3name","row3isi","row4name","row4isi","username","tanggal","validby","tableColumn","title","tableRows","doc","jsPDF","autoTable","startY","finalY","lastAutoTable","setFontSize","string","output","embed","x","window","open","document","write","close","FieldTolakanCustomer","listJenis","listJenisPerhiasan","catch","err","console","log","netto","jenisTolakan","kodeJenis","kadarCetak","kadarJual","namaJenis","onSubmitToko","setNetto","keyField","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","selector","formValueSelector","bruto","kadarTransaksi","parseFloat","toFixed","REACT_APP_BACKEND_URL_NON_MASTER","TolakanPembayaranCustomer","selectJenis","e","target","dispatch","getUUID","getTabelCustomer","getBruto","barangDetails","kodeBarang","TolakanCustomer","JSON","parse","localStorage","getItem","push","setItem","stringify","Swal","fire","position","icon","showConfirmButton","timer","isi","noBon","kodeSales","kodeToko","kodeCustomer","keterangan","totalAlatBayar","totalPutusRp","totalPutusGr","totalTrfRp","totalCt","totalRsk","totalGiroRp","totalTunaiRp","tipeData","alatBayarBarang","footerDocument","inputBy","progressSend","forEach","ticket","i","ticketData","columTable","post","finishSend","reset","to","HeaderCard","id","key","tabelTolakanCustomer","handlSubmit","noDataIndication","tabIndex","role","aria-labelledby","data-dismiss","handleSubmitBarang","provinsi","tampungBarang","terimaSupplierTemp","alert","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors"],"mappings":"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","file":"static/js/102.354300e6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport SelectSearch from \"react-select-search\";\r\nimport Axios from \"axios\";\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\n\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\nclass FormTolakanPembayaranCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var date = new Date();\r\n    var formatedDateNow = `${date.getFullYear()}-${\r\n      date.getMonth() + 1\r\n    }-${date.getDate()}`;\r\n    this.state = {\r\n      dateNow: formatedDateNow,\r\n      columns: [\r\n        {\r\n          dataField: \"jenis\",\r\n          text: \"Jenis\",\r\n          footer: \"\",\r\n        },\r\n        {\r\n          dataField: \"kadarCetak\",\r\n          text: \"Kadar\",\r\n          footer: \"Total Bruto\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Bruto\",\r\n          footer: (columnData) =>\r\n            columnData.reduce((acc, item) => acc + item, 0),\r\n        },\r\n        {\r\n          dataField: \"kadarTransaksi\",\r\n          text: \"%\",\r\n          footer: \"Total Netto\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Netto\",\r\n          footer: (columnData) =>\r\n            columnData.reduce((acc, item) => acc + item, 0),\r\n        },\r\n      ],\r\n      listLokasi: [],\r\n      listSales: [],\r\n      listCustomer: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Axios.get(server + \"storages2?tipeData=LOKASI\").then((res) =>\r\n      this.setState({\r\n        listLokasi: res.data,\r\n      })\r\n    );\r\n    Axios.get(server + \"storages2?tipeData=SALES\").then((res) =>\r\n      this.setState({\r\n        listSales: res.data,\r\n      })\r\n    );\r\n    Axios.get(server + \"customers\").then((res) =>\r\n      this.setState({\r\n        listCustomer: res.data,\r\n      })\r\n    );\r\n  }\r\n  setFaktur() {\r\n    this.props.change(\"noFaktur\", this.props.noFaktur);\r\n  }\r\n  onSubmitSelect(data, nama) {\r\n    this.props.change(nama, data);\r\n  }\r\n  onSubmitSelectToko(data, nama, nama2) {\r\n    var split = data.split(\"|\");\r\n    this.props.change(nama, split[0]);\r\n    this.props.change(nama2, split[1]);\r\n  }\r\n  render() {\r\n    var namaToko = this.state.listCustomer.map((obj) => {\r\n      var payload = {\r\n        value: obj.namaToko + \"|\" + obj.namaCustomer,\r\n        name: obj.namaToko,\r\n      };\r\n      return payload;\r\n    });\r\n    var sales = this.state.listSales.map((obj) => {\r\n      var payload = {\r\n        value: obj.kodeLokasi,\r\n        name: obj.namaLokasi,\r\n      };\r\n      return payload;\r\n    });\r\n    var lokasi = this.state.listLokasi.map((obj) => {\r\n      var payload = {\r\n        value: obj.kodeLokasi,\r\n        name: obj.namaLokasi,\r\n      };\r\n      return payload;\r\n    });\r\n    return (\r\n      <>\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              <Field\r\n                name=\"noFaktur\"\r\n                label=\"Nomor Faktur\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                onBlur={this.setFaktur()}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              <Field\r\n                name=\"tanggal\"\r\n                label=\"Tanggal\"\r\n                type=\"date\"\r\n                component={renderField}\r\n                defaultValue={this.state.dateNow}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4 col-md-4\">\r\n              <label htmlFor=\"\">Lokasi</label>\r\n              <SelectSearch\r\n                options={lokasi}\r\n                search\r\n                placeholder=\"Silahkan Pilih\"\r\n                onChange={(data) => this.onSubmitSelect(data, \"kodeLokasi\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4 col-lg-4 d-none\">\r\n              <Field\r\n                name=\"kodeLokasi\"\r\n                label=\"kodeLokasi\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                defaultValue={this.state.dateNow}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4 col-md-4\">\r\n              <label htmlFor=\"\">Sales</label>\r\n              <SelectSearch\r\n                options={sales}\r\n                search\r\n                placeholder=\"Silahkan Pilih\"\r\n                onChange={(data) => this.onSubmitSelect(data, \"kodeSales\")}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4 col-lg-4 d-none\">\r\n              <Field\r\n                name=\"kodeSales\"\r\n                label=\"kodeSales\"\r\n                type=\"text\"\r\n                component={renderField}\r\n                defaultValue={this.state.dateNow}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4 col-md-4\">\r\n              <Field\r\n                name=\"noBon\"\r\n                component={renderField}\r\n                type=\"text\"\r\n                label=\"No Bon Bayar\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4 col-lg-4 d-none\">\r\n              <Field\r\n                name=\"kodeToko\"\r\n                label=\"Nama Toko\"\r\n                type=\"text\"\r\n                component={renderField}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              <label htmlFor=\"\">Nama Toko</label>\r\n              <SelectSearch\r\n                options={namaToko}\r\n                search\r\n                placeholder=\"Silahkan Pilih\"\r\n                onChange={(data) =>\r\n                  this.onSubmitSelectToko(data, \"kodeToko\", \"namaCustomer\")\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              <Field\r\n                name=\"namaCustomer\"\r\n                label=\"Nama Customer\"\r\n                type=\"text\"\r\n                component={renderField}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-6\">\r\n                  <div className=\"text-left\">\r\n                    <button\r\n                      className=\"btn btn-primary\"\r\n                      type=\"submit\"\r\n                      disabled={this.props.onSend}\r\n                    >\r\n                      {this.props.onSend ? (\r\n                        <span\r\n                          className=\"spinner-border spinner-border-sm mr-3\"\r\n                          aria-hidden=\"true\"\r\n                        ></span>\r\n                      ) : null}\r\n                      Simpan\r\n                      <i className=\"fa fa-paper-plane ml-3\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                  <div className=\"text-right\">\r\n                    <button\r\n                      className=\"btn btn-primary\"\r\n                      type=\"button\"\r\n                      data-target=\"#editModal\"\r\n                      data-toggle=\"modal\"\r\n                    >\r\n                      Tambah Data\r\n                      <i className=\"fa fa-plus ml-3\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nFormTolakanPembayaranCustomer = reduxForm({\r\n  form: \"FormTolakanPembayaranCustomer\",\r\n  enableReinitialize: true,\r\n})(FormTolakanPembayaranCustomer);\r\nexport default connect()(FormTolakanPembayaranCustomer);\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst PrintTolakanCustomer = (\r\n  row1name = \"\",\r\n  row1isi = \"\",\r\n  row2name = \"\",\r\n  row2isi = \"\",\r\n  row3name = \"\",\r\n  row3isi = \"\",\r\n  row4name = \"\",\r\n  row4isi = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n  validby = \"\",\r\n  tableColumn = [],\r\n  title = \"\",\r\n  tableRows\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  // var tickets = JSON.parse(data);\r\n  // define the columns we want and their titles\r\n\r\n  // // define an empty array of rows\r\n  // const tableRows = [];\r\n\r\n  // // for each ticket pass all its data into an array\r\n  // tickets.forEach((ticket, i) => {\r\n  //   const ticketData = [\r\n  //     i++,\r\n  //     ticket.kodeJenis01,\r\n  //     ticket.bruto01,\r\n  //     ticket.kadarTransaksi01,\r\n  //     ticket.netto01,\r\n  //     ticket.kodeJenis02,\r\n  //     ticket.bruto02,\r\n  //     ticket.kadarTransaksi02,\r\n  //     ticket.netto02,\r\n  //   ];\r\n  //   // push each tickcet's info into a row\r\n  //   tableRows.push(ticketData);\r\n  // });\r\n\r\n  // startY is basically margin-top\r\n  doc.autoTable(tableColumn, tableRows, { startY: 40 });\r\n  let finalY = doc.lastAutoTable.finalY + 10;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[0] + date[1] + date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(title, 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(row1name, 14, 25);\r\n  doc.text(\":\", 37, 25);\r\n  doc.text(row1isi, 40, 25);\r\n  doc.text(row2name, 120, 25);\r\n  doc.text(\":\", 141, 25);\r\n  doc.text(row2isi, 145, 25);\r\n  //row 2\r\n  doc.text(row3name, 14, 30);\r\n  doc.text(\":\", 37, 30);\r\n  doc.text(row3isi, 40, 30);\r\n  doc.text(row4name, 120, 30);\r\n  doc.text(\":\", 141, 30);\r\n  doc.text(row4isi, 145, 30);\r\n  // Diterima\r\n  doc.text(\"DITERIMA\", 14, finalY);\r\n  doc.text(\"(                  )\", 14, finalY + 20);\r\n  // Disetujui\r\n  doc.text(\"DISETUJUI\", 60, finalY);\r\n  doc.text(\"(                  )\", 60, finalY + 20);\r\n\r\n  //Stamp\r\n  doc.text(\"User\", 160, finalY + 10);\r\n  doc.text(\":\", 168, finalY + 10);\r\n  doc.text(username, 170, finalY + 10);\r\n  doc.text(\"Cetak\", 160, finalY + 15);\r\n  doc.text(\":\", 168, finalY + 15);\r\n  doc.text(tanggal, 170, finalY + 15);\r\n  doc.text(\"Valid\", 160, finalY + 20);\r\n  doc.text(\":\", 168, finalY + 20);\r\n  doc.text(validby, 170, finalY + 20);\r\n\r\n  // doc.save(`report_${dateStr}.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  x.document.close();\r\n};\r\n\r\nexport default PrintTolakanCustomer;\r\n","import React, { Component } from \"react\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport Axios from \"axios\";\r\nimport SelectSearch from \"react-select-search\";\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\n\r\nclass FieldTolakanCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [\r\n        {\r\n          dataField: \"kodeBarang\",\r\n          text: \"Kode barang\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Bruto\",\r\n        },\r\n        {\r\n          dataField: \"kadarTransaksi\",\r\n          text: \"%\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Netto\",\r\n        },\r\n      ],\r\n      listJenis: [],\r\n      listJenisPerhiasan: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Axios.get(server + \"subcategorys2?kodeKelompok=CIOK\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listJenis: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    Axios.get(server + \"subcategorys2?kodeKelompok=PERHIASAN\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listJenisPerhiasan: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    this.props.change(\"noFaktur\", this.props.noFaktur);\r\n  }\r\n\r\n  onSubmitToko(data) {\r\n    var split = data.split(\"|\");\r\n    this.props.change(\"kadar\", split[1]);\r\n    this.props.change(\"kadarTransaksi\", split[2]);\r\n    this.props.change(\"kodeJenis\", split[0]);\r\n  }\r\n  setNetto() {\r\n    this.props.change(\"netto\", this.props.netto);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-12 col-md-12\">\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-4\">\r\n              <label htmlFor=\"\">Jenis</label>\r\n              {this.props.jenisTolakan === \"PEMBAYARAN\" ? (\r\n                <SelectSearch\r\n                  options={this.state.listJenis.map((obj) => {\r\n                    var payload = {\r\n                      value:\r\n                        obj.kodeJenis +\r\n                        \"|\" +\r\n                        obj.kadarCetak +\r\n                        \"|\" +\r\n                        obj.kadarJual,\r\n                      name: obj.namaJenis,\r\n                    };\r\n                    return payload;\r\n                  })}\r\n                  search\r\n                  placeholder=\"Silahkan Pilih\"\r\n                  onChange={(data) => this.onSubmitToko(data)}\r\n                />\r\n              ) : (\r\n                <SelectSearch\r\n                  options={this.state.listJenisPerhiasan.map((obj) => {\r\n                    var payload = {\r\n                      value:\r\n                        obj.kodeJenis +\r\n                        \"|\" +\r\n                        obj.kadarCetak +\r\n                        \"|\" +\r\n                        obj.kadarJual,\r\n                      name: obj.namaJenis,\r\n                    };\r\n                    return payload;\r\n                  })}\r\n                  search\r\n                  placeholder=\"Silahkan Pilih\"\r\n                  onChange={(data) => this.onSubmitToko(data)}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"col-lg-4 col-md-4\">\r\n              <Field\r\n                name=\"kodeJenis\"\r\n                label=\"kodeJenis\"\r\n                component={renderField}\r\n                type=\"text\"\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4 col-md-4\">\r\n              <Field\r\n                name=\"kadar\"\r\n                label=\"Kadar\"\r\n                component={renderField}\r\n                type=\"text\"\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4 col-md-4 d-none\">\r\n              <Field\r\n                name=\"noFaktur\"\r\n                label=\"noFaktur\"\r\n                component={renderField}\r\n                type=\"text\"\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4 col-md-4\">\r\n              <Field\r\n                name=\"bruto\"\r\n                label=\"Bruto\"\r\n                component={renderField}\r\n                type=\"text\"\r\n                onChange={this.setNetto()}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4 col-md-4\">\r\n              <Field\r\n                name=\"kadarTransaksi\"\r\n                label=\"Persen\"\r\n                component={renderField}\r\n                type=\"text\"\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-4 col-md-4\">\r\n              <Field\r\n                name=\"netto\"\r\n                label=\"Netto\"\r\n                component={renderField}\r\n                type=\"text\"\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n              {this.props.data ? (\r\n                <ToolkitProvider\r\n                  keyField=\"id\"\r\n                  data={this.props.data}\r\n                  columns={this.state.columns}\r\n                  search\r\n                >\r\n                  {(props) => (\r\n                    <div className=\"form-group\">\r\n                      <BootstrapTable\r\n                        {...props.baseProps}\r\n                        striped\r\n                        hover\r\n                        condensed\r\n                        bordered={true}\r\n                        headerClasses=\"header-table\"\r\n                        pagination={paginationFactory()}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <div className=\"text-right\">\r\n                <button className=\"btn btn-primary\" type=\"submit\">\r\n                  Tambah\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFieldTolakanCustomer = reduxForm({\r\n  form: \"FieldTolakanCustomer\",\r\n  enableReinitialize: true,\r\n})(FieldTolakanCustomer);\r\nconst selector = formValueSelector(\"FieldTolakanCustomer\"); // <-- same as form name\r\n\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi } = selector(state, \"bruto\", \"kadarTransaksi\");\r\n  return {\r\n    netto: (\r\n      parseFloat(bruto ? bruto : 0) *\r\n      (parseFloat(kadarTransaksi ? kadarTransaksi : 0) / 100)\r\n    ).toFixed(3),\r\n  };\r\n})(FieldTolakanCustomer);\r\n","import Axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { reset } from \"redux-form\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport { finishSend, getBruto, progressSend } from \"../actions/LogicAction\";\r\nimport { getTabelCustomer } from \"../actions/tolakCustomer\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport FormTolakanPembayaranCustomer from \"./Component/FormTolakanPembayaranCustomer\";\r\nimport PrintTolakanCustomer from \"./Component/PrintTolakanCustomer\";\r\nimport FieldTolakanCustomer from \"./Element/FieldTolakanCustomer\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    tabelTolakanCustomer: state.provinsi.tabelTolakanCustomer,\r\n    username: state.provinsi.username,\r\n    tampungBarang: state.provinsi.terimaSupplierTemp,\r\n    noFaktur: state.provinsi.noFaktur,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\nconst server = process.env.REACT_APP_BACKEND_URL_NON_MASTER;\r\nclass TolakanPembayaranCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jenisTolakan: \"PEMBAYARAN\",\r\n      columns: [\r\n        {\r\n          dataField: \"kodeBarang\",\r\n          text: \"Jenis\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Bruto\",\r\n        },\r\n        {\r\n          dataField: \"kadarTransaksi\",\r\n          text: \"%\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Netto\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getTabelCustomer());\r\n    this.props.dispatch(getBruto(\"tolakanCustomer\"));\r\n  }\r\n\r\n  handleSubmitBarang(data) {\r\n    var barangDetails = {\r\n      bruto: parseFloat(data.bruto),\r\n      netto: parseFloat(data.netto),\r\n      kodeBarang: data.kodeJenis,\r\n      kadarTransaksi: parseFloat(data.kadarTransaksi),\r\n    };\r\n    console.log(barangDetails);\r\n    var TolakanCustomer =\r\n      JSON.parse(localStorage.getItem(\"tolakanCustomer\")) || [];\r\n    TolakanCustomer.push(barangDetails);\r\n    localStorage.setItem(\"tolakanCustomer\", JSON.stringify(TolakanCustomer));\r\n    this.props.dispatch(getTabelCustomer());\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      text: \"Data Berhasil Ditambahkan!\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n  }\r\n  handlSubmit(data) {\r\n    let isi = {\r\n      noFaktur: data.noFaktur,\r\n      tanggal: data.tanggal,\r\n      noBon: data.noBon,\r\n      kodeLokasi: data.kodeLokasi,\r\n      kodeSales: data.kodeSales,\r\n      namaToko: data.kodeToko,\r\n      kodeCustomer: data.namaCustomer,\r\n      keterangan: \"-\",\r\n      totalAlatBayar: {\r\n        totalPutusRp: 0,\r\n        totalPutusGr: 0,\r\n        totalTrfRp: 0,\r\n        totalCt: 0,\r\n        totalRsk: 0,\r\n        totalGiroRp: 0,\r\n        totalTunaiRp: 0,\r\n        tipeData: \"string\",\r\n      },\r\n      alatBayarBarang: JSON.parse(localStorage.getItem(\"tolakanCustomer\")),\r\n      footerDocument: {\r\n        inputBy: this.props.username, //INPUT BY DEFAULT\r\n      },\r\n    };\r\n    // INISIALISASI AUTOTABLE\r\n    this.props.dispatch(progressSend());\r\n    const tableRows = [];\r\n    var ciok = JSON.parse(localStorage.getItem(\"tolakanCustomer\")) || [];\r\n    ciok.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        ticket.kadarTransaksi,\r\n        ticket.kodeBarang,\r\n        \"\",\r\n        ticket.bruto,\r\n        ticket.kadarTransaksi,\r\n        \"0.000\",\r\n        ticket.netto,\r\n        \"0\",\r\n        \"1\",\r\n        \"0\",\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    console.log(JSON.stringify(tableRows));\r\n    var columTable = [\r\n      \"Kadar\",\r\n      \"Kode\",\r\n      \"Ket\",\r\n      \"Bruto(Gr)\",\r\n      \"Harga(%)\",\r\n      \"Diskon\",\r\n      \"Netto(Gr)\",\r\n      \"Pkg\",\r\n      \"Qty\",\r\n      \"Ongkos(Rp)\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    Axios.post(server + \"cst/dc/tlkbyr\", isi)\r\n      .then((res) =>\r\n        Swal.fire({\r\n          position: \"top-right\",\r\n          text: \"Transaksi Berhasil\",\r\n          icon: \"success\",\r\n          timer: 2500,\r\n          showConfirmButton: false,\r\n        })\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() =>\r\n            this.props.dispatch(reset(\"FormTolakanPembayaranCustomer\"))\r\n          )\r\n          .then(() =>\r\n            PrintTolakanCustomer(\r\n              \"No Trx\",\r\n              this.props.noFaktur,\r\n              \"Sales\",\r\n              data.kodeSales,\r\n              \"No Bon\",\r\n              data.noBon,\r\n              \"Customer\",\r\n              data.kodeCustomer,\r\n              \"ADMIN\",\r\n              data.tanggal,\r\n              \"ADMIN\",\r\n              columTable,\r\n              \"TOLAK PEMBAYARAN CUSTOMER\",\r\n              tableRows\r\n            )\r\n          )\r\n          .then(() => this.props.dispatch(getUUID()))\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-right\",\r\n          text: \"Sepertinya ada gangguan, Transaksi Gagal\",\r\n          icon: \"error\",\r\n          timer: 2500,\r\n        }).then(() => this.props.dispatch(finishSend()))\r\n      );\r\n  }\r\n\r\n  selectJenis = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"col-lg-12 col-d-12\">\r\n          <ol className=\"breadcrumb mb-2\">\r\n            <Link to=\"/KlasifikasiCustomer\">\r\n              <button type=\"button\" className=\"btn btn-secondary\">\r\n                <i className=\"fa fa-angle-left mr-3\" aria-hidden=\"true\"></i>{\" \"}\r\n                Back\r\n              </button>\r\n            </Link>\r\n          </ol>\r\n          <div className=\"card\">\r\n            <HeaderCard title=\"Tolak Pembayaran Customer\" />\r\n            <div className=\"card-body\">\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"\">Jenis Tolakan</label>\r\n                  <select\r\n                    name=\"jenisTolakan\"\r\n                    id=\"jenisTolakan\"\r\n                    className=\"form-control\"\r\n                    onChange={this.selectJenis(\"jenisTolakan\")}\r\n                  >\r\n                    <option value=\"PEMBAYARAN\" key=\"PEMBAYARAN\">\r\n                      TOLAKAN PEMBAYARAN\r\n                    </option>\r\n                    <option value=\"RETURN\" key=\"RETURN\">\r\n                      TOLAKAN RETURN\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-lg-12\">\r\n                <FormTolakanPembayaranCustomer\r\n                  data={this.props.tabelTolakanCustomer}\r\n                  noFaktur={this.props.noFaktur}\r\n                  onSubmit={(data) => this.handlSubmit(data)}\r\n                  onSend={this.props.onSend}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12 mt-3\">\r\n                {this.props.tabelTolakanCustomer ? (\r\n                  <ToolkitProvider\r\n                    keyField=\"id\"\r\n                    data={this.props.tabelTolakanCustomer}\r\n                    columns={this.state.columns}\r\n                    search\r\n                  >\r\n                    {(props) => (\r\n                      <div className=\"form-group\">\r\n                        <BootstrapTable\r\n                          {...props.baseProps}\r\n                          striped\r\n                          hover\r\n                          condensed\r\n                          bordered={true}\r\n                          headerClasses=\"header-table\"\r\n                          pagination={paginationFactory()}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </ToolkitProvider>\r\n                ) : (\r\n                  <BootstrapTable\r\n                    keyField=\"id\"\r\n                    data={[]}\r\n                    columns={this.state.columns}\r\n                    noDataIndication=\"Tidak Ada Data\"\r\n                    striped\r\n                    hover\r\n                    condensed\r\n                    bordered={true}\r\n                    headerClasses=\"header-table\"\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            id=\"editModal\"\r\n            className=\"modal fade\"\r\n            tabIndex=\"-1\"\r\n            role=\"dialog\"\r\n            aria-labelledby=\"primary-header-modalLabel\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            <div className=\"modal-dialog modal-lg\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header modal-colored-header bg-primary\">\r\n                  <h4 className=\"modal-title\" id=\"primary-header-modalLabel\">\r\n                    Tambah Data Barang\r\n                  </h4>\r\n                  <button\r\n                    id=\"dismiss_modal1\"\r\n                    name=\"dismiss_modal1\"\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    data-dismiss=\"modal\"\r\n                    aria-hidden=\"true\"\r\n                  >\r\n                    ×\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <FieldTolakanCustomer\r\n                    jenisTolakan={this.state.jenisTolakan}\r\n                    data={this.props.tabelTolakanCustomer}\r\n                    noFaktur={this.props.noFaktur}\r\n                    onSubmit={(data) => this.handleSubmitBarang(data)}\r\n                  />\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-light\"\r\n                    data-dismiss=\"modal\"\r\n                  >\r\n                    Close\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(TolakanPembayaranCustomer);\r\n","import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;"],"sourceRoot":""}