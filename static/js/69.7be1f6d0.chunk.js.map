{"version":3,"sources":["FICO/KelolaUangBank.jsx","../node_modules/redux-form/es/index.js","FICO/Component/FormKelolaUangBank.jsx"],"names":["KelolaUangBank","props","state","listKategori","this","dispatch","getUUID","data","undefined","tanggal","warning","rekening","jumlah","kategori","keperluan","isi","no_rek","nominal","parseFloat","keterangan","deskripsi","console","log","progressSend","tableRows","ticketData","toLocaleString","push","columTable","AxiosMasterPost","then","Swal","fire","position","icon","text","showConfirmButton","timer","finishSend","localStorage","removeItem","PrintNota","noFaktur","reset","catch","res","err","className","title","href","data-toggle","aria-expanded","id","onSubmit","handleSubmitTambah","from","onSend","handleSubmitAmbil","Component","connect","provinsi","username","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","change","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors","currencyMask","createNumberMask","prefix","suffix","locale","FormKelolaUangBank","listRekening","getListParameter","getrekeningList","handleSubmit","name","label","type","component","renderField","htmlFor","value","map","list","no_rekening","key","atas_nama","parameter","kategori_transaksi","disabled","aria-hidden","reduxForm","form","enableReinitialize","parameterTransaksi"],"mappings":"6PAmBMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,aAAc,IAHC,E,gEAOjBC,KAAKH,MAAMI,SAASC,iB,yCAEHC,GAAO,IAAD,OACvB,QAAqBC,IAAjBD,EAAKE,QAEP,OADAC,YAAQ,sBACD,EACF,QAAsBF,IAAlBD,EAAKI,SAEd,OADAD,YAAQ,uBACD,EACF,QAAoBF,IAAhBD,EAAKK,OAEd,OADAF,YAAQ,qBACD,EACF,QAAsBF,IAAlBD,EAAKM,SAEd,OADAH,YAAQ,uBACD,EACF,QAAuBF,IAAnBD,EAAKO,UAEd,OADAJ,YAAQ,wBACD,EAET,IAAMK,EAAM,CACVN,QAASF,EAAKE,QACdO,OAAQT,EAAKI,SACbM,QAASC,WAAWX,EAAKK,QACzBO,WAAYZ,EAAKM,SACjBO,UAAWb,EAAKO,WAElBO,QAAQC,IAAIP,GACZX,KAAKH,MAAMI,SAASkB,eAEpB,IAAMC,EAAY,GAEZC,EAAa,CACjB,IACAlB,EAAKE,QACLS,WAAWX,EAAKK,QAAQc,eAAe,SACvCnB,EAAKI,SACLO,WAAWX,EAAKK,QAAQc,eAAe,SACvCnB,EAAKO,WAGPU,EAAUG,KAAKF,GACfJ,QAAQC,IAAIE,GACZ,IAAII,EAAa,CACf,KACA,gBACA,mBACA,iBACA,iBACA,aAGFC,YAAgB,mBAAoBd,GACjCe,MAAK,kBACJC,IAAKC,KAAK,CACRC,SAAU,UACVC,KAAM,UACNC,KAAM,qBACNC,mBAAmB,EACnBC,MAAO,OAENP,MAAK,kBAAM,EAAK7B,MAAMI,SAASiC,kBAC/BR,MAAK,kBAAMS,aAAaC,WAAW,eACnCV,MAAK,kBAAM,EAAK7B,MAAMI,SAASC,kBAC/BwB,MAAK,kBACJW,YACE,UACAlC,EAAKE,QACL,GACA,GACA,YACA,EAAKR,MAAMyC,SACX,GACA,GACA,QACAnC,EAAKE,QACL,GACAmB,EACA,mBACAJ,MAGHM,MAAK,kBAAM,EAAK7B,MAAMI,SAASsC,YAAM,6BAEzCC,OAAM,kBACLb,IAAKC,KAAK,CACRC,SAAU,UACVC,KAAM,QACNC,KACE,sFACFC,mBAAmB,EACnBC,MAAO,OACNP,MAAK,kBAAM,EAAK7B,MAAMI,SAASiC,uB,wCAGtB/B,GAAO,IAAD,OACtB,QAAqBC,IAAjBD,EAAKE,QAEP,OADAC,YAAQ,sBACD,EACF,QAAsBF,IAAlBD,EAAKI,SAEd,OADAD,YAAQ,uBACD,EACF,QAAoBF,IAAhBD,EAAKK,OAEd,OADAF,YAAQ,qBACD,EACF,QAAsBF,IAAlBD,EAAKM,SAEd,OADAH,YAAQ,uBACD,EACF,QAAuBF,IAAnBD,EAAKO,UAEd,OADAJ,YAAQ,wBACD,EAET,IAAMK,EAAM,CACVN,QAASF,EAAKE,QACdO,OAAQT,EAAKI,SACbM,QAASC,WAAWX,EAAKK,QACzBO,WAAYZ,EAAKM,SACjBO,UAAWb,EAAKO,WAElBO,QAAQC,IAAIP,GACZX,KAAKH,MAAMI,SAASkB,eAEpB,IAAMC,EAAY,GAEZC,EAAa,CACjB,IACAlB,EAAKE,QACLS,WAAWX,EAAKK,QAAQc,eAAe,SACvCnB,EAAKI,SACLO,WAAWX,EAAKK,QAAQc,eAAe,SACvCnB,EAAKO,WAGPU,EAAUG,KAAKF,GACfJ,QAAQC,IAAIE,GACZ,IAAII,EAAa,CACf,KACA,gBACA,mBACA,iBACA,iBACA,aAGFC,YAAgB,kBAAmBd,GAChCe,MAAK,SAACe,GAAD,OACJd,IAAKC,KAAK,CACRC,SAAU,UACVC,KAAM,UACNC,KAAM,qBACNC,mBAAmB,EACnBC,MAAO,OAENP,MAAK,kBAAM,EAAK7B,MAAMI,SAASiC,kBAC/BR,MAAK,kBAAMS,aAAaC,WAAW,eACnCV,MAAK,kBAAM,EAAK7B,MAAMI,SAASC,kBAC/BwB,MAAK,kBACJW,YACE,UACAlC,EAAKE,QACL,GACA,GACA,YACA,EAAKR,MAAMyC,SACX,GACA,GACA,QACAnC,EAAKE,QACL,GACAmB,EACA,kBACAJ,MAGHM,MAAK,kBAAM,EAAK7B,MAAMI,SAASsC,YAAM,6BAEzCC,OAAM,SAACE,GAAD,OACLf,IAAKC,KAAK,CACRC,SAAU,UACVC,KAAM,QACNC,KACE,sFACFC,mBAAmB,EACnBC,MAAO,Y,+BAKL,IAAD,OACP,OACE,yBAAKU,UAAU,mBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,QACb,kBAAC,UAAD,CAAYC,MAAM,qBAClB,yBAAKD,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,uBACb,wBAAIA,UAAU,iDACZ,wBAAIA,UAAU,YACZ,uBACEE,KAAK,oBACLC,cAAY,MACZC,gBAAc,OACdJ,UAAU,mBAEV,uBAAGA,UAAU,gDACb,0BAAMA,UAAU,qBAAhB,sBAKJ,wBAAIA,UAAU,YACZ,uBACEE,KAAK,mBACLC,cAAY,MACZC,gBAAc,QACdJ,UAAU,aAEV,uBAAGA,UAAU,kDACb,0BAAMA,UAAU,qBAAhB,sBAMN,yBAAKA,UAAU,eACb,yBAAKA,UAAU,uBAAuBK,GAAG,oBACvC,kBAAC,IAAD,CACEC,SAAU,SAAC9C,GAAD,OAAU,EAAK+C,mBAAmB/C,IAC5CgD,KAAK,OACLC,OAAQpD,KAAKH,MAAMuD,UAGvB,yBAAKT,UAAU,YAAYK,GAAG,mBAC5B,kBAAC,IAAD,CACEC,SAAU,SAAC9C,GAAD,OAAU,EAAKkD,kBAAkBlD,IAC3CgD,KAAK,OACLC,OAAQpD,KAAKH,MAAMuD,qB,GApPdE,aAkQdC,uBAzQI,SAACzD,GAClB,MAAO,CACLwC,SAAUxC,EAAM0D,SAASlB,SACzBmB,SAAU3D,EAAM0D,SAASC,SACzBL,OAAQtD,EAAM0D,SAASJ,UAqQQ,KAApBG,CAA0B3D,I,iCCrRzC,8CA2DW2C,GArBcmB,IAAQC,YACVD,IAAQE,UACTF,IAAQG,SACPH,IAAQI,UACNJ,IAAQK,YACLL,IAAQM,eACZN,IAAQO,WACPP,IAAQQ,YACVR,IAAQS,UACLT,IAAQU,aACZV,IAAQW,SACZX,IAAQY,KACNZ,IAAQa,OACCb,IAAQc,gBACZd,IAAQe,YACRf,IAAQgB,YACFhB,IAAQiB,kBAClBjB,IAAQkB,QACVlB,IAAQmB,MACHnB,IAAQoB,WACLpB,IAAQqB,cAChBrB,IAAQnB,OACDmB,IAAQsB,aACLtB,IAAQuB,gBACLvB,IAAQwB,mBACNxB,IAAQyB,qBACjBzB,IAAQ0B,YACA1B,IAAQ2B,oBACjB3B,IAAQ4B,WACZ5B,IAAQ6B,OACT7B,IAAQ8B,MACE9B,IAAQ+B,gBAChB/B,IAAQgC,QACGhC,IAAQiC,mBACVjC,IAAQkC,kB,kJChEhCC,EAAeC,2BAAiB,CACpCC,OAAQ,OACRC,OAAQ,KACRC,OAAQ,UAGJC,E,kDACJ,WAAYrG,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,aAAc,GACdoG,aAAc,IAJC,E,gEASjBnG,KAAKH,MAAMI,SAASmG,eACpBpG,KAAKH,MAAMI,SAASoG,iB,+BAGpB,OACE,0BAAMpD,SAAUjD,KAAKH,MAAMyG,cACzB,yBAAK3D,UAAU,OACb,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CACE4D,KAAK,UACLC,MAAM,UACNC,KAAK,OACLC,UAAWC,OAGM,SAApB3G,KAAKH,MAAMsD,KACV,yBAAKR,UAAU,qBACb,2BAAOiE,QAAQ,IAAf,YACA,kBAAC,IAAD,CACEL,KAAK,WACL5D,UAAU,eACV+D,UAAU,UAEV,4BAAQG,MAAM,WAAd,kBACC7G,KAAKH,MAAMU,SAASuG,KAAI,SAACC,GAAD,OACvB,4BAAQF,MAAOE,EAAKC,YAAaC,IAAKF,EAAKC,aACxCD,EAAKG,gBAMd,yBAAKvE,UAAU,sBAEjB,yBAAKA,UAAU,sBACf,yBAAKA,UAAU,qBACb,2BAAOiE,QAAQ,IAAf,UACA,kBAAC,IAAD,eACEL,KAAK,SACLG,UAAU,QACVD,KAAK,MACL9D,UAAU,gBACNkD,KAGR,yBAAKlD,UAAU,qBACb,2BAAOiE,QAAQ,IAAf,YACA,kBAAC,IAAD,CAAOL,KAAK,WAAW5D,UAAU,eAAe+D,UAAU,UACxD,4BAAQG,MAAM,WAAd,kBACC7G,KAAKH,MAAMsH,UAAUL,KAAI,SAACC,GAAD,OACxB,4BACEF,MAAOE,EAAKK,mBACZH,IAAKF,EAAKK,oBAETL,EAAKK,yBAKd,yBAAKzE,UAAU,qBACb,kBAAC,IAAD,CACE4D,KAAK,YACLC,MAAM,kBACNC,KAAK,OACLC,UAAWC,OAGf,yBAAKhE,UAAU,uBACb,yBAAKA,UAAU,cACb,4BACEA,UAAU,kBACV8D,KAAK,SACLY,SAAUrH,KAAKH,MAAMuD,QAEpBpD,KAAKH,MAAMuD,OACV,0BACET,UAAU,wCACV2E,cAAY,SAEZ,KAVN,SAYE,uBAAG3E,UAAU,oC,GA3FIW,aAqGjC4C,EAAqBqB,YAAU,CAC7BC,KAAM,qBACNC,oBAAoB,GAFDF,CAGlBrB,GACY3C,iBAAQ,SAACzD,GACtB,MAAO,CACLqH,UAAWrH,EAAM0D,SAASkE,mBAC1BnH,SAAUT,EAAM0D,SAASjD,YAHdgD,CAKZ2C","file":"static/js/69.7be1f6d0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport FormKelolaUangBank from \"./Component/FormKelolaUangBank\";\r\nimport { connect } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport PrintNota from \"../Stocking/Component/PrintNota\";\r\nimport { warning } from \"../Alert\";\r\nimport { reset } from \"redux-form\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport { AxiosMasterPost } from \"../Axios\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    noFaktur: state.provinsi.noFaktur,\r\n    username: state.provinsi.username,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\nclass KelolaUangBank extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listKategori: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getUUID());\r\n  }\r\n  handleSubmitTambah(data) {\r\n    if (data.tanggal === undefined) {\r\n      warning(\"Mohon isi tanggal\");\r\n      return false;\r\n    } else if (data.rekening === undefined) {\r\n      warning(\"Mohon isi Rekening\");\r\n      return false;\r\n    } else if (data.jumlah === undefined) {\r\n      warning(\"Mohon isi Jumlah\");\r\n      return false;\r\n    } else if (data.kategori === undefined) {\r\n      warning(\"Mohon isi Kategori\");\r\n      return false;\r\n    } else if (data.keperluan === undefined) {\r\n      warning(\"Mohon isi Keperluan\");\r\n      return false;\r\n    }\r\n    const isi = {\r\n      tanggal: data.tanggal,\r\n      no_rek: data.rekening,\r\n      nominal: parseFloat(data.jumlah),\r\n      keterangan: data.kategori,\r\n      deskripsi: data.keperluan,\r\n    };\r\n    console.log(isi);\r\n    this.props.dispatch(progressSend());\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    // for each ticket pass all its data into an array\r\n    const ticketData = [\r\n      \"1\",\r\n      data.tanggal,\r\n      parseFloat(data.jumlah).toLocaleString(\"id-ID\"),\r\n      data.rekening,\r\n      parseFloat(data.jumlah).toLocaleString(\"id-ID\"),\r\n      data.keperluan,\r\n    ];\r\n    // push each tickcet's info into a row\r\n    tableRows.push(ticketData);\r\n    console.log(tableRows);\r\n    var columTable = [\r\n      \"No\",\r\n      \"Tanggal Janji\",\r\n      \"Transfer nominal\",\r\n      \"Nomor Rekening\",\r\n      \"Transfer Netto\",\r\n      \"Keperluan\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    AxiosMasterPost(\"uang-bank/tambah\", isi)\r\n      .then(() =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Transaksi Berhasil\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => localStorage.removeItem(\"noFaktur\"))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() =>\r\n            PrintNota(\r\n              \"Tanggal\",\r\n              data.tanggal,\r\n              \"\",\r\n              \"\",\r\n              \"Nomor Bon\",\r\n              this.props.noFaktur,\r\n              \"\",\r\n              \"\",\r\n              \"ADMIN\",\r\n              data.tanggal,\r\n              \"\",\r\n              columTable,\r\n              \"TAMBAH UANG BANK\",\r\n              tableRows\r\n            )\r\n          )\r\n          .then(() => this.props.dispatch(reset(\"FormKelolaUangBank\")))\r\n      )\r\n      .catch(() =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text:\r\n            \"Sepertinya terjadi kesalahan, silahkan check koneksi anda dan ulangi lagi transaksi\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        }).then(() => this.props.dispatch(finishSend()))\r\n      );\r\n  }\r\n  handleSubmitAmbil(data) {\r\n    if (data.tanggal === undefined) {\r\n      warning(\"Mohon isi tanggal\");\r\n      return false;\r\n    } else if (data.rekening === undefined) {\r\n      warning(\"Mohon isi Rekening\");\r\n      return false;\r\n    } else if (data.jumlah === undefined) {\r\n      warning(\"Mohon isi Jumlah\");\r\n      return false;\r\n    } else if (data.kategori === undefined) {\r\n      warning(\"Mohon isi Kategori\");\r\n      return false;\r\n    } else if (data.keperluan === undefined) {\r\n      warning(\"Mohon isi Keperluan\");\r\n      return false;\r\n    }\r\n    const isi = {\r\n      tanggal: data.tanggal,\r\n      no_rek: data.rekening,\r\n      nominal: parseFloat(data.jumlah),\r\n      keterangan: data.kategori,\r\n      deskripsi: data.keperluan,\r\n    };\r\n    console.log(isi);\r\n    this.props.dispatch(progressSend());\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    // for each ticket pass all its data into an array\r\n    const ticketData = [\r\n      \"1\",\r\n      data.tanggal,\r\n      parseFloat(data.jumlah).toLocaleString(\"id-ID\"),\r\n      data.rekening,\r\n      parseFloat(data.jumlah).toLocaleString(\"id-ID\"),\r\n      data.keperluan,\r\n    ];\r\n    // push each tickcet's info into a row\r\n    tableRows.push(ticketData);\r\n    console.log(tableRows);\r\n    var columTable = [\r\n      \"No\",\r\n      \"Tanggal Janji\",\r\n      \"Transfer nominal\",\r\n      \"Nomor Rekening\",\r\n      \"Transfer Netto\",\r\n      \"Keperluan\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    AxiosMasterPost(\"uang-bank/ambil\", isi)\r\n      .then((res) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Transaksi Berhasil\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => localStorage.removeItem(\"noFaktur\"))\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() =>\r\n            PrintNota(\r\n              \"Tanggal\",\r\n              data.tanggal,\r\n              \"\",\r\n              \"\",\r\n              \"Nomor Bon\",\r\n              this.props.noFaktur,\r\n              \"\",\r\n              \"\",\r\n              \"ADMIN\",\r\n              data.tanggal,\r\n              \"\",\r\n              columTable,\r\n              \"AMBIL UANG BANK\",\r\n              tableRows\r\n            )\r\n          )\r\n          .then(() => this.props.dispatch(reset(\"FormKelolaUangBank\")))\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text:\r\n            \"Sepertinya terjadi kesalahan, silahkan check koneksi anda dan ulangi lagi transaksi\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n      );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"col-lg-12 col-md-12\">\r\n          <div className=\"card\">\r\n            <HeaderCard title=\"Kelola Uang Bank\" />\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <ul className=\"nav nav-pills bg-nav-pills nav-justified mb-3\">\r\n                    <li className=\"nav-item\">\r\n                      <a\r\n                        href=\"#tambah-uang-bank\"\r\n                        data-toggle=\"tab\"\r\n                        aria-expanded=\"true\"\r\n                        className=\"nav-link active\"\r\n                      >\r\n                        <i className=\"mdi mdi-home-variant d-lg-none d-block mr-1\" />\r\n                        <span className=\"d-none d-lg-block\">\r\n                          Tambah Uang Bank\r\n                        </span>\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <a\r\n                        href=\"#ambil-uang-bank\"\r\n                        data-toggle=\"tab\"\r\n                        aria-expanded=\"false\"\r\n                        className=\"nav-link \"\r\n                      >\r\n                        <i className=\"mdi mdi-account-circle d-lg-none d-block mr-1\" />\r\n                        <span className=\"d-none d-lg-block\">\r\n                          Ambil Uang Bank\r\n                        </span>\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                  <div className=\"tab-content\">\r\n                    <div className=\"tab-pane show active\" id=\"tambah-uang-bank\">\r\n                      <FormKelolaUangBank\r\n                        onSubmit={(data) => this.handleSubmitTambah(data)}\r\n                        from=\"bank\"\r\n                        onSend={this.props.onSend}\r\n                      />\r\n                    </div>\r\n                    <div className=\"tab-pane \" id=\"ambil-uang-bank\">\r\n                      <FormKelolaUangBank\r\n                        onSubmit={(data) => this.handleSubmitAmbil(data)}\r\n                        from=\"bank\"\r\n                        onSend={this.props.onSend}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(KelolaUangBank);\r\n","import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport { getListParameter } from \"../../actions/parameterTransaksiAction\";\r\nimport { getrekeningList } from \"../../actions/rekeningAction\";\r\nimport { renderField } from \"../../renderField\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\n\r\nclass FormKelolaUangBank extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listKategori: [],\r\n      listRekening: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListParameter());\r\n    this.props.dispatch(getrekeningList());\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <Field\r\n              name=\"tanggal\"\r\n              label=\"Tanggal\"\r\n              type=\"date\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          {this.props.from === \"bank\" ? (\r\n            <div className=\"col-md-4 col-lg-4\">\r\n              <label htmlFor=\"\">Rekening</label>\r\n              <Field\r\n                name=\"rekening\"\r\n                className=\"form-control\"\r\n                component=\"select\"\r\n              >\r\n                <option value=\"DEFAULT\">SILAHKAN PILIH</option>\r\n                {this.props.rekening.map((list) => (\r\n                  <option value={list.no_rekening} key={list.no_rekening}>\r\n                    {list.atas_nama}\r\n                  </option>\r\n                ))}\r\n              </Field>\r\n            </div>\r\n          ) : (\r\n            <div className=\"col-md-4 col-lg-4\"></div>\r\n          )}\r\n          <div className=\"col-md-4 col-lg-4\"></div>\r\n          <div className=\"col-lg-4 col-md-4\">\r\n            <label htmlFor=\"\">Jumlah</label>\r\n            <Field\r\n              name=\"jumlah\"\r\n              component=\"input\"\r\n              type=\"tel\"\r\n              className=\"form-control\"\r\n              {...currencyMask}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <label htmlFor=\"\">Kategori</label>\r\n            <Field name=\"kategori\" className=\"form-control\" component=\"select\">\r\n              <option value=\"DEFAULT\">SILAHKAN PILIH</option>\r\n              {this.props.parameter.map((list) => (\r\n                <option\r\n                  value={list.kategori_transaksi}\r\n                  key={list.kategori_transaksi}\r\n                >\r\n                  {list.kategori_transaksi}\r\n                </option>\r\n              ))}\r\n            </Field>\r\n          </div>\r\n          <div className=\"col-md-4 col-lg-4\">\r\n            <Field\r\n              name=\"keperluan\"\r\n              label=\"Untuk Keperluan\"\r\n              type=\"text\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12 col-md-12\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\"\r\n                disabled={this.props.onSend}\r\n              >\r\n                {this.props.onSend ? (\r\n                  <span\r\n                    className=\"spinner-border spinner-border-sm mr-3\"\r\n                    aria-hidden=\"true\"\r\n                  ></span>\r\n                ) : null}\r\n                Simpan\r\n                <i className=\"fa fa-paper-plane ml-3\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormKelolaUangBank = reduxForm({\r\n  form: \"FormKelolaUangBank\",\r\n  enableReinitialize: true,\r\n})(FormKelolaUangBank);\r\nexport default connect((state) => {\r\n  return {\r\n    parameter: state.provinsi.parameterTransaksi,\r\n    rekening: state.provinsi.rekening,\r\n  };\r\n})(FormKelolaUangBank);\r\n"],"sourceRoot":""}