{"version":3,"sources":["Validations/validationPindahBarang.js","Stocking/Component/FormTambahBarang.jsx"],"names":["validationPindahBarang","value","errors","kodeBarang","keterangan","kadar","pkg","bruto","netto","currencyMask","createNumberMask","prefix","suffix","locale","FormTambahBarang","props","handleChange","input","result_explode","split","setState","kodeJenis","kadarCetak","kadarBeli","kadarJual","namaJenis","setFocus","state","listBarang","this","dispatch","getListBarang","getTimbangan","change","onSubmit","handleSubmit","className","String","KodeBarangList","Field","name","label","component","renderFieldSelect","onChange","data","onBlur","setKadar","options","map","list","kode_jenis","kadar_cetak","kadar_beli","kadar_jual","nama_jenis","kode_kategori","renderField","type","setNetto","id","readOnly","htmlFor","defaultValue","onClick","document","getElementById","focus","Component","reduxForm","form","enableReinitialize","validate","selector","formValueSelector","connect","kadarTransaksi","provinsi","parseFloat","toFixed","initialValues"],"mappings":"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","file":"static/js/109.464c1ddf.chunk.js","sourcesContent":["const validationPindahBarang = (value) => {\r\n    const errors = {}\r\n    if (!value.kodeBarang) {\r\n        errors.kodeBarang = \"Tidak Boleh kosong\"\r\n    }\r\n    if (!value.keterangan) {\r\n        errors.keterangan = \"Tidak Boleh kosong\"\r\n    }\r\n    if (!value.kadar) {\r\n        errors.kadar = \"Tidak Boleh kosong\"\r\n    }\r\n    if (!value.pkg) {\r\n        errors.pkg = \"Tidak Boleh kosong\"\r\n    }\r\n    if (!value.bruto) {\r\n        errors.bruto = \"Tidak Boleh kosong\"\r\n    }\r\n    if (!value.netto) {\r\n        errors.netto = \"Tidak Boleh kosong\"\r\n    }\r\n    return errors\r\n}\r\n\r\nexport default validationPindahBarang;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport validationPindahBarang from \"../../Validations/validationPindahBarang\";\r\nimport { getTimbangan } from \"../../GetTimbangan\";\r\nimport { getListBarang } from \"../../actions/kodeBarangAction\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { setFocus, SkeletonLoading } from \"../../helper\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\n\r\nclass FormTambahBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listBarang: [],\r\n      kodeJenis: \"\",\r\n      kadarCetak: \"\",\r\n      kadarBeli: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListBarang());\r\n    getTimbangan(this.props.change);\r\n  }\r\n\r\n  handleChange = (input) => {\r\n    var supp = input ? input : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n      kadarCetak: result_explode[1],\r\n      kadarBeli: result_explode[2],\r\n      kadarJual: result_explode[3],\r\n      namaJenis: result_explode[4],\r\n    });\r\n    setFocus(\"Pkg (Gr)\");\r\n  };\r\n\r\n  setKadar() {\r\n    this.props.change(\"kadar\", this.state.kadarCetak);\r\n    this.props.change(\"kadarTransaksi\", this.state.kadarBeli);\r\n    this.props.change(\"kadarJual\", this.state.kadarJual);\r\n    this.props.change(\"keterangan\", this.state.namaJenis);\r\n  }\r\n  setNetto() {\r\n    this.props.change(\r\n      \"netto\",\r\n      this.props.netto === \"NaN\" ? 0 : this.props.netto\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 form-group\">\r\n            {String(this.props.KodeBarangList) !== \"\" ? (\r\n              <Field\r\n                name=\"kodeBarang\"\r\n                label=\"Kode Barang\"\r\n                component={renderFieldSelect}\r\n                onChange={(data) => this.handleChange(data)}\r\n                onBlur={this.setKadar()}\r\n                options={this.props.KodeBarangList.map((list) => {\r\n                  let value = {\r\n                    value:\r\n                      list.kode_jenis +\r\n                      \"|\" +\r\n                      list.kadar_cetak +\r\n                      \"|\" +\r\n                      list.kadar_beli +\r\n                      \"|\" +\r\n                      list.kadar_jual +\r\n                      \"|\" +\r\n                      list.nama_jenis +\r\n                      \"|\" +\r\n                      list.kode_kategori,\r\n                    name: list.nama_jenis,\r\n                  };\r\n                  return value;\r\n                })}\r\n              ></Field>\r\n            ) : (\r\n              <SkeletonLoading label=\"Kode Barang\" />\r\n            )}\r\n          </div>\r\n          <div className=\"col-md-4 form-group\">\r\n            <Field\r\n              name=\"keterangan\"\r\n              label=\"Keterangan\"\r\n              component={renderField}\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-5\"></div>\r\n          <div className=\"col-md-2 form-group\">\r\n            <Field\r\n              name=\"kadar\"\r\n              label=\"Kadar (%)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2 form-group\">\r\n            <Field\r\n              name=\"pkg\"\r\n              label=\"Pkg (Gr)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              onBlur={this.setNetto()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2 form-group\">\r\n            <Field\r\n              name=\"bruto\"\r\n              id=\"bruto\"\r\n              label=\"Bruto (Gr)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              onBlur={this.setNetto()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2 form-group\">\r\n            <Field\r\n              name=\"kadarTransaksi\"\r\n              label=\"Harga (%)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2 form-group\">\r\n            <Field\r\n              name=\"netto\"\r\n              label=\"Netto (Gr)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 form-group\">\r\n            <label htmlFor=\"\">Ongkos (Rp)</label>\r\n            <Field\r\n              name=\"ongkos\"\r\n              label=\"Ongkos (Rp)\"\r\n              component=\"input\"\r\n              type=\"telp\"\r\n              className=\"form-control\"\r\n              defaultValue={0}\r\n              {...currencyMask}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 form-group\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\"\r\n                onClick={() => document.getElementById(\"Kode Barang\").focus()}\r\n              >\r\n                Simpan\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormTambahBarang = reduxForm({\r\n  form: \"FormTambahBarang\",\r\n  enableReinitialize: true,\r\n  validate: validationPindahBarang,\r\n})(FormTambahBarang);\r\nconst selector = formValueSelector(\"FormTambahBarang\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi } = selector(state, \"bruto\", \"kadarTransaksi\");\r\n  return {\r\n    KodeBarangList: state.provinsi.kodeBarang,\r\n    netto: (parseFloat(bruto) * (parseFloat(kadarTransaksi) / 100)).toFixed(3),\r\n    initialValues: {\r\n      pkg: 0,\r\n      bruto: 0,\r\n    },\r\n  };\r\n})(FormTambahBarang);\r\n"],"sourceRoot":""}