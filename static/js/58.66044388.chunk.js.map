{"version":3,"sources":["Laporan/Component/formSupplier.jsx","Laporan/Component/LaporanHutangSupplier.jsx","Laporan/Component/LaporanHutangSupplierCard.jsx","Laporan/Component/LaporanHutangSupplierSummary.jsx","Laporan/Component/LaporanPembayaranSupplier.jsx","Laporan/Component/LaporanPrintPenerimaanSupplier.jsx","Laporan/Component/LaporanPrintPenerimaanSupplierRekap.jsx","Laporan/Component/LaporanPrintReturnSupplier.jsx","Laporan/Component/LaporanPrintReturnSupplierRekap.jsx","Laporan/Component/LaporanTitipSupplier.jsx","Laporan/Component/LaporanTitipSupplierCard.jsx","Laporan/Component/LaporanTitipSupplierSummary.jsx","Laporan/LaporanSupplier.jsx","Laporan/Component/LaporanTolakanSupplier.jsx"],"names":["formSupplier","props","inputChange","input","e","setState","target","value","state","response","kode_perhiasan","tipeOmzet","this","dispatch","getsupplierList","from","onSubmit","handleSubmit","className","Field","name","component","ReanderSelect","options","listsupplier","map","list","kode_supplier","nama_supplier","type","label","placeholder","ReanderField","disabled","onSend","aria-hidden","hasil","onChange","data","type_laporan","htmlFor","key","Component","reduxForm","form","enableReinitialize","connect","provinsi","supplier","LaporanHutangSupplier","doc","jsPDF","tableRows","setFontSize","text","forEach","item","index","rows","kode_ext","total_netto","toFixed","parseFloat","total_rp","toLocaleString","push","autoTable","head","content","body","startY","theme","rowPageBreak","pageBreak","margin","top","bodyStyles","lineWidth","lineColor","headStyles","fillColor","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","autoPrint","setProperties","title","string","output","x","window","open","document","write","LaporanHutangSupplierCard","tableColumn","colSpan","detail","tanggal","awal_netto","awal_rp","in_netto","in_rp","out_netto","out_rp","akhir_netto","akhir_rp","keterangan","no_ext","LaporanHutangSupplierSummary","footRows","barang","formatGram","foot","LaporanPembayaranSupplier","console","log","no_bon","jumlah_hutang","total_putus_titip","total_denda","total_hutang","total_pembayaran","lebih_pembayaran","detail_bayar","bayar_cash","bayar_trf","bayar_ciok","bayar_rongsok","bayar_giro","styles","LaporanPrintPenerimaanSupplier","row1isi","row2isi","username","validby","finalY","tanggal_invoice","detail_barang","no_urut","kode_jenis","kadar_cetak","kadar_beli","qty","plastik","kulit","pkg","gross","bruto","netto","ongkos_rp","footer","total_bruto","autoTableEndPosY","LaporanPrintPenerimaanSupplierRekap","total_netto_ext","formatRp","LaporanPrintReturnSupplier","LaporanPrintReturnSupplierRekap","LaporanTitipSupplier","titip_gr","titip_rp","LaporanTitipSupplierCard","awal_titip","in_titip","out_titip","akhir_titip","LaporanTitipSupplierSummary","jenis_titip","LaporanSupplier","listLaporan","progressSend","AxiosMasterGet","tanggal_awal","tanggal_akhir","then","res","finishSend","checkLaporan","getUserData","user_name","getToday","catch","err","gagal","jenis_transkasi","LaporanTolakanSupplier","tglFrom","tglTo","href","data-toggle","aria-expanded","id","handlePenerimaan","handleReturn","handleHutang","handleKartuHutang","handleOmzet","handleTransaksi","handleTolakan","handleTitip","p","k"],"mappings":"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","file":"static/js/58.66044388.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { getsupplierList } from \"../../actions/supplierAction\";\r\nimport {\r\n  ReanderField,\r\n  ReanderSelect,\r\n} from \"../../GlobalComponent/notification\";\r\n\r\nclass formSupplier extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      response: \"\",\r\n      kode_perhiasan: \"\",\r\n      tipeOmzet: \"PERTAHUN\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getsupplierList());\r\n  }\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    switch (this.props.from) {\r\n      case \"penerimaan\":\r\n        return (\r\n          <form onSubmit={this.props.handleSubmit}>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"kode_supplier\"\r\n                  component={ReanderSelect}\r\n                  options={this.props.listsupplier.map((list) => {\r\n                    let data = {\r\n                      value: list.kode_supplier,\r\n                      name: list.nama_supplier,\r\n                    };\r\n                    return data;\r\n                  })}\r\n                  type=\"text\"\r\n                  label=\"Kode Supplier\"\r\n                  placeholder=\"Masukan Kode Supplier\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"type\"\r\n                  component={ReanderSelect}\r\n                  options={[\r\n                    {\r\n                      value: \"DETAIL\",\r\n                      name: \"DETAIL\",\r\n                    },\r\n                    {\r\n                      value: \"REKAP\",\r\n                      name: \"REKAP\",\r\n                    },\r\n                  ]}\r\n                  type=\"text\"\r\n                  label=\"Type Laporan\"\r\n                  placeholder=\"Masukan Type Laporan\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"tanggal_awal\"\r\n                  label=\"Mulai Tanggal\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"tanggal_akhir\"\r\n                  label=\"Sampai Dengan\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"text-right\">\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    type=\"submit\"\r\n                    disabled={this.props.onSend}\r\n                  >\r\n                    {this.props.onSend ? (\r\n                      <span\r\n                        className=\"spinner-border spinner-border-sm mr-3\"\r\n                        aria-hidden=\"true\"\r\n                      ></span>\r\n                    ) : (\r\n                      <i className=\"fa fa-print mr-2\"></i>\r\n                    )}\r\n                    Print\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n\r\n      case \"hutang\":\r\n        return (\r\n          <form onSubmit={this.props.handleSubmit}>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"kode_supplier\"\r\n                  component={ReanderSelect}\r\n                  options={this.props.listsupplier.map((hasil) => {\r\n                    let data = {\r\n                      value: hasil.kode_supplier,\r\n                      name: hasil.nama_supplier,\r\n                    };\r\n                    return data;\r\n                  })}\r\n                  type=\"text\"\r\n                  label=\"Kode Supplier\"\r\n                  placeholder=\"Masukan Kode Supplier\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"type\"\r\n                  component={ReanderSelect}\r\n                  options={[\r\n                    {\r\n                      value: \"SIMPLE\",\r\n                      name: \"SIMPLE\",\r\n                    },\r\n                    {\r\n                      value: \"CARD\",\r\n                      name: \"CARD\",\r\n                    },\r\n                    {\r\n                      value: \"SUMMARY\",\r\n                      name: \"SUMMARY\",\r\n                    },\r\n                  ]}\r\n                  type=\"text\"\r\n                  label=\"Type Laporan\"\r\n                  placeholder=\"Masukan Type Laporan\"\r\n                  onChange={(data) =>\r\n                    this.setState({\r\n                      type_laporan: data,\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n              <div\r\n                className={\r\n                  this.state.type_laporan === \"SIMPLE\"\r\n                    ? \"col-lg-3 d-none\"\r\n                    : \"col-lg-3\"\r\n                }\r\n              >\r\n                <Field\r\n                  name=\"tanggal_awal\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                  label=\"Tanggal Awal\"\r\n                  placeholder=\"Masukan Tanggal Awal\"\r\n                />\r\n              </div>\r\n              <div\r\n                className={\r\n                  this.state.type_laporan === \"SIMPLE\"\r\n                    ? \"col-lg-3 d-none\"\r\n                    : \"col-lg-3\"\r\n                }\r\n              >\r\n                <Field\r\n                  name=\"tanggal_akhir\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                  label=\"Tanggal Akhir\"\r\n                  placeholder=\"Masukan Tanggal Akhir\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"text-right\">\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    type=\"submit\"\r\n                    disabled={this.props.onSend}\r\n                  >\r\n                    {this.props.onSend ? (\r\n                      <span\r\n                        className=\"spinner-border spinner-border-sm mr-3\"\r\n                        aria-hidden=\"true\"\r\n                      ></span>\r\n                    ) : (\r\n                      <i className=\"fa fa-print mr-2\"></i>\r\n                    )}\r\n                    Print\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n\r\n      case \"omzet\":\r\n        return (\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-4\">\r\n              <label htmlFor=\"\">Tipe</label>\r\n              <Field\r\n                name=\"tipe\"\r\n                className=\"form-control\"\r\n                component=\"select\"\r\n                onChange={this.inputChange(\"tipeOmzet\")}\r\n              >\r\n                <option value=\"PERTAHUN\" key=\"PERTAHUN\">\r\n                  PERHATUN\r\n                </option>\r\n                <option value=\"PERBULAN\" key=\"PERBULAN\">\r\n                  PERBULAN\r\n                </option>\r\n                <option value=\"PERTANGGAL\" key=\"PERTANGGAL\">\r\n                  PERTANGGAL\r\n                </option>\r\n              </Field>\r\n            </div>\r\n            {this.state.tipeOmzet === \"PERTAHUN\" ? (\r\n              <>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"tahunAwal\"\r\n                    label=\"Tahun Awal\"\r\n                    className=\"form-control\"\r\n                    component={ReanderField}\r\n                    type=\"date\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"tahunAkhir\"\r\n                    label=\"Sampai Dengan\"\r\n                    className=\"form-control\"\r\n                    component={ReanderField}\r\n                    type=\"date\"\r\n                  />\r\n                </div>\r\n              </>\r\n            ) : this.state.tipeOmzet === \"PERBULAN\" ? (\r\n              <>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"bulanAwal\"\r\n                    label=\"Bulan Awal\"\r\n                    className=\"form-control\"\r\n                    component={ReanderField}\r\n                    type=\"date\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"bulanAkhir\"\r\n                    label=\"Sampai Dengan\"\r\n                    className=\"form-control\"\r\n                    component={ReanderField}\r\n                    type=\"date\"\r\n                  />\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"dateAwal\"\r\n                    label=\"Tanggal Awal\"\r\n                    className=\"form-control\"\r\n                    component={ReanderField}\r\n                    type=\"date\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"dateAkhir\"\r\n                    label=\"Sampai Dengan\"\r\n                    className=\"form-control\"\r\n                    component={ReanderField}\r\n                    type=\"date\"\r\n                  />\r\n                </div>\r\n              </>\r\n            )}\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"text-right\">\r\n                <button className=\"btn btn-primary\">Print</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case \"transaksi\":\r\n        return (\r\n          <form onSubmit={this.props.handleSubmit}>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"form-group\">\r\n                  <Field\r\n                    name=\"kode_supplier\"\r\n                    component={ReanderSelect}\r\n                    options={this.props.listsupplier.map((list) => {\r\n                      let data = {\r\n                        value: list.kode_supplier,\r\n                        name: list.nama_supplier,\r\n                      };\r\n                      return data;\r\n                    })}\r\n                    type=\"text\"\r\n                    label=\"Kode Supplier\"\r\n                    placeholder=\"Masukan Kode Supplier\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-lg-4\">\r\n                <Field\r\n                  name=\"tglFrom\"\r\n                  label=\"Mulai Tanggal\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-4\">\r\n                <Field\r\n                  name=\"tglTo\"\r\n                  label=\"Sampai Dengan\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"text-right\">\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    type=\"submit\"\r\n                    disabled={this.props.onSend}\r\n                  >\r\n                    {this.props.onSend ? (\r\n                      <span\r\n                        className=\"spinner-border spinner-border-sm mr-3\"\r\n                        aria-hidden=\"true\"\r\n                      ></span>\r\n                    ) : (\r\n                      <i className=\"fa fa-print mr-2\"></i>\r\n                    )}\r\n                    Print\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n      case \"tolakan\":\r\n        return (\r\n          <form onSubmit={this.props.handleSubmit}>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"kode_supplier\"\r\n                  component={ReanderSelect}\r\n                  options={this.props.listsupplier.map((list) => {\r\n                    let data = {\r\n                      value: list.kode_supplier,\r\n                      name: list.nama_supplier,\r\n                    };\r\n                    return data;\r\n                  })}\r\n                  type=\"text\"\r\n                  label=\"Kode Supplier\"\r\n                  placeholder=\"Masukan Kode Supplier\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"tanggal_awal\"\r\n                  label=\"Mulai Tanggal\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"tanggal_akhir\"\r\n                  label=\"Sampai Dengan\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"text-right\">\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    type=\"submit\"\r\n                    disabled={this.props.onSend}\r\n                  >\r\n                    {this.props.onSend ? (\r\n                      <span\r\n                        className=\"spinner-border spinner-border-sm mr-3\"\r\n                        aria-hidden=\"true\"\r\n                      ></span>\r\n                    ) : (\r\n                      <i className=\"fa fa-print mr-2\"></i>\r\n                    )}\r\n                    Print\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n      case \"titip\":\r\n        return (\r\n          <form onSubmit={this.props.handleSubmit}>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"kode_supplier\"\r\n                  component={ReanderSelect}\r\n                  options={this.props.listsupplier.map((list) => {\r\n                    let data = {\r\n                      value: list.kode_supplier,\r\n                      name: list.nama_supplier,\r\n                    };\r\n                    return data;\r\n                  })}\r\n                  type=\"text\"\r\n                  label=\"Kode Supplier\"\r\n                  placeholder=\"Masukan Kode Supplier\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"type\"\r\n                  component={ReanderSelect}\r\n                  options={[\r\n                    {\r\n                      value: \"SIMPLE\",\r\n                      name: \"SIMPLE\",\r\n                    },\r\n                    {\r\n                      value: \"CARD\",\r\n                      name: \"CARD\",\r\n                    },\r\n                    {\r\n                      value: \"SUMMARY\",\r\n                      name: \"SUMMARY\",\r\n                    },\r\n                  ]}\r\n                  type=\"text\"\r\n                  label=\"Type Laporan\"\r\n                  placeholder=\"Masukan Type Laporan\"\r\n                  onChange={(data) =>\r\n                    this.setState({\r\n                      type_laporan: data,\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"jenis_transkasi\"\r\n                  component={ReanderSelect}\r\n                  options={[\r\n                    {\r\n                      value: \"GRAM\",\r\n                      name: \"GRAM\",\r\n                    },\r\n                    {\r\n                      value: \"RUPIAH\",\r\n                      name: \"RUPIAH\",\r\n                    },\r\n                  ]}\r\n                  type=\"text\"\r\n                  label=\"Filter By\"\r\n                  placeholder=\"Masukan Filter By\"\r\n                />\r\n              </div>\r\n              <div\r\n                className={\r\n                  this.state.type_laporan === \"SIMPLE\"\r\n                    ? \"col-lg-3 d-none\"\r\n                    : \"col-lg-3\"\r\n                }\r\n              >\r\n                <Field\r\n                  name=\"tanggal_awal\"\r\n                  label=\"Mulai Tanggal\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div\r\n                className={\r\n                  this.state.type_laporan === \"SIMPLE\"\r\n                    ? \"col-lg-3 d-none\"\r\n                    : \"col-lg-3\"\r\n                }\r\n              >\r\n                <Field\r\n                  name=\"tanggal_akhir\"\r\n                  label=\"Sampai Dengan\"\r\n                  className=\"form-control\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"text-right\">\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    type=\"submit\"\r\n                    disabled={this.props.onSend}\r\n                  >\r\n                    {this.props.onSend ? (\r\n                      <span\r\n                        className=\"spinner-border spinner-border-sm mr-3\"\r\n                        aria-hidden=\"true\"\r\n                      ></span>\r\n                    ) : (\r\n                      <i className=\"fa fa-print mr-2\"></i>\r\n                    )}\r\n                    Print\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nformSupplier = reduxForm({\r\n  form: \"formSupplier\",\r\n  enableReinitialize: true,\r\n})(formSupplier);\r\nexport default connect((state) => {\r\n  return {\r\n    listsupplier: state.provinsi.supplier,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n})(formSupplier);\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanHutangSupplier = (data) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n\r\n  let tableColumn = [\r\n    [\r\n      {\r\n        content: `KODE SUPPLIER`,\r\n      },\r\n      {\r\n        content: `KODE EXT`,\r\n      },\r\n      {\r\n        content: `NAMA SUPPLIER`,\r\n      },\r\n      {\r\n        content: `TOTAL NETTO`,\r\n      },\r\n      {\r\n        content: `TOTAL RP`,\r\n      },\r\n    ],\r\n  ];\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN HUTANG SUPPLIER\", 14, 15);\r\n  doc.setFontSize(10);\r\n  //   //row 1\r\n  //   doc.text(`Supplier : ${row1isi}`, 14, 25);\r\n  //   //   row 2\r\n  //   doc.text(`Tanggal\t: ${row2isi}`, 120, 25);\r\n  data.forEach((item, index) => {\r\n    let rows = [\r\n      item.kode_supplier,\r\n      item.kode_ext,\r\n      item.nama_supplier,\r\n      item.total_netto.toFixed(3),\r\n      parseFloat(item.total_rp).toLocaleString(\"id-ID\"),\r\n    ];\r\n    tableRows.push(rows);\r\n  });\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    startY: 30,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    pageBreak: \"avoid\",\r\n    margin: { top: 20 },\r\n    bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n    headStyles: {\r\n      lineWidth: 0.02,\r\n      lineColor: \"#000\",\r\n      fillColor: [212, 212, 211],\r\n    },\r\n  });\r\n\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  doc.setProperties({\r\n    title: \"LAPORAN HUTANG SUPPLIER\",\r\n  });\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN HUTANG SUPPLIER</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanHutangSupplier;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanHutangSupplierCard = (data) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"landscape\");\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN HUTANG SUPPLIER - CARD \", 14, 15);\r\n  doc.setFontSize(10);\r\n  //   //row 1\r\n  //   doc.text(`Supplier : ${row1isi}`, 14, 25);\r\n  //   //   row 2\r\n  //   doc.text(`Tanggal\t: ${row2isi}`, 120, 25);\r\n  data.forEach((item, index) => {\r\n    let tableColumn = [\r\n      [\r\n        {\r\n          content: `KODE SUPPLIER : ${item.kode_supplier}`,\r\n          colSpan: 6,\r\n        },\r\n        {\r\n          content: `NAMA SUPPLIER : ${item.nama_supplier}`,\r\n          colSpan: 5,\r\n        },\r\n      ],\r\n      [\r\n        {\r\n          content: `TANGGAL`,\r\n        },\r\n        {\r\n          content: `AWAL\\nNETTO`,\r\n        },\r\n        {\r\n          content: `AWAL\\nRP`,\r\n        },\r\n        {\r\n          content: `IN\\nNETTO`,\r\n        },\r\n        {\r\n          content: `IN\\nRP`,\r\n        },\r\n        {\r\n          content: `OUT\\nNETTO`,\r\n        },\r\n        {\r\n          content: `OUT\\nRP`,\r\n        },\r\n        {\r\n          content: `AKHIR\\nNETTO`,\r\n        },\r\n        {\r\n          content: `AKHIR\\nRP`,\r\n        },\r\n        {\r\n          content: `KETERANGAN`,\r\n        },\r\n        {\r\n          content: `NO FAKTUR`,\r\n        },\r\n      ],\r\n    ];\r\n    item.detail.forEach((hasil) => {\r\n      let rows = [\r\n        hasil.tanggal,\r\n        hasil.awal_netto.toFixed(3),\r\n        hasil.awal_rp,\r\n        hasil.in_netto.toFixed(3),\r\n        hasil.in_rp,\r\n        hasil.out_netto.toFixed(3),\r\n        hasil.out_rp,\r\n        hasil.akhir_netto.toFixed(3),\r\n        hasil.akhir_rp,\r\n        hasil.keterangan,\r\n        hasil.no_ext,\r\n      ];\r\n      tableRows.push(rows);\r\n    });\r\n    doc.autoTable({\r\n      head: tableColumn,\r\n      body: tableRows,\r\n      startY: 30,\r\n      theme: \"plain\",\r\n      rowPageBreak: \"avoid\",\r\n\r\n      margin: { top: 20 },\r\n      bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n      headStyles: {\r\n        lineWidth: 0.02,\r\n        lineColor: \"#000\",\r\n        fillColor: [212, 212, 211],\r\n      },\r\n    });\r\n  });\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  doc.setProperties({\r\n    title: \"LAPORAN HUTANG SUPPLIER - CARD\",\r\n  });\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN HUTANG SUPPLIER - CARD</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanHutangSupplierCard;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { formatGram } from \"../../helper\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanHutangSupplierSummary = (data) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"landscape\");\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let tableColumn = [];\r\n\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `KODE SUPPLIER`,\r\n      },\r\n      {\r\n        content: `NAMA SUPPLIER`,\r\n      },\r\n      {\r\n        content: `AWAL NETTO`,\r\n      },\r\n      {\r\n        content: `AWAL RP`,\r\n      },\r\n      {\r\n        content: `IN NETTO`,\r\n      },\r\n      {\r\n        content: `IN RP`,\r\n      },\r\n      {\r\n        content: `OUT NETTO`,\r\n      },\r\n      {\r\n        content: `OUT RP`,\r\n      },\r\n      {\r\n        content: `AKHIR NETTO`,\r\n      },\r\n      {\r\n        content: `AKHIR RP`,\r\n      },\r\n    ],\r\n  ];\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN HUTANG SUPPLIER - SUMMARY\", 14, 15);\r\n  doc.setFontSize(10);\r\n\r\n  data.forEach((barang, index) => {\r\n    let rows = [\r\n      barang.kode_supplier,\r\n      barang.nama_supplier,\r\n      formatGram(barang.awal_netto),\r\n      parseFloat(barang.awal_rp).toLocaleString(\"id-ID\"),\r\n      formatGram(barang.in_netto),\r\n      parseFloat(barang.in_rp).toLocaleString(\"id-ID\"),\r\n      formatGram(barang.out_netto),\r\n      parseFloat(barang.out_rp).toLocaleString(\"id-ID\"),\r\n      formatGram(barang.akhir_netto),\r\n      parseFloat(barang.akhir_rp).toLocaleString(\"id-ID\"),\r\n    ];\r\n    tableRows.push(rows);\r\n    footRows = [];\r\n  });\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    foot: footRows,\r\n    startY: 30,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    pageBreak: \"avoid\",\r\n    margin: { top: 20 },\r\n    bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n    headStyles: {\r\n      lineWidth: 0.02,\r\n      lineColor: \"#000\",\r\n      fillColor: [212, 212, 211],\r\n    },\r\n  });\r\n\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  doc.setProperties({\r\n    title: \"LAPORAN HUTANG SUPPLIER - SUMMARY\",\r\n  });\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN HUTANG SUPPLIER - SUMMARY</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanHutangSupplierSummary;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanPembayaranSupplier = (data) => {\r\n  console.log(data);\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"landscape\");\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN PEMBAYARAN HUTANG SUPPLIER\", 14, 15);\r\n  doc.setFontSize(10);\r\n  //   //row 1\r\n  //   doc.text(`Supplier : ${row1isi}`, 14, 25);\r\n  //   //   row 2\r\n  //   doc.text(`Tanggal\t: ${row2isi}`, 120, 25);\r\n  data.forEach((item, index) => {\r\n    let tableColumn = [\r\n      [\r\n        {\r\n          content: `KODE SUPPLIER : ${item.kode_supplier}`,\r\n          colSpan: 4,\r\n        },\r\n        {\r\n          content: `NAMA SUPPLIER : ${item.nama_supplier}`,\r\n          colSpan: 4,\r\n        },\r\n      ],\r\n      [\r\n        {\r\n          content: `TANGGAL`,\r\n        },\r\n        {\r\n          content: `NO BON`,\r\n        },\r\n        {\r\n          content: `JUMLAH HUTANG`,\r\n        },\r\n        {\r\n          content: `PUTUS TITIP`,\r\n        },\r\n        {\r\n          content: `DENDA`,\r\n        },\r\n        {\r\n          content: `HUTANG`,\r\n        },\r\n        {\r\n          content: `PEMBAYARAN`,\r\n        },\r\n        {\r\n          content: `LEBIH PEMBAYARAN`,\r\n        },\r\n      ],\r\n    ];\r\n    item.detail.forEach((hasil) => {\r\n      let rows = [\r\n        hasil.tanggal,\r\n        hasil.no_bon,\r\n        hasil.jumlah_hutang,\r\n        hasil.total_putus_titip,\r\n        hasil.total_denda,\r\n        hasil.total_hutang,\r\n        hasil.total_pembayaran,\r\n        hasil.lebih_pembayaran,\r\n      ];\r\n      tableRows.push(rows);\r\n      let detail = [\r\n        `BAYAR CASH : ${item.detail_bayar[index].bayar_cash}`,\r\n        `BAYAR TRANSFER : ${item.detail_bayar[index].bayar_trf}`,\r\n        `BAYAR CIOK : ${item.detail_bayar[index].bayar_ciok}`,\r\n        `BAYAR RONGSOK : ${item.detail_bayar[index].bayar_rongsok}`,\r\n        `BAYAR GIRO : ${item.detail_bayar[index].bayar_giro}`,\r\n      ];\r\n      tableRows.push(detail);\r\n      tableRows.push([\r\n        {\r\n          content: \"\",\r\n          colSpan: 8,\r\n          styles: {\r\n            fillColor: [212, 212, 211],\r\n          },\r\n        },\r\n      ]);\r\n    });\r\n    doc.autoTable({\r\n      head: tableColumn,\r\n      body: tableRows,\r\n      startY: 30,\r\n      theme: \"plain\",\r\n      rowPageBreak: \"avoid\",\r\n\r\n      margin: { top: 20 },\r\n      bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n      headStyles: {\r\n        lineWidth: 0.02,\r\n        lineColor: \"#000\",\r\n        fillColor: [212, 212, 211],\r\n      },\r\n    });\r\n  });\r\n\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  doc.setProperties({\r\n    title: \"LAPORAN PEMBAYARAN HUTANG SUPPLIER\",\r\n  });\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN PEMBAYARAN HUTANG SUPPLIER</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanPembayaranSupplier;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanPrintPenerimaanSupplier = (\r\n  row1isi = \"\",\r\n  row2isi = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n  validby = \"\",\r\n  data\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 40;\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN DETAIL PENERIMAAN SUPPLIER\", 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(`Mulai Dari : ${row1isi}`, 14, 25);\r\n  //   row 2\r\n  doc.text(`Sampai Dengan\t: ${row2isi}`, 120, 25);\r\n  data.forEach((item, index) => {\r\n    doc.text(`Kode Supplier : ${item.kode_supplier}`, 14, 35);\r\n    doc.text(`Nama Supplier : ${item.nama_supplier}`, 100, 35);\r\n    item.detail.forEach((list, index) => {\r\n      tableColumn = [\r\n        [\r\n          {\r\n            content: `TANGGAL INVOICE : ${list.tanggal_invoice}`,\r\n            colSpan: 12,\r\n          },\r\n        ],\r\n        [\r\n          {\r\n            content: `NO BON : ${list.no_bon}`,\r\n            colSpan: 12,\r\n          },\r\n        ],\r\n        [\r\n          {\r\n            content: `NO`,\r\n          },\r\n          {\r\n            content: `KODE JENIS`,\r\n          },\r\n          {\r\n            content: `KETERANGAN`,\r\n          },\r\n          {\r\n            content: `KADAR CETAK`,\r\n          },\r\n          {\r\n            content: `KADAR BELI`,\r\n          },\r\n          {\r\n            content: `QTY`,\r\n          },\r\n          {\r\n            content: `P`,\r\n          },\r\n          {\r\n            content: `K`,\r\n          },\r\n          {\r\n            content: `PKG`,\r\n          },\r\n          {\r\n            content: `GROSS`,\r\n          },\r\n          {\r\n            content: `BRUTO`,\r\n          },\r\n          {\r\n            content: `NETTO`,\r\n          },\r\n          {\r\n            content: `ONGKOS`,\r\n          },\r\n        ],\r\n      ];\r\n      list.detail_barang.forEach((barang, index) => {\r\n        let rows = [\r\n          barang.no_urut,\r\n          barang.kode_jenis,\r\n          barang.keterangan,\r\n          barang.kadar_cetak,\r\n          barang.kadar_beli,\r\n          barang.qty,\r\n          barang.plastik,\r\n          barang.kulit,\r\n          barang.pkg,\r\n          barang.gross,\r\n          barang.bruto,\r\n          barang.netto,\r\n          parseFloat(barang.ongkos_rp).toLocaleString(\"id-ID\"),\r\n        ];\r\n        tableRows.push(rows);\r\n        console.log(tableRows);\r\n      });\r\n      let footer = [\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        item.total_bruto,\r\n        item.total_netto,\r\n        parseFloat(item.total_rp).toLocaleString(\"id-ID\"),\r\n      ];\r\n      footRows.push(footer);\r\n      doc.autoTable({\r\n        head: tableColumn,\r\n        body: tableRows,\r\n        foot: footRows,\r\n        startY: index === 0 ? 40 : finalY + 5,\r\n        theme: \"plain\",\r\n        rowPageBreak: \"avoid\",\r\n        pageBreak: \"avoid\",\r\n        margin: { top: 20 },\r\n        bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n        headStyles: {\r\n          lineWidth: 0.02,\r\n          lineColor: \"#000\",\r\n          fillColor: [212, 212, 211],\r\n        },\r\n      });\r\n      finalY = doc.autoTableEndPosY() + 10;\r\n      tableRows = [];\r\n      footRows = [];\r\n    });\r\n  });\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n\r\n  doc.text(`User\t: ${username}`, 14, finalY + 10);\r\n  doc.text(`Cetak\t: ${tanggal}`, 14, finalY + 16);\r\n  doc.text(`Valid\t: ${validby}`, 14, finalY + 22);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  doc.setProperties({\r\n    title: \"LAPORAN PENERIMAAN SUPPLIER - DETAIL\",\r\n  });\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN PENERIMAAN SUPPLIER - DETAIL</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanPrintPenerimaanSupplier;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { formatGram, formatRp } from \"../../helper\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanPrintPenerimaanSupplierRekap = (\r\n  row1isi = \"\",\r\n  row2isi = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n  validby = \"\",\r\n  data\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n\r\n  let tableColumn = [\r\n    [\r\n      {\r\n        content: `TANGGAL`,\r\n      },\r\n      {\r\n        content: `NO BON`,\r\n      },\r\n      {\r\n        content: `TOTAL BRUTO`,\r\n      },\r\n      {\r\n        content: `TOTAL NETTO`,\r\n      },\r\n      {\r\n        content: `TOTAL NETTO EXT`,\r\n      },\r\n      {\r\n        content: `TOTAL RP`,\r\n      },\r\n    ],\r\n  ];\r\n  let finalY = 40;\r\n  // let data = [\r\n  //   {\r\n  //     kode_supplier: \"SP001\",\r\n  //     nama_supplier: \"SUPPLIER\",\r\n  //     detail: [\r\n  //       {\r\n  //         tanggal_invoice: \"2021-03-01\",\r\n  //         no_bon: \"CB44C4-F832-031A-3026-EB855A3D777F\",\r\n  //         detail_barang: [\r\n  //           {\r\n  //             no_urut: 1,\r\n  //             kode_jenis: \"990PER107\",\r\n  //             keterangan: \"990 PER 107\",\r\n  //             kadar_cetak: 100,\r\n  //             kadar_beli: 99,\r\n  //             kode_barcode: \"-\",\r\n  //             qty: 2,\r\n  //             plastik: 2,\r\n  //             kulit: 0,\r\n  //             pkg: 5,\r\n  //             gross: 10,\r\n  //             bruto: 5,\r\n  //             netto: 4.95,\r\n  //             ongkos_rp: 100000,\r\n  //           },\r\n  //           {\r\n  //             no_urut: 2,\r\n  //             kode_jenis: \"GLKEPRAS78\",\r\n  //             keterangan: \"GLKEPRAS 78\",\r\n  //             kadar_cetak: 78,\r\n  //             kadar_beli: 100,\r\n  //             kode_barcode: \"-\",\r\n  //             qty: 5,\r\n  //             plastik: 5,\r\n  //             kulit: 0,\r\n  //             pkg: 5,\r\n  //             gross: 60,\r\n  //             bruto: 55,\r\n  //             netto: 55,\r\n  //             ongkos_rp: 100000,\r\n  //           },\r\n  //         ],\r\n  //         total_bruto: 60,\r\n  //         total_netto: 59.95,\r\n  //         total_netto_ext: 59.95,\r\n  //         total_rp: 200000,\r\n  //       },\r\n  //     ],\r\n  //   },\r\n  // ];\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN REKAP PENERIMAAN SUPPLIER\", 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(`Mulai Dari : ${row1isi}`, 14, 25);\r\n  //   row 2\r\n  doc.text(`Sampai Dengan\t: ${row2isi}`, 120, 25);\r\n  data.forEach((item, index) => {\r\n    doc.text(`Kode Supplier : ${item.kode_supplier}`, 14, 35);\r\n    doc.text(`Nama Supplier : ${item.nama_supplier}`, 100, 35);\r\n    item.detail.forEach((list) => {\r\n      let rows = [\r\n        list.tanggal_invoice,\r\n        list.no_bon,\r\n        formatGram(list.total_bruto),\r\n        formatGram(list.total_netto),\r\n        formatGram(list.total_netto_ext),\r\n        formatRp(list.total_rp),\r\n      ];\r\n      tableRows.push(rows);\r\n    });\r\n    doc.autoTable({\r\n      head: tableColumn,\r\n      body: tableRows,\r\n      startY: index === 0 ? 40 : finalY + 5,\r\n      theme: \"plain\",\r\n      rowPageBreak: \"avoid\",\r\n      pageBreak: \"avoid\",\r\n      margin: { top: 20 },\r\n      bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n      headStyles: {\r\n        lineWidth: 0.02,\r\n        lineColor: \"#000\",\r\n        fillColor: [212, 212, 211],\r\n      },\r\n    });\r\n    finalY = doc.autoTableEndPosY() + 10;\r\n    tableRows = [];\r\n  });\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n\r\n  doc.text(`User\t: ${username}`, 14, finalY + 10);\r\n  doc.text(`Cetak\t: ${tanggal}`, 14, finalY + 16);\r\n  doc.text(`Valid\t: ${validby}`, 14, finalY + 22);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  doc.setProperties({\r\n    title: \"LAPORAN PENERIMAAN SUPPLIER - REKAP\",\r\n  });\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN PENERIMAAN SUPPLIER - REKAP</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanPrintPenerimaanSupplierRekap;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanPrintReturnSupplier = (\r\n  row1isi = \"\",\r\n  row2isi = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n  validby = \"\",\r\n  data\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 40;\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN RETURN SUPPLIER - DETAIL\", 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(`Supplier : ${row1isi}`, 14, 25);\r\n  //   row 2\r\n  doc.text(`Tanggal\t: ${row2isi}`, 120, 25);\r\n  data.forEach((item, index) => {\r\n    doc.text(`Kode Supplier : ${item.kode_supplier}`, 14, 35);\r\n    doc.text(`Nama Supplier : ${item.nama_supplier}`, 100, 35);\r\n    item.detail.forEach((list, index) => {\r\n      tableColumn = [\r\n        [\r\n          {\r\n            content: `TANGGAL INVOICE : ${list.tanggal_invoice}`,\r\n            colSpan: 12,\r\n          },\r\n        ],\r\n        [\r\n          {\r\n            content: `NO BON : ${list.no_bon}`,\r\n            colSpan: 12,\r\n          },\r\n        ],\r\n        [\r\n          {\r\n            content: `NO`,\r\n          },\r\n          {\r\n            content: `KODE JENIS`,\r\n          },\r\n          {\r\n            content: `KETERANGAN`,\r\n          },\r\n          {\r\n            content: `KADAR CETAK`,\r\n          },\r\n          {\r\n            content: `KADAR BELI`,\r\n          },\r\n          {\r\n            content: `QTY`,\r\n          },\r\n          {\r\n            content: `P`,\r\n          },\r\n          {\r\n            content: `K`,\r\n          },\r\n          {\r\n            content: `PKG`,\r\n          },\r\n          {\r\n            content: `GROSS`,\r\n          },\r\n          {\r\n            content: `BRUTO`,\r\n          },\r\n          {\r\n            content: `NETTO`,\r\n          },\r\n          {\r\n            content: `ONGKOS`,\r\n          },\r\n        ],\r\n      ];\r\n      list.detail_barang.forEach((barang, index) => {\r\n        let rows = [\r\n          barang.no_urut,\r\n          barang.kode_jenis,\r\n          barang.keterangan,\r\n          barang.kadar_cetak,\r\n          barang.kadar_beli,\r\n          barang.qty,\r\n          barang.plastik,\r\n          barang.kulit,\r\n          barang.pkg,\r\n          barang.gross,\r\n          barang.bruto,\r\n          barang.netto,\r\n          parseFloat(barang.ongkos_rp).toLocaleString(\"id-ID\"),\r\n        ];\r\n        tableRows.push(rows);\r\n        console.log(tableRows);\r\n      });\r\n      let footer = [\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        item.total_bruto,\r\n        item.total_netto,\r\n        parseFloat(item.total_rp).toLocaleString(\"id-ID\"),\r\n      ];\r\n      footRows.push(footer);\r\n      doc.autoTable({\r\n        head: tableColumn,\r\n        body: tableRows,\r\n        foot: footRows,\r\n        startY: index === 0 ? 40 : finalY + 5,\r\n        theme: \"plain\",\r\n        rowPageBreak: \"avoid\",\r\n        pageBreak: \"avoid\",\r\n        margin: { top: 20 },\r\n        bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n        headStyles: {\r\n          lineWidth: 0.02,\r\n          lineColor: \"#000\",\r\n          fillColor: [212, 212, 211],\r\n        },\r\n      });\r\n      finalY = doc.autoTableEndPosY() + 10;\r\n      tableRows = [];\r\n      footRows = [];\r\n    });\r\n  });\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n\r\n  doc.text(`User\t: ${username}`, 14, finalY + 10);\r\n  doc.text(`Cetak\t: ${tanggal}`, 14, finalY + 16);\r\n  doc.text(`Valid\t: ${validby}`, 14, finalY + 22);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  doc.setProperties({\r\n    title: \"LAPORAN RETURN SUPPLIER - DETAIL\",\r\n  });\r\n  // doc.save(`RETURNSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN RETURN SUPPLIER - DETAIL</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanPrintReturnSupplier;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { formatGram, formatRp } from \"../../helper\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanPrintReturnSupplierRekap = (\r\n  row1isi = \"\",\r\n  row2isi = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n  validby = \"\",\r\n  data\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n\r\n  let tableColumn = [\r\n    [\r\n      {\r\n        content: `TANGGAL`,\r\n      },\r\n      {\r\n        content: `NO BON`,\r\n      },\r\n      {\r\n        content: `TOTAL BRUTO`,\r\n      },\r\n      {\r\n        content: `TOTAL NETTO`,\r\n      },\r\n      {\r\n        content: `TOTAL NETTO EXT`,\r\n      },\r\n      {\r\n        content: `TOTAL RP`,\r\n      },\r\n    ],\r\n  ];\r\n  let finalY = 40;\r\n  // let data = [\r\n  //   {\r\n  //     kode_supplier: \"SP001\",\r\n  //     nama_supplier: \"SUPPLIER\",\r\n  //     detail: [\r\n  //       {\r\n  //         tanggal_invoice: \"2021-03-01\",\r\n  //         no_bon: \"CB44C4-F832-031A-3026-EB855A3D777F\",\r\n  //         detail_barang: [\r\n  //           {\r\n  //             no_urut: 1,\r\n  //             kode_jenis: \"990PER107\",\r\n  //             keterangan: \"990 PER 107\",\r\n  //             kadar_cetak: 100,\r\n  //             kadar_beli: 99,\r\n  //             kode_barcode: \"-\",\r\n  //             qty: 2,\r\n  //             plastik: 2,\r\n  //             kulit: 0,\r\n  //             pkg: 5,\r\n  //             gross: 10,\r\n  //             bruto: 5,\r\n  //             netto: 4.95,\r\n  //             ongkos_rp: 100000,\r\n  //           },\r\n  //           {\r\n  //             no_urut: 2,\r\n  //             kode_jenis: \"GLKEPRAS78\",\r\n  //             keterangan: \"GLKEPRAS 78\",\r\n  //             kadar_cetak: 78,\r\n  //             kadar_beli: 100,\r\n  //             kode_barcode: \"-\",\r\n  //             qty: 5,\r\n  //             plastik: 5,\r\n  //             kulit: 0,\r\n  //             pkg: 5,\r\n  //             gross: 60,\r\n  //             bruto: 55,\r\n  //             netto: 55,\r\n  //             ongkos_rp: 100000,\r\n  //           },\r\n  //         ],\r\n  //         total_bruto: 60,\r\n  //         total_netto: 59.95,\r\n  //         total_netto_ext: 59.95,\r\n  //         total_rp: 200000,\r\n  //       },\r\n  //     ],\r\n  //   },\r\n  // ];\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN RETURN SUPPLIER - REKAP\", 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(`Supplier : ${row1isi}`, 14, 25);\r\n  //   row 2\r\n  doc.text(`Tanggal\t: ${row2isi}`, 120, 25);\r\n  data.forEach((item, index) => {\r\n    doc.text(`Kode Supplier : ${item.kode_supplier}`, 14, 35);\r\n    doc.text(`Nama Supplier : ${item.nama_supplier}`, 100, 35);\r\n    item.detail.forEach((list) => {\r\n      let rows = [\r\n        list.tanggal_invoice,\r\n        list.no_bon,\r\n        formatGram(list.total_bruto),\r\n        formatGram(list.total_netto),\r\n        formatGram(list.total_netto_ext),\r\n        formatRp(list.total_rp),\r\n      ];\r\n      tableRows.push(rows);\r\n    });\r\n    doc.autoTable({\r\n      head: tableColumn,\r\n      body: tableRows,\r\n      startY: index === 0 ? 40 : finalY + 5,\r\n      theme: \"plain\",\r\n      rowPageBreak: \"avoid\",\r\n      pageBreak: \"avoid\",\r\n      margin: { top: 20 },\r\n      bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n      headStyles: {\r\n        lineWidth: 0.02,\r\n        lineColor: \"#000\",\r\n        fillColor: [212, 212, 211],\r\n      },\r\n    });\r\n    finalY = doc.autoTableEndPosY() + 10;\r\n    tableRows = [];\r\n  });\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n\r\n  doc.text(`User\t: ${username}`, 14, finalY + 10);\r\n  doc.text(`Cetak\t: ${tanggal}`, 14, finalY + 16);\r\n  doc.text(`Valid\t: ${validby}`, 14, finalY + 22);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  // doc.save(`RETURNSUpplier.pdf`);\r\n  doc.setProperties({\r\n    title: \"LAPORAN RETURN SUPPLIER - REKAP\",\r\n  });\r\n  // doc.save(`RETURNSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN RETURN SUPPLIER - REKAP</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanPrintReturnSupplierRekap;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { formatGram, formatRp } from \"../../helper\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanTitipSupplier = (data) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n\r\n  let tableColumn = [\r\n    [\r\n      {\r\n        content: `KODE SUPPLIER`,\r\n      },\r\n\r\n      {\r\n        content: `NAMA SUPPLIER`,\r\n      },\r\n      {\r\n        content: `TOTAL TITIP GR`,\r\n      },\r\n      {\r\n        content: `TOTAL TITIP RP`,\r\n      },\r\n    ],\r\n  ];\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN TITIP CUSTOMER\", 14, 15);\r\n  doc.setFontSize(10);\r\n  //   //row 1\r\n  //   doc.text(`Supplier : ${row1isi}`, 14, 25);\r\n  //   //   row 2\r\n  //   doc.text(`Tanggal\t: ${row2isi}`, 120, 25);\r\n  data.forEach((item, index) => {\r\n    let rows = [\r\n      item.kode_supplier,\r\n      item.nama_supplier,\r\n      formatGram(item.titip_gr),\r\n      formatRp(item.titip_rp),\r\n    ];\r\n    tableRows.push(rows);\r\n  });\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    startY: 30,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    pageBreak: \"avoid\",\r\n    margin: { top: 20 },\r\n    bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n    headStyles: {\r\n      lineWidth: 0.02,\r\n      lineColor: \"#000\",\r\n      fillColor: [212, 212, 211],\r\n    },\r\n  });\r\n\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  doc.setProperties({\r\n    title: \"LAPORAN TITIP SUPPLIER\",\r\n  });\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN TITIP SUPPLIER</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanTitipSupplier;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanTitipSupplierCard = (data) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let tableColumn = [];\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN TITIP SUPPLIER \", 14, 15);\r\n  doc.setFontSize(10);\r\n  //   //row 1\r\n  //   doc.text(`Supplier : ${row1isi}`, 14, 25);\r\n  //   //   row 2\r\n  //   doc.text(`Tanggal\t: ${row2isi}`, 120, 25);\r\n  data.forEach((item, index) => {\r\n    tableColumn = [\r\n      [\r\n        {\r\n          content: `TANGGAL`,\r\n        },\r\n        {\r\n          content: `AWAL\\nTITIP`,\r\n        },\r\n        {\r\n          content: `IN\\nTITIP`,\r\n        },\r\n        {\r\n          content: `OUT\\nTITIP`,\r\n        },\r\n        {\r\n          content: `AKHIR\\nTITIP`,\r\n        },\r\n        {\r\n          content: `NO BON`,\r\n        },\r\n      ],\r\n    ];\r\n    let rows = [\r\n      item.tanggal,\r\n      item.awal_titip,\r\n      item.in_titip,\r\n      item.out_titip,\r\n      item.akhir_titip,\r\n      item.no_bon,\r\n    ];\r\n    tableRows.push(rows);\r\n  });\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    startY: 30,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n\r\n    margin: { top: 20 },\r\n    bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n    headStyles: {\r\n      lineWidth: 0.02,\r\n      lineColor: \"#000\",\r\n      fillColor: [212, 212, 211],\r\n    },\r\n  });\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  doc.setProperties({\r\n    title: \"LAPORAN TITIP SUPPLIER - CARD\",\r\n  });\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN TITIP SUPPLIER - CARD</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanTitipSupplierCard;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanTitipSupplierSummary = (data) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let tableColumn = [];\r\n\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `KODE SUPPLIER`,\r\n      },\r\n      {\r\n        content: `NAMA SUPPLIER`,\r\n      },\r\n      {\r\n        content: `AWAL TITIP`,\r\n      },\r\n\r\n      {\r\n        content: `IN TITIP`,\r\n      },\r\n\r\n      {\r\n        content: `OUT TITIP`,\r\n      },\r\n\r\n      {\r\n        content: `AKHIR TITIP`,\r\n      },\r\n    ],\r\n  ];\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN SUMMARY TITIP SUPPLIER\", 14, 15);\r\n  doc.setFontSize(10);\r\n\r\n  data.forEach((list, index) => {\r\n    tableColumn = [\r\n      [\r\n        {\r\n          content: `JENIS TITIP : ${list.jenis_titip}`,\r\n          colSpan: 5,\r\n        },\r\n      ],\r\n      [\r\n        {\r\n          content: `KODE SUPPLIER`,\r\n        },\r\n        {\r\n          content: `AWAL TITIP`,\r\n        },\r\n\r\n        {\r\n          content: `IN TITIP`,\r\n        },\r\n\r\n        {\r\n          content: `OUT TITIP`,\r\n        },\r\n\r\n        {\r\n          content: `AKHIR TITIP`,\r\n        },\r\n      ],\r\n    ];\r\n    list.detail.forEach((barang, index) => {\r\n      let rows = [\r\n        barang.kode_supplier,\r\n        barang.awal_titip,\r\n        barang.in_titip,\r\n        barang.out_titip,\r\n        barang.akhir_titip,\r\n      ];\r\n      tableRows.push(rows);\r\n      footRows = [];\r\n    });\r\n  });\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    foot: footRows,\r\n    startY: 30,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    pageBreak: \"avoid\",\r\n    margin: { top: 20 },\r\n    bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n    headStyles: {\r\n      lineWidth: 0.02,\r\n      lineColor: \"#000\",\r\n      fillColor: [212, 212, 211],\r\n    },\r\n  });\r\n\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  doc.setProperties({\r\n    title: \"LAPORAN TITIP SUPPLIER - SUMMARY\",\r\n  });\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN TITIP SUPPLIER - SUMMARY</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanTitipSupplierSummary;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\nimport { gagal } from \"../Alert\";\r\nimport { AxiosMasterGet } from \"../Axios\";\r\nimport { getToday } from \"../GlobalComponent/function\";\r\nimport { getUserData } from \"../GlobalComponent/notification\";\r\nimport { checkLaporan } from \"../helper\";\r\nimport FormSupplier from \"./Component/formSupplier\";\r\nimport LaporanHutangSupplier from \"./Component/LaporanHutangSupplier\";\r\nimport LaporanHutangSupplierCard from \"./Component/LaporanHutangSupplierCard\";\r\nimport LaporanHutangSupplierSummary from \"./Component/LaporanHutangSupplierSummary\";\r\nimport LaporanPembayaranSupplier from \"./Component/LaporanPembayaranSupplier\";\r\nimport LaporanPrintPenerimaanSupplier from \"./Component/LaporanPrintPenerimaanSupplier\";\r\nimport LaporanPrintPenerimaanSupplierRekap from \"./Component/LaporanPrintPenerimaanSupplierRekap\";\r\nimport LaporanPrintReturnSupplier from \"./Component/LaporanPrintReturnSupplier\";\r\nimport LaporanPrintReturnSupplierRekap from \"./Component/LaporanPrintReturnSupplierRekap\";\r\nimport LaporanTitipSupplier from \"./Component/LaporanTitipSupplier\";\r\nimport LaporanTitipSupplierCard from \"./Component/LaporanTitipSupplierCard\";\r\nimport LaporanTitipSupplierSummary from \"./Component/LaporanTitipSupplierSummary\";\r\nimport LaporanTolakanSupplier from \"./Component/LaporanTolakanSupplier\";\r\n\r\nclass LaporanSupplier extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listLaporan: [],\r\n    };\r\n  }\r\n\r\n  handlePenerimaan(data) {\r\n    this.props.dispatch(progressSend());\r\n    AxiosMasterGet(\r\n      \"report/terima-barang-supplier/\" +\r\n        `${data.type}&${data.kode_supplier}&${data.tanggal_awal}&${data.tanggal_akhir}`\r\n    )\r\n      .then((res) => {\r\n        this.props.dispatch(finishSend());\r\n        if (checkLaporan(res.data)) {\r\n          data.type === \"DETAIL\"\r\n            ? LaporanPrintPenerimaanSupplier(\r\n                data.tanggal_awal,\r\n                data.tanggal_akhir,\r\n                getUserData().user_name,\r\n                getToday(),\r\n                getUserData().user_name,\r\n                res.data\r\n              )\r\n            : LaporanPrintPenerimaanSupplierRekap(\r\n                data.tanggal_awal,\r\n                data.tanggal_akhir,\r\n                getUserData().user_name,\r\n                getToday(),\r\n                getUserData().user_name,\r\n                res.data\r\n              );\r\n        }\r\n      })\r\n      .catch((err) =>\r\n        gagal(\r\n          `Gagal Mengambil data, Mohon periksa koneksi anda, Detail :${err.response.data}`\r\n        ).then(() => this.props.dispatch(finishSend()))\r\n      );\r\n  }\r\n  handleHutang(data) {\r\n    switch (data.type) {\r\n      case \"SIMPLE\":\r\n        this.props.dispatch(progressSend());\r\n        AxiosMasterGet(\"report/hutang-supplier/\" + data.kode_supplier)\r\n          .then((res) => {\r\n            this.props.dispatch(finishSend());\r\n            if (checkLaporan(res.data)) {\r\n              this.setState({\r\n                listLaporan: res && res.data,\r\n              });\r\n            }\r\n          })\r\n          .then(() => LaporanHutangSupplier(this.state.listLaporan))\r\n          .catch((err) => gagal(`Get Data Error , Detail : ${err}`))\r\n          .then(() => this.props.dispatch(finishSend()));\r\n        break;\r\n      case \"CARD\":\r\n        this.props.dispatch(progressSend());\r\n        AxiosMasterGet(\r\n          \"report/hutang-supplier-card/\" +\r\n            `${data.kode_supplier}&${data.tanggal_awal}&${data.tanggal_akhir}`\r\n        )\r\n          .then((res) => {\r\n            this.props.dispatch(finishSend());\r\n            if (checkLaporan(res.data)) {\r\n              this.setState({\r\n                listLaporan: res && res.data,\r\n              });\r\n            }\r\n          })\r\n          .then(() => LaporanHutangSupplierCard(this.state.listLaporan))\r\n          .catch((err) => gagal(`Get Data Error , Detail : ${err}`))\r\n          .then(() => this.props.dispatch(finishSend()));\r\n        break;\r\n      case \"SUMMARY\":\r\n        this.props.dispatch(progressSend());\r\n        AxiosMasterGet(\r\n          \"report/hutang-supplier-summary/\" +\r\n            `${data.kode_supplier}&${data.tanggal_awal}&${data.tanggal_akhir}`\r\n        )\r\n          .then((res) => {\r\n            this.props.dispatch(finishSend());\r\n            if (checkLaporan(res.data)) {\r\n              this.setState({\r\n                listLaporan: res && res.data,\r\n              });\r\n            }\r\n          })\r\n          .then(() => LaporanHutangSupplierSummary(this.state.listLaporan))\r\n          .catch((err) => gagal(`Get Data Error , Detail : ${err}`))\r\n          .then(() => this.props.dispatch(finishSend()));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  handleKartuHutang(data) {\r\n    console.log(data);\r\n  }\r\n  handleOmzet(data) {}\r\n  handleReturn(data) {\r\n    this.props.dispatch(progressSend());\r\n    AxiosMasterGet(\r\n      \"report/retur-barang-supplier/\" +\r\n        `${data.type}&${data.kode_supplier}&${data.tanggal_awal}&${data.tanggal_akhir}`\r\n    )\r\n      .then((res) => {\r\n        this.props.dispatch(finishSend());\r\n        if (checkLaporan(res.data)) {\r\n          data.type === \"DETAIL\"\r\n            ? LaporanPrintReturnSupplier(\r\n                data.tanggal_awal,\r\n                data.tanggal_akhir,\r\n                getUserData().user_name,\r\n                getToday(),\r\n                getUserData().user_name,\r\n                res.data\r\n              )\r\n            : LaporanPrintReturnSupplierRekap(\r\n                data.tanggal_awal,\r\n                data.tanggal_akhir,\r\n                getUserData().user_name,\r\n                getToday(),\r\n                getUserData().user_name,\r\n                res.data\r\n              );\r\n        }\r\n      })\r\n      .catch((err) =>\r\n        gagal(\r\n          `Gagal Mengambil data, Mohon periksa koneksi anda, Detail :${err.response.data}`\r\n        ).then(() => this.props.dispatch(finishSend()))\r\n      );\r\n  }\r\n  handleTitip(data) {\r\n    switch (data.type) {\r\n      case \"SIMPLE\":\r\n        this.props.dispatch(progressSend());\r\n        AxiosMasterGet(`report/titip-supplier/${data.kode_supplier}`)\r\n          .then((res) => {\r\n            this.props.dispatch(finishSend());\r\n            if (checkLaporan(res.data)) {\r\n              this.setState({\r\n                listLaporan: res && res.data,\r\n              });\r\n            }\r\n          })\r\n          .then(() => LaporanTitipSupplier(this.state.listLaporan))\r\n          .catch((err) => gagal(`Get Data Error , Detail : ${err}`))\r\n          .then(() => this.props.dispatch(finishSend()));\r\n        break;\r\n      case \"CARD\":\r\n        this.props.dispatch(progressSend());\r\n        AxiosMasterGet(\r\n          `report/titip-supplier-card/${data.kode_supplier}&${data.jenis_transkasi}&${data.tanggal_awal}&${data.tanggal_akhir}`\r\n        )\r\n          .then((res) => {\r\n            this.props.dispatch(finishSend());\r\n            if (checkLaporan(res.data)) {\r\n              LaporanTitipSupplierCard(res.data);\r\n            }\r\n          })\r\n          .catch((err) => gagal(`Get Data Error , Detail : ${err}`))\r\n          .then(() => this.props.dispatch(finishSend()));\r\n        break;\r\n      case \"SUMMARY\":\r\n        this.props.dispatch(progressSend());\r\n        AxiosMasterGet(\r\n          `report/titip-supplier-summary/${data.kode_supplier}&${data.jenis_transkasi}&${data.tanggal_awal}&${data.tanggal_akhir}`\r\n        )\r\n          .then((res) => {\r\n            this.props.dispatch(finishSend());\r\n            if (checkLaporan(res.data)) {\r\n              this.setState({\r\n                listLaporan: res && res.data,\r\n              });\r\n            }\r\n          })\r\n          .then(() => LaporanTitipSupplierSummary(this.state.listLaporan))\r\n          .catch((err) => gagal(`Get Data Error , Detail : ${err}`))\r\n          .then(() => this.props.dispatch(finishSend()));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  handleTolakan(data) {\r\n    this.props.dispatch(progressSend());\r\n    AxiosMasterGet(\r\n      `report/tolakan-supplier/${data.kode_supplier}&${data.tanggal_awal}&${data.tanggal_akhir}`\r\n    )\r\n      .then((res) => {\r\n        this.props.dispatch(finishSend());\r\n        if (checkLaporan(res.data)) {\r\n          LaporanTolakanSupplier(\r\n            data.kode_supplier,\r\n            `${data.tanggal_awal} - ${data.tanggal_akhir}`,\r\n            \"ADMIN\",\r\n            getToday(),\r\n            \"ADMIN\",\r\n            res.data\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => gagal(`Get Data Error , Detail : ${err}`))\r\n      .then(() => this.props.dispatch(finishSend()));\r\n  }\r\n  handleTransaksi(data) {\r\n    this.props.dispatch(progressSend());\r\n    AxiosMasterGet(\r\n      `report/bayar-hutang-supplier/${data.kode_supplier}&${data.tglFrom}&${data.tglTo}&REKAP&REKAP`\r\n    )\r\n      .then((res) => {\r\n        this.props.dispatch(finishSend());\r\n        if (checkLaporan(res.data)) {\r\n          LaporanPembayaranSupplier(res.data);\r\n        }\r\n      })\r\n      .catch((err) => gagal(`Get Data Error , Detail : ${err}`))\r\n      .then(() => this.props.dispatch(finishSend()));\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"col-lg-12\">\r\n                <ul className=\"nav nav-tabs nav-justified nav-bordered mb-3\">\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#penerimaan-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link active\"\r\n                    >\r\n                      <i className=\"mdi mdi-home-variant d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">Penerimaan</span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#return-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"true\"\r\n                      className=\"nav-link \"\r\n                    >\r\n                      <i className=\"mdi mdi-account-circle d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">Return</span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#hutang-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">Hutang</span>\r\n                    </a>\r\n                  </li>\r\n                  {/* <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#kartu-hutang-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">Kartu Hutang</span>\r\n                    </a>\r\n                  </li> */}\r\n                  {/* <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#omzet-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">Omzet</span>\r\n                    </a>\r\n                  </li> */}\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#transaksi-pembayaran-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">\r\n                        Transaksi Pembayaran\r\n                      </span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#tolakan-return-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">\r\n                        Tolakan Supplier\r\n                      </span>\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#titip-tab\"\r\n                      data-toggle=\"tab\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"nav-link\"\r\n                    >\r\n                      <i className=\"mdi mdi-settings-outline d-lg-none d-block mr-1\" />\r\n                      <span className=\"d-none d-lg-block\">Titip</span>\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n                <div className=\"tab-content\">\r\n                  <div className=\"tab-pane show active\" id=\"penerimaan-tab\">\r\n                    <FormSupplier\r\n                      from=\"penerimaan\"\r\n                      onSubmit={(data) => this.handlePenerimaan(data)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"return-tab\">\r\n                    <FormSupplier\r\n                      from=\"penerimaan\"\r\n                      onSubmit={(data) => this.handleReturn(data)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"hutang-tab\">\r\n                    <FormSupplier\r\n                      from=\"hutang\"\r\n                      onSubmit={(data) => this.handleHutang(data)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"kartu-hutang-tab\">\r\n                    <FormSupplier\r\n                      from=\"penerimaan\"\r\n                      onSubmit={(data) => this.handleKartuHutang(data)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"omzet-tab\">\r\n                    <FormSupplier\r\n                      from=\"omzet\"\r\n                      onSubmit={(data) => this.handleOmzet(data)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"transaksi-pembayaran-tab\">\r\n                    <FormSupplier\r\n                      from=\"transaksi\"\r\n                      onSubmit={(data) => this.handleTransaksi(data)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"tolakan-return-tab\">\r\n                    <FormSupplier\r\n                      from=\"tolakan\"\r\n                      onSubmit={(data) => this.handleTolakan(data)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"tab-pane\" id=\"titip-tab\">\r\n                    <FormSupplier\r\n                      from=\"titip\"\r\n                      onSubmit={(data) => this.handleTitip(data)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(LaporanSupplier);\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanTolakanSupplier = (\r\n  row1isi = \"\",\r\n  row2isi = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n  validby = \"\",\r\n  data\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 40;\r\n  doc.setFontSize(18);\r\n  doc.text(\"LAPORAN TOLAKAN SUPPLIER\", 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(`Supplier : ${row1isi}`, 14, 25);\r\n  //   row 2\r\n  doc.text(`Tanggal\t: ${row2isi}`, 120, 25);\r\n  data.forEach((item, index) => {\r\n    doc.text(`Kode Supplier : ${item.kode_supplier}`, 14, 35);\r\n    doc.text(`Nama Supplier : ${item.nama_supplier}`, 100, 35);\r\n    item.detail.forEach((list, index) => {\r\n      tableColumn = [\r\n        [\r\n          {\r\n            content: `TANGGAL : ${list.tanggal}`,\r\n            colSpan: 11,\r\n          },\r\n        ],\r\n        [\r\n          {\r\n            content: `NO BON : ${list.no_bon}`,\r\n            colSpan: 11,\r\n          },\r\n        ],\r\n        [\r\n          {\r\n            content: `NO`,\r\n          },\r\n          {\r\n            content: `KODE JENIS`,\r\n          },\r\n          {\r\n            content: `KADAR CETAK`,\r\n          },\r\n          {\r\n            content: `KADAR BELI`,\r\n          },\r\n          {\r\n            content: `QTY`,\r\n          },\r\n          {\r\n            content: `P`,\r\n          },\r\n          {\r\n            content: `K`,\r\n          },\r\n          {\r\n            content: `PKG`,\r\n          },\r\n          {\r\n            content: `GROSS`,\r\n          },\r\n          {\r\n            content: `BRUTO`,\r\n          },\r\n          {\r\n            content: `NETTO`,\r\n          },\r\n          {\r\n            content: `ONGKOS`,\r\n          },\r\n        ],\r\n      ];\r\n      list.detail_barang.forEach((barang, index) => {\r\n        let rows = [\r\n          ++index,\r\n          barang.kode_jenis,\r\n          barang.kadar_cetak,\r\n          barang.kadar_beli,\r\n          barang.qty,\r\n          barang.p,\r\n          barang.k,\r\n          barang.pkg,\r\n          barang.gross,\r\n          barang.bruto,\r\n          barang.netto,\r\n          parseFloat(barang.ongkos_rp).toLocaleString(\"id-ID\"),\r\n        ];\r\n        tableRows.push(rows);\r\n        console.log(tableRows);\r\n      });\r\n      let footer = [\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        \"\",\r\n        item.total_bruto,\r\n        item.total_netto,\r\n        parseFloat(item.total_rp).toLocaleString(\"id-ID\"),\r\n      ];\r\n      footRows.push(footer);\r\n      doc.autoTable({\r\n        head: tableColumn,\r\n        body: tableRows,\r\n        foot: footRows,\r\n        startY: index === 0 ? 40 : finalY + 4,\r\n        theme: \"plain\",\r\n        rowPageBreak: \"avoid\",\r\n        pageBreak: \"avoid\",\r\n        margin: { top: 20 },\r\n        bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n        headStyles: {\r\n          lineWidth: 0.02,\r\n          lineColor: \"#000\",\r\n          fillColor: [212, 212, 211],\r\n        },\r\n      });\r\n      finalY = doc.autoTableEndPosY();\r\n      tableRows = [];\r\n      footRows = [];\r\n    });\r\n  });\r\n\r\n  doc.text(`User\t: ${username}`, 14, finalY + 10);\r\n  doc.text(`Cetak\t: ${tanggal}`, 14, finalY + 16);\r\n  doc.text(`Valid\t: ${validby}`, 14, finalY + 22);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  doc.setProperties({\r\n    title: \"LAPORAN TOLAKAN SUPPLIER\",\r\n  });\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN TOLAKAN SUPPLIER</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanTolakanSupplier;\r\n"],"sourceRoot":""}