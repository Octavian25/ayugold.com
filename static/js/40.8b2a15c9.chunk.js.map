{"version":3,"sources":["../node_modules/redux-form/es/index.js","Stocking/Component/FormEditTambahBarang.jsx","Validations/validasiHeadPindahBarang.js","Stocking/Component/HeadPindahBarang.jsx","Stocking/PindahBarang.jsx","DataMaster/Component/ModalMasterData.jsx","deleteLocalStorage.js","Images/emptyTable.svg","GlobalComponent/EmptyTable.jsx","GlobalComponent/GlobalTabel.jsx","Validations/validationPindahBarang.js"],"names":["reset","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","change","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors","currencyMask","createNumberMask","prefix","suffix","locale","renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","min","step","maxLength","FormEditTambahBarang","props","handleChange","e","result_explode","target","value","split","setState","kodeJenis","kadarCetak","kadarBeli","kadarJual","namaJenis","state","listBarang","bruto","this","dispatch","getListBarang","netto","onSubmit","handleSubmit","Field","name","component","onChange","onBlur","setKadar","key","KodeBarangList","map","list","kode_jenis","kadar_cetak","kadar_beli","kadar_jual","nama_jenis","kode_kategori","defaultValue","setNetto","Component","reduxForm","form","enableReinitialize","validate","validationPindahBarang","selector","formValueSelector","connect","kadarTransaksi","initialValues","kodeBarang","provinsi","editPindahBarang","pkg","kadar","ongkos","rp","keterangan","parseFloat","toFixed","validasiHeadPindahBarang","errors","tanggal","dari","ke","kategori","noBon","HeadPindahBarang","supplier","listKategori","nama","getLokasiPindah","getToday","dataLokasiPindah","renderFieldSelect","status","normalize","toUpperCase","options","obj","kode_lokasi","nama_lokasi","data-toggle","disabled","onSend","onClick","aria-hidden","FormTambahBarang","lazy","PindahBarang","kepada","dariIsi","edited","columns","dataField","text","formatter","cell","toLocaleString","csvExport","rowContent","row","rowIndex","data-tip","data-for","deleteIndex","getListPindahBarang","id","effect","getNetto","getBruto","getRp","getPkg","getQty","EditPindahBarang","getUUID","getSumData","dataEditPindahBarang","data","barang1","JSON","parse","localStorage","getItem","simpan","no_barcode","qty","p","k","gross","kadar_modal","ongkos_rp","push","setItem","stringify","Swal","fire","position","icon","showConfirmButton","timer","then","isi","no_pindah","noFaktur","no_bon","lokasi_asal","lokasi_tujuan","Kategori","detail_barang","progressSend","console","log","tableRows","table","forEach","ticket","i","ticketData","footer","reduce","a","b","columTable","AxiosMasterPost","finishSend","removeItem","PrintNota","catch","err","kodeLokasiAsal","kodeLokasiTujuan","showModal","isEdit","style","color","HeaderCard","title","to","ModalMasterData","content","fallback","width","height","count","setEdit","resetField","SubmitPindah","tambahModal","GlobalTabel","keyField","bordered","headerClasses","tabIndex","role","aria-labelledby","data-dismiss","pindahBarang","listEditPindahBarang","username","sumBruto","perhitungan","sumNetto","sumRp","sumPkg","sumQty","ModalGlobal","show","onHide","hideModal","dialogClassName","backdrop","keyboard","Header","closeButton","backgroundColor","Title","Body","modal","deleteLocalStorage","keyRemove","index","func","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","array","splice","deleteIndexUpdatetotalNW","Promise","resolve","reject","module","exports","EmptyTable","src","empty","alt","SearchBar","Search","ExportCSVButton","CSVExport","textEmpty","handleClick","tambahData","expandRow","selectRow","exportCSV","search","searchProps","pagination","paginationFactory","baseProps","striped","noDataIndication","csvProps"],"mappings":"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","file":"static/js/40.8b2a15c9.chunk.js","sourcesContent":["import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport validationPindahBarang from \"../../Validations/validationPindahBarang\";\r\nimport { getListBarang } from \"../../actions/kodeBarangAction\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  suffix: \",-\",\r\n  locale: \"id-ID\",\r\n});\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nclass FormEditTambahBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listBarang: [],\r\n      kodeJenis: \"\",\r\n      kadarCetak: \"\",\r\n      kadarBeli: \"\",\r\n      bruto: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListBarang());\r\n  }\r\n\r\n  handleChange = (input) => (e) => {\r\n    var supp = e.target.value\r\n      ? e.target.value\r\n      : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n      kadarCetak: result_explode[1],\r\n      kadarBeli: result_explode[2],\r\n      kadarJual: result_explode[3],\r\n      namaJenis: result_explode[4],\r\n    });\r\n  };\r\n\r\n  setKadar() {\r\n    this.props.change(\"kadar\", this.state.kadarCetak);\r\n    this.props.change(\"kadarTransaksi\", this.state.kadarBeli);\r\n    this.props.change(\"kadarJual\", this.state.kadarJual);\r\n    this.props.change(\"keterangan\", this.state.namaJenis);\r\n  }\r\n  setNetto() {\r\n    this.props.change(\r\n      \"netto\",\r\n      this.props.netto === \"NaN\" ? 0 : this.props.netto\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 form-group\">\r\n            <label htmlFor=\"\">Kode Barang</label>\r\n            <Field\r\n              name=\"kodeBarang\"\r\n              component=\"select\"\r\n              className=\"form-control\"\r\n              onChange={this.handleChange()}\r\n              onBlur={this.setKadar()}\r\n            >\r\n              <option value=\"DEFAULT|DEFAULT|DEFAULT\" key=\"DEFAULT\">\r\n                SILAHKAN PILIH\r\n              </option>\r\n\r\n              {this.props.KodeBarangList.map((list) => (\r\n                <option\r\n                  value={\r\n                    list.kode_jenis +\r\n                    \"|\" +\r\n                    list.kadar_cetak +\r\n                    \"|\" +\r\n                    list.kadar_beli +\r\n                    \"|\" +\r\n                    list.kadar_jual +\r\n                    \"|\" +\r\n                    list.nama_jenis +\r\n                    \"|\" +\r\n                    list.kode_kategori\r\n                  }\r\n                  key={list.kode_jenis}\r\n                >\r\n                  {list.nama_jenis}\r\n                </option>\r\n              ))}\r\n            </Field>\r\n          </div>\r\n          <div className=\"col-md-4 form-group\">\r\n            <Field\r\n              name=\"keterangan\"\r\n              label=\"Keterangan\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              defaultValue={\"\"}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-5\"></div>\r\n          <div className=\"col-md-2 form-group\">\r\n            <Field\r\n              name=\"kadar\"\r\n              label=\"Kadar (%)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              defaultValue={\"\"}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2 form-group\">\r\n            <Field\r\n              name=\"pkg\"\r\n              label=\"Pkg (Gr)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              onBlur={this.setNetto()}\r\n              defaultValue={\"\"}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2 form-group\">\r\n            <Field\r\n              name=\"bruto\"\r\n              label=\"Bruto (Gr)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              onBlur={this.setNetto()}\r\n              value={this.state.bruto}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2 form-group\">\r\n            <Field\r\n              name=\"kadarTransaksi\"\r\n              label=\"Harga (Gr)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              defaultValue={\"\"}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2 form-group\">\r\n            <Field\r\n              name=\"kadarJual\"\r\n              label=\"Harga (Gr)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              readOnly={true}\r\n              defaultValue={\"\"}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2 form-group\">\r\n            <Field\r\n              name=\"netto\"\r\n              label=\"Netto (Gr)\"\r\n              component={renderField}\r\n              type=\"text\"\r\n              defaultValue={\"\"}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 form-group\">\r\n            <label htmlFor=\"\">Ongkos (Rp)</label>\r\n            <Field\r\n              name=\"ongkos\"\r\n              label=\"Ongkos (Rp)\"\r\n              component=\"input\"\r\n              type=\"telp\"\r\n              className=\"form-control\"\r\n              defaultValue={0}\r\n              {...currencyMask}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 form-group\">\r\n            <div className=\"text-right\">\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Simpan\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormEditTambahBarang = reduxForm({\r\n  form: \"FormEditTambahBarang\",\r\n  enableReinitialize: true,\r\n  validate: validationPindahBarang,\r\n})(FormEditTambahBarang);\r\nconst selector = formValueSelector(\"FormEditTambahBarang\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi } = selector(state, \"bruto\", \"kadarTransaksi\");\r\n  return {\r\n    initialValues: {\r\n      kodeBarang: state.provinsi.editPindahBarang.kodeJenis,\r\n      pkg: state.provinsi.editPindahBarang.pkg,\r\n      kadarTransaksi: state.provinsi.editPindahBarang.kadarTransaksi,\r\n      kadar: state.provinsi.editPindahBarang.kadar,\r\n      netto: state.provinsi.editPindahBarang.netto,\r\n      bruto: state.provinsi.editPindahBarang.bruto,\r\n      ongkos: state.provinsi.editPindahBarang.rp,\r\n      keterangan: state.provinsi.editPindahBarang.keterangan,\r\n    },\r\n    KodeBarangList: state.provinsi.kodeBarang,\r\n    netto: (parseFloat(bruto) * (parseFloat(kadarTransaksi) / 100)).toFixed(3),\r\n  };\r\n})(FormEditTambahBarang);\r\n","const validasiHeadPindahBarang = (value) => {\r\n  const errors = {};\r\n  if (!value.tanggal) {\r\n    errors.tanggal = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.dari) {\r\n    errors.dari = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.ke) {\r\n    errors.ke = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.kategori) {\r\n    errors.kategori = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.noBon) {\r\n    errors.noBon = \"Tidak Boleh kosong\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default validasiHeadPindahBarang;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { getLokasiPindah } from \"../../actions/supplierAction\";\r\nimport { getToday, SkeletonLoading } from \"../../getDate\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport validasiHeadPindahBarang from \"../../Validations/validasiHeadPindahBarang\";\r\n\r\nclass HeadPindahBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      supplier: false,\r\n      listKategori: [\r\n        {\r\n          nama: \"AMBIL BARANG\",\r\n        },\r\n        {\r\n          nama: \"KEMBALI STOK\",\r\n        },\r\n        {\r\n          nama: \"KOREKSI STOK\",\r\n        },\r\n        {\r\n          nama: \"MUTASI BAHAN\",\r\n        },\r\n        {\r\n          nama: \"PENGAMBILAN SALES\",\r\n        },\r\n        {\r\n          nama: \"PINDAH\",\r\n        },\r\n        {\r\n          nama: \"PINDAH GUDANG REPARASI\",\r\n        },\r\n        {\r\n          nama: \"RETURN SALES\",\r\n        },\r\n        {\r\n          nama: \"SALAH INPUT\",\r\n        },\r\n        {\r\n          nama: \"SALAH PINDAH\",\r\n        },\r\n        {\r\n          nama: \"STOK AWAL\",\r\n        },\r\n        {\r\n          nama: \"TAMBAH BARANG\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getLokasiPindah());\r\n    this.props.change(\"tanggal\", getToday);\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              component={renderField}\r\n              type=\"date\"\r\n              name=\"tanggal\"\r\n              label=\"Tanggal\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 form-group\">\r\n            {this.props.dataLokasiPindah ? (\r\n              <Field\r\n                component={renderFieldSelect}\r\n                label=\"Dari\"\r\n                name=\"dari\"\r\n                value={this.props.status}\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                options={this.props.dataLokasiPindah.map((obj) => {\r\n                  var payload = {\r\n                    value: obj.kode_lokasi,\r\n                    name: obj.nama_lokasi,\r\n                  };\r\n                  return payload;\r\n                })}\r\n              ></Field>\r\n            ) : (\r\n              <SkeletonLoading label=\"Dari\" />\r\n            )}\r\n          </div>\r\n          <div className=\"col-md-1 text-center\">\r\n            <label htmlFor=\"\" className=\"text-white\">\r\n              .\r\n            </label>\r\n            <h3>\r\n              <i className=\"fa fa-exchange-alt\"></i>\r\n            </h3>\r\n          </div>\r\n          <div className=\"col-md-4 form-group\">\r\n            {this.props.dataLokasiPindah ? (\r\n              <Field\r\n                component={renderFieldSelect}\r\n                label=\"Ke\"\r\n                name=\"ke\"\r\n                value={this.props.status}\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                options={this.props.dataLokasiPindah.map((obj) => {\r\n                  var payload = {\r\n                    value: obj.kode_lokasi,\r\n                    name: obj.nama_lokasi,\r\n                  };\r\n                  return payload;\r\n                })}\r\n              ></Field>\r\n            ) : (\r\n              <SkeletonLoading label=\"Ke\" />\r\n            )}\r\n          </div>\r\n          <div className=\"col-md-4 form-group\">\r\n            {this.props.dataLokasiPindah ? (\r\n              <Field\r\n                component={renderFieldSelect}\r\n                label=\"Kategori\"\r\n                name=\"Kategori\"\r\n                value={this.props.status}\r\n                normalize={(value) => value && value.toUpperCase()}\r\n                options={this.state.listKategori.map((obj) => {\r\n                  var payload = {\r\n                    value: obj.nama,\r\n                    name: obj.nama,\r\n                  };\r\n                  return payload;\r\n                })}\r\n              ></Field>\r\n            ) : (\r\n              <SkeletonLoading label=\"Kategori\" />\r\n            )}\r\n          </div>\r\n          <div className=\"col-md-4 form-group\">\r\n            <Field\r\n              component={renderField}\r\n              type=\"text\"\r\n              name=\"noBon\"\r\n              label=\"Bon Pindah\"\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4\"></div>\r\n        </div>\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          data-toggle=\"modal\"\r\n          disabled={this.props.onSend}\r\n          onClick={this.props.handleSubmit}\r\n        >\r\n          {this.props.onSend ? (\r\n            <span\r\n              className=\"spinner-border spinner-border-sm mr-3\"\r\n              aria-hidden=\"true\"\r\n            ></span>\r\n          ) : null}\r\n          SIMPAN\r\n          <i className=\"fa fa-paper-plane ml-3\"></i>\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nHeadPindahBarang = reduxForm({\r\n  form: \"headPindahBarang\",\r\n  enableReinitialize: true,\r\n  validate: validasiHeadPindahBarang,\r\n})(HeadPindahBarang);\r\nexport default connect((state) => {\r\n  return {\r\n    dataLokasiPindah: state.provinsi.dataLokasiPindah,\r\n  };\r\n})(HeadPindahBarang);\r\n","import React, { Component, lazy, Suspense } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { reset } from \"redux-form\";\r\nimport {\r\n  EditPindahBarang,\r\n  getListPindahBarang,\r\n} from \"../actions/pindahBarangAction\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport {\r\n  finishSend,\r\n  getBruto,\r\n  getNetto,\r\n  getPkg,\r\n  getQty,\r\n  getRp,\r\n  progressSend,\r\n} from \"../actions/LogicAction\";\r\nimport PrintNota from \"./Component/PrintNota\";\r\nimport { warning } from \"../Alert\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteIndex } from \"../deleteLocalStorage\";\r\nimport FormEditTambahBarang from \"./Component/FormEditTambahBarang\";\r\nimport HeadPindahBarang from \"./Component/HeadPindahBarang\";\r\nimport ModalMasterData from \"../DataMaster/Component/ModalMasterData\";\r\nimport { showModal } from \"../actions/ModalAction\";\r\nimport { AxiosMasterPost } from \"../Axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport GlobalTabel from \"../GlobalComponent/GlobalTabel\";\r\n\r\nconst FormTambahBarang = lazy(() => import(\"./Component/FormTambahBarang\"));\r\nconst maptoState = (state) => {\r\n  return {\r\n    listBarang: state.provinsi.pindahBarang,\r\n    listEditPindahBarang: state.provinsi.listEditPindahBarang,\r\n    noFaktur: state.provinsi.noFaktur,\r\n    username: state.provinsi.username,\r\n    sumBruto: state.perhitungan.sumBruto,\r\n    sumNetto: state.perhitungan.sumNetto,\r\n    sumRp: state.perhitungan.sumRp,\r\n    sumPkg: state.perhitungan.sumPkg,\r\n    sumQty: state.perhitungan.sumQty,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\n\r\nclass PindahBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dari: [],\r\n      kepada: [],\r\n      tanggal: \"\",\r\n      dariIsi: \"\",\r\n      ke: \"\",\r\n      noBon: \"\",\r\n      kategori: \"\",\r\n      kodeJenis: \"\",\r\n      keterangan: \"\",\r\n      edited: false,\r\n      columns: [\r\n        {\r\n          dataField: \"kode_jenis\",\r\n          text: \"Kode Barang\",\r\n        },\r\n        {\r\n          dataField: \"kadar_modal\",\r\n          text: \"Kat Harga\",\r\n        },\r\n        {\r\n          dataField: \"kadar_cetak\",\r\n          text: \"Kadar\",\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Pkg (Gr)\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Bruto (Gr)\",\r\n        },\r\n        {\r\n          dataField: \"kadar_jual\",\r\n          text: \"Harga\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Netto (Gr)\",\r\n        },\r\n        {\r\n          dataField: \"ongkos_rp\",\r\n          text: \"Ongkos (Rp)\",\r\n          formatter: (cell) => {\r\n            return <span>Rp. {parseFloat(cell).toLocaleString(\"ID-id\")}</span>;\r\n          },\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row, rowIndex) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  data-tip\r\n                  data-for=\"hapus\"\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() =>\r\n                    deleteIndex(\r\n                      \"pindahBarang\",\r\n                      rowIndex,\r\n                      this.props.dispatch,\r\n                      getListPindahBarang()\r\n                    )\r\n                  }\r\n                >\r\n                  <ReactTooltip id=\"hapus\" type=\"dark\" effect=\"solid\">\r\n                    <span>Hapus</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-trash\"></i>\r\n                </button>\r\n                <br />\r\n                {/* <button\r\n                  data-tip\r\n                  data-for=\"edit\"\r\n                  className=\"btn btn-warning mr-2\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#editModal\"\r\n                  onClick={() => this.setEdit(row)}\r\n                >\r\n                  <ReactTooltip id=\"edit\" type=\"dark\" effect=\"solid\">\r\n                    <span>Edit</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-edit mr-1\"></i>\r\n                </button> */}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  getSumData() {\r\n    this.props.dispatch(getNetto(\"pindahBarang\"));\r\n    this.props.dispatch(getBruto(\"pindahBarang\"));\r\n    this.props.dispatch(getRp(\"pindahBarang\"));\r\n    this.props.dispatch(getPkg(\"pindahBarang\"));\r\n    this.props.dispatch(getQty(\"pindahBarang\"));\r\n  }\r\n  setEdit(row) {\r\n    this.props.dispatch(EditPindahBarang(row));\r\n    this.setState({\r\n      edited: true,\r\n    });\r\n  }\r\n  getTabelData() {\r\n    this.props.dispatch(getListPindahBarang());\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getListPindahBarang());\r\n    this.props.dispatch(getUUID());\r\n    this.getSumData();\r\n    this.dataEditPindahBarang();\r\n  }\r\n  handleSubmit(data) {\r\n    var supp = data.kodeBarang\r\n      ? data.kodeBarang\r\n      : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT |DEFAULT |DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n    });\r\n    var barang1 = JSON.parse(localStorage.getItem(\"pindahBarang\")) || [];\r\n    var simpan = {\r\n      kode_kategori: result_explode[5],\r\n      kode_jenis: result_explode[0],\r\n      nama_jenis: result_explode[4],\r\n      no_barcode: \"-\",\r\n      qty: 1,\r\n      p: 0,\r\n      k: 0,\r\n      gross: parseFloat(data.bruto) + parseFloat(data.pkg),\r\n      pkg: parseFloat(data.pkg),\r\n      bruto: parseFloat(data.bruto),\r\n      kadar_cetak: parseFloat(data.kadar),\r\n      kadar_modal: parseFloat(data.kadarTransaksi),\r\n      kadar_jual: parseFloat(data.kadarJual),\r\n      netto: parseFloat(data.netto),\r\n      ongkos_rp: parseFloat(data.ongkos) || 0,\r\n      //\r\n      // p: 0,\r\n      // discGlobalPr: 0,\r\n      // discGlobalGr: 0,\r\n      // qty: 1,\r\n      // pkg: parseFloat(data.pkg),\r\n      // noBarcode: \"-\",\r\n      // kadarTransaksi: parseFloat(data.kadarTransaksi),\r\n      // gross: 0,\r\n      // k: 0,\r\n      // nettoDiscGlobal: 0,\r\n      // kadarCetak: parseFloat(data.kadar),\r\n      // nettoDiscGlobalExt: 0,\r\n      // noFaktur: this.props.noFaktur.toUpperCase(),\r\n      // netto: parseFloat(data.netto),\r\n      // bruto: parseFloat(data.bruto),\r\n      // kodeJenis: result_explode[0].toUpperCase(),\r\n      // rp: parseFloat(data.ongkos ? data.ongkos : 0),\r\n      // kodeKategori: \"-\",\r\n      // keterangan: data.keterangan.toUpperCase(),\r\n    };\r\n    barang1.push(simpan);\r\n    localStorage.setItem(\"pindahBarang\", JSON.stringify(barang1));\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      text: \"Transaksi Berhasil\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    })\r\n      .then(() => this.props.dispatch(reset(\"FormTambahBarang\")))\r\n      .then(() => this.props.dispatch(getListPindahBarang()))\r\n      .then(() => this.getSumData());\r\n  }\r\n\r\n  SubmitPindah(data) {\r\n    if (localStorage.getItem(\"pindahBarang\") === null) {\r\n      warning(\"Mohon Tambahkan Barang Yang akan dipindahkan\");\r\n      return false;\r\n    }\r\n    var isi = {\r\n      no_pindah: this.props.noFaktur,\r\n      no_bon: data.noBon,\r\n      tanggal: data.tanggal,\r\n      lokasi_asal: data.dari,\r\n      lokasi_tujuan: data.ke,\r\n      keterangan: data.Kategori,\r\n      detail_barang: JSON.parse(localStorage.getItem(\"pindahBarang\")),\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    console.log(JSON.stringify(isi));\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    var table = JSON.parse(localStorage.getItem(\"pindahBarang\"));\r\n    // for each ticket pass all its data into an array\r\n    table.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        i++,\r\n        ticket.kode_jenis,\r\n        ticket.bruto,\r\n        ticket.kadar_modal,\r\n        ticket.netto,\r\n        ticket.pkg,\r\n        ticket.gross,\r\n        parseFloat(ticket.ongkos_rp).toLocaleString(\"id-ID\"),\r\n        ticket.qty,\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    const footer = [\r\n      \"\",\r\n      \"Grand Total\",\r\n      table.map((list) => list.bruto).reduce((a, b) => a + b, 0),\r\n      \"\",\r\n      table.map((list) => list.netto).reduce((a, b) => a + b, 0),\r\n      table.map((list) => list.pkg).reduce((a, b) => a + b, 0),\r\n      table.map((list) => list.gross).reduce((a, b) => a + b, 0),\r\n      table.map((list) => list.ongkos_rp).reduce((a, b) => a + b, 0),\r\n      table.map((list) => list.qty).reduce((a, b) => a + b, 0),\r\n    ];\r\n    tableRows.push(footer);\r\n    var columTable = [\r\n      \"No\",\r\n      \"Kode Jenis\",\r\n      \"Bruto (Gr)\",\r\n      \"Harga (%)\",\r\n      \"Netto (Gr)\",\r\n      \"Pkg (Gr)\",\r\n      \"Gross (Gr)\",\r\n      \"Ongkos (Rp)\",\r\n      \"Qty\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    AxiosMasterPost(\"pindah-barang/simpan\", isi)\r\n      .then(() =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Transaksi Berhasil\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => localStorage.removeItem(\"noFaktur\"))\r\n          .then(() =>\r\n            PrintNota(\r\n              \"Tanggal\",\r\n              data.tanggal,\r\n              \"Lokasi\",\r\n              data.dari + \" - \" + data.ke,\r\n              \"Nomor Bon\",\r\n              data.noBon,\r\n              \"\",\r\n              \"\",\r\n              \"ADMIN\",\r\n              data.tanggal,\r\n              \"\",\r\n              columTable,\r\n              \"RETURN ADMIN\",\r\n              tableRows\r\n            )\r\n          )\r\n          .then(() => localStorage.removeItem(\"pindahBarang\"))\r\n          .then(() => this.props.dispatch(reset(\"headPindahBarang\")))\r\n      )\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => localStorage.removeItem(\"noFaktur\"))\r\n      .then(() => this.props.dispatch(getUUID()))\r\n      .then(() => this.props.dispatch(getListPindahBarang()))\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text: err,\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() => console.log(err))\r\n          .then(() => this.props.dispatch(finishSend()))\r\n      );\r\n    this.props.dispatch(getListPindahBarang());\r\n  }\r\n  onChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n  resetField() {\r\n    localStorage.removeItem(\"editPindahBarang\");\r\n    localStorage.removeItem(\"pindahBarang\");\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getListPindahBarang());\r\n    this.setState({\r\n      tanggal: \"\",\r\n      dariIsi: \"\",\r\n      ke: \"\",\r\n      noBon: \"\",\r\n      kategori: \"\",\r\n      kodeJenis: \"\",\r\n      keterangan: \"\",\r\n    });\r\n  }\r\n  dataEditPindahBarang() {\r\n    var data = JSON.parse(localStorage.getItem(\"editPindahBarang\")) || [];\r\n    this.setState({\r\n      dariIsi: data.kodeLokasiAsal,\r\n      ke: data.kodeLokasiTujuan,\r\n      tanggal: data.tanggal,\r\n      keterangan: data.keterangan,\r\n      noBon: data.noBon,\r\n    });\r\n    this.props.dispatch(getListPindahBarang());\r\n  }\r\n\r\n  tambahModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({ isEdit: false });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Pindah Barang\" />\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-8\"></div>\r\n                  <div className=\"col-lg-3\">\r\n                    <div className=\"text-right\">\r\n                      <Link to=\"/EditForm/pindahBarang\">\r\n                        <button\r\n                          className=\"btn btn-warning\"\r\n                          // data-toggle=\"modal\"\r\n                          // data-target=\"#editPindahBarangModal\"\r\n                          // data-backdrop=\"static\"\r\n                          // data-keyboard=\"false\"\r\n                        >\r\n                          Edit Pindah Barang\r\n                        </button>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <ModalMasterData\r\n                    content={\r\n                      <Suspense\r\n                        fallback={\r\n                          <Skeleton width={\"100%\"} height={50} count={3} />\r\n                        }\r\n                      >\r\n                        <FormTambahBarang\r\n                          onSubmit={(data) => this.handleSubmit(data)}\r\n                          listBarang={this.props.listBarang}\r\n                          setEdit={this.state.setEdit}\r\n                        />\r\n                      </Suspense>\r\n                    }\r\n                    title=\"Tambah Data Pindah Barang\"\r\n                  />\r\n                  <div className=\"col-lg-1\">\r\n                    <div className=\"text-right\">\r\n                      <button\r\n                        className=\"btn btn-warning\"\r\n                        onClick={() => this.resetField()}\r\n                      >\r\n                        Reset\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-12\">\r\n                    <HeadPindahBarang\r\n                      onSubmit={(data) => this.SubmitPindah(data)}\r\n                      onSend={this.props.onSend}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-lg-4 col-md-4 mb-3\">\r\n                    <div className=\"text-left\"></div>\r\n                  </div>\r\n                  <div className=\"col-lg-4 col-md-4 mb-3\">\r\n                    <div className=\"text-center\">\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        disabled\r\n                      >\r\n                        BARCODE (+)\r\n                      </button>\r\n                      <button\r\n                        className=\"btn btn-primary ml-2\"\r\n                        data-toggle=\"modal\"\r\n                        disabled\r\n                      >\r\n                        BARCODE (-)\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-4 col-md-4 mb-3\">\r\n                    <div className=\"text-right\">\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        onClick={() => this.tambahModal()}\r\n                      >\r\n                        TAMBAH BARANG\r\n                        <i className=\"fa fa-plus ml-3\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-12 col-lg-12\">\r\n                    <GlobalTabel\r\n                      keyField=\"KodeBarang\"\r\n                      data={this.props.listBarang || []}\r\n                      columns={this.state.columns}\r\n                      bordered={true}\r\n                      headerClasses=\"header-table\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          id=\"editModal\"\r\n          className=\"modal fade\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"primary-header-modalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header modal-colored-header bg-primary\">\r\n                <h4 className=\"modal-title\" id=\"primary-header-modalLabel\">\r\n                  Tambah Data Pindah Barang\r\n                </h4>\r\n                <button\r\n                  type=\"button\"\r\n                  id=\"dismissModal\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <FormEditTambahBarang\r\n                  onSubmit={(data) => this.handleSubmit(data)}\r\n                  listBarang={this.props.listBarang}\r\n                />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-light\"\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoState, null)(PindahBarang);\r\n","import { Modal } from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { hideModal } from \"../../actions/ModalAction\";\r\n\r\nconst maptoState = (state) => {\r\n  return {\r\n    show: state.modal.show,\r\n  };\r\n};\r\nclass ModalGlobal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <Modal\r\n        show={this.props.show}\r\n        onHide={() => this.props.dispatch(hideModal())}\r\n        dialogClassName=\"modal-xl\"\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header\r\n          closeButton\r\n          style={{ backgroundColor: \"#5F76E8\", color: \"#ffffff\" }}\r\n        >\r\n          <Modal.Title>{this.props.title || \"\"}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{this.props.content || \"\"}</Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoState, null)(ModalGlobal);\r\n","import Swal from \"sweetalert2\";\r\n\r\nexport const deleteLocalStorage = (keyRemove) => {\r\n  keyRemove.forEach((e) => {\r\n    localStorage.removeItem(e);\r\n  });\r\n};\r\n\r\nexport const deleteIndex = (nama, index, dispatch, func) => {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      const array = JSON.parse(localStorage.getItem(nama)) || [];\r\n      array.splice(index, 1);\r\n      localStorage.setItem(nama, JSON.stringify(array));\r\n      Swal.fire({\r\n        text: \"Berhasil\",\r\n        timer: 2000,\r\n        showConfirmButton: false,\r\n        position: \"top-right\",\r\n        icon: \"success\",\r\n      }).then(() => dispatch(func));\r\n    }\r\n  });\r\n};\r\nexport const deleteIndexUpdatetotalNW = (nama, index, dispatch, func) => {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      title: \"Anda Yakin ?\",\r\n      text: \"Anda Akan Menghapus Data Ini ?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        const array = JSON.parse(localStorage.getItem(nama)) || [];\r\n        array.splice(index, 1);\r\n        localStorage.setItem(nama, JSON.stringify(array));\r\n        Swal.fire({\r\n          text: \"Berhasil\",\r\n          timer: 2000,\r\n          showConfirmButton: false,\r\n          position: \"top-right\",\r\n          icon: \"success\",\r\n        })\r\n          .then(() => dispatch(func))\r\n          .then(resolve(\"Berhasil\"))\r\n          .catch(\"Gagal\");\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexport const deleteIndexUpdateNettoNW = (\r\n  nama,\r\n  index,\r\n  dispatch,\r\n  func,\r\n  nilai,\r\n  func2,\r\n  state\r\n) => {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      const array = JSON.parse(localStorage.getItem(nama)) || [];\r\n      array.splice(index, 1);\r\n      localStorage.setItem(nama, JSON.stringify(array));\r\n      var awal = localStorage.getItem(\"GrandTotalNetto\");\r\n      var hasil = parseFloat(awal) - parseFloat(nilai);\r\n      localStorage.setItem(\"GrandTotalNetto\", parseFloat(hasil).toFixed(3));\r\n      Swal.fire({\r\n        text: \"Berhasil\",\r\n        timer: 2000,\r\n        showConfirmButton: false,\r\n        position: \"top-right\",\r\n        icon: \"success\",\r\n      })\r\n        .then(() => dispatch(func))\r\n        .then(() => dispatch(func2));\r\n    }\r\n  });\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/emptyTable.ffc2d7dc.svg\";","import React from \"react\";\r\nimport empty from \"../Images/emptyTable.svg\";\r\n\r\nfunction EmptyTable(props) {\r\n  return (\r\n    <div className=\"col-lg-12\">\r\n      <div className=\"text-center\">\r\n        <img src={empty} width=\"250\" height=\"250\" alt=\"Empty\"></img>\r\n        <h5>{props.text}</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmptyTable;\r\n","import React from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport,\r\n} from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport EmptyTable from \"./EmptyTable\";\r\n\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\nfunction GlobalTabel(props) {\r\n  let text = props.textEmpty;\r\n  let handleClick = props.handleClick;\r\n  let tambahData = props.tambahData;\r\n  let expandRow = props.expandRow;\r\n  let selectRow = props.selectRow;\r\n  let exportCSV = props.exportCSV;\r\n  return (\r\n    <ToolkitProvider\r\n      keyField={props.keyField}\r\n      data={props.data || []}\r\n      columns={props.columns}\r\n      search\r\n    >\r\n      {(props) => (\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <div className=\"text-left\">\r\n              <SearchBar {...props.searchProps} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <div className=\"text-right\">\r\n              {tambahData && (\r\n                <button\r\n                  onClick={handleClick}\r\n                  className=\"btn btn-primary\"\r\n                  type=\"button\"\r\n                >\r\n                  Tambah Data\r\n                  <i className=\"fa fa-plus ml-3\"></i>\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"col-12\">\r\n            <BootstrapTable\r\n              pagination={paginationFactory()}\r\n              selectRow={selectRow}\r\n              expandRow={expandRow}\r\n              {...props.baseProps}\r\n              striped\r\n              noDataIndication={<EmptyTable text={text || \"Tidak Ada Data\"} />}\r\n            />\r\n            <br />\r\n            {exportCSV && (\r\n              <ExportCSVButton {...props.csvProps}>\r\n                Export CSV!!\r\n              </ExportCSVButton>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </ToolkitProvider>\r\n  );\r\n}\r\n\r\nexport default GlobalTabel;\r\n","const validationPindahBarang = (value) => {\r\n    const errors = {}\r\n    if (!value.kodeBarang) {\r\n        errors.kodeBarang = \"Tidak Boleh kosong\"\r\n    }\r\n    if (!value.keterangan) {\r\n        errors.keterangan = \"Tidak Boleh kosong\"\r\n    }\r\n    if (!value.kadar) {\r\n        errors.kadar = \"Tidak Boleh kosong\"\r\n    }\r\n    if (!value.pkg) {\r\n        errors.pkg = \"Tidak Boleh kosong\"\r\n    }\r\n    if (!value.bruto) {\r\n        errors.bruto = \"Tidak Boleh kosong\"\r\n    }\r\n    if (!value.netto) {\r\n        errors.netto = \"Tidak Boleh kosong\"\r\n    }\r\n    return errors\r\n}\r\n\r\nexport default validationPindahBarang;"],"sourceRoot":""}