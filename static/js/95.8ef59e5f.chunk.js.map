{"version":3,"sources":["../node_modules/redux-form/es/index.js","Validations/validationTimbangBarang.js","Transaksi/Component/FormTranskaksiTimbangBarang.jsx","Transaksi/TransaksiTimbangBarang.jsx","Validations/validationTerimaSupplier.js"],"names":["reset","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","change","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors","validaitonTimbangBarang","value","errors","kodeBarang","renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","min","step","maxLength","FormTransaksiTimbangbarang","props","pilihBarang","e","result_explode","target","split","setState","kodeJenis","namaJenis","kadarCetak","kadarJual","onclick1","bind","state","DataSupplier","status","axios","get","server","then","res","data","catch","err","console","log","this","murni","revaluasi","onSubmit","handleSubmit","Field","name","component","onChange","onBlur","setKadar","key","map","kode","normalize","toUpperCase","disabled","submitting","Component","reduxForm","form","validate","validationTerimaSupplier","enableReinitialize","selector","formValueSelector","connect","bruto","parseFloat","toFixed","TransaksiTimbangBarang","inputChange","columns","dataField","text","footerClasses","dispatch","getListTimbangBarang","simpan","kadar","keterangan","pkg","array","JSON","parse","localStorage","getItem","push","setItem","stringify","Swal","fire","position","icon","showConfirmButton","timer","document","getElementById","click","tanggal","namaToko","detail","barang","id","options","items","search","placeholder","onClick","timbangBarangSubmit","class","aria-hidden","data-target","data-toggle","timbangBarang","keyField","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","width","height","tabIndex","role","aria-labelledby","data-dismiss","FormTranskaksiTimbangBarang","provinsi","p","k"],"mappings":"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","file":"static/js/95.8ef59e5f.chunk.js","sourcesContent":["import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;","const validaitonTimbangBarang = (value) => {\r\n    const errors = {}\r\n    if (!value.kodeBarang) {\r\n        errors.kodeBarang = \"Tidak Boleh kosong\"\r\n    }\r\n    return errors\r\n}\r\n\r\nexport default validaitonTimbangBarang;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport validationTerimaSupplier from \"../../Validations/validationTerimaSupplier\";\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\n\r\nclass FormTransaksiTimbangbarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onclick1 = this.onclick1.bind(this);\r\n    this.state = {\r\n      kodeBarang: [],\r\n      DataSupplier: [],\r\n      status: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(server + \"subcategorys\")\r\n      .then((res) =>\r\n        this.setState({\r\n          kodeBarang: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  onclick1() {\r\n    this.props.change(\"murni\", this.props.murni);\r\n  }\r\n  pilihBarang = (input) => (e) => {\r\n    var supp = e.target.value\r\n      ? e.target.value\r\n      : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n      namaJenis: result_explode[1],\r\n      kadarCetak: result_explode[2],\r\n      kadarJual: result_explode[3],\r\n    });\r\n  };\r\n\r\n  setKadar() {\r\n    this.props.change(\"keterangan\", this.state.namaJenis);\r\n    this.props.change(\"kadar\", this.state.kadarCetak);\r\n    this.props.change(\"kadarJual\", this.state.kadarJual);\r\n    this.props.change(\"revaluasi\", this.props.revaluasi);\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <label htmlFor=\"\">Kode Barang</label>\r\n            <Field\r\n              name=\"kodeBarang\"\r\n              component=\"select\"\r\n              className=\"form-control\"\r\n              onChange={this.pilihBarang()}\r\n              onBlur={this.setKadar()}\r\n            >\r\n              <option value=\"DEFAULT\" key=\"DEFAULT\">\r\n                SILAHKAN PILIH\r\n              </option>\r\n              {this.state.kodeBarang === [] ? (\r\n                <option>TIDAK ADA DATA</option>\r\n              ) : (\r\n                this.state.kodeBarang.map((kode) => (\r\n                  <option\r\n                    value={\r\n                      kode.kodeJenis +\r\n                      \"|\" +\r\n                      kode.namaJenis +\r\n                      \"|\" +\r\n                      kode.kadarCetak +\r\n                      \"|\" +\r\n                      kode.kadarJual\r\n                    }\r\n                    key={kode.kodeJenis}\r\n                  >\r\n                    {kode.namaJenis}\r\n                  </option>\r\n                ))\r\n              )}\r\n            </Field>\r\n          </div>\r\n          <div className=\"col-md-8\">\r\n            <Field\r\n              name=\"keterangan\"\r\n              label=\"Keterangan\"\r\n              type=\"text\"\r\n              component={renderField}\r\n              normalize={(value) => value && value.toUpperCase()}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <Field\r\n              name=\"kadar\"\r\n              label=\"Kadar (%)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <Field\r\n              name=\"pkg\"\r\n              label=\"Bungkus (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <Field\r\n              name=\"bruto\"\r\n              label=\"Berat (Gr)\"\r\n              type=\"number\"\r\n              component={renderField}\r\n              onBlur={() => this.props.change(\"murni\", this.props.murni)}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"kadarJual\"\r\n              label=\"Harga Jual\"\r\n              type=\"number\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 form-group\">\r\n            <Field\r\n              name=\"revaluasi\"\r\n              label=\"Revaluasi\"\r\n              type=\"number\"\r\n              component={renderField}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 form-group mt-3\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                type=\"submit\"\r\n                disabled={this.props.submitting}\r\n              >\r\n                Simpan\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormTransaksiTimbangbarang = reduxForm({\r\n  form: \"FormTransaksiTimbangbarang\",\r\n  validate: validationTerimaSupplier,\r\n  enableReinitialize: true,\r\n})(FormTransaksiTimbangbarang);\r\nconst selector = formValueSelector(\"FormTransaksiTimbangbarang\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { bruto, kadarJual } = selector(state, \"bruto\", \"kadarJual\");\r\n  return {\r\n    revaluasi: (parseFloat(bruto) * (parseFloat(kadarJual) / 100)).toFixed(3),\r\n  };\r\n})(FormTransaksiTimbangbarang);\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { connect } from \"react-redux\";\r\nimport SelectSearch from \"react-select-search\";\r\nimport { reduxForm, reset } from \"redux-form\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getListTimbangBarang } from \"../actions/timbangBarangAction\";\r\nimport validaitonTimbangBarang from \"../Validations/validationTimbangBarang\";\r\nimport FormTranskaksiTimbangBarang from \"./Component/FormTranskaksiTimbangBarang\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    timbangBarang: state.provinsi.timbangBarang,\r\n  };\r\n};\r\nclass TransaksiTimbangBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [\r\n        {\r\n          dataField: \"kodeBarang\",\r\n          text: \"Kode Barang\",\r\n        },\r\n        {\r\n          dataField: \"keterangan\",\r\n          text: \"Keterangan\",\r\n        },\r\n        {\r\n          dataField: \"kadar\",\r\n          text: \"Kadar(%)\",\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Bungkus(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Bruto(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"kadarJual\",\r\n          text: \"Harga(%)\",\r\n        },\r\n        {\r\n          dataField: \"revaluasi\",\r\n          text: \"Netto(Gr)\",\r\n\r\n          footerClasses: \"sum-netto-terima-supplier\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListTimbangBarang());\r\n  }\r\n\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit(data) {\r\n    var supp = data.kodeBarang\r\n      ? data.kodeBarang\r\n      : \"DEFUALT|DEFAULT|DEFAULT|DEFAULT\";\r\n    var split = supp.split(\"|\");\r\n    var simpan = {\r\n      bruto: data.bruto,\r\n      kadar: data.kadar,\r\n      kadarJual: data.kadarJual,\r\n      keterangan: split[1],\r\n      kodeBarang: split[0],\r\n      pkg: data.pkg,\r\n      revaluasi: data.revaluasi,\r\n    };\r\n    var array = JSON.parse(localStorage.getItem(\"timbangBarang\")) || [];\r\n    array.push(simpan);\r\n    localStorage.setItem(\"timbangBarang\", JSON.stringify(array));\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      text: \"Data Berhasil Ditambahkan!\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n    this.props.dispatch(getListTimbangBarang());\r\n    document.getElementById(\"dismissModal\").click();\r\n    this.props.dispatch(reset(\"FormTransaksiTimbangbarang\"));\r\n  }\r\n  timbangBarangSubmit() {\r\n    var simpan = {\r\n      tanggal: this.state.tanggal,\r\n      namaToko: this.state.namaToko,\r\n      detail: this.state.detail,\r\n      barang: JSON.parse(localStorage.getItem(\"timbangBarang\")),\r\n    };\r\n    console.log(simpan);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"card\">\r\n          <div className=\"col-lg-12 col-md-12\">\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-4 col-md-4\">\r\n                  <label htmlFor=\"\">Tanggal</label>\r\n                  <input\r\n                    name=\"tanggal\"\r\n                    id=\"tanggal\"\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    onChange={this.inputChange(\"tanggal\")}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"col-lg-4 col-md-4\">\r\n                  <label htmlFor=\"\">Nama Toko</label>\r\n                  <SelectSearch\r\n                    options={this.state.items}\r\n                    search\r\n                    placeholder=\"Silahkan Pilih\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4 col-md-4\">\r\n                  <label htmlFor=\"\">Detail</label>\r\n                  <input\r\n                    name=\"detail\"\r\n                    id=\"detail\"\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={this.inputChange(\"detail\")}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"col-lg-12 col-md-12 mt-3\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"text-left\">\r\n                        <button\r\n                          className=\"btn btn-primary mr-3\"\r\n                          onClick={() => this.timbangBarangSubmit()}\r\n                        >\r\n                          Simpan\r\n                          <i class=\"fa fa-paper-plane ml-2\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          data-target=\"#primary-header-modal\"\r\n                          data-toggle=\"modal\"\r\n                        >\r\n                          Tambah Data\r\n                          <i class=\"fa fa-plus ml-2\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-12 mt-5\">\r\n                  {this.props.timbangBarang ? (\r\n                    <ToolkitProvider\r\n                      keyField=\"id\"\r\n                      data={this.props.timbangBarang}\r\n                      columns={this.state.columns}\r\n                      search\r\n                    >\r\n                      {(props) => (\r\n                        <div className=\"form-group\">\r\n                          <BootstrapTable\r\n                            {...props.baseProps}\r\n                            striped\r\n                            hover\r\n                            condensed\r\n                            bordered={true}\r\n                            headerClasses=\"header-table\"\r\n                            pagination={paginationFactory()}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </ToolkitProvider>\r\n                  ) : (\r\n                    <Skeleton width={\"100%\"} height={100} />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          id=\"primary-header-modal\"\r\n          className=\"modal fade\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"primary-header-modalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header modal-colored-header bg-primary\">\r\n                <h4 className=\"modal-title\" id=\"primary-header-modalLabel\">\r\n                  Tambah Data Transaksi Timbang Barang\r\n                </h4>\r\n                <button\r\n                  type=\"button\"\r\n                  id=\"dismissModal\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-hidden=\"true\"\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <FormTranskaksiTimbangBarang\r\n                  onSubmit={(data) => this.handleSubmit(data)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTransaksiTimbangBarang = reduxForm({\r\n  form: \"TransaksiTimbangBarang\",\r\n  enableReinitialize: true,\r\n  validate: validaitonTimbangBarang,\r\n})(TransaksiTimbangBarang);\r\nexport default connect(maptostate, null)(TransaksiTimbangBarang);\r\n","const validationTerimaSupplier = (value) => {\r\n  const errors = {};\r\n  if (!value.kodeBarang) {\r\n    errors.kodeBarang = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.pkg) {\r\n    errors.pkg = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.p) {\r\n    errors.p = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.k) {\r\n    errors.k = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  if (!value.bruto) {\r\n    errors.bruto = \"Tidak Boleh kosong, silahkan isi\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default validationTerimaSupplier;\r\n"],"sourceRoot":""}