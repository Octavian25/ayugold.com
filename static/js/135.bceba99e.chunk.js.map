{"version":3,"sources":["FICO/Component/FormCiok.jsx"],"names":["renderField","input","label","type","limit","readOnly","meta","touched","error","warning","className","htmlFor","min","step","maxLength","FormCiok","props","pilihBarang","e","result_explode","target","value","split","setState","kodeJenis","kadarCetak","kadarBeli","state","kodeBarang","namaJenis","columns","dataField","text","tampungCiok","axios","get","server","then","res","data","catch","err","console","log","this","change","netto","filtered","filter","d","kodeKategori","onSubmit","handleSubmit","name","component","onChange","onBlur","setKadar","key","map","list","onclick1","disabled","submitting","keyField","search","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","Component","reduxForm","form","enableReinitialize","selector","formValueSelector","connect","bruto","kadarTransaksi","parseFloat","toFixed"],"mappings":"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","file":"static/js/135.bceba99e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  limit,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      {...input}\r\n      type={type}\r\n      className=\"form-control\"\r\n      min=\"0\"\r\n      step=\"0.001\"\r\n      maxLength={limit}\r\n      readOnly={readOnly}\r\n    />\r\n    {touched &&\r\n      ((error && <p className=\"invalid-feedback\">{error}</p>) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nconst server = process.env.REACT_APP_BACKEND_URL;\r\n\r\nclass FormCiok extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      kodeBarang: [],\r\n      kodeJenis: \"\",\r\n      namaJenis: \"\",\r\n      kadarCetak: \"\",\r\n      kadarBeli: \"\",\r\n      columns: [\r\n        {\r\n          dataField: \"kodeBarang\",\r\n          text: \"Kode Barang\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Bruto\",\r\n        },\r\n        {\r\n          dataField: \"kadarTransaksi\",\r\n          text: \"Harga (%)\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Netto(Gr)\",\r\n        },\r\n      ],\r\n      tampungCiok: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(server + \"subcategorys2?kodeKelompok=CIOK\")\r\n      .then((res) =>\r\n        this.setState({\r\n          kodeBarang: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  }\r\n  pilihBarang = (input) => (e) => {\r\n    var supp = e.target.value\r\n      ? e.target.value\r\n      : \"DEFAULT | DEFAULT | DEFAULT | DEFAULT \";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeJenis: result_explode[0],\r\n      kadarCetak: result_explode[1],\r\n      kadarBeli: result_explode[2],\r\n    });\r\n  };\r\n\r\n  onclick1() {\r\n    this.props.change(\"netto\", this.props.netto);\r\n  }\r\n  setKadar() {\r\n    this.props.change(\"kadar\", this.state.kadarCetak);\r\n    this.props.change(\"kadarTransaksi\", this.state.kadarBeli);\r\n  }\r\n\r\n  render() {\r\n    var filtered = this.state.kodeBarang.filter((d) => d.kodeKategori === \"CK\");\r\n    return (\r\n      <div className=\"col-lg-12\">\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-4 mb-3\">\r\n              <label htmlFor=\"\">Kode Barang</label>\r\n              <Field\r\n                name=\"kodeBarang\"\r\n                className=\"form-control\"\r\n                component=\"select\"\r\n                onChange={this.pilihBarang()}\r\n                onBlur={this.setKadar()}\r\n              >\r\n                <option\r\n                  value=\"DEFAULT | DEFAULT | DEFAULT | DEFAULT\"\r\n                  key=\"DEFAULTKODEBARANG1\"\r\n                >\r\n                  SILAHKAN PILIH\r\n                </option>\r\n                {filtered.map((list) => (\r\n                  <option\r\n                    value={\r\n                      list.kodeJenis +\r\n                      \"|\" +\r\n                      list.kadarCetak +\r\n                      \"|\" +\r\n                      list.kadarBeli\r\n                    }\r\n                    key={list.kodeJenis}\r\n                  >\r\n                    {list.namaJenis}\r\n                  </option>\r\n                ))}\r\n              </Field>\r\n            </div>\r\n            <div className=\"col-lg-8\"></div>\r\n            <div className=\"col-md-3 form-group\">\r\n              <Field\r\n                name=\"kadar\"\r\n                label=\"Kadar (%)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 form-group\">\r\n              <Field\r\n                name=\"bruto\"\r\n                label=\"Berat (Gr)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                onBlur={() => this.onclick1()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 form-group\">\r\n              <Field\r\n                name=\"kadarTransaksi\"\r\n                label=\"Harga (%)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                onBlur={() => this.onclick1()}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 form-group\">\r\n              <Field\r\n                name=\"netto\"\r\n                label=\"Murni (Gr)\"\r\n                type=\"number\"\r\n                component={renderField}\r\n                readOnly={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  type=\"submit\"\r\n                  disabled={this.props.submitting}\r\n                >\r\n                  Simpan\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {this.props.data ? (\r\n              <ToolkitProvider\r\n                keyField=\"id\"\r\n                data={this.props.data}\r\n                columns={this.state.columns}\r\n                search\r\n              >\r\n                {(props) => (\r\n                  <div className=\"form-group\">\r\n                    <BootstrapTable\r\n                      {...props.baseProps}\r\n                      striped\r\n                      hover\r\n                      condensed\r\n                      bordered={true}\r\n                      headerClasses=\"header-table\"\r\n                      pagination={paginationFactory()}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </ToolkitProvider>\r\n            ) : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormCiok = reduxForm({\r\n  form: \"FormCiok\",\r\n  enableReinitialize: true,\r\n})(FormCiok);\r\nconst selector = formValueSelector(\"FormCiok\"); // <-- same as form name\r\nexport default connect((state) => {\r\n  const { bruto, kadarTransaksi } = selector(state, \"bruto\", \"kadarTransaksi\");\r\n  return {\r\n    netto: (parseFloat(bruto) * (parseFloat(kadarTransaksi) / 100)).toFixed(3),\r\n  };\r\n})(FormCiok);\r\n"],"sourceRoot":""}