{"version":3,"sources":["Transaksi/TolakanReturnSupplier.jsx","../node_modules/redux-form/es/index.js","HeaderCard.jsx","Alert.jsx","Stocking/Component/PrintNota.jsx","deleteLocalStorage.js"],"names":["FormTerimaSupplier","lazy","ModalMasterData","TolakanReturnSupplier","props","date","Date","formatedDate","getFullYear","getMonth","getDate","inputChange","input","e","setState","target","value","pilihSupplier","result_explode","split","kodeSupplier","namaSupplier","state","supplierList","DataSupplier","startDate","tanggal","noBon","status","tampungBarang","columns","dataField","text","footerClasses","formatter","cell","parseFloat","toLocaleString","csvExport","rowContent","row","rowIndex","className","data-tip","data-for","onClick","deleteIndex","dispatch","getListReturnSupplier","id","type","effect","AxiosMasterGet","then","res","data","catch","err","alert","this","getUUID","kodeJenis","simpan","noFaktur","nettoDiscGlobalExt","gross","netto","qty","k","rp","undefined","kadarCetak","kadar","keterangan","discGlobalPr","kodeKategori","kadarTransaksi","noBarcode","p","discGlobalGr","pkg","bruto","nettoDiscGlobal","array","JSON","parse","localStorage","getItem","push","setItem","stringify","Swal","fire","position","icon","showConfirmButton","timer","reset","document","getElementById","click","warning","isi","tanggalBarang","barangDetails","footerDocument","inputBy","username","console","log","progressSend","tableRows","table","forEach","ticket","i","ticketData","toFixed","footer","map","list","reduce","a","b","columTable","AxiosTransactionPost","PrintNota","toUpperCase","finishSend","clear","style","color","title","content","fallback","width","height","from","onSubmit","handleSubmit","htmlFor","name","defaultValue","onChange","key","showModal","class","aria-hidden","returnSupplier","keyField","search","baseProps","striped","hover","condensed","bordered","headerClasses","pagination","paginationFactory","noDataIndication","disabled","onSend","returnSupplierSubmit","Component","connect","provinsi","error","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","change","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors","HeaderCard","fontSize","backgroundColor","borderTopLeftRadius","borderTopRightRadius","pesan","Promise","resolve","reject","berhasil","gagal","reactive","kode","endpoint","response","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","isConfirmed","AxiosMasterUpdate","LogData","toLocaleDateString","datanya","row1name","row1isi","row2name","row2isi","row3name","row3isi","row4name","row4isi","validby","tableColumn","doc","jsPDF","autoTable","startY","finalY","lastAutoTable","setFontSize","string","output","embed","x","window","open","write","close","deleteLocalStorage","keyRemove","removeItem","nama","index","func","splice","deleteIndexUpdatetotalNW"],"mappings":"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","file":"static/js/71.95f94c64.chunk.js","sourcesContent":["import React, { Component, lazy, Suspense } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getUUID } from \"../actions/fakturAction\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getListReturnSupplier } from \"../actions/returnSupplier\";\r\nimport { reset } from \"redux-form\";\r\n\r\nimport PrintNota from \"../Stocking/Component/PrintNota\";\r\nimport { warning } from \"../Alert\";\r\nimport { deleteIndex } from \"../deleteLocalStorage\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\nimport { AxiosMasterGet, AxiosTransactionPost } from \"../Axios\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { showModal } from \"../actions/ModalAction\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nconst FormTerimaSupplier = lazy(() => import(\"./Component/FormTerimaSupplier\"));\r\n\r\nconst ModalMasterData = lazy(() =>\r\n  import(\"../DataMaster/Component/ModalMasterData\")\r\n);\r\nconst maptostate = (state) => {\r\n  return {\r\n    noFaktur: state.provinsi.noFaktur,\r\n    username: state.provinsi.username,\r\n    returnSupplier: state.provinsi.returnSupplier,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n    onSend: state.provinsi.onSend,\r\n  };\r\n};\r\n\r\nclass TolakanReturnSupplier extends Component {\r\n  constructor(props) {\r\n    var date = new Date();\r\n    var formatedDate = `${date.getFullYear()}-${\r\n      date.getMonth() + 1\r\n    }-${date.getDate()}`;\r\n    super(props);\r\n    this.state = {\r\n      supplierList: [],\r\n      DataSupplier: [],\r\n      startDate: formatedDate,\r\n      kodeSupplier: \"\",\r\n      namaSupplier: \"\",\r\n      tanggal: formatedDate,\r\n      noBon: \"\",\r\n      status: \"\",\r\n      tampungBarang: [],\r\n      columns: [\r\n        {\r\n          dataField: \"kodeJenis\",\r\n          text: \"Kode Barang\",\r\n        },\r\n        {\r\n          dataField: \"kadarCetak\",\r\n          text: \"Kadar Cetak(%)\",\r\n        },\r\n        {\r\n          dataField: \"p\",\r\n          text: \"P\",\r\n        },\r\n        {\r\n          dataField: \"k\",\r\n          text: \"K\",\r\n        },\r\n        {\r\n          dataField: \"pkg\",\r\n          text: \"Bungkus(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"bruto\",\r\n          text: \"Berat(Gr)\",\r\n        },\r\n        {\r\n          dataField: \"kadarTransaksi\",\r\n          text: \"Harga(%)\",\r\n        },\r\n        {\r\n          dataField: \"netto\",\r\n          text: \"Murni(Gr)\",\r\n\r\n          footerClasses: \"sum-netto-terima-supplier\",\r\n        },\r\n        {\r\n          dataField: \"rp\",\r\n          text: \"Ongkos(RP)\",\r\n          formatter: (cell) => (\r\n            <span>Rp. {parseFloat(cell).toLocaleString(\"ID-id\")}</span>\r\n          ),\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row, rowIndex) => {\r\n            return (\r\n              <div className=\"text-center\">\r\n                <button\r\n                  data-tip\r\n                  data-for=\"hapus\"\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() =>\r\n                    deleteIndex(\r\n                      \"ReturnSupplier\",\r\n                      rowIndex,\r\n                      this.props.dispatch,\r\n                      getListReturnSupplier()\r\n                    )\r\n                  }\r\n                >\r\n                  <ReactTooltip id=\"hapus\" type=\"dark\" effect=\"solid\">\r\n                    <span>Hapus</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                </button>\r\n                <br />\r\n                {/* <button\r\n                  data-tip\r\n                  data-for=\"edit\"\r\n                  className=\"btn btn-warning mr-2\"\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#editModal\"\r\n                  onClick={() => this.setEdit(row)}\r\n                >\r\n                  <ReactTooltip id=\"edit\" type=\"dark\" effect=\"solid\">\r\n                    <span>Edit</span>\r\n                  </ReactTooltip>\r\n                  <i className=\"fa fa-edit mr-1\"></i>\r\n                </button> */}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"suppliers\")\r\n      .then((res) =>\r\n        this.setState({\r\n          supplierList: res.data,\r\n        })\r\n      )\r\n      .catch((err) => alert(\"ERROR GET DATA\"));\r\n    this.props.dispatch(getUUID());\r\n    this.props.dispatch(getListReturnSupplier());\r\n  }\r\n\r\n  inputChange = (input) => (e) => {\r\n    this.setState({\r\n      [input]: e.target.value,\r\n    });\r\n  };\r\n\r\n  pilihSupplier = (input) => (e) => {\r\n    var supp = e.target.value ? e.target.value : \"DEFALT | DEFAULT\";\r\n    var result_explode = supp.split(\"|\");\r\n    this.setState({\r\n      kodeSupplier: result_explode[0],\r\n      namaSupplier: result_explode[1],\r\n    });\r\n  };\r\n\r\n  handleSubmit(data) {\r\n    var supp = data.kodeJenis\r\n      ? data.kodeJenis\r\n      : \"DEFAULT|DEFAULT|DEFAULT|DEFAULT\";\r\n    var split = supp.split(\"|\");\r\n    var simpan = {\r\n      noFaktur: this.props.noFaktur, //\r\n      nettoDiscGlobalExt: 0,\r\n      gross: parseFloat(data.gross), //berat + bungkus\r\n      netto: parseFloat(data.netto), //murni\r\n      qty: 0,\r\n      k: parseFloat(data.k),\r\n      rp: parseFloat(data.rp === undefined ? 0 : data.rp), //ongkos\r\n      kadarCetak: parseFloat(data.kadar),\r\n      keterangan: \"-\",\r\n      discGlobalPr: 0,\r\n      kodeKategori: \"-\",\r\n      kadarTransaksi: parseFloat(data.kadarTransaksi), //harga%\r\n      kodeJenis: split[0], //kodebarang\r\n      noBarcode: \"-\",\r\n      p: parseFloat(data.p),\r\n      discGlobalGr: 0,\r\n      pkg: parseFloat(data.pkg),\r\n      bruto: parseFloat(data.bruto), //berat\r\n      nettoDiscGlobal: 0,\r\n    };\r\n\r\n    var array = JSON.parse(localStorage.getItem(\"ReturnSupplier\")) || [];\r\n    array.push(simpan);\r\n    localStorage.setItem(\"ReturnSupplier\", JSON.stringify(array));\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      text: \"Data Berhasil Ditambahkan!\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n    this.props.dispatch(getListReturnSupplier());\r\n    this.props.dispatch(reset(\"TerimaSupplier\"));\r\n    document.getElementById(\"dismissModal\").click();\r\n  }\r\n\r\n  returnSupplierSubmit() {\r\n    if (this.state.noBon === \"\") {\r\n      warning(\"Mohon isi nomor bon\");\r\n      return false;\r\n    } else if (this.state.tanggal === \"\") {\r\n      warning(\"Mohon isi Tanggal\");\r\n      return false;\r\n    } else if (localStorage.getItem(\"ReturnSupplier\") === null) {\r\n      warning(\"Barang masih kosong, silahkan tambahkan barang\");\r\n      return false;\r\n    } else if (this.state.kodeSupplier === \"\") {\r\n      warning(\"Mohon pilih Supplier\");\r\n      return false;\r\n    }\r\n    let isi = {\r\n      noFaktur: this.props.noFaktur,\r\n      tanggal: this.state.tanggal,\r\n      noBon: this.state.noBon,\r\n      kodeSupplier: this.state.kodeSupplier,\r\n      namaSupplier: this.state.namaSupplier,\r\n      tanggalBarang: \"-\",\r\n      barangDetails: JSON.parse(localStorage.getItem(\"ReturnSupplier\")),\r\n      footerDocument: {\r\n        inputBy: this.props.username, //INPUT BY DEFAULT\r\n      },\r\n    };\r\n    console.log(JSON.stringify(isi));\r\n    this.props.dispatch(progressSend());\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    var table = JSON.parse(localStorage.getItem(\"ReturnSupplier\"));\r\n    // for each ticket pass all its data into an array\r\n    table.forEach((ticket, i) => {\r\n      const ticketData = [\r\n        ++i,\r\n        ticket.kodeJenis,\r\n        ticket.kadarCetak,\r\n        ticket.p,\r\n        ticket.k,\r\n        ticket.pkg,\r\n        ticket.bruto,\r\n        ticket.kadarTransaksi,\r\n        parseFloat(ticket.netto).toFixed(3),\r\n        \"Rp. \" + parseFloat(ticket.rp).toLocaleString(\"id-ID\"),\r\n      ];\r\n      // push each tickcet's info into a row\r\n      tableRows.push(ticketData);\r\n    });\r\n    const footer = [\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      table.map((list) => list.pkg).reduce((a, b) => a + b, 0),\r\n      table.map((list) => list.bruto).reduce((a, b) => a + b, 0),\r\n      \"\",\r\n      table.map((list) => list.netto).reduce((a, b) => a + b, 0),\r\n      \"Rp. \" +\r\n        table\r\n          .map((list) => list.rp)\r\n          .reduce((a, b) => a + b, 0)\r\n          .toLocaleString(\"id-ID\"),\r\n    ];\r\n    tableRows.push(footer);\r\n    console.log(JSON.stringify(tableRows));\r\n    var columTable = [\r\n      \"No\",\r\n      \"Kode Barang\",\r\n      \"Kadar Cetak (%)\",\r\n      \"P\",\r\n      \"K\",\r\n      \"Bungkus(Gr)\",\r\n      \"Berat(Gr)\",\r\n      \"Harga(Gr)\",\r\n      \"Murni(Gr)\",\r\n      \"Ongkos(Rp)\",\r\n    ];\r\n    // AKHIR INISIALISASI AUTOTABLE\r\n    AxiosTransactionPost(\"spp/dc/tlkrtr\", isi)\r\n      .then((res) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          text: \"Data Berhasil Ditambahkan!\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        })\r\n          .then(() =>\r\n            PrintNota(\r\n              \"No Bon\",\r\n              this.state.noBon.toUpperCase(),\r\n              \"Tanggal\",\r\n              this.state.tanggal,\r\n              \"Supplier\",\r\n              this.state.kodeSupplier.toUpperCase(),\r\n              \"\",\r\n              \"\",\r\n              \"ADMIN\",\r\n              this.state.tanggal,\r\n              \"\",\r\n              columTable,\r\n              \"Tolakan Return Barang Supplier\",\r\n              tableRows\r\n            )\r\n          )\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => localStorage.clear())\r\n          .then(() => this.props.dispatch(getUUID()))\r\n          .then(() => this.props.dispatch(getListReturnSupplier()))\r\n          .then(() => localStorage.setItem(\"isLogin\", true))\r\n          .then(() =>\r\n            this.setState({\r\n              noBon: \"\",\r\n              kodeSupplier: \"\",\r\n            })\r\n          )\r\n          .then(() => document.getElementById(\"myForm\").reset())\r\n      )\r\n      .catch((err) =>\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"error\",\r\n          text: \"Data Gagal Ditambahkan\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        }).then(() => this.props.dispatch(finishSend()))\r\n      );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Tolakan Return Supplier\" />\r\n              <div className=\"card-body\">\r\n                <ModalMasterData\r\n                  content={\r\n                    <Suspense\r\n                      fallback={<Skeleton width={\"100%\"} height={400} />}\r\n                    >\r\n                      <FormTerimaSupplier\r\n                        from=\"tolakan\"\r\n                        onSubmit={(data) => this.handleSubmit(data)}\r\n                        noFaktur={this.props.noFaktur}\r\n                      />\r\n                    </Suspense>\r\n                  }\r\n                  title=\"Tambah Data Barag\"\r\n                />\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                      <form id=\"myForm\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-lg-4 col-md-4\">\r\n                            <label htmlFor=\"\">Supplier</label>\r\n                            <select\r\n                              name=\"supplier\"\r\n                              id=\"supplier\"\r\n                              className=\"form-control\"\r\n                              defaultValue=\"DEFAULT | DEFAULT\"\r\n                              onChange={this.pilihSupplier(\"kodeSupplier\")}\r\n                            >\r\n                              <option value=\"DEFUALT\" key=\"DEFUALT\">\r\n                                SILAHKAN PILIH\r\n                              </option>\r\n                              {this.state.supplierList === [] ? (\r\n                                <option>DATA KOSONG</option>\r\n                              ) : (\r\n                                this.state.supplierList.map((list) => (\r\n                                  <option\r\n                                    value={\r\n                                      list.kodeSupplier +\r\n                                      \"|\" +\r\n                                      list.namaSupplier\r\n                                    }\r\n                                  >\r\n                                    {list.namaSupplier}\r\n                                  </option>\r\n                                ))\r\n                              )}\r\n                            </select>\r\n                          </div>\r\n                          <div className=\"col-md-4 col-lg-4\">\r\n                            <label htmlFor=\"\">Tanggal</label>\r\n                            <input\r\n                              type=\"date\"\r\n                              id=\"tanggal\"\r\n                              name=\"tanggal\"\r\n                              className=\"form-control\"\r\n                              defaultValue={this.state.startDate}\r\n                              onChange={this.inputChange(\"tanggal\")}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-md-4 col-lg-4 \">\r\n                            <label htmlFor=\"\">No Bon</label>\r\n                            <input\r\n                              type=\"text\"\r\n                              id=\"bon_return\"\r\n                              name=\"bon_return\"\r\n                              className=\"form-control\"\r\n                              onChange={this.inputChange(\"noBon\")}\r\n                              value={this.state.noBon}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                    <div className=\"col-md-12 col-lg-12 mt-3\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-6\"></div>\r\n                        <div className=\"col-lg-6\">\r\n                          <div className=\"text-right\">\r\n                            <button\r\n                              className=\"btn btn-primary\"\r\n                              onClick={() => this.props.dispatch(showModal())}\r\n                            >\r\n                              Tambah Data\r\n                              <i class=\"fa fa-plus ml-3\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-lg-12 mt-3\">\r\n                      {this.props.returnSupplier ? (\r\n                        <ToolkitProvider\r\n                          keyField=\"id\"\r\n                          data={this.props.returnSupplier}\r\n                          columns={this.state.columns}\r\n                          search\r\n                        >\r\n                          {(props) => (\r\n                            <div className=\"form-group\">\r\n                              <BootstrapTable\r\n                                {...props.baseProps}\r\n                                striped\r\n                                hover\r\n                                condensed\r\n                                bordered={true}\r\n                                headerClasses=\"header-table\"\r\n                                pagination={paginationFactory()}\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        </ToolkitProvider>\r\n                      ) : (\r\n                        <ToolkitProvider\r\n                          keyField=\"id\"\r\n                          data={[]}\r\n                          columns={this.state.columns}\r\n                          search\r\n                        >\r\n                          {(props) => (\r\n                            <div className=\"form-group\">\r\n                              <BootstrapTable\r\n                                {...props.baseProps}\r\n                                striped\r\n                                hover\r\n                                condensed\r\n                                bordered={true}\r\n                                headerClasses=\"header-table\"\r\n                                pagination={paginationFactory()}\r\n                                noDataIndication=\"Tidak Ada Data\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        </ToolkitProvider>\r\n                      )}\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          disabled={this.props.onSend}\r\n                          onClick={() => this.returnSupplierSubmit()}\r\n                        >\r\n                          {this.props.onSend ? (\r\n                            <span\r\n                              className=\"spinner-border spinner-border-sm mr-3\"\r\n                              aria-hidden=\"true\"\r\n                            ></span>\r\n                          ) : null}\r\n                          Simpan\r\n                          <i\r\n                            class=\"fa fa-paper-plane ml-3\"\r\n                            aria-hidden=\"true\"\r\n                          ></i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(TolakanReturnSupplier);\r\n","import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;","import React, { Component } from \"react\";\r\n\r\nclass HeaderCard extends Component {\r\n  render() {\r\n    return (\r\n      <h4\r\n        className=\"card-header mb-3\"\r\n        style={{\r\n          fontSize: 25,\r\n          backgroundColor: \"#394867\",\r\n          borderTopLeftRadius: 10,\r\n          borderTopRightRadius: 10,\r\n          height: 50,\r\n          color: \"#ffffff\",\r\n        }}\r\n      >\r\n        {this.props.title}\r\n      </h4>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderCard;\r\n","import Swal from \"sweetalert2\";\r\nimport { AxiosMasterUpdate } from \"./Axios\";\r\n\r\nexport const warning = (pesan) => {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      position: \"top-right\",\r\n      icon: \"warning\",\r\n      text: pesan,\r\n      timer: 2500,\r\n      showConfirmButton: false,\r\n    })\r\n      .then(() => resolve(\"Berhasil\"))\r\n      .catch(() => reject(\"Gagal\"));\r\n  });\r\n};\r\n\r\nexport const berhasil = (pesan) => {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      position: \"top-right\",\r\n      icon: \"success\",\r\n      text: pesan,\r\n      timer: 2500,\r\n      showConfirmButton: false,\r\n    })\r\n      .then(() => resolve(\"Berhasil\"))\r\n      .catch(() => reject(\"Gagal\"));\r\n  });\r\n};\r\n\r\nexport const gagal = (pesan) => {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      position: \"top-right\",\r\n      icon: \"error\",\r\n      text: pesan,\r\n      timer: 2500,\r\n      showConfirmButton: false,\r\n    })\r\n      .then(() => resolve(\"Berhasil\"))\r\n      .catch((err) => reject(err));\r\n  });\r\n};\r\n\r\nexport const reactive = (err, kode, endpoint, data) => {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      title: \"Oopps..\",\r\n      text: err.response.data,\r\n      icon: \"info\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Re-Activate\",\r\n      cancelButtonText: \"Cancel\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        AxiosMasterUpdate(endpoint + kode, data)\r\n          .then(() => berhasil(\"Data Berhasil Dikembalikan\"))\r\n          .then(() => resolve(\"Berhasil\"))\r\n          .catch((err) => reject(\"Gagal\"));\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexport const LogData = (keterangan, data, err) => {\r\n  let tanggal = new Date().toLocaleDateString();\r\n  let log = JSON.parse(localStorage.getItem(\"LogWebsite\")) || [];\r\n  let datanya = {\r\n    tanggal: tanggal,\r\n    keterangan: keterangan,\r\n    data: data,\r\n    error: err,\r\n  };\r\n  log.push(datanya);\r\n  localStorage.setItem(\"LogWebsite\", JSON.stringify(log));\r\n};\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst PrintNota = (\r\n  row1name = \"\",\r\n  row1isi = \"\",\r\n  row2name = \"\",\r\n  row2isi = \"\",\r\n  row3name = \"\",\r\n  row3isi = \"\",\r\n  row4name = \"\",\r\n  row4isi = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n  validby = \"\",\r\n  tableColumn = [],\r\n  title = \"\",\r\n  tableRows\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  // var tickets = JSON.parse(data);\r\n  // define the columns we want and their titles\r\n\r\n  // // define an empty array of rows\r\n  // const tableRows = [];\r\n\r\n  // // for each ticket pass all its data into an array\r\n  // tickets.forEach((ticket, i) => {\r\n  //   const ticketData = [\r\n  //     i++,\r\n  //     ticket.kodeJenis01,\r\n  //     ticket.bruto01,\r\n  //     ticket.kadarTransaksi01,\r\n  //     ticket.netto01,\r\n  //     ticket.kodeJenis02,\r\n  //     ticket.bruto02,\r\n  //     ticket.kadarTransaksi02,\r\n  //     ticket.netto02,\r\n  //   ];\r\n  //   // push each tickcet's info into a row\r\n  //   tableRows.push(ticketData);\r\n  // });\r\n\r\n  // startY is basically margin-top\r\n  doc.autoTable(tableColumn, tableRows, { startY: 40 });\r\n  let finalY = doc.lastAutoTable.finalY + 10;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(title, 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(row1name, 14, 25);\r\n  doc.text(\":\", 37, 25);\r\n  doc.text(row1isi, 40, 25);\r\n  doc.text(row2name, 120, 25);\r\n  doc.text(\":\", 141, 25);\r\n  doc.text(row2isi, 145, 25);\r\n  //row 2\r\n  doc.text(row3name, 14, 30);\r\n  doc.text(\":\", 37, 30);\r\n  doc.text(row3isi, 40, 30);\r\n  doc.text(row4name, 120, 30);\r\n  doc.text(\":\", 141, 30);\r\n  doc.text(row4isi, 145, 30);\r\n\r\n  //Stamp\r\n  doc.text(\"User\", 160, finalY + 10);\r\n  doc.text(\":\", 168, finalY + 10);\r\n  doc.text(username, 170, finalY + 10);\r\n  doc.text(\"Cetak\", 160, finalY + 15);\r\n  doc.text(\":\", 168, finalY + 15);\r\n  doc.text(tanggal, 170, finalY + 15);\r\n  doc.text(\"Valid\", 160, finalY + 20);\r\n  doc.text(\":\", 168, finalY + 20);\r\n  doc.text(validby, 170, finalY + 20);\r\n  // doc.autoPrint();\r\n  // doc.save(`${title}_${dateStr}.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  x.document.close();\r\n};\r\n\r\nexport default PrintNota;\r\n","import Swal from \"sweetalert2\";\r\n\r\nexport const deleteLocalStorage = (keyRemove) => {\r\n  keyRemove.forEach((e) => {\r\n    localStorage.removeItem(e);\r\n  });\r\n};\r\n\r\nexport const deleteIndex = (nama, index, dispatch, func) => {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      const array = JSON.parse(localStorage.getItem(nama)) || [];\r\n      array.splice(index, 1);\r\n      localStorage.setItem(nama, JSON.stringify(array));\r\n      Swal.fire({\r\n        text: \"Berhasil\",\r\n        timer: 2000,\r\n        showConfirmButton: false,\r\n        position: \"top-right\",\r\n        icon: \"success\",\r\n      }).then(() => dispatch(func));\r\n    }\r\n  });\r\n};\r\nexport const deleteIndexUpdatetotalNW = (nama, index, dispatch, func) => {\r\n  return new Promise((resolve, reject) => {\r\n    Swal.fire({\r\n      title: \"Anda Yakin ?\",\r\n      text: \"Anda Akan Menghapus Data Ini ?\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        const array = JSON.parse(localStorage.getItem(nama)) || [];\r\n        array.splice(index, 1);\r\n        localStorage.setItem(nama, JSON.stringify(array));\r\n        Swal.fire({\r\n          text: \"Berhasil\",\r\n          timer: 2000,\r\n          showConfirmButton: false,\r\n          position: \"top-right\",\r\n          icon: \"success\",\r\n        })\r\n          .then(() => dispatch(func))\r\n          .then(resolve(\"Berhasil\"))\r\n          .catch(\"Gagal\");\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexport const deleteIndexUpdateNettoNW = (\r\n  nama,\r\n  index,\r\n  dispatch,\r\n  func,\r\n  nilai,\r\n  func2,\r\n  state\r\n) => {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      const array = JSON.parse(localStorage.getItem(nama)) || [];\r\n      array.splice(index, 1);\r\n      localStorage.setItem(nama, JSON.stringify(array));\r\n      var awal = localStorage.getItem(\"GrandTotalNetto\");\r\n      var hasil = parseFloat(awal) - parseFloat(nilai);\r\n      localStorage.setItem(\"GrandTotalNetto\", parseFloat(hasil).toFixed(3));\r\n      Swal.fire({\r\n        text: \"Berhasil\",\r\n        timer: 2000,\r\n        showConfirmButton: false,\r\n        position: \"top-right\",\r\n        icon: \"success\",\r\n      })\r\n        .then(() => dispatch(func))\r\n        .then(() => dispatch(func2));\r\n    }\r\n  });\r\n};\r\n"],"sourceRoot":""}