{"version":3,"sources":["Validations/validationCustomer.js","DataMaster/Component/FormCustomer.jsx","DataMaster/Component/FormCustomerEdit.jsx","DataMaster/Customer.jsx","Images/500.svg","TourGuide.jsx","../node_modules/react-stepper-horizontal/lib/index.js"],"names":["validationCustomer","value","errors","kodeSupplier","kodeExt","namaToko","namaCustomer","tanggalDaftar","kodeArea","kodeKota","user_id","password","FormCustomer","props","nextStep","step","state","setState","step2","step1","step3","prevStep","inputProvinsi","input","e","kotaPilihan","listKota","filter","list","kode_provinsi","target","pilihanKota","inputKota","areaPilihan","listArea","kode_kota","pilihanArea","inputArea","result_explode","split","namaArea","customer_induk","listProvinsi","list_customer_induk","today","Date","getFullYear","getMonth","slice","getDate","AxiosMasterGet","then","res","data","catch","err","console","log","this","change","getToday","customer","level_customer","className","onSubmit","handleSubmit","steps","title","activeStep","Field","name","type","normalize","toUpperCase","component","renderField","label","renderFieldSelect","options","placeholder","onChange","setIndukCustomer","map","hasil","kode_customer","nama_customer","id","onClick","htmlFor","kota","key","nama_provinsi","nama_kota","area","kode_kecamatan","nama_kecamatan","disabled","onSend","aria-hidden","Component","reduxForm","form","validate","enableReinitialize","connect","provinsi","FormCustomerEdit","warning","step4","namaKota","autoComplete","undefined","selector","formValueSelector","initialValues","alamat","editCustomer","email","handPhone","kodeProvinsi","kodeKecamatan","kodeCustomer","kodePos","status","telepon","fax","contactPerson","SearchBar","Search","ExportCSVButton","CSVExport","rowExpand","renderer","row","kode_pos","no_telp","no_hp","kode_ext","Customer","updateStatus","response","dispatch","getcustomerList","columns","dataField","text","csvExport","formatter","rowContent","kode","Swal","fire","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","AxiosMasterDelete","berhasil","LogData","gagal","data-tut","editcustomer","nama_toko","contact_person","editModal","tanggal_daftar","dataEdit","progressSend","AxiosMasterPost","finishSend","hideModal","reset","handleReactive","kirim","kode_customer_induk","AxiosMasterPut","showModal","isEdit","includes","reactive","style","color","alert","role","data-dismiss","aria-label","TourGuide","tourConfig","ModalMasterData","content","handleEdit","HeaderCard","action","tambahModal","customerList","keyField","search","searchProps","margin","top","baseProps","striped","hover","condensed","bordered","headerClasses","expandRow","pagination","paginationFactory","csvProps","error","src","notrespond","width","alt","height","module","exports","disableBody","disableBodyScroll","enableBody","enableBodyScroll","index","onRequestClose","hideGuide","isOpen","showTourGuide","maskClassName","rounded","accentColor","onAfterOpen","onBeforeClose","Object","defineProperty","obj","_Stepper","require","_Stepper2","__esModule","default"],"mappings":"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","file":"static/js/31.d6f4858c.chunk.js","sourcesContent":["const validationCustomer = (value) => {\r\n  const errors = {};\r\n  if (!value.kodeSupplier) {\r\n    errors.kodeSupplier = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.kodeExt) {\r\n    errors.kodeExt = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.namaToko) {\r\n    errors.namaToko = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.namaCustomer) {\r\n    errors.namaCustomer = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.tanggalDaftar) {\r\n    errors.tanggalDaftar = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.kodeArea) {\r\n    errors.kodeArea = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.kodeKota) {\r\n    errors.kodeKota = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.user_id) {\r\n    errors.user_id = \"Tidak Boleh kosong\";\r\n  }\r\n  if (!value.password) {\r\n    errors.password = \"Tidak Boleh kosong\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default validationCustomer;\r\n","import React, { Component } from \"react\";\r\nimport Stepper from \"react-stepper-horizontal\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport validationCustomer from \"../../Validations/validationCustomer\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport { getToday } from \"../../getDate\";\r\n\r\nclass FormCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      step: 0,\r\n      step1: \"row\",\r\n      step2: \"row d-none\",\r\n      step3: \"row d-none\",\r\n      customer_induk: \"col-lg-5 d-none\",\r\n      listKota: [],\r\n      listArea: [],\r\n      listProvinsi: [],\r\n      pilihanArea: [],\r\n      pilihanKota: [],\r\n      list_customer_induk: [],\r\n      today:\r\n        new Date().getFullYear() +\r\n        \"-\" +\r\n        (\"0\" + (new Date().getMonth() + 1)).slice(-2) +\r\n        \"-\" +\r\n        (\"0\" + new Date().getDate()).slice(-2),\r\n    };\r\n  }\r\n\r\n  nextStep = () => {\r\n    const { step } = this.state;\r\n    if (step === 0) {\r\n      this.setState({ step: step + 1, step2: \"row\", step1: \"row d-none\" });\r\n    } else if (step === 1) {\r\n      this.setState({ step: step + 1, step2: \"row d-none\", step3: \"row\" });\r\n    }\r\n  };\r\n\r\n  prevStep = () => {\r\n    const { step } = this.state;\r\n    if (step === 1) {\r\n      this.setState({ step: step - 1, step2: \"row d-none\", step1: \"row\" });\r\n    } else if (step === 2) {\r\n      this.setState({ step: step - 1, step3: \"row d-none\", step2: \"row\" });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"kota/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listKota: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n\r\n    AxiosMasterGet(\"kecamatan/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listArea: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    AxiosMasterGet(\"provinsi/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listProvinsi: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    this.props.change(\"tanggalDaftar\", getToday);\r\n  }\r\n\r\n  inputProvinsi = (input) => (e) => {\r\n    var kotaPilihan = this.state.listKota.filter(\r\n      (list) => list.kode_provinsi === e.target.value\r\n    );\r\n    this.setState({\r\n      pilihanKota: kotaPilihan,\r\n    });\r\n  };\r\n  inputKota = (input) => (e) => {\r\n    var areaPilihan = this.state.listArea.filter(\r\n      (list) => list.kode_kota === e.target.value\r\n    );\r\n    this.setState({\r\n      pilihanArea: areaPilihan,\r\n    });\r\n  };\r\n  inputArea = (input) => (e) => {\r\n    var result_explode = e.target.value.split(\"|\");\r\n    this.setState({\r\n      kodeArea: result_explode[0],\r\n      namaArea: result_explode[1],\r\n    });\r\n  };\r\n\r\n  setIndukCustomer(data) {\r\n    console.log(data);\r\n    switch (data) {\r\n      case \"LEVEL1\":\r\n        this.setState({\r\n          customer_induk: \"col-lg-5 d-none\",\r\n        });\r\n        break;\r\n      case \"LEVEL2\":\r\n        this.setState({\r\n          customer_induk: \"col-lg-5\",\r\n          list_customer_induk: this.props.customer.filter(\r\n            (data) => data.level_customer === \"LEVEL1\"\r\n          ),\r\n        });\r\n        break;\r\n      case \"LEVEL3\":\r\n        this.setState({\r\n          customer_induk: \"col-lg-5\",\r\n          list_customer_induk: this.props.customer.filter(\r\n            (data) => data.level_customer === \"LEVEL2\"\r\n          ),\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { step } = this.state;\r\n    return (\r\n      <div className=\"col-lg-12 col-md-12\">\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <Stepper\r\n                steps={[\r\n                  { title: \"Data Diri\" },\r\n                  { title: \"Data Lokasi\" },\r\n                  { title: \"Data Nomor\" },\r\n                  // { title: \"Data Rekening\" },\r\n                ]}\r\n                activeStep={step}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n              <div className={this.state.step1}>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"kodeCustomer\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    component={renderField}\r\n                    label=\"Kode Customer\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"kodeExt\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    component={renderField}\r\n                    label=\"Kode Ext\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"namaToko\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    component={renderField}\r\n                    label=\"Nama Toko\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"namaCustomer\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    component={renderField}\r\n                    label=\"Nama Customer\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"tanggalDaftar\"\r\n                    type=\"date\"\r\n                    component={renderField}\r\n                    label=\"Tanggal Daftar\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-5\">\r\n                  <Field\r\n                    name=\"level_customer\"\r\n                    component={renderFieldSelect}\r\n                    options={[\r\n                      {\r\n                        value: \"LEVEL1\",\r\n                        name: \"LEVEL 1\",\r\n                      },\r\n                      {\r\n                        value: \"LEVEL2\",\r\n                        name: \"LEVEL 2\",\r\n                      },\r\n                      {\r\n                        value: \"LEVEL3\",\r\n                        name: \"LEVEL 3\",\r\n                      },\r\n                    ]}\r\n                    type=\"text\"\r\n                    label=\"Level Customer\"\r\n                    placeholder=\"Masukan Level Customer\"\r\n                    onChange={(data) => {\r\n                      this.setIndukCustomer(data);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className={this.state.customer_induk}>\r\n                  <Field\r\n                    name=\"kode_customer_induk\"\r\n                    component={renderFieldSelect}\r\n                    options={this.state.list_customer_induk.map((hasil) => {\r\n                      let data = {\r\n                        value: hasil.kode_customer,\r\n                        name: hasil.nama_customer,\r\n                      };\r\n                      return data;\r\n                    })}\r\n                    type=\"text\"\r\n                    label=\"Customer Induk\"\r\n                    placeholder=\"Masukan Customer Induk\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"text-right\">\r\n                    <button\r\n                      id=\"next_1\"\r\n                      name=\"next_1\"\r\n                      className=\"btn btn-primary\"\r\n                      type=\"button\"\r\n                      onClick={() => this.nextStep()}\r\n                    >\r\n                      Next\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n              <div className={this.state.step2}>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <label htmlFor=\"\">Provinsi</label>\r\n                  <Field\r\n                    name=\"kodeProvinsi\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    className=\"form-control\"\r\n                    component=\"select\"\r\n                    label=\"Nama Customer\"\r\n                    onChange={this.inputProvinsi()}\r\n                  >\r\n                    <option value=\"DEFAULT | DEFAULT\">SILAHKAN PILIH</option>\r\n                    {this.state.listProvinsi.map((kota) => (\r\n                      <option\r\n                        value={kota.kode_provinsi}\r\n                        key={kota.kode_provinsi}\r\n                      >\r\n                        {kota.nama_provinsi}\r\n                      </option>\r\n                    ))}\r\n                  </Field>\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <label htmlFor=\"\">Kota</label>\r\n                  <Field\r\n                    name=\"kodeKota\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    className=\"form-control\"\r\n                    component=\"select\"\r\n                    label=\"Nama Customer\"\r\n                    onChange={this.inputKota()}\r\n                  >\r\n                    <option value=\"DEFAULT | DEFAULT\">SILAHKAN PILIH</option>\r\n                    {this.state.pilihanKota.map((kota) => (\r\n                      <option value={kota.kode_kota} key={kota.kode_kota}>\r\n                        {kota.nama_kota}\r\n                      </option>\r\n                    ))}\r\n                  </Field>\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <label htmlFor=\"\">Kecamatan</label>\r\n                  <Field\r\n                    name=\"kodeKecamatan\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    className=\"form-control\"\r\n                    component=\"select\"\r\n                    label=\"Nama Customer\"\r\n                    onChange={this.inputArea()}\r\n                  >\r\n                    <option value=\"DEFAULT | DEFAULT\">SILAHKAN PILIH</option>\r\n                    {this.state.pilihanArea.map((area) => (\r\n                      <option\r\n                        value={area.kode_kecamatan}\r\n                        key={area.kode_kecamatan}\r\n                      >\r\n                        {area.nama_kecamatan}\r\n                      </option>\r\n                    ))}\r\n                  </Field>\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"kodePos\"\r\n                    type=\"number\"\r\n                    component={renderField}\r\n                    label=\"Kode Pos\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6 col-lg-6\">\r\n                  <Field\r\n                    name=\"alamat\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    component={renderField}\r\n                    label=\"Alamat\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"text-left col-md-6\">\r\n                      <button\r\n                        id=\"back_1\"\r\n                        name=\"back_1\"\r\n                        className=\"btn btn-primary\"\r\n                        type=\"button\"\r\n                        onClick={() => this.prevStep()}\r\n                      >\r\n                        Back\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"text-right col-md-6\">\r\n                      <button\r\n                        id=\"next_2\"\r\n                        name=\"next_2\"\r\n                        className=\"btn btn-primary\"\r\n                        type=\"button\"\r\n                        onClick={() => this.nextStep()}\r\n                      >\r\n                        Next\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n              <div className={this.state.step3}>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    component={renderField}\r\n                    label=\"Email\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"telepon\"\r\n                    type=\"number\"\r\n                    component={renderField}\r\n                    label=\"Nomor Telepon\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"contactPerson\"\r\n                    type=\"number\"\r\n                    component={renderField}\r\n                    label=\"Contact Person\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"fax\"\r\n                    type=\"number\"\r\n                    component={renderField}\r\n                    label=\"Fax\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"handPhone\"\r\n                    type=\"number\"\r\n                    component={renderField}\r\n                    label=\"Handphone\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"text-left col-md-6\">\r\n                      <button\r\n                        id=\"back_2\"\r\n                        name=\"back_2\"\r\n                        className=\"btn btn-primary\"\r\n                        type=\"button\"\r\n                        onClick={() => this.prevStep()}\r\n                      >\r\n                        Back\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"text-right col-md-6\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        disabled={this.props.onSend}\r\n                        className=\"btn btn-primary\"\r\n                        onClick={() =>\r\n                          this.setState({\r\n                            step: 0,\r\n                            step1: \"row\",\r\n                            step2: \"row d-none\",\r\n                            step3: \"row d-none\",\r\n                          })\r\n                        }\r\n                      >\r\n                        {this.props.onSend ? (\r\n                          <span\r\n                            className=\"spinner-border spinner-border-sm mr-3\"\r\n                            aria-hidden=\"true\"\r\n                          ></span>\r\n                        ) : null}\r\n                        Simpan\r\n                        <i className=\"fa fa-paper-plane ml-3\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormCustomer = reduxForm({\r\n  form: \"Customer\",\r\n  validate: validationCustomer,\r\n  enableReinitialize: true,\r\n})(FormCustomer);\r\nexport default connect((state) => {\r\n  return {\r\n    customer: state.provinsi.customer,\r\n  };\r\n})(FormCustomer);\r\n","import React, { Component } from \"react\";\r\nimport Stepper from \"react-stepper-horizontal\";\r\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport validationCustomer from \"../../Validations/validationCustomer\";\r\nimport { renderField, renderFieldSelect } from \"../../renderField\";\r\nimport { AxiosMasterGet } from \"../../Axios\";\r\nimport { getToday } from \"../../getDate\";\r\nimport { warning } from \"../../Alert\";\r\n\r\nclass FormCustomerEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      step: 0,\r\n      step1: \"row\",\r\n      step2: \"row d-none\",\r\n      step3: \"row d-none\",\r\n      step4: \"row d-none\",\r\n      customer_induk: \"col-lg-4 d-none\",\r\n      list_customer_induk: [],\r\n      listKota: [],\r\n      listArea: [],\r\n      listProvinsi: [],\r\n      pilihanArea: [],\r\n      pilihanKota: [],\r\n      level_customer: \"\",\r\n    };\r\n  }\r\n\r\n  nextStep = () => {\r\n    const { step } = this.state;\r\n    if (step === 0) {\r\n      if (this.state.level_customer === \"\") {\r\n        warning(\"Mohon Isi Level Customer\");\r\n        return false;\r\n      }\r\n      this.setState({\r\n        step: step + 1,\r\n        step2: \"row\",\r\n        step1: \"row d-none\",\r\n        step3: \"row d-none\",\r\n        step4: \"row d-none\",\r\n      });\r\n    } else if (step === 1) {\r\n      this.setState({\r\n        step: step + 1,\r\n        step2: \"row d-none\",\r\n        step3: \"row\",\r\n        step4: \"row d-none\",\r\n      });\r\n    } else if (step === 2) {\r\n      this.setState({\r\n        step: step + 1,\r\n        step2: \"row d-none\",\r\n        step4: \"row\",\r\n        step1: \"row d-none\",\r\n        step3: \"row d-none\",\r\n      });\r\n    }\r\n  };\r\n\r\n  prevStep = () => {\r\n    const { step } = this.state;\r\n    if (step === 1) {\r\n      this.setState({\r\n        step: step - 1,\r\n        step2: \"row d-none\",\r\n        step1: \"row\",\r\n        step3: \"row d-none\",\r\n        step4: \"row d-none\",\r\n      });\r\n    } else if (step === 2) {\r\n      this.setState({\r\n        step: step - 1,\r\n        step3: \"row d-none\",\r\n        step2: \"row\",\r\n        step4: \"row d-none\",\r\n        step1: \"row d-none\",\r\n      });\r\n    } else if (step === 3) {\r\n      this.setState({\r\n        step: step - 1,\r\n        step4: \"row d-none\",\r\n        step3: \"row\",\r\n        step2: \"row d-none\",\r\n        step1: \"row d-none\",\r\n      });\r\n    }\r\n  };\r\n\r\n  inputKota = (input) => (e) => {\r\n    var result_explode = e.target.value.split(\"|\");\r\n    this.setState({\r\n      kodeKota: result_explode[0],\r\n      namaKota: result_explode[1],\r\n    });\r\n  };\r\n  inputArea = (input) => (e) => {\r\n    var result_explode = e.target.value.split(\"|\");\r\n    this.setState({\r\n      kodeArea: result_explode[0],\r\n      namaArea: result_explode[1],\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"kota/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listKota: res.data,\r\n          pilihanKota: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n\r\n    AxiosMasterGet(\"kecamatan/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listArea: res.data,\r\n          pilihanArea: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    AxiosMasterGet(\"provinsi/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listProvinsi: res.data,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n    this.props.change(\"tanggalDaftar\", getToday);\r\n  }\r\n\r\n  inputProvinsi = (input) => (e) => {\r\n    console.log(e.target.value);\r\n    var kotaPilihan = this.state.listKota.filter(\r\n      (list) => list.kode_provinsi === e.target.value\r\n    );\r\n    this.setState({\r\n      pilihanKota: kotaPilihan,\r\n    });\r\n  };\r\n  inputKota = (input) => (e) => {\r\n    var areaPilihan = this.state.listArea.filter(\r\n      (list) => list.kode_kota === e.target.value\r\n    );\r\n    this.setState({\r\n      pilihanArea: areaPilihan,\r\n    });\r\n  };\r\n\r\n  setIndukCustomer(data) {\r\n    this.setState({\r\n      level_customer: data,\r\n    });\r\n    switch (data) {\r\n      case \"LEVEL1\":\r\n        this.setState({\r\n          customer_induk: \"col-lg-4 d-none\",\r\n        });\r\n        break;\r\n      case \"LEVEL2\":\r\n        this.setState({\r\n          customer_induk: \"col-lg-4\",\r\n          list_customer_induk: this.props.customer.filter(\r\n            (data) => data.level_customer === \"LEVEL1\"\r\n          ),\r\n        });\r\n        break;\r\n      case \"LEVEL3\":\r\n        this.setState({\r\n          customer_induk: \"col-lg-4\",\r\n          list_customer_induk: this.props.customer.filter(\r\n            (data) => data.level_customer === \"LEVEL2\"\r\n          ),\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  render() {\r\n    const { step } = this.state;\r\n    return (\r\n      <div className=\"col-lg-12 col-md-12\">\r\n        <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12 col-md-12\">\r\n              <Stepper\r\n                steps={[\r\n                  { title: \"Data Diri\" },\r\n                  { title: \"Data Lokasi\" },\r\n                  { title: \"Data Nomor\" },\r\n                  { title: \"Verifikasi Data\" },\r\n                ]}\r\n                activeStep={step}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n              <div className={this.state.step1}>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"kodeExt\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    component={renderField}\r\n                    label=\"Kode Ext\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"namaToko\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    component={renderField}\r\n                    label=\"Nama Toko\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"namaCustomer\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    component={renderField}\r\n                    label=\"Nama Customer\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"tanggalDaftar\"\r\n                    type=\"date\"\r\n                    component={renderField}\r\n                    label=\"Tanggal Daftar\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"level_customer\"\r\n                    component={renderFieldSelect}\r\n                    options={[\r\n                      {\r\n                        value: \"LEVEL1\",\r\n                        name: \"LEVEL 1\",\r\n                      },\r\n                      {\r\n                        value: \"LEVEL2\",\r\n                        name: \"LEVEL 2\",\r\n                      },\r\n                      {\r\n                        value: \"LEVEL3\",\r\n                        name: \"LEVEL 3\",\r\n                      },\r\n                    ]}\r\n                    type=\"text\"\r\n                    label=\"Level Customer\"\r\n                    placeholder=\"Masukan Level Customer\"\r\n                    onChange={(data) => {\r\n                      this.setIndukCustomer(data);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className={this.state.customer_induk}>\r\n                  <Field\r\n                    name=\"kode_customer_induk\"\r\n                    component={renderFieldSelect}\r\n                    options={this.state.list_customer_induk.map((hasil) => {\r\n                      let data = {\r\n                        value: hasil.kode_customer,\r\n                        name: hasil.nama_customer,\r\n                      };\r\n                      return data;\r\n                    })}\r\n                    type=\"text\"\r\n                    label=\"Customer Induk\"\r\n                    placeholder=\"Masukan Customer Induk\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"text-right\">\r\n                    <button\r\n                      id=\"next_1\"\r\n                      name=\"next_1\"\r\n                      className=\"btn btn-primary\"\r\n                      type=\"button\"\r\n                      onClick={() => this.nextStep()}\r\n                    >\r\n                      Next\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n              <div className={this.state.step2}>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <label htmlFor=\"\">Provinsi</label>\r\n                  <Field\r\n                    name=\"kodeProvinsi\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    className=\"form-control\"\r\n                    component=\"select\"\r\n                    label=\"Nama Customer\"\r\n                    onChange={this.inputProvinsi()}\r\n                  >\r\n                    <option value=\"DEFAULT | DEFAULT\">SILAHKAN PILIH</option>\r\n                    {this.state.listProvinsi.map((kota) => (\r\n                      <option\r\n                        value={kota.kode_provinsi}\r\n                        key={kota.kode_provinsi}\r\n                      >\r\n                        {kota.nama_provinsi}\r\n                      </option>\r\n                    ))}\r\n                  </Field>\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <label htmlFor=\"\">Kota</label>\r\n                  <Field\r\n                    name=\"kodeKota\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    className=\"form-control\"\r\n                    component=\"select\"\r\n                    label=\"Nama Customer\"\r\n                    onChange={this.inputKota()}\r\n                  >\r\n                    <option value=\"DEFAULT | DEFAULT\">SILAHKAN PILIH</option>\r\n                    {this.state.pilihanKota.map((kota) => (\r\n                      <option value={kota.kode_kota} key={kota.kode_kota}>\r\n                        {kota.nama_kota}\r\n                      </option>\r\n                    ))}\r\n                  </Field>\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <label htmlFor=\"\">Kecamatan</label>\r\n                  <Field\r\n                    name=\"kodeKecamatan\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    className=\"form-control\"\r\n                    component=\"select\"\r\n                    label=\"Nama Customer\"\r\n                    onChange={this.inputArea()}\r\n                  >\r\n                    <option value=\"DEFAULT | DEFAULT\">SILAHKAN PILIH</option>\r\n                    {this.state.pilihanArea.map((area) => (\r\n                      <option\r\n                        value={area.kode_kecamatan}\r\n                        key={area.kode_kecamatan}\r\n                      >\r\n                        {area.nama_kecamatan}\r\n                      </option>\r\n                    ))}\r\n                  </Field>\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"kodePos\"\r\n                    type=\"number\"\r\n                    component={renderField}\r\n                    label=\"Kode Pos\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6 col-lg-6\">\r\n                  <Field\r\n                    name=\"alamat\"\r\n                    type=\"text\"\r\n                    normalize={(value) => value && value.toUpperCase()}\r\n                    component={renderField}\r\n                    label=\"Alamat\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"text-left col-md-6\">\r\n                      <button\r\n                        id=\"back_1\"\r\n                        name=\"back_1\"\r\n                        className=\"btn btn-outline-primary\"\r\n                        type=\"button\"\r\n                        onClick={() => this.prevStep()}\r\n                      >\r\n                        Back\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"text-right col-md-6\">\r\n                      <button\r\n                        id=\"next_2\"\r\n                        name=\"next_2\"\r\n                        className=\"btn btn-primary\"\r\n                        type=\"button\"\r\n                        onClick={() => this.nextStep()}\r\n                      >\r\n                        Next\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n              <div className={this.state.step3}>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    component={renderField}\r\n                    label=\"Email\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"telepon\"\r\n                    type=\"number\"\r\n                    component={renderField}\r\n                    label=\"Nomor Telepon\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"contactPerson\"\r\n                    type=\"number\"\r\n                    component={renderField}\r\n                    label=\"Contact Person\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"fax\"\r\n                    type=\"number\"\r\n                    component={renderField}\r\n                    label=\"Fax\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"handPhone\"\r\n                    type=\"number\"\r\n                    component={renderField}\r\n                    label=\"Handphone\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"text-left col-md-6\">\r\n                      <button\r\n                        id=\"back_2\"\r\n                        name=\"back_2\"\r\n                        className=\"btn btn-outline-primary\"\r\n                        type=\"button\"\r\n                        onClick={() => this.prevStep()}\r\n                      >\r\n                        Back\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"text-right col-md-6\">\r\n                      <button\r\n                        id=\"next_2\"\r\n                        name=\"next_2\"\r\n                        className=\"btn btn-primary\"\r\n                        type=\"button\"\r\n                        onClick={() => this.nextStep()}\r\n                      >\r\n                        Next\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n              <div className={this.state.step4}>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"user_id\"\r\n                    type=\"text\"\r\n                    component={renderField}\r\n                    label=\"User ID\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-4 col-lg-4\">\r\n                  <Field\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    component={renderField}\r\n                    label=\"Password\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-12 col-md-12\">\r\n                  <div className=\"row\">\r\n                    <div className=\"text-left col-md-6\">\r\n                      <button\r\n                        id=\"back_2\"\r\n                        name=\"back_2\"\r\n                        className=\"btn btn-outline-primary\"\r\n                        type=\"button\"\r\n                        onClick={() => this.prevStep()}\r\n                      >\r\n                        Back\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"text-right col-md-6\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                        onSubmit={this.props.onSend}\r\n                        onClick={() => {\r\n                          if (\r\n                            this.props.user_id === undefined &&\r\n                            this.props.password === undefined\r\n                          ) {\r\n                            warning(\r\n                              \"Mohon isi Username dan password untuk Verifikasi\"\r\n                            );\r\n                          } else {\r\n                            this.setState({\r\n                              step: 0,\r\n                              step1: \"row\",\r\n                              step2: \"row d-none\",\r\n                              step3: \"row d-none\",\r\n                            });\r\n                          }\r\n                        }}\r\n                      >\r\n                        {this.props.onSend ? (\r\n                          <span\r\n                            className=\"spinner-border spinner-border-sm mr-3\"\r\n                            aria-hidden=\"true\"\r\n                          ></span>\r\n                        ) : null}\r\n                        Simpan\r\n                        <i className=\"fa fa-paper-plane ml-3\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormCustomerEdit = reduxForm({\r\n  form: \"CustomerEdit\",\r\n  validate: validationCustomer,\r\n  enableReinitialize: true,\r\n})(FormCustomerEdit);\r\nconst selector = formValueSelector(\"CustomerEdit\");\r\nexport default connect((state) => {\r\n  const { user_id, password } = selector(state, \"user_id\", \"password\");\r\n  return {\r\n    initialValues: {\r\n      alamat: state.provinsi.editCustomer.alamat,\r\n      email: state.provinsi.editCustomer.email,\r\n      handPhone: state.provinsi.editCustomer.handPhone,\r\n      kodeProvinsi: state.provinsi.editCustomer.kodeProvinsi,\r\n      kodeKecamatan: state.provinsi.editCustomer.kodeArea,\r\n      kodeCustomer: state.provinsi.editCustomer.kodeCustomer,\r\n      kodeExt: state.provinsi.editCustomer.kodeExt,\r\n      kodeKota: state.provinsi.editCustomer.kodeKota,\r\n      kodePos: state.provinsi.editCustomer.kodePos,\r\n      namaCustomer: state.provinsi.editCustomer.namaCustomer,\r\n      namaToko: state.provinsi.editCustomer.namaToko,\r\n      status: state.provinsi.editCustomer.status,\r\n      tanggalDaftar: state.provinsi.editCustomer.tanggalDaftar,\r\n      telepon: state.provinsi.editCustomer.telepon,\r\n      fax: state.provinsi.editCustomer.fax,\r\n      contactPerson: state.provinsi.editCustomer.contactPerson,\r\n    },\r\n    customer: state.provinsi.customer,\r\n    user_id: user_id,\r\n    password: password,\r\n  };\r\n})(FormCustomerEdit);\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport,\r\n} from \"react-bootstrap-table2-toolkit\";\r\n\r\nimport FormCustomer from \"./Component/FormCustomer\";\r\nimport { connect } from \"react-redux\";\r\nimport { editcustomer, getcustomerList } from \"../actions/customerAction\";\r\nimport notrespond from \"../Images/500.svg\";\r\nimport Swal from \"sweetalert2\";\r\nimport FormCustomerEdit from \"./Component/FormCustomerEdit\";\r\nimport { reset } from \"redux-form\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { berhasil, gagal, LogData, reactive, warning } from \"../Alert\";\r\nimport { AxiosMasterDelete, AxiosMasterPost, AxiosMasterPut } from \"../Axios\";\r\nimport { hideModal, showModal } from \"../actions/ModalAction\";\r\nimport ModalMasterData from \"./Component/ModalMasterData\";\r\nimport HeaderCard from \"../HeaderCard\";\r\nimport TourGuide from \"../TourGuide\";\r\nimport { finishSend, progressSend } from \"../actions/LogicAction\";\r\n\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\n\r\nfunction hapus(dispatch, kode) {\r\n  Swal.fire({\r\n    title: \"Anda Yakin ?\",\r\n    text: \"Anda Akan Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"Yes, delete it!\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      let data = {\r\n        data: {\r\n          kodeCustomer: kode,\r\n        },\r\n      };\r\n      AxiosMasterDelete(\"customer/delete/\" + kode)\r\n        .then((res) =>\r\n          berhasil(\"Data Berhasil Dihapus!\")\r\n            .then(() => LogData(\"Data Berhasil Dihapus Di Customer\", data))\r\n            .then(() => dispatch(getcustomerList()))\r\n        )\r\n        .catch((err) =>\r\n          gagal(\"Data Gagal Dihapus!\").then(() =>\r\n            LogData(\"Data Gagal Dihapus Di Customer\", data, err)\r\n          )\r\n        );\r\n    }\r\n  });\r\n}\r\n\r\nconst rowExpand = {\r\n  renderer: (row) => (\r\n    <div>\r\n      <p>{`Nama Kota: ${row.kode_kota}`}</p>\r\n      <p>{`Email: ${row.email == null ? \"-\" : row.email} | Alamat : ${\r\n        row.alamat == null ? \"-\" : row.alamat\r\n      } | Kode Pos : ${row.kode_pos == null ? \"-\" : row.kode_pos} | Telepon : ${\r\n        row.no_telp == null ? \"-\" : row.no_telp\r\n      }| Handphone: ${row.no_hp == null ? \"-\" : row.no_hp}`}</p>\r\n      <p>{`Kode Ext : ${row.kode_ext == null ? \"-\" : row.kode_ext}`}</p>\r\n    </div>\r\n  ),\r\n};\r\n\r\nconst maptoStae = (state) => {\r\n  return {\r\n    customerList: state.provinsi.customer,\r\n    alert: state.provinsi.alert,\r\n    error: state.provinsi.error,\r\n  };\r\n};\r\n\r\nclass Customer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Customer: [],\r\n      response: \"\",\r\n      columns: [\r\n        {\r\n          dataField: \"nama_customer\",\r\n          text: \"Nama Customer\",\r\n        },\r\n        {\r\n          dataField: \"tanggal_daftar\",\r\n          text: \"Tanggal Daftar\",\r\n        },\r\n        {\r\n          dataField: \"nama_toko\",\r\n          text: \"Nama Toko\",\r\n        },\r\n        {\r\n          dataField: \"level_customer\",\r\n          text: \"Level Customer\",\r\n        },\r\n        {\r\n          dataField: \"Aksi\",\r\n          text: \"Aksi\",\r\n          csvExport: false,\r\n          formatter: (rowContent, row) => {\r\n            return (\r\n              <div className=\"row\">\r\n                <button\r\n                  className=\"btn btn-danger mr-2\"\r\n                  onClick={() => hapus(this.props.dispatch, row.kode_customer)}\r\n                  data-tut=\"reactour_3\"\r\n                >\r\n                  <i className=\"fa fa-trash mr-1\"></i>\r\n                  HAPUS\r\n                </button>\r\n                <button\r\n                  data-tut=\"reactour_4\"\r\n                  className=\"btn btn-warning\"\r\n                  onClick={() =>\r\n                    this.props.dispatch(\r\n                      editcustomer(\r\n                        row.alamat,\r\n                        row.email,\r\n                        row.no_hp,\r\n                        row.kode_kecamatan,\r\n                        row.kode_customer,\r\n                        row.kode_ext,\r\n                        row.kode_kota,\r\n                        row.kode_pos,\r\n                        row.nama_customer,\r\n                        row.nama_toko,\r\n                        row.tanggalDaftar,\r\n                        row.no_telp,\r\n                        row.kode_provinsi,\r\n                        row.fax,\r\n                        row.contact_person,\r\n                        this.editModal()\r\n                      )\r\n                    )\r\n                  }\r\n                >\r\n                  <i className=\"fa fa-edit mr-2\"></i>\r\n                  EDIT\r\n                </button>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getcustomerList());\r\n  }\r\n\r\n  updateStatus = (input) => {\r\n    console.log(input);\r\n    this.setState({\r\n      response: input,\r\n    });\r\n    this.props.dispatch(getcustomerList());\r\n  };\r\n\r\n  handleSubmit(hasil) {\r\n    let data = {\r\n      tanggal_daftar: hasil.tanggalDaftar,\r\n      kode_customer: hasil.kodeCustomer,\r\n      nama_customer: hasil.namaCustomer,\r\n      nama_toko: hasil.namaToko,\r\n      kode_ext: hasil.kodeExt,\r\n      kode_provinsi: hasil.kodeProvinsi,\r\n      kode_kota: hasil.kodeKota,\r\n      kode_kecamatan: hasil.kodeKecamatan,\r\n      alamat: hasil.alamat,\r\n      kode_pos: hasil.kodePos,\r\n      contact_person: hasil.contactPerson,\r\n      no_telp: hasil.telepon,\r\n      no_hp: hasil.handPhone,\r\n      fax: hasil.fax,\r\n      email: hasil.email,\r\n    };\r\n    let dataEdit = {\r\n      tanggal_daftar: hasil.tanggalDaftar,\r\n      nama_customer: hasil.namaCustomer,\r\n      nama_toko: hasil.namaToko,\r\n      kode_ext: hasil.kodeExt,\r\n      kode_provinsi: hasil.kodeProvinsi,\r\n      kode_kota: hasil.kodeKota,\r\n      kode_kecamatan: hasil.kodeKecamatan,\r\n      alamat: hasil.alamat,\r\n      kode_pos: hasil.kodePos,\r\n      contact_person: hasil.contactPerson,\r\n      no_telp: hasil.telepon,\r\n      no_hp: hasil.handPhone,\r\n      fax: hasil.fax,\r\n      email: hasil.email,\r\n    };\r\n    this.props.dispatch(progressSend());\r\n    AxiosMasterPost(\"customer/add\", data)\r\n      .then(() => this.props.dispatch(finishSend()))\r\n      .then(() => this.props.dispatch(hideModal()))\r\n      .then((res) =>\r\n        berhasil(\"Data Berhasil Ditambah!\")\r\n          .then(() => LogData(\"Data Berhasil Ditambah Di Customer\", data))\r\n          .then(() => this.props.dispatch(getcustomerList()))\r\n          .then(() => this.props.dispatch(reset(\"Customer\")))\r\n      )\r\n      .catch((err) =>\r\n        this.handleReactive(\r\n          err,\r\n          hasil.kodeCustomer,\r\n          dataEdit,\r\n          this.props.dispatch(finishSend())\r\n        )\r\n      );\r\n  }\r\n\r\n  handleEdit(hasil) {\r\n    let kirim = {\r\n      user_id: hasil.user_id,\r\n      password: hasil.password,\r\n    };\r\n    AxiosMasterPost(\"users/check\", kirim)\r\n      .then(() => {\r\n        let data = {\r\n          tanggal_daftar: hasil.tanggalDaftar,\r\n          nama_customer: hasil.namaCustomer,\r\n          nama_toko: hasil.namaToko,\r\n          kode_ext: hasil.kodeExt,\r\n          level_customer: hasil.level_customer,\r\n          kode_customer_induk:\r\n            hasil.kode_customer_induk === undefined\r\n              ? \"-\"\r\n              : hasil.kode_customer_induk,\r\n          kode_provinsi: hasil.kodeProvinsi,\r\n          kode_kota: hasil.kodeKota,\r\n          kode_kecamatan: hasil.kodeKecamatan,\r\n          alamat: hasil.alamat,\r\n          kode_pos: hasil.kodePos,\r\n          contact_person: hasil.contactPerson,\r\n          no_telp: hasil.telepon,\r\n          no_hp: hasil.handPhone,\r\n          fax: hasil.fax,\r\n          email: hasil.email,\r\n        };\r\n        this.props.dispatch(progressSend());\r\n        AxiosMasterPut(\"customer/edit/\" + hasil.kodeCustomer, data)\r\n          .then(() => this.props.dispatch(finishSend()))\r\n          .then(() => this.props.dispatch(hideModal()))\r\n          .then((res) =>\r\n            berhasil(\"Data Berhasil Diubah!\")\r\n              .then(() => LogData(\"Data Berhasil Diubah Di Customer\", data))\r\n              .then(() => this.props.dispatch(getcustomerList()))\r\n          )\r\n          .catch((err) =>\r\n            gagal(\"Data Gagal Diubah!\")\r\n              .then(() => this.props.dispatch(finishSend()))\r\n              .then(() => LogData(\"Data Gagal Diubah Di Customer\", data, err))\r\n              .then(() => this.props.dispatch(hideModal()))\r\n          );\r\n      })\r\n      .catch(() => {\r\n        warning(\"Gagal Verifikasi Account\");\r\n        return false;\r\n      });\r\n  }\r\n\r\n  tambahModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({ isEdit: false });\r\n  }\r\n  editModal() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n  handleReactive(err, kode, data) {\r\n    this.props.dispatch(hideModal());\r\n    let error = err.response.data;\r\n    let check = error.includes(\"deleted\");\r\n    check\r\n      ? reactive(\r\n          err,\r\n          kode,\r\n          \"customer/reactive/\",\r\n          data,\r\n          \"customer/edit/\"\r\n        ).then(() => this.props.dispatch(getcustomerList()))\r\n      : gagal(\"Data Gagal Ditambahkan\");\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={{ color: \"black\" }}>\r\n        <div id=\"notif_alert\" className={this.props.alert} role=\"alert\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n          <strong>Error - </strong> Tidak Bisa Mengambil Data\r\n        </div>\r\n        <TourGuide\r\n          tourConfig={[\r\n            `Untuk Menambahkan Data Customer, Tekan Tombol ini Dan Isi kolom yang disediakan`,\r\n            `Ini adalah Data Customer yang sudah tersimpan`,\r\n            `Ini adalah tombol untuk menghapus data pada baris yang dipilih`,\r\n            `Ini adalah tombol untuk mengubah data pada baris yang dipilih`,\r\n          ]}\r\n        />\r\n        <ModalMasterData\r\n          content={\r\n            this.state.isEdit ? (\r\n              <FormCustomerEdit\r\n                onSubmit={(data) => this.handleEdit(data)}\r\n                onSend={this.props.onSend}\r\n              />\r\n            ) : (\r\n              <FormCustomer\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n                onSend={this.props.onSend}\r\n              />\r\n            )\r\n          }\r\n          title={\r\n            this.state.isEdit ? \"Edit Data Customer\" : \"Tambah Data Customer\"\r\n          }\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <HeaderCard title=\"Data Customer\" />\r\n              <div className=\"card-body\">\r\n                <form action=\"#\">\r\n                  <div className=\"form-body\">\r\n                    <div className=\"col-lg-12 col-md-12\">\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          name=\"simpan\"\r\n                          id=\"simpan\"\r\n                          type=\"button\"\r\n                          className=\"btn btn-info\"\r\n                          onClick={() => this.tambahModal()}\r\n                          data-tut=\"reactour_1\"\r\n                        >\r\n                          Tambah Data Customer\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n                <div data-tut=\"reactour_2\">\r\n                  {this.props.customerList ? (\r\n                    <ToolkitProvider\r\n                      keyField=\"kode_customer\"\r\n                      data={this.props.customerList}\r\n                      columns={this.state.columns}\r\n                      search\r\n                    >\r\n                      {(props) => (\r\n                        <div className=\"text-left mt-5 mb-3\">\r\n                          <div className=\"text-right\">\r\n                            <SearchBar\r\n                              {...props.searchProps}\r\n                              className=\"form-control\"\r\n                              placeholder=\"Pencarian\"\r\n                              style={{ margin: 0, top: \"50%\" }}\r\n                            />\r\n                          </div>\r\n                          <hr />\r\n                          <BootstrapTable\r\n                            {...props.baseProps}\r\n                            striped\r\n                            hover\r\n                            condensed\r\n                            bordered={true}\r\n                            headerClasses=\"header-table\"\r\n                            expandRow={rowExpand}\r\n                            pagination={paginationFactory()}\r\n                          />\r\n                          <ExportCSVButton\r\n                            {...props.csvProps}\r\n                            className=\"btn btn-primary\"\r\n                          >\r\n                            Export CSV\r\n                          </ExportCSVButton>\r\n                        </div>\r\n                      )}\r\n                    </ToolkitProvider>\r\n                  ) : (\r\n                    <div>\r\n                      {this.props.error ? (\r\n                        <div className=\"text-center\">\r\n                          <img\r\n                            src={notrespond}\r\n                            style={{ width: \"30%\" }}\r\n                            alt=\"Not Respond\"\r\n                          />\r\n                          <br />\r\n                          <h4>Request API Gagal, Silahkan Refresh</h4>\r\n                        </div>\r\n                      ) : (\r\n                        <Skeleton width={\"100%\"} height={180} />\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptoStae, null)(Customer);\r\n","module.exports = __webpack_public_path__ + \"static/media/500.c22f1e39.svg\";","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { hideGuide } from \"./actions/ModalAction\";\r\nimport Tour from \"reactour\";\r\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\r\n\r\nconst mapToState = (state) => {\r\n  return {\r\n    showTourGuide: state.provinsi.showTourGuide,\r\n  };\r\n};\r\nclass TourGuide extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  disableBody = (target) => disableBodyScroll(target);\r\n  enableBody = (target) => enableBodyScroll(target);\r\n  render() {\r\n    let tourConfig = this.props.tourConfig.map((list, index) => {\r\n      let data = {\r\n        selector: '[data-tut=\"reactour_' + ++index + '\"]',\r\n        content: list,\r\n      };\r\n      return data;\r\n    });\r\n    console.log(tourConfig);\r\n    return (\r\n      <Tour\r\n        onRequestClose={() => this.props.dispatch(hideGuide())}\r\n        steps={tourConfig}\r\n        isOpen={this.props.showTourGuide}\r\n        maskClassName=\"mask\"\r\n        className=\"helper\"\r\n        rounded={5}\r\n        accentColor=\"#5cb7b7\"\r\n        onAfterOpen={this.disableBody}\r\n        onBeforeClose={this.enableBody}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapToState, null)(TourGuide);\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Stepper = require('./Stepper');\n\nvar _Stepper2 = _interopRequireDefault(_Stepper);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Stepper2.default;"],"sourceRoot":""}